

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Apr 27 15:36:32 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=3
   119                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   120                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=3
   126                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=3
   128                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   129                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   130                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   131                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   132  0000                     
   133                           ; Version 2.30
   134                           ; Generated 26/08/2020 GMT
   135                           ; 
   136                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F4550 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168  0000                     
   169                           	psect	idataCOMRAM
   170  00544E                     __pidataCOMRAM:
   171                           	callstack 0
   172                           
   173                           ;initializer for leitura_sdcard@size
   174  00544E  58                 	db	88
   175                           
   176                           	psect	idataBANK1
   177  005444                     __pidataBANK1:
   178                           	callstack 0
   179                           
   180                           ;initializer for escreve_inteiro_lcd@F3223
   181  005444  30                 	db	48
   182  005445  30                 	db	48
   183  005446  30                 	db	48
   184  005447  30                 	db	48
   185  005448  30                 	db	48
   186  005449  30                 	db	48
   187  00544A  00                 	db	0
   188                           
   189                           	psect	idataBANK2
   190  0047BC                     __pidataBANK2:
   191                           	callstack 0
   192                           
   193                           ;initializer for verifica_fence_externo@F3648
   194  0047BC  2D                 	db	45
   195  0047BD  30                 	db	48
   196  0047BE  34                 	db	52
   197  0047BF  36                 	db	54
   198  0047C0  32                 	db	50
   199  0047C1  39                 	db	57
   200  0047C2  2E                 	db	46
   201  0047C3  37                 	db	55
   202  0047C4  33                 	db	51
   203  0047C5  34                 	db	52
   204  0047C6  37                 	db	55
   205  0047C7  37                 	db	55
   206  0047C8  2D                 	db	45
   207  0047C9  30                 	db	48
   208  0047CA  34                 	db	52
   209  0047CB  36                 	db	54
   210  0047CC  32                 	db	50
   211  0047CD  39                 	db	57
   212  0047CE  2E                 	db	46
   213  0047CF  36                 	db	54
   214  0047D0  38                 	db	56
   215  0047D1  36                 	db	54
   216  0047D2  30                 	db	48
   217  0047D3  31                 	db	49
   218  0047D4  2D                 	db	45
   219  0047D5  30                 	db	48
   220  0047D6  34                 	db	52
   221  0047D7  36                 	db	54
   222  0047D8  32                 	db	50
   223  0047D9  39                 	db	57
   224  0047DA  2E                 	db	46
   225  0047DB  36                 	db	54
   226  0047DC  38                 	db	56
   227  0047DD  36                 	db	54
   228  0047DE  30                 	db	48
   229  0047DF  31                 	db	49
   230  0047E0  2D                 	db	45
   231  0047E1  30                 	db	48
   232  0047E2  34                 	db	52
   233  0047E3  36                 	db	54
   234  0047E4  32                 	db	50
   235  0047E5  39                 	db	57
   236  0047E6  2E                 	db	46
   237  0047E7  37                 	db	55
   238  0047E8  33                 	db	51
   239  0047E9  34                 	db	52
   240  0047EA  37                 	db	55
   241  0047EB  37                 	db	55
   242                           
   243                           ;initializer for verifica_fence_externo@F3645
   244  0047EC  2D                 	db	45
   245  0047ED  32                 	db	50
   246  0047EE  33                 	db	51
   247  0047EF  34                 	db	52
   248  0047F0  32                 	db	50
   249  0047F1  2E                 	db	46
   250  0047F2  30                 	db	48
   251  0047F3  37                 	db	55
   252  0047F4  31                 	db	49
   253  0047F5  31                 	db	49
   254  0047F6  32                 	db	50
   255  0047F7  2D                 	db	45
   256  0047F8  32                 	db	50
   257  0047F9  33                 	db	51
   258  0047FA  34                 	db	52
   259  0047FB  32                 	db	50
   260  0047FC  2E                 	db	46
   261  0047FD  30                 	db	48
   262  0047FE  37                 	db	55
   263  0047FF  31                 	db	49
   264  004800  31                 	db	49
   265  004801  32                 	db	50
   266  004802  2D                 	db	45
   267  004803  32                 	db	50
   268  004804  33                 	db	51
   269  004805  34                 	db	52
   270  004806  32                 	db	50
   271  004807  2E                 	db	46
   272  004808  31                 	db	49
   273  004809  31                 	db	49
   274  00480A  37                 	db	55
   275  00480B  38                 	db	56
   276  00480C  34                 	db	52
   277  00480D  2D                 	db	45
   278  00480E  32                 	db	50
   279  00480F  33                 	db	51
   280  004810  34                 	db	52
   281  004811  32                 	db	50
   282  004812  2E                 	db	46
   283  004813  31                 	db	49
   284  004814  31                 	db	49
   285  004815  37                 	db	55
   286  004816  38                 	db	56
   287  004817  34                 	db	52
   288                           
   289                           ;initializer for verifica_fence_externo@F3662
   290  004818  2D                 	db	45
   291  004819  30                 	db	48
   292  00481A  34                 	db	52
   293  00481B  36                 	db	54
   294  00481C  32                 	db	50
   295  00481D  39                 	db	57
   296  00481E  2E                 	db	46
   297  00481F  37                 	db	55
   298  004820  33                 	db	51
   299  004821  34                 	db	52
   300  004822  37                 	db	55
   301  004823  37                 	db	55
   302                           
   303                           ;initializer for verifica_fence_externo@F3660
   304  004824  2D                 	db	45
   305  004825  32                 	db	50
   306  004826  33                 	db	51
   307  004827  34                 	db	52
   308  004828  32                 	db	50
   309  004829  2E                 	db	46
   310  00482A  30                 	db	48
   311  00482B  37                 	db	55
   312  00482C  31                 	db	49
   313  00482D  31                 	db	49
   314  00482E  32                 	db	50
   315                           
   316                           ;initializer for escreve_inteiro_uart@F3215
   317  00482F  30                 	db	48
   318  004830  30                 	db	48
   319  004831  30                 	db	48
   320  004832  30                 	db	48
   321  004833  30                 	db	48
   322  004834  30                 	db	48
   323  004835  00                 	db	0
   324                           
   325                           	psect	mediumconst
   326  0060E6                     __pmediumconst:
   327                           	callstack 0
   328  0060E6  00                 	db	0
   329  0060E7                     mensagem_inicial@F3640:
   330                           	callstack 0
   331  0060E7  54                 	db	84
   332  0060E8  43                 	db	67
   333  0060E9  43                 	db	67
   334  0060EA  2D                 	db	45
   335  0060EB  2D                 	db	45
   336  0060EC  54                 	db	84
   337  0060ED  45                 	db	69
   338  0060EE  4C                 	db	76
   339  0060EF  45                 	db	69
   340  0060F0  4D                 	db	77
   341  0060F1  54                 	db	84
   342  0060F2  52                 	db	82
   343  0060F3  49                 	db	73
   344  0060F4  41                 	db	65
   345  0060F5  00                 	db	0
   346  0060F6  00                 	db	0
   347  0060F7  00                 	db	0
   348  0060F8                     __end_ofmensagem_inicial@F3640:
   349                           	callstack 0
   350  0060F8                     mensagem_inicial@F3638:
   351                           	callstack 0
   352  0060F8  46                 	db	70
   353  0060F9  41                 	db	65
   354  0060FA  54                 	db	84
   355  0060FB  45                 	db	69
   356  0060FC  43                 	db	67
   357  0060FD  20                 	db	32
   358  0060FE  53                 	db	83
   359  0060FF  54                 	db	84
   360  006100  20                 	db	32
   361  006101  41                 	db	65
   362  006102  4E                 	db	78
   363  006103  44                 	db	68
   364  006104  52                 	db	82
   365  006105  45                 	db	69
   366  006106  00                 	db	0
   367  006107  00                 	db	0
   368  006108  00                 	db	0
   369  006109                     __end_ofmensagem_inicial@F3638:
   370                           	callstack 0
   371  0000                     _TMR0	set	4054
   372  0000                     _PORTEbits	set	3972
   373  0000                     _PCL	set	4089
   374  0000                     _PCLATH	set	4090
   375  0000                     _PIE1bits	set	3997
   376  0000                     _RCSTA	set	4011
   377  0000                     _TXSTA	set	4012
   378  0000                     _RCREG	set	4014
   379  0000                     _RCSTAbits	set	4011
   380  0000                     _SPBRG	set	4015
   381  0000                     _PIR1bits	set	3998
   382  0000                     _SSPBUF	set	4041
   383  0000                     _SSPCON1bits	set	4038
   384  0000                     _SSPSTATbits	set	4039
   385  0000                     _SSPCON1	set	4038
   386  0000                     _SSPSTAT	set	4039
   387  0000                     _TRISCbits	set	3988
   388  0000                     _TRISBbits	set	3987
   389  0000                     _PORTBbits	set	3969
   390  0000                     _PR2	set	4043
   391  0000                     _TMR2	set	4044
   392  0000                     _T2CON	set	4042
   393  0000                     _OSCCONbits	set	4051
   394  0000                     _TRISE	set	3990
   395  0000                     _TRISC	set	3988
   396  0000                     _TRISA	set	3986
   397  0000                     _TRISD	set	3989
   398  0000                     _LATB	set	3978
   399  0000                     _TRISB	set	3987
   400  0000                     _ADCON1	set	4033
   401  0000                     _T0CONbits	set	4053
   402  0000                     _INTCONbits	set	4082
   403  0000                     _PIE1	set	3997
   404  0000                     _INTCON3	set	4080
   405  0000                     _INTCON2	set	4081
   406  0000                     _INTCON	set	4082
   407  0000                     _SPPCFG	set	3939
   408  0000                     _SPPCON	set	3941
   409  0000                     _T0CON	set	4053
   410  0000                     _PORTDbits	set	3971
   411  0000                     _TRISDbits	set	3989
   412  0000                     _LATBbits	set	3978
   413  0000                     _LATCbits	set	3979
   414  0000                     _INT0IE	set	32660
   415  0000                     _INT0IF	set	32657
   416  0000                     _T0IF	set	32658
   417  0000                     _TMR0IF	set	32658
   418  0000                     _RCIF	set	31989
   419  0000                     _TXEN	set	32101
   420  0000                     _CREN	set	32092
   421  0000                     _SPEN	set	32095
   422  0000                     _SYNC	set	32100
   423  0000                     _BRGH	set	32098
   424  006109                     STR_14:
   425  006109  0A                 	db	10
   426  00610A  76                 	db	118	;'v'
   427  00610B  25                 	db	37
   428  00610C  73                 	db	115	;'s'
   429  00610D  3B                 	db	59	;';'
   430  00610E  6C                 	db	108	;'l'
   431  00610F  74                 	db	116	;'t'
   432  006110  25                 	db	37
   433  006111  73                 	db	115	;'s'
   434  006112  3B                 	db	59	;';'
   435  006113  6C                 	db	108	;'l'
   436  006114  6F                 	db	111	;'o'
   437  006115  25                 	db	37
   438  006116  73                 	db	115	;'s'
   439  006117  3B                 	db	59	;';'
   440  006118  72                 	db	114	;'r'
   441  006119  25                 	db	37
   442  00611A  73                 	db	115	;'s'
   443  00611B  3B                 	db	59	;';'
   444  00611C  63                 	db	99	;'c'
   445  00611D  25                 	db	37
   446  00611E  73                 	db	115	;'s'
   447  00611F  3B                 	db	59	;';'
   448  006120  6B                 	db	107	;'k'
   449  006121  25                 	db	37
   450  006122  73                 	db	115	;'s'
   451  006123  3B                 	db	59	;';'
   452  006124  68                 	db	104	;'h'
   453  006125  25                 	db	37
   454  006126  73                 	db	115	;'s'
   455  006127  3B                 	db	59	;';'
   456  006128  64                 	db	100	;'d'
   457  006129  25                 	db	37
   458  00612A  73                 	db	115	;'s'
   459  00612B  00                 	db	0
   460  00612C                     STR_18:
   461  00612C  73                 	db	115	;'s'
   462  00612D  74                 	db	116	;'t'
   463  00612E  72                 	db	114	;'r'
   464  00612F  69                 	db	105	;'i'
   465  006130  6E                 	db	110	;'n'
   466  006131  67                 	db	103	;'g'
   467  006132  5F                 	db	95	;'_'
   468  006133  64                 	db	100	;'d'
   469  006134  61                 	db	97	;'a'
   470  006135  64                 	db	100	;'d'
   471  006136  6F                 	db	111	;'o'
   472  006137  2E                 	db	46
   473  006138  6F                 	db	111	;'o'
   474  006139  64                 	db	100	;'d'
   475  00613A  6F                 	db	111	;'o'
   476  00613B  6D                 	db	109	;'m'
   477  00613C  65                 	db	101	;'e'
   478  00613D  74                 	db	116	;'t'
   479  00613E  72                 	db	114	;'r'
   480  00613F  6F                 	db	111	;'o'
   481  006140  5F                 	db	95	;'_'
   482  006141  74                 	db	116	;'t'
   483  006142  6F                 	db	111	;'o'
   484  006143  74                 	db	116	;'t'
   485  006144  61                 	db	97	;'a'
   486  006145  6C                 	db	108	;'l'
   487  006146  00                 	db	0
   488  006147  6F                 	db	111	;'o'
   489  006148  20                 	db	32
   490  006149  53                 	db	83	;'S'
   491  00614A  69                 	db	105	;'i'
   492  00614B  73                 	db	115	;'s'
   493  00614C  74                 	db	116	;'t'
   494  00614D  65                 	db	101	;'e'
   495  00614E  6D                 	db	109	;'m'
   496  00614F  61                 	db	97	;'a'
   497  006150  20                 	db	32
   498  006151  64                 	db	100	;'d'
   499  006152  65                 	db	101	;'e'
   500  006153  20                 	db	32
   501  006154  61                 	db	97	;'a'
   502  006155  72                 	db	114	;'r'
   503  006156  71                 	db	113	;'q'
   504  006157  75                 	db	117	;'u'
   505  006158  69                 	db	105	;'i'
   506  006159  76                 	db	118	;'v'
   507  00615A  6F                 	db	111	;'o'
   508  00615B  00                 	db	0
   509  00615C                     STR_29:
   510  00615C  42                 	db	66	;'B'
   511  00615D  31                 	db	49	;'1'
   512  00615E  3A                 	db	58	;':'
   513  00615F  52                 	db	82	;'R'
   514  006160  50                 	db	80	;'P'
   515  006161  4D                 	db	77	;'M'
   516  006162  20                 	db	32
   517  006163  20                 	db	32
   518  006164  42                 	db	66	;'B'
   519  006165  32                 	db	50	;'2'
   520  006166  3A                 	db	58	;':'
   521  006167  46                 	db	70	;'F'
   522  006168  45                 	db	69	;'E'
   523  006169  4E                 	db	78	;'N'
   524  00616A  43                 	db	67	;'C'
   525  00616B  45                 	db	69	;'E'
   526  00616C  00                 	db	0
   527  00616D                     STR_17:
   528  00616D  73                 	db	115	;'s'
   529  00616E  74                 	db	116	;'t'
   530  00616F  72                 	db	114	;'r'
   531  006170  69                 	db	105	;'i'
   532  006171  6E                 	db	110	;'n'
   533  006172  67                 	db	103	;'g'
   534  006173  5F                 	db	95	;'_'
   535  006174  64                 	db	100	;'d'
   536  006175  61                 	db	97	;'a'
   537  006176  64                 	db	100	;'d'
   538  006177  6F                 	db	111	;'o'
   539  006178  2E                 	db	46
   540  006179  63                 	db	99	;'c'
   541  00617A  6F                 	db	111	;'o'
   542  00617B  6D                 	db	109	;'m'
   543  00617C  62                 	db	98	;'b'
   544  00617D  00                 	db	0
   545  00617E                     STR_27:
   546  00617E  42                 	db	66	;'B'
   547  00617F  31                 	db	49	;'1'
   548  006180  3A                 	db	58	;':'
   549  006181  52                 	db	82	;'R'
   550  006182  50                 	db	80	;'P'
   551  006183  4D                 	db	77	;'M'
   552  006184  20                 	db	32
   553  006185  42                 	db	66	;'B'
   554  006186  32                 	db	50	;'2'
   555  006187  3A                 	db	58	;':'
   556  006188  46                 	db	70	;'F'
   557  006189  45                 	db	69	;'E'
   558  00618A  4E                 	db	78	;'N'
   559  00618B  43                 	db	67	;'C'
   560  00618C  45                 	db	69	;'E'
   561  00618D  00                 	db	0
   562  00618E                     STR_19:
   563  00618E  73                 	db	115	;'s'
   564  00618F  74                 	db	116	;'t'
   565  006190  72                 	db	114	;'r'
   566  006191  69                 	db	105	;'i'
   567  006192  6E                 	db	110	;'n'
   568  006193  67                 	db	103	;'g'
   569  006194  5F                 	db	95	;'_'
   570  006195  64                 	db	100	;'d'
   571  006196  61                 	db	97	;'a'
   572  006197  64                 	db	100	;'d'
   573  006198  6F                 	db	111	;'o'
   574  006199  2E                 	db	46
   575  00619A  64                 	db	100	;'d'
   576  00619B  74                 	db	116	;'t'
   577  00619C  63                 	db	99	;'c'
   578  00619D  00                 	db	0
   579  00619E                     STR_15:
   580  00619E  73                 	db	115	;'s'
   581  00619F  74                 	db	116	;'t'
   582  0061A0  72                 	db	114	;'r'
   583  0061A1  69                 	db	105	;'i'
   584  0061A2  6E                 	db	110	;'n'
   585  0061A3  67                 	db	103	;'g'
   586  0061A4  5F                 	db	95	;'_'
   587  0061A5  64                 	db	100	;'d'
   588  0061A6  61                 	db	97	;'a'
   589  0061A7  64                 	db	100	;'d'
   590  0061A8  6F                 	db	111	;'o'
   591  0061A9  2E                 	db	46
   592  0061AA  76                 	db	118	;'v'
   593  0061AB  65                 	db	101	;'e'
   594  0061AC  6C                 	db	108	;'l'
   595  0061AD  00                 	db	0
   596  0061AE                     STR_16:
   597  0061AE  73                 	db	115	;'s'
   598  0061AF  74                 	db	116	;'t'
   599  0061B0  72                 	db	114	;'r'
   600  0061B1  69                 	db	105	;'i'
   601  0061B2  6E                 	db	110	;'n'
   602  0061B3  67                 	db	103	;'g'
   603  0061B4  5F                 	db	95	;'_'
   604  0061B5  64                 	db	100	;'d'
   605  0061B6  61                 	db	97	;'a'
   606  0061B7  64                 	db	100	;'d'
   607  0061B8  6F                 	db	111	;'o'
   608  0061B9  2E                 	db	46
   609  0061BA  72                 	db	114	;'r'
   610  0061BB  70                 	db	112	;'p'
   611  0061BC  6D                 	db	109	;'m'
   612  0061BD  00                 	db	0
   613  0061BE                     STR_2:
   614  0061BE  49                 	db	73	;'I'
   615  0061BF  6E                 	db	110	;'n'
   616  0061C0  73                 	db	115	;'s'
   617  0061C1  69                 	db	105	;'i'
   618  0061C2  72                 	db	114	;'r'
   619  0061C3  61                 	db	97	;'a'
   620  0061C4  20                 	db	32
   621  0061C5  6F                 	db	111	;'o'
   622  0061C6  20                 	db	32
   623  0061C7  43                 	db	67	;'C'
   624  0061C8  61                 	db	97	;'a'
   625  0061C9  72                 	db	114	;'r'
   626  0061CA  74                 	db	116	;'t'
   627  0061CB  61                 	db	97	;'a'
   628  0061CC  6F                 	db	111	;'o'
   629  0061CD  00                 	db	0
   630  0061CE  45                 	db	69	;'E'
   631  0061CF  72                 	db	114	;'r'
   632  0061D0  72                 	db	114	;'r'
   633  0061D1  6F                 	db	111	;'o'
   634  0061D2  20                 	db	32
   635  0061D3  61                 	db	97	;'a'
   636  0061D4  6F                 	db	111	;'o'
   637  0061D5  20                 	db	32
   638  0061D6  6D                 	db	109	;'m'
   639  0061D7  6F                 	db	111	;'o'
   640  0061D8  6E                 	db	110	;'n'
   641  0061D9  74                 	db	116	;'t'
   642  0061DA  61                 	db	97	;'a'
   643  0061DB  72                 	db	114	;'r'
   644  0061DC  00                 	db	0
   645  0061DD                     STR_31:
   646  0061DD  52                 	db	82	;'R'
   647  0061DE  45                 	db	69	;'E'
   648  0061DF  47                 	db	71	;'G'
   649  0061E0  49                 	db	73	;'I'
   650  0061E1  41                 	db	65	;'A'
   651  0061E2  4F                 	db	79	;'O'
   652  0061E3  20                 	db	32
   653  0061E4  4E                 	db	78	;'N'
   654  0061E5  45                 	db	69	;'E'
   655  0061E6  47                 	db	71	;'G'
   656  0061E7  41                 	db	65	;'A'
   657  0061E8  44                 	db	68	;'D'
   658  0061E9  41                 	db	65	;'A'
   659  0061EA  00                 	db	0
   660  0061EB  45                 	db	69	;'E'
   661  0061EC  72                 	db	114	;'r'
   662  0061ED  72                 	db	114	;'r'
   663  0061EE  6F                 	db	111	;'o'
   664  0061EF  20                 	db	32
   665  0061F0  61                 	db	97	;'a'
   666  0061F1  6F                 	db	111	;'o'
   667  0061F2  20                 	db	32
   668  0061F3  63                 	db	99	;'c'
   669  0061F4  72                 	db	114	;'r'
   670  0061F5  69                 	db	105	;'i'
   671  0061F6  61                 	db	97	;'a'
   672  0061F7  72                 	db	114	;'r'
   673  0061F8  00                 	db	0
   674  0061F9  65                 	db	101	;'e'
   675  0061FA  78                 	db	120	;'x'
   676  0061FB  74                 	db	116	;'t'
   677  0061FC  66                 	db	102	;'f'
   678  0061FD  65                 	db	101	;'e'
   679  0061FE  6E                 	db	110	;'n'
   680  0061FF  63                 	db	99	;'c'
   681  006200  65                 	db	101	;'e'
   682  006201  2E                 	db	46
   683  006202  74                 	db	116	;'t'
   684  006203  78                 	db	120	;'x'
   685  006204  74                 	db	116	;'t'
   686  006205  00                 	db	0
   687  006206                     STR_4:
   688  006206  4D                 	db	77	;'M'
   689  006207  4D                 	db	77	;'M'
   690  006208  43                 	db	67	;'C'
   691  006209  20                 	db	32
   692  00620A  56                 	db	86	;'V'
   693  00620B  65                 	db	101	;'e'
   694  00620C  72                 	db	114	;'r'
   695  00620D  2E                 	db	46
   696  00620E  20                 	db	32
   697  00620F  33                 	db	51	;'3'
   698  006210  00                 	db	0
   699  006211                     STR_1:
   700  006211  53                 	db	83	;'S'
   701  006212  65                 	db	101	;'e'
   702  006213  6D                 	db	109	;'m'
   703  006214  20                 	db	32
   704  006215  43                 	db	67	;'C'
   705  006216  61                 	db	97	;'a'
   706  006217  72                 	db	114	;'r'
   707  006218  74                 	db	116	;'t'
   708  006219  61                 	db	97	;'a'
   709  00621A  6F                 	db	111	;'o'
   710  00621B  00                 	db	0
   711  00621C  56                 	db	86	;'V'
   712  00621D  65                 	db	101	;'e'
   713  00621E  72                 	db	114	;'r'
   714  00621F  69                 	db	105	;'i'
   715  006220  66                 	db	102	;'f'
   716  006221  69                 	db	105	;'i'
   717  006222  71                 	db	113	;'q'
   718  006223  75                 	db	117	;'u'
   719  006224  65                 	db	101	;'e'
   720  006225  00                 	db	0
   721  006226  6F                 	db	111	;'o'
   722  006227  20                 	db	32
   723  006228  61                 	db	97	;'a'
   724  006229  72                 	db	114	;'r'
   725  00622A  71                 	db	113	;'q'
   726  00622B  75                 	db	117	;'u'
   727  00622C  69                 	db	105	;'i'
   728  00622D  76                 	db	118	;'v'
   729  00622E  6F                 	db	111	;'o'
   730  00622F  00                 	db	0
   731  006230                     STR_3:
   732  006230  53                 	db	83	;'S'
   733  006231  44                 	db	68	;'D'
   734  006232  20                 	db	32
   735  006233  56                 	db	86	;'V'
   736  006234  45                 	db	69	;'E'
   737  006235  52                 	db	82	;'R'
   738  006236  2E                 	db	46
   739  006237  20                 	db	32
   740  006238  31                 	db	49	;'1'
   741  006239  00                 	db	0
   742  00623A  6F                 	db	111	;'o'
   743  00623B  20                 	db	32
   744  00623C  63                 	db	99	;'c'
   745  00623D  61                 	db	97	;'a'
   746  00623E  72                 	db	114	;'r'
   747  00623F  74                 	db	116	;'t'
   748  006240  61                 	db	97	;'a'
   749  006241  6F                 	db	111	;'o'
   750  006242  00                 	db	0
   751  006243                     STR_28:
   752  006243  42                 	db	66	;'B'
   753  006244  32                 	db	50	;'2'
   754  006245  3A                 	db	58	;':'
   755  006246  48                 	db	72	;'H'
   756  006247  4F                 	db	79	;'O'
   757  006248  4D                 	db	77	;'M'
   758  006249  45                 	db	69	;'E'
   759  00624A  00                 	db	0
   760  00624B                     STR_32:
   761  00624B  4C                 	db	76	;'L'
   762  00624C  4F                 	db	79	;'O'
   763  00624D  2D                 	db	45
   764  00624E  4C                 	db	76	;'L'
   765  00624F  54                 	db	84	;'T'
   766  006250  3A                 	db	58	;':'
   767  006251  00                 	db	0
   768  006252                     STR_6:
   769  006252  47                 	db	71	;'G'
   770  006253  50                 	db	80	;'P'
   771  006254  47                 	db	71	;'G'
   772  006255  47                 	db	71	;'G'
   773  006256  41                 	db	65	;'A'
   774  006257  00                 	db	0
   775  006258                     STR_5:
   776  006258  47                 	db	71	;'G'
   777  006259  50                 	db	80	;'P'
   778  00625A  52                 	db	82	;'R'
   779  00625B  4D                 	db	77	;'M'
   780  00625C  43                 	db	67	;'C'
   781  00625D  00                 	db	0
   782  00625E                     STR_24:
   783  00625E  56                 	db	86	;'V'
   784  00625F  45                 	db	69	;'E'
   785  006260  4C                 	db	76	;'L'
   786  006261  3A                 	db	58	;':'
   787  006262  00                 	db	0
   788  006263                     STR_23:
   789  006263  52                 	db	82	;'R'
   790  006264  50                 	db	80	;'P'
   791  006265  4D                 	db	77	;'M'
   792  006266  3A                 	db	58	;':'
   793  006267  00                 	db	0
   794  006268                     STR_13:
   795  006268  2E                 	db	46
   796  006269  74                 	db	116	;'t'
   797  00626A  6C                 	db	108	;'l'
   798  00626B  6D                 	db	109	;'m'
   799  00626C  00                 	db	0
   800  00626D                     STR_26:
   801  00626D  6C                 	db	108	;'l'
   802  00626E  6F                 	db	111	;'o'
   803  00626F  3A                 	db	58	;':'
   804  006270  00                 	db	0
   805  006271                     STR_25:
   806  006271  6C                 	db	108	;'l'
   807  006272  74                 	db	116	;'t'
   808  006273  3A                 	db	58	;':'
   809  006274  00                 	db	0
   810  006275                     STR_21:
   811  006275  46                 	db	70	;'F'
   812  006276  41                 	db	65	;'A'
   813  006277  54                 	db	84	;'T'
   814  006278  00                 	db	0
   815  006279  0D                 	db	13
   816  00627A  0A                 	db	10
   817  00627B  00                 	db	0
   818  00627C                     STR_33:
   819  00627C  2D                 	db	45
   820  00627D  00                 	db	0
   821  00627E  00                 	db	0	; dummy byte at the end
   822  0000                     
   823                           ; #config settings
   824                           
   825                           	psect	cinit
   826  00420E                     __pcinit:
   827                           	callstack 0
   828  00420E                     start_initialization:
   829                           	callstack 0
   830  00420E                     __initialization:
   831                           	callstack 0
   832                           
   833                           ; Initialize objects allocated to BANK2 (122 bytes)
   834                           ; load TBLPTR registers with __pidataBANK2
   835  00420E  0EBC               	movlw	low __pidataBANK2
   836  004210  6EF6               	movwf	tblptrl,c
   837  004212  0E47               	movlw	high __pidataBANK2
   838  004214  6EF7               	movwf	tblptrh,c
   839  004216  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   840  004218  6EF8               	movwf	tblptru,c
   841  00421A  EE02  F000         	lfsr	0,__pdataBANK2
   842  00421E  EE10 F07A          	lfsr	1,122
   843  004222                     copy_data0:
   844  004222  0009               	tblrd		*+
   845  004224  CFF5 FFEE          	movff	tablat,postinc0
   846  004228  50E5               	movf	postdec1,w,c
   847  00422A  50E1               	movf	fsr1l,w,c
   848  00422C  E1FA               	bnz	copy_data0
   849                           
   850                           ; Initialize objects allocated to BANK1 (7 bytes)
   851                           ; load TBLPTR registers with __pidataBANK1
   852  00422E  0E44               	movlw	low __pidataBANK1
   853  004230  6EF6               	movwf	tblptrl,c
   854  004232  0E54               	movlw	high __pidataBANK1
   855  004234  6EF7               	movwf	tblptrh,c
   856  004236  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   857  004238  6EF8               	movwf	tblptru,c
   858  00423A  EE01  F0F4         	lfsr	0,__pdataBANK1
   859  00423E  EE10 F007          	lfsr	1,7
   860  004242                     copy_data1:
   861  004242  0009               	tblrd		*+
   862  004244  CFF5 FFEE          	movff	tablat,postinc0
   863  004248  50E5               	movf	postdec1,w,c
   864  00424A  50E1               	movf	fsr1l,w,c
   865  00424C  E1FA               	bnz	copy_data1
   866                           
   867                           ; Initialize objects allocated to COMRAM (1 bytes)
   868                           ; load TBLPTR registers with __pidataCOMRAM
   869  00424E  0E4E               	movlw	low __pidataCOMRAM
   870  004250  6EF6               	movwf	tblptrl,c
   871  004252  0E54               	movlw	high __pidataCOMRAM
   872  004254  6EF7               	movwf	tblptrh,c
   873  004256  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   874  004258  6EF8               	movwf	tblptru,c
   875  00425A  0009               	tblrd		*+	;fetch initializer
   876  00425C  CFF5 F046          	movff	tablat,__pdataCOMRAM
   877                           
   878                           ; Clear objects allocated to BIGRAM (544 bytes)
   879  004260  EE03  F022         	lfsr	0,__pbssBIGRAM
   880  004264  EE12 F020          	lfsr	1,544
   881  004268                     clear_0:
   882  004268  6AEE               	clrf	postinc0,c
   883  00426A  50E5               	movf	postdec1,w,c
   884  00426C  50E1               	movf	fsr1l,w,c
   885  00426E  E1FC               	bnz	clear_0
   886  004270  50E2               	movf	fsr1h,w,c
   887  004272  E1FA               	bnz	clear_0
   888                           
   889                           ; Clear objects allocated to BANK2 (120 bytes)
   890  004274  EE02  F07A         	lfsr	0,__pbssBANK2
   891  004278  0E78               	movlw	120
   892  00427A                     clear_1:
   893  00427A  6AEE               	clrf	postinc0,c
   894  00427C  06E8               	decf	wreg,f,c
   895  00427E  E1FD               	bnz	clear_1
   896                           
   897                           ; Clear objects allocated to BANK1 (244 bytes)
   898  004280  EE01  F000         	lfsr	0,__pbssBANK1
   899  004284  0EF4               	movlw	244
   900  004286                     clear_2:
   901  004286  6AEE               	clrf	postinc0,c
   902  004288  06E8               	decf	wreg,f,c
   903  00428A  E1FD               	bnz	clear_2
   904                           
   905                           ; Clear objects allocated to BANK0 (8 bytes)
   906  00428C  EE00  F0F6         	lfsr	0,__pbssBANK0
   907  004290  0E08               	movlw	8
   908  004292                     clear_3:
   909  004292  6AEE               	clrf	postinc0,c
   910  004294  06E8               	decf	wreg,f,c
   911  004296  E1FD               	bnz	clear_3
   912                           
   913                           ; Clear objects allocated to COMRAM (19 bytes)
   914  004298  EE00  F033         	lfsr	0,__pbssCOMRAM
   915  00429C  0E13               	movlw	19
   916  00429E                     clear_4:
   917  00429E  6AEE               	clrf	postinc0,c
   918  0042A0  06E8               	decf	wreg,f,c
   919  0042A2  E1FD               	bnz	clear_4
   920  0042A4                     end_of_initialization:
   921                           	callstack 0
   922  0042A4                     __end_of__initialization:
   923                           	callstack 0
   924  0042A4  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   925  0042A6  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   926  0042A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   927  0042AA  6EF8               	movwf	tblptru,c
   928  0042AC  0100               	movlb	0
   929  0042AE  EF5A  F028         	goto	_main	;jump to C main() function
   930                           
   931                           	psect	bssCOMRAM
   932  000033                     __pbssCOMRAM:
   933                           	callstack 0
   934  000033                     _point_buff_gps_lat:
   935                           	callstack 0
   936  000033                     	ds	2
   937  000035                     _time_atualizacao:
   938                           	callstack 0
   939  000035                     	ds	2
   940  000037                     _time_sd:
   941                           	callstack 0
   942  000037                     	ds	2
   943  000039                     _FatFs:
   944                           	callstack 0
   945  000039                     	ds	2
   946  00003B                     troca_de_tela@last_state:
   947                           	callstack 0
   948  00003B                     	ds	1
   949  00003C                     troca_de_tela@state:
   950                           	callstack 0
   951  00003C                     	ds	1
   952  00003D                     _tarefa_em_execucao:
   953                           	callstack 0
   954  00003D                     	ds	1
   955  00003E                     _sinaliza_int_timer:
   956                           	callstack 0
   957  00003E                     	ds	1
   958  00003F                     _data_uart_recebe:
   959                           	callstack 0
   960  00003F                     	ds	1
   961  000040                     _estado:
   962                           	callstack 0
   963  000040                     	ds	1
   964  000041                     _data_hoje:
   965                           	callstack 0
   966  000041                     	ds	1
   967  000042                     	ds	1
   968  000043                     _Term:
   969                           	callstack 0
   970  000043                     	ds	1
   971  000044                     _SentenceType:
   972                           	callstack 0
   973  000044                     	ds	1
   974  000045                     _char_number:
   975                           	callstack 0
   976  000045                     	ds	1
   977                           
   978                           	psect	dataCOMRAM
   979  000046                     __pdataCOMRAM:
   980                           	callstack 0
   981  000046                     	ds	1
   982                           
   983                           	psect	bssBANK0
   984  0000F6                     __pbssBANK0:
   985                           	callstack 0
   986  0000F6                     _flag:
   987                           	callstack 0
   988  0000F6                     	ds	3
   989  0000F9                     _point_buff_gps_long:
   990                           	callstack 0
   991  0000F9                     	ds	2
   992  0000FB                     _GPRMC_ok:
   993                           	callstack 0
   994  0000FB                     	ds	2
   995  0000FD                     escrita_sdcard@f_fix:
   996                           	callstack 0
   997  0000FD                     	ds	1
   998                           
   999                           	psect	bssBANK1
  1000  000100                     __pbssBANK1:
  1001                           	callstack 0
  1002  000100                     _tempo_tarefa:
  1003                           	callstack 0
  1004  000100                     	ds	8
  1005  000108                     _tempo_backup:
  1006                           	callstack 0
  1007  000108                     	ds	8
  1008  000110                     _p_tarefas:
  1009                           	callstack 0
  1010  000110                     	ds	8
  1011  000118                     _timeout_tarefa:
  1012                           	callstack 0
  1013  000118                     	ds	2
  1014  00011A                     _fsid:
  1015                           	callstack 0
  1016  00011A                     	ds	2
  1017  00011C                     _GPGGA_ok:
  1018                           	callstack 0
  1019  00011C                     	ds	2
  1020  00011E                     _data_buff:
  1021                           	callstack 0
  1022  00011E                     	ds	2
  1023  000120                     _poligono_ext:
  1024                           	callstack 0
  1025  000120                     	ds	124
  1026  00019C                     _fil:
  1027                           	callstack 0
  1028  00019C                     	ds	28
  1029  0001B8                     _buffer:
  1030                           	callstack 0
  1031  0001B8                     	ds	12
  1032  0001C4                     _rawTime:
  1033                           	callstack 0
  1034  0001C4                     	ds	11
  1035  0001CF                     _rawAltitude:
  1036                           	callstack 0
  1037  0001CF                     	ds	7
  1038  0001D6                     _rawDate:
  1039                           	callstack 0
  1040  0001D6                     	ds	7
  1041  0001DD                     _rawCourse:
  1042                           	callstack 0
  1043  0001DD                     	ds	6
  1044  0001E3                     _rawSpeed:
  1045                           	callstack 0
  1046  0001E3                     	ds	6
  1047  0001E9                     _sentence:
  1048                           	callstack 0
  1049  0001E9                     	ds	6
  1050  0001EF                     _rawSatellites:
  1051                           	callstack 0
  1052  0001EF                     	ds	3
  1053  0001F2                     _rawFix:
  1054                           	callstack 0
  1055  0001F2                     	ds	2
  1056                           
  1057                           	psect	dataBANK1
  1058  0001F4                     __pdataBANK1:
  1059                           	callstack 0
  1060  0001F4                     escreve_inteiro_lcd@F3223:
  1061                           	callstack 0
  1062  0001F4                     	ds	7
  1063                           
  1064                           	psect	bssBANK2
  1065  00027A                     __pbssBANK2:
  1066                           	callstack 0
  1067  00027A                     _string_dado:
  1068                           	callstack 0
  1069  00027A                     	ds	59
  1070  0002B5                     _dado_arquivo:
  1071                           	callstack 0
  1072  0002B5                     	ds	20
  1073  0002C9                     _filename:
  1074                           	callstack 0
  1075  0002C9                     	ds	15
  1076  0002D8                     _rawLongitude:
  1077                           	callstack 0
  1078  0002D8                     	ds	13
  1079  0002E5                     _rawLatitude:
  1080                           	callstack 0
  1081  0002E5                     	ds	13
  1082                           
  1083                           	psect	dataBANK2
  1084  000200                     __pdataBANK2:
  1085                           	callstack 0
  1086  000200                     verifica_fence_externo@F3648:
  1087                           	callstack 0
  1088  000200                     	ds	48
  1089  000230                     verifica_fence_externo@F3645:
  1090                           	callstack 0
  1091  000230                     	ds	44
  1092  00025C                     verifica_fence_externo@F3662:
  1093                           	callstack 0
  1094  00025C                     	ds	12
  1095  000268                     verifica_fence_externo@F3660:
  1096                           	callstack 0
  1097  000268                     	ds	11
  1098  000273                     	ds	7
  1099                           
  1100                           	psect	bssBIGRAM
  1101  000322                     __pbssBIGRAM:
  1102                           	callstack 0
  1103  000322                     _fs:
  1104                           	callstack 0
  1105  000322                     	ds	544
  1106                           
  1107                           	psect	cstackBANK3
  1108  000300                     __pcstackBANK3:
  1109                           	callstack 0
  1110  000300                     fprintf@s:
  1111                           	callstack 0
  1112                           
  1113                           ; 16 bytes @ 0x0
  1114  000300                     	ds	16
  1115  000310                     fprintf@res:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x10
  1119  000310                     	ds	2
  1120  000312                     _fprintf$2131:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x12
  1124  000312                     	ds	2
  1125  000314                     fprintf@w:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x14
  1129  000314                     	ds	2
  1130  000316                     fprintf@f:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x16
  1134  000316                     	ds	1
  1135  000317                     fprintf@r:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x17
  1139  000317                     	ds	1
  1140  000318                     fprintf@val:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x18
  1144  000318                     	ds	4
  1145  00031C                     fprintf@arp:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x1C
  1149  00031C                     	ds	1
  1150  00031D                     fprintf@cc:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x1D
  1154  00031D                     	ds	2
  1155  00031F                     fprintf@i:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x1F
  1159  00031F                     	ds	2
  1160  000321                     fprintf@c:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x21
  1164  000321                     	ds	1
  1165                           
  1166                           	psect	cstackBANK0
  1167  000060                     __pcstackBANK0:
  1168                           	callstack 0
  1169  000060                     ??_get_fattime:
  1170  000060                     configura_baudrate_uart@x:
  1171                           	callstack 0
  1172  000060                     escreve_inteiro_lcd@texto:
  1173                           	callstack 0
  1174  000060                     mensagem_inicial@msg_linha_um:
  1175                           	callstack 0
  1176  000060                     verifica_fence_externo@fence_diff_long:
  1177                           	callstack 0
  1178                           
  1179                           ; 48 bytes @ 0x0
  1180  000060                     	ds	1
  1181  000061                     sdc_disk_read@start_add:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x1
  1185  000061                     	ds	1
  1186  000062                     sdc_disk_initialize@stat:
  1187                           	callstack 0
  1188  000062                     sdc_disk_write@count1:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x2
  1192  000062                     	ds	1
  1193  000063                     sdc_disk_initialize@count1:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x3
  1197  000063                     	ds	1
  1198  000064                     sdc_disk_write@res:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x4
  1202  000064                     	ds	1
  1203  000065                     sdc_disk_initialize@crc_number:
  1204                           	callstack 0
  1205  000065                     sdc_disk_read@length:
  1206                           	callstack 0
  1207  000065                     sdc_disk_write@j:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x5
  1211  000065                     	ds	2
  1212  000067                     sdc_disk_initialize@buff_i:
  1213                           	callstack 0
  1214  000067                     sdc_disk_read@buff:
  1215                           	callstack 0
  1216  000067                     sdc_disk_write@buff:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x7
  1220  000067                     	ds	1
  1221  000068                     sdc_disk_initialize@ocr:
  1222                           	callstack 0
  1223  000068                     disk_read@buff:
  1224                           	callstack 0
  1225  000068                     disk_write@buff:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x8
  1229  000068                     	ds	1
  1230  000069                     sdc_disk_initialize@count2:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x9
  1234  000069                     	ds	1
  1235  00006A                     disk_read@sector:
  1236                           	callstack 0
  1237  00006A                     disk_write@sector:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0xA
  1241  00006A                     	ds	1
  1242  00006B                     sdc_disk_initialize@buff:
  1243                           	callstack 0
  1244                           
  1245                           ; 1 bytes @ 0xB
  1246  00006B                     	ds	3
  1247  00006E                     disk_read@count:
  1248                           	callstack 0
  1249  00006E                     disk_write@count:
  1250                           	callstack 0
  1251                           
  1252                           ; 1 bytes @ 0xE
  1253  00006E                     	ds	1
  1254  00006F                     disk_read@pdrv:
  1255                           	callstack 0
  1256  00006F                     disk_write@pdrv:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0xF
  1260  00006F                     	ds	1
  1261  000070                     disk_read@result:
  1262                           	callstack 0
  1263  000070                     disk_write@result:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x10
  1267  000070                     	ds	1
  1268  000071                     mensagem_inicial@msg_dois:
  1269                           	callstack 0
  1270                           
  1271                           ; 17 bytes @ 0x11
  1272  000071                     	ds	1
  1273  000072                     disk_read@res:
  1274                           	callstack 0
  1275  000072                     disk_write@res:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x12
  1279  000072                     	ds	1
  1280  000073                     move_window@sector:
  1281                           	callstack 0
  1282  000073                     check_fs@sect:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x13
  1286  000073                     	ds	4
  1287  000077                     ??_move_window:
  1288  000077                     check_fs@fs:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x17
  1292  000077                     	ds	2
  1293  000079                     auto_mount@path:
  1294                           	callstack 0
  1295                           
  1296                           ; 1 bytes @ 0x19
  1297  000079                     	ds	1
  1298  00007A                     auto_mount@chk_wp:
  1299                           	callstack 0
  1300                           
  1301                           ; 1 bytes @ 0x1A
  1302  00007A                     	ds	1
  1303  00007B                     ??_auto_mount:
  1304                           
  1305                           ; 1 bytes @ 0x1B
  1306  00007B                     	ds	6
  1307  000081                     move_window@n:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x21
  1311  000081                     	ds	1
  1312  000082                     move_window@wsect:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x22
  1316  000082                     	ds	4
  1317  000086                     move_window@fs:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x26
  1321  000086                     	ds	2
  1322  000088                     ??_get_cluster:
  1323  000088                     put_cluster@clust:
  1324                           	callstack 0
  1325  000088                     f_sync@fp:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x28
  1329  000088                     	ds	2
  1330  00008A                     put_cluster@val:
  1331                           	callstack 0
  1332  00008A                     f_sync@tim:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x2A
  1336  00008A                     	ds	2
  1337  00008C                     ??_put_cluster:
  1338                           
  1339                           ; 1 bytes @ 0x2C
  1340  00008C                     	ds	2
  1341  00008E                     f_sync@res:
  1342                           	callstack 0
  1343                           
  1344                           ; 1 bytes @ 0x2E
  1345  00008E                     	ds	1
  1346  00008F                     f_sync@dir:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x2F
  1350  00008F                     	ds	1
  1351  000090                     verifica_fence_externo@fence_diff_lat:
  1352                           	callstack 0
  1353                           
  1354                           ; 44 bytes @ 0x30
  1355  000090                     	ds	1
  1356  000091                     get_cluster@wc:
  1357                           	callstack 0
  1358  000091                     f_close@fp:
  1359                           	callstack 0
  1360  000091                     auto_mount@maxclust:
  1361                           	callstack 0
  1362                           
  1363                           ; 4 bytes @ 0x31
  1364  000091                     	ds	1
  1365  000092                     _put_cluster$1528:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x32
  1369  000092                     	ds	1
  1370  000093                     f_close@res:
  1371                           	callstack 0
  1372  000093                     get_cluster@fatsect:
  1373                           	callstack 0
  1374                           
  1375                           ; 4 bytes @ 0x33
  1376  000093                     	ds	1
  1377  000094                     _put_cluster$1529:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x34
  1381  000094                     	ds	1
  1382  000095                     auto_mount@bootsect:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x35
  1386  000095                     	ds	1
  1387  000096                     put_cluster@fatsect:
  1388                           	callstack 0
  1389                           
  1390                           ; 4 bytes @ 0x36
  1391  000096                     	ds	1
  1392  000097                     get_cluster@bc:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x37
  1396  000097                     	ds	2
  1397  000099                     get_cluster@fs:
  1398                           	callstack 0
  1399  000099                     auto_mount@totalsect:
  1400                           	callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x39
  1403  000099                     	ds	1
  1404  00009A                     put_cluster@bc:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x3A
  1408  00009A                     	ds	1
  1409  00009B                     next_dir_entry@dj:
  1410                           	callstack 0
  1411                           
  1412                           ; 1 bytes @ 0x3B
  1413  00009B                     	ds	1
  1414  00009C                     ??_next_dir_entry:
  1415  00009C                     put_cluster@p:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x3C
  1419  00009C                     	ds	1
  1420  00009D                     auto_mount@p:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x3D
  1424  00009D                     	ds	1
  1425  00009E                     put_cluster@fs:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x3E
  1429  00009E                     	ds	1
  1430  00009F                     auto_mount@fmt:
  1431                           	callstack 0
  1432                           
  1433                           ; 1 bytes @ 0x3F
  1434  00009F                     	ds	1
  1435  0000A0                     ?_create_chain:
  1436                           	callstack 0
  1437  0000A0                     auto_mount@stat:
  1438                           	callstack 0
  1439  0000A0                     remove_chain@clust:
  1440                           	callstack 0
  1441  0000A0                     create_chain@clust:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x40
  1445  0000A0                     	ds	1
  1446  0000A1                     auto_mount@fatsize:
  1447                           	callstack 0
  1448                           
  1449                           ; 4 bytes @ 0x41
  1450  0000A1                     	ds	1
  1451  0000A2                     
  1452                           ; 1 bytes @ 0x42
  1453  0000A2                     	ds	1
  1454  0000A3                     next_dir_entry@clust:
  1455                           	callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x43
  1458  0000A3                     	ds	1
  1459  0000A4                     remove_chain@nxt:
  1460                           	callstack 0
  1461  0000A4                     create_chain@mcl:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x44
  1465  0000A4                     	ds	1
  1466  0000A5                     next_dir_entry@idx:
  1467                           	callstack 0
  1468  0000A5                     auto_mount@fs:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x45
  1472  0000A5                     	ds	1
  1473  0000A6                     remove_chain@fs:
  1474                           	callstack 0
  1475  0000A6                     create_chain@fs:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x46
  1479  0000A6                     	ds	1
  1480  0000A7                     trace_path@dj:
  1481                           	callstack 0
  1482                           
  1483                           ; 1 bytes @ 0x47
  1484  0000A7                     	ds	1
  1485  0000A8                     trace_path@fn:
  1486                           	callstack 0
  1487  0000A8                     create_chain@cstat:
  1488                           	callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x48
  1491  0000A8                     	ds	1
  1492  0000A9                     trace_path@path:
  1493                           	callstack 0
  1494                           
  1495                           ; 2 bytes @ 0x49
  1496  0000A9                     	ds	1
  1497  0000AA                     create_chain@scl:
  1498                           	callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x4A
  1501  0000AA                     	ds	1
  1502  0000AB                     trace_path@dir:
  1503                           	callstack 0
  1504                           
  1505                           ; 1 bytes @ 0x4B
  1506  0000AB                     	ds	1
  1507  0000AC                     ??_trace_path:
  1508  0000AC                     create_chain@ncl:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x4C
  1512  0000AC                     	ds	2
  1513  0000AE                     reserve_direntry@dj:
  1514                           	callstack 0
  1515  0000AE                     f_write@fp:
  1516                           	callstack 0
  1517  0000AE                     f_lseek@fp:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x4E
  1521  0000AE                     	ds	1
  1522  0000AF                     reserve_direntry@dir:
  1523                           	callstack 0
  1524                           
  1525                           ; 1 bytes @ 0x4F
  1526  0000AF                     	ds	1
  1527  0000B0                     ??_reserve_direntry:
  1528  0000B0                     f_write@buff:
  1529                           	callstack 0
  1530  0000B0                     _trace_path$1685:
  1531                           	callstack 0
  1532  0000B0                     f_lseek@ofs:
  1533                           	callstack 0
  1534                           
  1535                           ; 4 bytes @ 0x50
  1536  0000B0                     	ds	1
  1537  0000B1                     f_write@btw:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x51
  1541  0000B1                     	ds	1
  1542  0000B2                     _trace_path$1687:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x52
  1546  0000B2                     	ds	1
  1547  0000B3                     f_write@bw:
  1548                           	callstack 0
  1549                           
  1550                           ; 1 bytes @ 0x53
  1551  0000B3                     	ds	1
  1552  0000B4                     ??_f_lseek:
  1553  0000B4                     ??_f_write:
  1554  0000B4                     trace_path@fs:
  1555                           	callstack 0
  1556  0000B4                     reserve_direntry@sector:
  1557                           	callstack 0
  1558                           
  1559                           ; 4 bytes @ 0x54
  1560  0000B4                     	ds	2
  1561  0000B6                     trace_path@clust:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x56
  1565  0000B6                     	ds	2
  1566  0000B8                     trace_path@ds:
  1567                           	callstack 0
  1568  0000B8                     reserve_direntry@n:
  1569                           	callstack 0
  1570                           
  1571                           ; 1 bytes @ 0x58
  1572  0000B8                     	ds	1
  1573  0000B9                     trace_path@dptr:
  1574                           	callstack 0
  1575  0000B9                     reserve_direntry@dptr:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x59
  1579  0000B9                     	ds	2
  1580  0000BB                     reserve_direntry@c:
  1581                           	callstack 0
  1582                           
  1583                           ; 1 bytes @ 0x5B
  1584  0000BB                     	ds	1
  1585  0000BC                     reserve_direntry@clust:
  1586                           	callstack 0
  1587  0000BC                     verifica_fence_externo@temp_buff_long:
  1588                           	callstack 0
  1589                           
  1590                           ; 12 bytes @ 0x5C
  1591  0000BC                     	ds	2
  1592  0000BE                     reserve_direntry@fs:
  1593                           	callstack 0
  1594                           
  1595                           ; 2 bytes @ 0x5E
  1596  0000BE                     	ds	2
  1597  0000C0                     f_write@res:
  1598                           	callstack 0
  1599  0000C0                     f_open@fp:
  1600                           	callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x60
  1603  0000C0                     	ds	1
  1604  0000C1                     f_write@wbuff:
  1605                           	callstack 0
  1606                           
  1607                           ; 1 bytes @ 0x61
  1608  0000C1                     	ds	1
  1609  0000C2                     f_open@path:
  1610                           	callstack 0
  1611  0000C2                     f_write@sect:
  1612                           	callstack 0
  1613                           
  1614                           ; 4 bytes @ 0x62
  1615  0000C2                     	ds	2
  1616  0000C4                     f_open@mode:
  1617                           	callstack 0
  1618  0000C4                     f_lseek@res:
  1619                           	callstack 0
  1620                           
  1621                           ; 1 bytes @ 0x64
  1622  0000C4                     	ds	1
  1623  0000C5                     ??_f_open:
  1624  0000C5                     f_lseek@ifptr:
  1625                           	callstack 0
  1626                           
  1627                           ; 4 bytes @ 0x65
  1628  0000C5                     	ds	1
  1629  0000C6                     f_write@cc:
  1630                           	callstack 0
  1631                           
  1632                           ; 2 bytes @ 0x66
  1633  0000C6                     	ds	2
  1634  0000C8                     f_write@clust:
  1635                           	callstack 0
  1636  0000C8                     verifica_fence_externo@temp_buff_lat:
  1637                           	callstack 0
  1638                           
  1639                           ; 11 bytes @ 0x68
  1640  0000C8                     	ds	1
  1641  0000C9                     f_lseek@csize:
  1642                           	callstack 0
  1643  0000C9                     f_open@fn:
  1644                           	callstack 0
  1645                           
  1646                           ; 12 bytes @ 0x69
  1647  0000C9                     	ds	1
  1648  0000CA                     f_write@wcnt:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x6A
  1652  0000CA                     	ds	2
  1653  0000CC                     ?_fputc:
  1654                           	callstack 0
  1655  0000CC                     fputc@chr:
  1656                           	callstack 0
  1657                           
  1658                           ; 2 bytes @ 0x6C
  1659  0000CC                     	ds	1
  1660  0000CD                     f_lseek@clust:
  1661                           	callstack 0
  1662                           
  1663                           ; 2 bytes @ 0x6D
  1664  0000CD                     	ds	1
  1665  0000CE                     fputc@fil:
  1666                           	callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x6E
  1669  0000CE                     	ds	2
  1670  0000D0                     fputc@c:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x70
  1674  0000D0                     	ds	1
  1675  0000D1                     fputc@bw:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x71
  1679  0000D1                     	ds	2
  1680  0000D3                     ?_fputs:
  1681                           	callstack 0
  1682  0000D3                     fputs@str:
  1683                           	callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x73
  1686  0000D3                     	ds	2
  1687  0000D5                     f_open@rs:
  1688                           	callstack 0
  1689  0000D5                     fputs@fil:
  1690                           	callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x75
  1693  0000D5                     	ds	2
  1694  0000D7                     ??_fputs:
  1695  0000D7                     f_open@dw:
  1696                           	callstack 0
  1697  0000D7                     verifica_fence_externo@temp_var_deg:
  1698                           	callstack 0
  1699                           
  1700                           ; 4 bytes @ 0x77
  1701  0000D7                     	ds	1
  1702  0000D8                     fputs@n:
  1703                           	callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x78
  1706  0000D8                     	ds	2
  1707  0000DA                     ?_fprintf:
  1708                           	callstack 0
  1709  0000DA                     fprintf@fil:
  1710                           	callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x7A
  1713  0000DA                     	ds	1
  1714  0000DB                     f_open@res:
  1715                           	callstack 0
  1716  0000DB                     verifica_fence_externo@point_index_lat:
  1717                           	callstack 0
  1718                           
  1719                           ; 1 bytes @ 0x7B
  1720  0000DB                     	ds	1
  1721  0000DC                     verifica_fence_externo@point_index_long:
  1722                           	callstack 0
  1723  0000DC                     f_open@dir:
  1724                           	callstack 0
  1725  0000DC                     fprintf@str:
  1726                           	callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x7C
  1729  0000DC                     	ds	1
  1730  0000DD                     verifica_fence_externo@j:
  1731                           	callstack 0
  1732                           
  1733                           ; 1 bytes @ 0x7D
  1734  0000DD                     	ds	1
  1735  0000DE                     verifica_fence_externo@count:
  1736                           	callstack 0
  1737  0000DE                     f_open@dj:
  1738                           	callstack 0
  1739                           
  1740                           ; 14 bytes @ 0x7E
  1741  0000DE                     	ds	1
  1742  0000DF                     verifica_fence_externo@point:
  1743                           	callstack 0
  1744                           
  1745                           ; 1 bytes @ 0x7F
  1746  0000DF                     	ds	1
  1747  0000E0                     verifica_fence_externo@i:
  1748                           	callstack 0
  1749                           
  1750                           ; 1 bytes @ 0x80
  1751  0000E0                     	ds	14
  1752  0000EE                     ??_fprintf:
  1753                           
  1754                           ; 1 bytes @ 0x8E
  1755  0000EE                     	ds	2
  1756  0000F0                     
  1757                           ; 1 bytes @ 0x90
  1758  0000F0                     	ds	1
  1759  0000F1                     escrita_sdcard@fix_gps:
  1760                           	callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x91
  1763  0000F1                     	ds	2
  1764  0000F3                     
  1765                           ; 1 bytes @ 0x93
  1766  0000F3                     	ds	2
  1767  0000F5                     escalonador@cont:
  1768                           	callstack 0
  1769                           
  1770                           ; 1 bytes @ 0x95
  1771  0000F5                     	ds	1
  1772                           
  1773                           	psect	cstackCOMRAM
  1774  000001                     __pcstackCOMRAM:
  1775                           	callstack 0
  1776  000001                     ?_strcmp:
  1777                           	callstack 0
  1778  000001                     stringcpy@str1:
  1779                           	callstack 0
  1780  000001                     strcmp@s1:
  1781                           	callstack 0
  1782  000001                     i2write_timer_zero@timer0:
  1783                           	callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x0
  1786  000001                     	ds	2
  1787  000003                     stringcpy@str2:
  1788                           	callstack 0
  1789  000003                     strcmp@s2:
  1790                           	callstack 0
  1791                           
  1792                           ; 2 bytes @ 0x2
  1793  000003                     	ds	2
  1794  000005                     ??_strcmp:
  1795  000005                     stringcpy@dir:
  1796                           	callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x4
  1799  000005                     	ds	2
  1800  000007                     ??_stringcpy:
  1801  000007                     strcmp@r:
  1802                           	callstack 0
  1803                           
  1804                           ; 1 bytes @ 0x6
  1805  000007                     	ds	2
  1806  000009                     stringcpy@chr:
  1807                           	callstack 0
  1808                           
  1809                           ; 1 bytes @ 0x8
  1810  000009                     	ds	1
  1811  00000A                     GPSRead@buff:
  1812                           	callstack 0
  1813                           
  1814                           ; 1 bytes @ 0x9
  1815  00000A                     	ds	1
  1816  00000B                     GPSRead@c:
  1817                           	callstack 0
  1818                           
  1819                           ; 1 bytes @ 0xA
  1820  00000B                     	ds	1
  1821  00000C                     ??_isr:
  1822                           
  1823                           ; 1 bytes @ 0xB
  1824  00000C                     	ds	12
  1825  000018                     isr@cont:
  1826                           	callstack 0
  1827                           
  1828                           ; 1 bytes @ 0x17
  1829  000018                     	ds	1
  1830  000019                     ??_dummy_clocks:
  1831  000019                     ??_isdigit:
  1832  000019                     ?_Latitude:
  1833                           	callstack 0
  1834  000019                     ?_Longitude:
  1835                           	callstack 0
  1836  000019                     ?_fix:
  1837                           	callstack 0
  1838  000019                     ?_strlen:
  1839                           	callstack 0
  1840  000019                     ?_memcmp:
  1841                           	callstack 0
  1842  000019                     ?_GPSSecond:
  1843                           	callstack 0
  1844  000019                     ?_GPSMinute:
  1845                           	callstack 0
  1846  000019                     ?_GPSHour:
  1847                           	callstack 0
  1848  000019                     ?_GPSDay:
  1849                           	callstack 0
  1850  000019                     ?_GPSMonth:
  1851                           	callstack 0
  1852  000019                     ?_GPSyear:
  1853                           	callstack 0
  1854  000019                     ?___wmul:
  1855                           	callstack 0
  1856  000019                     ?___lwdiv:
  1857                           	callstack 0
  1858  000019                     ?___lwmod:
  1859                           	callstack 0
  1860  000019                     ?___lmul:
  1861                           	callstack 0
  1862  000019                     ?___lldiv:
  1863                           	callstack 0
  1864  000019                     ?___aldiv:
  1865                           	callstack 0
  1866  000019                     ?___llmod:
  1867                           	callstack 0
  1868  000019                     disk_ioctl@cmd:
  1869                           	callstack 0
  1870  000019                     delay@contador_ext:
  1871                           	callstack 0
  1872  000019                     response@buff:
  1873                           	callstack 0
  1874  000019                     write_timer_zero@timer0:
  1875                           	callstack 0
  1876  000019                     f_mount@fs:
  1877                           	callstack 0
  1878  000019                     ___wmul@multiplier:
  1879                           	callstack 0
  1880  000019                     ___lwdiv@dividend:
  1881                           	callstack 0
  1882  000019                     ___lwmod@dividend:
  1883                           	callstack 0
  1884  000019                     memcmp@s1:
  1885                           	callstack 0
  1886  000019                     memcpy@d1:
  1887                           	callstack 0
  1888  000019                     memset@p1:
  1889                           	callstack 0
  1890  000019                     strcat@to:
  1891                           	callstack 0
  1892  000019                     strcpy@to:
  1893                           	callstack 0
  1894  000019                     strlen@s:
  1895                           	callstack 0
  1896  000019                     wait_ready@timeout:
  1897                           	callstack 0
  1898  000019                     ___lmul@multiplier:
  1899                           	callstack 0
  1900  000019                     ___lldiv@dividend:
  1901                           	callstack 0
  1902  000019                     ___aldiv@dividend:
  1903                           	callstack 0
  1904  000019                     ___llmod@dividend:
  1905                           	callstack 0
  1906                           
  1907                           ; 4 bytes @ 0x18
  1908  000019                     	ds	1
  1909  00001A                     sdc_disk_status@pdrv:
  1910                           	callstack 0
  1911  00001A                     delay@contador_int:
  1912                           	callstack 0
  1913  00001A                     escreve_SPI@dado:
  1914                           	callstack 0
  1915  00001A                     _isdigit$3080:
  1916                           	callstack 0
  1917  00001A                     disk_ioctl@buff:
  1918                           	callstack 0
  1919                           
  1920                           ; 2 bytes @ 0x19
  1921  00001A                     	ds	1
  1922  00001B                     ??_GPSSecond:
  1923  00001B                     ??_GPSMinute:
  1924  00001B                     ??_GPSHour:
  1925  00001B                     ??_GPSDay:
  1926  00001B                     ??_GPSMonth:
  1927  00001B                     ??_GPSyear:
  1928  00001B                     escreve_cmd_lcd@comando:
  1929                           	callstack 0
  1930  00001B                     endereco_cursor_lcd@endereco:
  1931                           	callstack 0
  1932  00001B                     escreve_caractere_lcd@data:
  1933                           	callstack 0
  1934  00001B                     dummy_clocks@n:
  1935                           	callstack 0
  1936  00001B                     f_mount@drv:
  1937                           	callstack 0
  1938  00001B                     isdigit@c:
  1939                           	callstack 0
  1940  00001B                     ___wmul@multiplicand:
  1941                           	callstack 0
  1942  00001B                     ___lwdiv@divisor:
  1943                           	callstack 0
  1944  00001B                     ___lwmod@divisor:
  1945                           	callstack 0
  1946  00001B                     memcmp@s2:
  1947                           	callstack 0
  1948  00001B                     memcpy@s1:
  1949                           	callstack 0
  1950  00001B                     memset@c:
  1951                           	callstack 0
  1952  00001B                     strcat@from:
  1953                           	callstack 0
  1954  00001B                     strcpy@from:
  1955                           	callstack 0
  1956  00001B                     strlen@cp:
  1957                           	callstack 0
  1958                           
  1959                           ; 2 bytes @ 0x1A
  1960  00001B                     	ds	1
  1961  00001C                     ??_init_lcd:
  1962  00001C                     disk_ioctl@pdrv:
  1963                           	callstack 0
  1964  00001C                     posicao_cursor_lcd@coluna:
  1965                           	callstack 0
  1966  00001C                     escreve_frase_ram_lcd@buffer:
  1967                           	callstack 0
  1968  00001C                     dummy_clocks@i:
  1969                           	callstack 0
  1970                           
  1971                           ; 2 bytes @ 0x1B
  1972  00001C                     	ds	1
  1973  00001D                     ?_get_fattime:
  1974                           	callstack 0
  1975  00001D                     disk_status@pdrv:
  1976                           	callstack 0
  1977  00001D                     disk_ioctl@res:
  1978                           	callstack 0
  1979  00001D                     posicao_cursor_lcd@linha:
  1980                           	callstack 0
  1981  00001D                     wait_ready@res:
  1982                           	callstack 0
  1983  00001D                     ___lwdiv@counter:
  1984                           	callstack 0
  1985  00001D                     ___lwmod@counter:
  1986                           	callstack 0
  1987  00001D                     monta_sd@dado:
  1988                           	callstack 0
  1989  00001D                     ___wmul@product:
  1990                           	callstack 0
  1991  00001D                     memcmp@n:
  1992                           	callstack 0
  1993  00001D                     memcpy@n:
  1994                           	callstack 0
  1995  00001D                     memset@n:
  1996                           	callstack 0
  1997  00001D                     strcat@cp:
  1998                           	callstack 0
  1999  00001D                     strcpy@cp:
  2000                           	callstack 0
  2001  00001D                     ___lmul@multiplicand:
  2002                           	callstack 0
  2003  00001D                     ___lldiv@divisor:
  2004                           	callstack 0
  2005  00001D                     ___aldiv@divisor:
  2006                           	callstack 0
  2007  00001D                     ___llmod@divisor:
  2008                           	callstack 0
  2009                           
  2010                           ; 4 bytes @ 0x1C
  2011  00001D                     	ds	1
  2012  00001E                     disk_status@stat:
  2013                           	callstack 0
  2014  00001E                     posicao_cursor_lcd@endereco:
  2015                           	callstack 0
  2016  00001E                     ___lwdiv@quotient:
  2017                           	callstack 0
  2018  00001E                     command@arg:
  2019                           	callstack 0
  2020                           
  2021                           ; 4 bytes @ 0x1D
  2022  00001E                     	ds	1
  2023  00001F                     ??_memcmp:
  2024  00001F                     ??_mensagem_inicial:
  2025  00001F                     ?_atoi:
  2026                           	callstack 0
  2027  00001F                     monta_sd@index:
  2028                           	callstack 0
  2029  00001F                     memcpy@tmp:
  2030                           	callstack 0
  2031  00001F                     validate@fs:
  2032                           	callstack 0
  2033  00001F                     atoi@s:
  2034                           	callstack 0
  2035  00001F                     memset@p:
  2036                           	callstack 0
  2037                           
  2038                           ; 2 bytes @ 0x1E
  2039  00001F                     	ds	1
  2040  000020                     monta_sd@size:
  2041                           	callstack 0
  2042  000020                     utoa@buf:
  2043                           	callstack 0
  2044  000020                     memcpy@d:
  2045                           	callstack 0
  2046                           
  2047                           ; 2 bytes @ 0x1F
  2048  000020                     	ds	1
  2049  000021                     ??_atoi:
  2050  000021                     monta_sd@i:
  2051                           	callstack 0
  2052  000021                     make_dirfile@path:
  2053                           	callstack 0
  2054  000021                     ___aldiv@counter:
  2055                           	callstack 0
  2056  000021                     ___llmod@counter:
  2057                           	callstack 0
  2058  000021                     validate@id:
  2059                           	callstack 0
  2060  000021                     utoa@val:
  2061                           	callstack 0
  2062  000021                     ___lmul@product:
  2063                           	callstack 0
  2064  000021                     ___lldiv@quotient:
  2065                           	callstack 0
  2066  000021                     get_fattime@f_time:
  2067                           	callstack 0
  2068                           
  2069                           ; 10 bytes @ 0x20
  2070  000021                     	ds	1
  2071  000022                     command@CRC:
  2072                           	callstack 0
  2073  000022                     make_dirfile@dirname:
  2074                           	callstack 0
  2075  000022                     ___aldiv@sign:
  2076                           	callstack 0
  2077  000022                     memcpy@s:
  2078                           	callstack 0
  2079                           
  2080                           ; 2 bytes @ 0x21
  2081  000022                     	ds	1
  2082  000023                     ??_make_dirfile:
  2083  000023                     ??_validate:
  2084  000023                     command@CMD:
  2085                           	callstack 0
  2086  000023                     atoi@sign:
  2087                           	callstack 0
  2088  000023                     utoa@base:
  2089                           	callstack 0
  2090  000023                     ___aldiv@quotient:
  2091                           	callstack 0
  2092                           
  2093                           ; 4 bytes @ 0x22
  2094  000023                     	ds	1
  2095  000024                     command@argument:
  2096                           	callstack 0
  2097  000024                     atoi@a:
  2098                           	callstack 0
  2099                           
  2100                           ; 2 bytes @ 0x23
  2101  000024                     	ds	1
  2102  000025                     ?_clust2sect:
  2103                           	callstack 0
  2104  000025                     ___lldiv@counter:
  2105                           	callstack 0
  2106  000025                     sdc_disk_read@p_buff:
  2107                           	callstack 0
  2108  000025                     sdc_disk_write@p_buff:
  2109                           	callstack 0
  2110  000025                     clust2sect@clust:
  2111                           	callstack 0
  2112  000025                     _make_dirfile$1638:
  2113                           	callstack 0
  2114  000025                     utoa@v:
  2115                           	callstack 0
  2116                           
  2117                           ; 2 bytes @ 0x24
  2118  000025                     	ds	1
  2119  000026                     ??_verifica_fence_externo:
  2120                           
  2121                           ; 1 bytes @ 0x25
  2122  000026                     	ds	1
  2123  000027                     make_dirfile@b:
  2124                           	callstack 0
  2125  000027                     utoa@c:
  2126                           	callstack 0
  2127  000027                     sdc_reset@count_nosd:
  2128                           	callstack 0
  2129  000027                     sdc_disk_read@sector:
  2130                           	callstack 0
  2131  000027                     sdc_disk_write@sector:
  2132                           	callstack 0
  2133  000027                     configura_baudrate_uart@baudrate:
  2134                           	callstack 0
  2135                           
  2136                           ; 4 bytes @ 0x26
  2137  000027                     	ds	1
  2138  000028                     make_dirfile@t:
  2139                           	callstack 0
  2140  000028                     itoa@buf:
  2141                           	callstack 0
  2142                           
  2143                           ; 1 bytes @ 0x27
  2144  000028                     	ds	1
  2145  000029                     ??_clust2sect:
  2146  000029                     make_dirfile@a:
  2147                           	callstack 0
  2148  000029                     sdc_reset@count:
  2149                           	callstack 0
  2150  000029                     itoa@val:
  2151                           	callstack 0
  2152                           
  2153                           ; 2 bytes @ 0x28
  2154  000029                     	ds	1
  2155  00002A                     make_dirfile@n:
  2156                           	callstack 0
  2157                           
  2158                           ; 1 bytes @ 0x29
  2159  00002A                     	ds	1
  2160  00002B                     ??_configura_baudrate_uart:
  2161  00002B                     sdc_reset@buff:
  2162                           	callstack 0
  2163  00002B                     sdc_disk_read@count:
  2164                           	callstack 0
  2165  00002B                     sdc_disk_write@count:
  2166                           	callstack 0
  2167  00002B                     make_dirfile@c:
  2168                           	callstack 0
  2169  00002B                     itoa@base:
  2170                           	callstack 0
  2171                           
  2172                           ; 2 bytes @ 0x2A
  2173  00002B                     	ds	1
  2174  00002C                     ??_sdc_disk_initialize:
  2175  00002C                     ??_sdc_disk_read:
  2176  00002C                     ??_sdc_disk_write:
  2177                           
  2178                           ; 1 bytes @ 0x2B
  2179  00002C                     	ds	1
  2180  00002D                     disk_initialize@pdrv:
  2181                           	callstack 0
  2182                           
  2183                           ; 1 bytes @ 0x2C
  2184  00002D                     	ds	1
  2185  00002E                     disk_initialize@stat:
  2186                           	callstack 0
  2187  00002E                     escreve_inteiro_lcd@valor:
  2188                           	callstack 0
  2189  00002E                     clust2sect@fs:
  2190                           	callstack 0
  2191                           
  2192                           ; 2 bytes @ 0x2D
  2193  00002E                     	ds	2
  2194  000030                     ??_troca_de_tela:
  2195  000030                     ??_disk_read:
  2196  000030                     ??_disk_write:
  2197  000030                     
  2198                           ; 1 bytes @ 0x2F
  2199  000030                     	ds	1
  2200  000031                     ?_get_cluster:
  2201                           	callstack 0
  2202  000031                     sync@fs:
  2203                           	callstack 0
  2204  000031                     get_cluster@clust:
  2205                           	callstack 0
  2206                           
  2207                           ; 2 bytes @ 0x30
  2208  000031                     	ds	2
  2209  000033                     
  2210                           ; 1 bytes @ 0x32
  2211 ;;
  2212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2213 ;;
  2214 ;; *************** function _main *****************
  2215 ;; Defined at:
  2216 ;;		line 218 in file "main.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels required when called:   18
  2236 ;; This function calls:
  2237 ;;		_dados_gps_to_sd
  2238 ;;		_escalonador
  2239 ;;		_inicializa_tarefas
  2240 ;;		_inicializa_uart
  2241 ;;		_init_hardware
  2242 ;;		_init_lcd
  2243 ;;		_mensagem_inicial
  2244 ;; This function is called by:
  2245 ;;		Startup code after reset
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text0
  2250  0050B4                     __ptext0:
  2251                           	callstack 0
  2252  0050B4                     _main:
  2253                           	callstack 13
  2254                           
  2255                           ;main.c: 220: init_hardware();
  2256                           
  2257                           ;incstack = 0
  2258  0050B4  ECA7  F029         	call	_init_hardware	;wreg free
  2259                           
  2260                           ;main.c: 221: T0CONbits.TMR0ON = 0;
  2261  0050B8  9ED5               	bcf	213,7,c	;volatile
  2262                           
  2263                           ;main.c: 222: init_lcd();
  2264  0050BA  EC59  F021         	call	_init_lcd	;wreg free
  2265                           
  2266                           ;main.c: 223: mensagem_inicial();
  2267  0050BE  EC1B  F024         	call	_mensagem_inicial	;wreg free
  2268                           
  2269                           ;main.c: 224: inicializa_tarefas();
  2270  0050C2  ECFC  F024         	call	_inicializa_tarefas	;wreg free
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;main.c: 225: inicializa_uart();
  2274  0050C6  ECE8  F028         	call	_inicializa_uart	;wreg free
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;main.c: 226: T0CONbits.TMR0ON = 1;
  2278  0050CA  8ED5               	bsf	213,7,c	;volatile
  2279  0050CC                     l12283:
  2280                           
  2281                           ;main.c: 228: {;main.c: 230: if ((sinaliza_int_timer == 1) && (4))
  2282  0050CC  043E               	decf	_sinaliza_int_timer^0,w,c
  2283  0050CE  A4D8               	btfss	status,2,c
  2284  0050D0  D004               	goto	l12289
  2285                           
  2286                           ;main.c: 231: {;main.c: 232: sinaliza_int_timer = 0;
  2287  0050D2  0E00               	movlw	0
  2288  0050D4  6E3E               	movwf	_sinaliza_int_timer^0,c
  2289                           
  2290                           ;main.c: 233: escalonador();
  2291  0050D6  ECB4  F020         	call	_escalonador	;wreg free
  2292  0050DA                     l12289:
  2293                           
  2294                           ;main.c: 234: };main.c: 235: dados_gps_to_sd();
  2295  0050DA  ECBF  F027         	call	_dados_gps_to_sd	;wreg free
  2296  0050DE  D7F6               	goto	l12283
  2297  0050E0                     __end_of_main:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _mensagem_inicial *****************
  2301 ;; Defined at:
  2302 ;;		line 246 in file "main.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  msg_dois       17   17[BANK0 ] const unsigned char [17]
  2307 ;;  msg_linha_um   17    0[BANK0 ] const unsigned char [17]
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2317 ;;      Params:         0       0       0       0       0       0       0       0       0
  2318 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2319 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2320 ;;      Totals:         2      34       0       0       0       0       0       0       0
  2321 ;;Total ram usage:       36 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    6
  2324 ;; This function calls:
  2325 ;;		_escreve_cmd_lcd
  2326 ;;		_escreve_frase_ram_lcd
  2327 ;;		_posicao_cursor_lcd
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text1
  2334  004836                     __ptext1:
  2335                           	callstack 0
  2336  004836                     _mensagem_inicial:
  2337                           	callstack 24
  2338                           
  2339                           ;main.c: 248: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2340                           
  2341                           ;incstack = 0
  2342  004836  0EF8               	movlw	low mensagem_inicial@F3638
  2343  004838  6EF6               	movwf	tblptrl,c
  2344  00483A                     	if	1	;There is more than 1 active tblptr byte
  2345  00483A  0E60               	movlw	high mensagem_inicial@F3638
  2346  00483C  6EF7               	movwf	tblptrh,c
  2347  00483E                     	endif
  2348  00483E                     	if	0	;There are less than 3 active tblptr bytes
  2349  00483E                     	endif
  2350  00483E  EE20  F060         	lfsr	2,mensagem_inicial@msg_linha_um
  2351  004842  0E10               	movlw	16
  2352  004844                     u15770:
  2353  004844  0009               	tblrd		*+
  2354  004846  CFF5 FFDE          	movff	tablat,postinc2
  2355  00484A  06E8               	decf	wreg,f,c
  2356  00484C  E2FB               	bc	u15770
  2357                           
  2358                           ;main.c: 249: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2359  00484E  0EE7               	movlw	low mensagem_inicial@F3640
  2360  004850  6EF6               	movwf	tblptrl,c
  2361  004852                     	if	1	;There is more than 1 active tblptr byte
  2362  004852  0E60               	movlw	high mensagem_inicial@F3640
  2363  004854  6EF7               	movwf	tblptrh,c
  2364  004856                     	endif
  2365  004856                     	if	0	;There are less than 3 active tblptr bytes
  2366  004856                     	endif
  2367  004856  EE20  F071         	lfsr	2,mensagem_inicial@msg_dois
  2368  00485A  0E10               	movlw	16
  2369  00485C                     u15780:
  2370  00485C  0009               	tblrd		*+
  2371  00485E  CFF5 FFDE          	movff	tablat,postinc2
  2372  004862  06E8               	decf	wreg,f,c
  2373  004864  E2FB               	bc	u15780
  2374                           
  2375                           ;main.c: 251: posicao_cursor_lcd(1,0);
  2376  004866  0E00               	movlw	0
  2377  004868  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  2378  00486A  0E01               	movlw	1
  2379  00486C  EC63  F025         	call	_posicao_cursor_lcd
  2380                           
  2381                           ;main.c: 252: escreve_frase_ram_lcd(msg_linha_um);
  2382  004870  0E60               	movlw	low mensagem_inicial@msg_linha_um
  2383  004872  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2384  004874  6A1D               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2385  004876  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  2386                           
  2387                           ;main.c: 254: posicao_cursor_lcd(2,0);
  2388  00487A  0E00               	movlw	0
  2389  00487C  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  2390  00487E  0E02               	movlw	2
  2391  004880  EC63  F025         	call	_posicao_cursor_lcd
  2392                           
  2393                           ;main.c: 255: escreve_frase_ram_lcd(msg_dois);
  2394  004884  0E71               	movlw	low mensagem_inicial@msg_dois
  2395  004886  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2396  004888  6A1D               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2397  00488A  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  2398                           
  2399                           ;main.c: 256: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2400  00488E  0E3D               	movlw	61
  2401  004890  6E20               	movwf	(??_mensagem_inicial+1)^0,c
  2402  004892  0EE1               	movlw	225
  2403  004894  6E1F               	movwf	??_mensagem_inicial^0,c
  2404  004896  0E40               	movlw	64
  2405  004898                     u15947:
  2406  004898  2EE8               	decfsz	wreg,f,c
  2407  00489A  D7FE               	bra	u15947
  2408  00489C  2E1F               	decfsz	??_mensagem_inicial^0,f,c
  2409  00489E  D7FC               	bra	u15947
  2410  0048A0  2E20               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2411  0048A2  D7FA               	bra	u15947
  2412                           
  2413                           ;main.c: 257: escreve_cmd_lcd(0b00000001);
  2414  0048A4  0E01               	movlw	1
  2415  0048A6  ECD1  F022         	call	_escreve_cmd_lcd
  2416  0048AA  0012               	return		;funcret
  2417  0048AC                     __end_of_mensagem_inicial:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _init_lcd *****************
  2421 ;; Defined at:
  2422 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2436 ;;      Params:         0       0       0       0       0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2438 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2439 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2440 ;;Total ram usage:        1 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    5
  2443 ;; This function calls:
  2444 ;;		_delay
  2445 ;;		_escreve_cmd_lcd
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text2
  2452  0042B2                     __ptext2:
  2453                           	callstack 0
  2454  0042B2                     _init_lcd:
  2455                           	callstack 25
  2456                           
  2457                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2458                           
  2459                           ;incstack = 0
  2460  0042B2  9495               	bcf	149,2,c	;volatile
  2461                           
  2462                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2463  0042B4  9295               	bcf	149,1,c	;volatile
  2464                           
  2465                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2466  0042B6  9095               	bcf	149,0,c	;volatile
  2467                           
  2468                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2469  0042B8  9895               	bcf	149,4,c	;volatile
  2470                           
  2471                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2472  0042BA  9A95               	bcf	149,5,c	;volatile
  2473                           
  2474                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2475  0042BC  9C95               	bcf	149,6,c	;volatile
  2476                           
  2477                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2478  0042BE  9E95               	bcf	149,7,c	;volatile
  2479                           
  2480                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2481  0042C0  9483               	bcf	131,2,c	;volatile
  2482                           
  2483                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2484  0042C2  9283               	bcf	131,1,c	;volatile
  2485                           
  2486                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2487  0042C4  9083               	bcf	131,0,c	;volatile
  2488                           
  2489                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2490  0042C6  9E83               	bcf	131,7,c	;volatile
  2491                           
  2492                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2493  0042C8  9C83               	bcf	131,6,c	;volatile
  2494                           
  2495                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2496  0042CA  8A83               	bsf	131,5,c	;volatile
  2497                           
  2498                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2499  0042CC  8883               	bsf	131,4,c	;volatile
  2500                           
  2501                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2502  0042CE  0EEA               	movlw	234
  2503  0042D0  6E1C               	movwf	??_init_lcd^0,c
  2504  0042D2  0EC3               	movlw	195
  2505  0042D4                     u15957:
  2506  0042D4  2EE8               	decfsz	wreg,f,c
  2507  0042D6  D7FE               	bra	u15957
  2508  0042D8  2E1C               	decfsz	??_init_lcd^0,f,c
  2509  0042DA  D7FC               	bra	u15957
  2510  0042DC  F000               	nop	
  2511                           
  2512                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2513  0042DE  8083               	bsf	131,0,c	;volatile
  2514                           
  2515                           ;display_lcd.c: 108: delay();
  2516  0042E0  EC7D  F029         	call	_delay	;wreg free
  2517                           
  2518                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2519  0042E4  9083               	bcf	131,0,c	;volatile
  2520                           
  2521                           ;display_lcd.c: 110: delay();
  2522  0042E6  EC7D  F029         	call	_delay	;wreg free
  2523                           
  2524                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2525  0042EA  0E4E               	movlw	78
  2526  0042EC  6E1C               	movwf	??_init_lcd^0,c
  2527  0042EE  0EEB               	movlw	235
  2528  0042F0                     u15967:
  2529  0042F0  2EE8               	decfsz	wreg,f,c
  2530  0042F2  D7FE               	bra	u15967
  2531  0042F4  2E1C               	decfsz	??_init_lcd^0,f,c
  2532  0042F6  D7FC               	bra	u15967
  2533  0042F8  F000               	nop	
  2534                           
  2535                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2536  0042FA  8083               	bsf	131,0,c	;volatile
  2537                           
  2538                           ;display_lcd.c: 119: delay();
  2539  0042FC  EC7D  F029         	call	_delay	;wreg free
  2540                           
  2541                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2542  004300  9083               	bcf	131,0,c	;volatile
  2543                           
  2544                           ;display_lcd.c: 121: delay();
  2545  004302  EC7D  F029         	call	_delay	;wreg free
  2546                           
  2547                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2548  004306  0E4E               	movlw	78
  2549  004308  6E1C               	movwf	??_init_lcd^0,c
  2550  00430A  0EEB               	movlw	235
  2551  00430C                     u15977:
  2552  00430C  2EE8               	decfsz	wreg,f,c
  2553  00430E  D7FE               	bra	u15977
  2554  004310  2E1C               	decfsz	??_init_lcd^0,f,c
  2555  004312  D7FC               	bra	u15977
  2556  004314  F000               	nop	
  2557                           
  2558                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2559  004316  8083               	bsf	131,0,c	;volatile
  2560                           
  2561                           ;display_lcd.c: 130: delay();
  2562  004318  EC7D  F029         	call	_delay	;wreg free
  2563                           
  2564                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2565  00431C  9083               	bcf	131,0,c	;volatile
  2566                           
  2567                           ;display_lcd.c: 132: delay();
  2568  00431E  EC7D  F029         	call	_delay	;wreg free
  2569                           
  2570                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2571  004322  9E83               	bcf	131,7,c	;volatile
  2572                           
  2573                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2574  004324  9C83               	bcf	131,6,c	;volatile
  2575                           
  2576                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2577  004326  8A83               	bsf	131,5,c	;volatile
  2578                           
  2579                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2580  004328  9883               	bcf	131,4,c	;volatile
  2581                           
  2582                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2583  00432A  8083               	bsf	131,0,c	;volatile
  2584                           
  2585                           ;display_lcd.c: 143: delay();
  2586  00432C  EC7D  F029         	call	_delay	;wreg free
  2587                           
  2588                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2589  004330  9083               	bcf	131,0,c	;volatile
  2590                           
  2591                           ;display_lcd.c: 145: delay();
  2592  004332  EC7D  F029         	call	_delay	;wreg free
  2593                           
  2594                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2595  004336  0E28               	movlw	40
  2596  004338  ECD1  F022         	call	_escreve_cmd_lcd
  2597                           
  2598                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2599  00433C  0E06               	movlw	6
  2600  00433E  ECD1  F022         	call	_escreve_cmd_lcd
  2601                           
  2602                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2603  004342  0E0E               	movlw	14
  2604  004344  ECD1  F022         	call	_escreve_cmd_lcd
  2605                           
  2606                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2607  004348  0E01               	movlw	1
  2608  00434A  ECD1  F022         	call	_escreve_cmd_lcd
  2609  00434E  0012               	return		;funcret
  2610  004350                     __end_of_init_lcd:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _init_hardware *****************
  2614 ;; Defined at:
  2615 ;;		line 52 in file "bibliotecas/hardware.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    5
  2636 ;; This function calls:
  2637 ;;		_config_timer_dois
  2638 ;;		_config_timer_zero
  2639 ;;		_init_interrupt
  2640 ;;		_init_oscilador
  2641 ;;		_init_ports
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text3
  2648  00534E                     __ptext3:
  2649                           	callstack 0
  2650  00534E                     _init_hardware:
  2651                           	callstack 25
  2652                           
  2653                           ;hardware.c: 55: init_oscilador();
  2654                           
  2655                           ;incstack = 0
  2656  00534E  EC1E  F02A         	call	_init_oscilador	;wreg free
  2657                           
  2658                           ;hardware.c: 58: init_ports();
  2659  005352  EC8C  F029         	call	_init_ports	;wreg free
  2660                           
  2661                           ;hardware.c: 61: config_timer_zero();
  2662  005356  EC9A  F029         	call	_config_timer_zero	;wreg free
  2663                           
  2664                           ;hardware.c: 64: config_timer_dois();
  2665  00535A  ECDF  F029         	call	_config_timer_dois	;wreg free
  2666                           
  2667                           ;hardware.c: 67: init_interrupt();
  2668  00535E  ECBD  F029         	call	_init_interrupt	;wreg free
  2669  005362  0012               	return		;funcret
  2670  005364                     __end_of_init_hardware:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _init_ports *****************
  2674 ;; Defined at:
  2675 ;;		line 151 in file "bibliotecas/hardware.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2692 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2693 ;;Total ram usage:        0 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    3
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_init_hardware
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text4
  2704  005318                     __ptext4:
  2705                           	callstack 0
  2706  005318                     _init_ports:
  2707                           	callstack 26
  2708                           
  2709                           ;hardware.c: 153: ADCON1 = 0X0F;
  2710                           
  2711                           ;incstack = 0
  2712  005318  0E0F               	movlw	15
  2713  00531A  6EC1               	movwf	193,c	;volatile
  2714                           
  2715                           ;hardware.c: 154: TRISB = 0b00000001;
  2716  00531C  0E01               	movlw	1
  2717  00531E  6E93               	movwf	147,c	;volatile
  2718                           
  2719                           ;hardware.c: 155: LATB = 0xFF;
  2720  005320  688A               	setf	138,c	;volatile
  2721                           
  2722                           ;hardware.c: 156: TRISD = 0x00;
  2723  005322  0E00               	movlw	0
  2724  005324  6E95               	movwf	149,c	;volatile
  2725                           
  2726                           ;hardware.c: 157: TRISA = 0b00000111;
  2727  005326  0E07               	movlw	7
  2728  005328  6E92               	movwf	146,c	;volatile
  2729                           
  2730                           ;hardware.c: 158: TRISC = 0x01111111;
  2731  00532A  0E11               	movlw	17
  2732  00532C  6E94               	movwf	148,c	;volatile
  2733                           
  2734                           ;hardware.c: 159: TRISE = 0b00000011;
  2735  00532E  0E03               	movlw	3
  2736  005330  6E96               	movwf	150,c	;volatile
  2737  005332  0012               	return		;funcret
  2738  005334                     __end_of_init_ports:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _init_oscilador *****************
  2742 ;; Defined at:
  2743 ;;		line 169 in file "bibliotecas/hardware.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		None
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2757 ;;      Params:         0       0       0       0       0       0       0       0       0
  2758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2760 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2761 ;;Total ram usage:        0 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    3
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_init_hardware
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text5
  2772  00543C                     __ptext5:
  2773                           	callstack 0
  2774  00543C                     _init_oscilador:
  2775                           	callstack 26
  2776                           
  2777                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  2778                           
  2779                           ;incstack = 0
  2780  00543C  88D3               	bsf	211,4,c	;volatile
  2781                           
  2782                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  2783  00543E  8AD3               	bsf	211,5,c	;volatile
  2784                           
  2785                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  2786  005440  8CD3               	bsf	211,6,c	;volatile
  2787  005442  0012               	return		;funcret
  2788  005444                     __end_of_init_oscilador:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _init_interrupt *****************
  2792 ;; Defined at:
  2793 ;;		line 94 in file "bibliotecas/hardware.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    3
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_init_hardware
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text6
  2822  00537A                     __ptext6:
  2823                           	callstack 0
  2824  00537A                     _init_interrupt:
  2825                           	callstack 26
  2826                           
  2827                           ;hardware.c: 96: INTCON = 0b10110000;
  2828                           
  2829                           ;incstack = 0
  2830  00537A  0EB0               	movlw	176
  2831  00537C  6EF2               	movwf	242,c	;volatile
  2832                           
  2833                           ;hardware.c: 97: INTCON2 = 0b00000000;
  2834  00537E  0E00               	movlw	0
  2835  005380  6EF1               	movwf	241,c	;volatile
  2836                           
  2837                           ;hardware.c: 98: INTCON3 = 0b00000000;
  2838  005382  0E00               	movlw	0
  2839  005384  6EF0               	movwf	240,c	;volatile
  2840                           
  2841                           ;hardware.c: 100: PIE1 = 0b00101000;
  2842  005386  0E28               	movlw	40
  2843  005388  6E9D               	movwf	157,c	;volatile
  2844  00538A  0012               	return		;funcret
  2845  00538C                     __end_of_init_interrupt:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _config_timer_zero *****************
  2849 ;; Defined at:
  2850 ;;		line 79 in file "bibliotecas/hardware.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    4
  2871 ;; This function calls:
  2872 ;;		_write_timer_zero
  2873 ;; This function is called by:
  2874 ;;		_init_hardware
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text7
  2879  005334                     __ptext7:
  2880                           	callstack 0
  2881  005334                     _config_timer_zero:
  2882                           	callstack 25
  2883                           
  2884                           ;hardware.c: 81: T0CON = 0b11000101;
  2885                           
  2886                           ;incstack = 0
  2887  005334  0EC5               	movlw	197
  2888  005336  6ED5               	movwf	213,c	;volatile
  2889                           
  2890                           ;hardware.c: 82: SPPCON = 0b00000000;
  2891  005338  0E00               	movlw	0
  2892  00533A  6E65               	movwf	101,c	;volatile
  2893                           
  2894                           ;hardware.c: 83: SPPCFG = 0b00000000;
  2895  00533C  0E00               	movlw	0
  2896  00533E  6E63               	movwf	99,c	;volatile
  2897                           
  2898                           ;hardware.c: 84: write_timer_zero(0x45);
  2899  005340  0E00               	movlw	0
  2900  005342  6E1A               	movwf	(write_timer_zero@timer0+1)^0,c
  2901  005344  0E45               	movlw	69
  2902  005346  6E19               	movwf	write_timer_zero@timer0^0,c
  2903  005348  EC05  F02A         	call	_write_timer_zero	;wreg free
  2904  00534C  0012               	return		;funcret
  2905  00534E                     __end_of_config_timer_zero:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _write_timer_zero *****************
  2909 ;; Defined at:
  2910 ;;		line 134 in file "bibliotecas/hardware.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  timer0          2   24[COMRAM] unsigned int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		None
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2924 ;;      Params:         2       0       0       0       0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2927 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2928 ;;Total ram usage:        2 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    3
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_config_timer_zero
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text8
  2939  00540A                     __ptext8:
  2940                           	callstack 0
  2941  00540A                     _write_timer_zero:
  2942                           	callstack 25
  2943                           
  2944                           ;hardware.c: 142: TMR0 = timer0;
  2945                           
  2946                           ;incstack = 0
  2947  00540A  C019  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  2948  00540E  C01A  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  2949  005412  0012               	return		;funcret
  2950  005414                     __end_of_write_timer_zero:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _config_timer_dois *****************
  2954 ;; Defined at:
  2955 ;;		line 198 in file "bibliotecas/hardware.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    3
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_init_hardware
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text9
  2984  0053BE                     __ptext9:
  2985                           	callstack 0
  2986  0053BE                     _config_timer_dois:
  2987                           	callstack 26
  2988                           
  2989                           ;hardware.c: 200: T2CON = 0b00000100;
  2990                           
  2991                           ;incstack = 0
  2992  0053BE  0E04               	movlw	4
  2993  0053C0  6ECA               	movwf	202,c	;volatile
  2994                           
  2995                           ;hardware.c: 201: TMR2 = 0;
  2996  0053C2  0E00               	movlw	0
  2997  0053C4  6ECC               	movwf	204,c	;volatile
  2998                           
  2999                           ;hardware.c: 202: PR2 = 0x01;
  3000  0053C6  0E01               	movlw	1
  3001  0053C8  6ECB               	movwf	203,c	;volatile
  3002  0053CA  0012               	return		;funcret
  3003  0053CC                     __end_of_config_timer_dois:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _inicializa_tarefas *****************
  3007 ;; Defined at:
  3008 ;;		line 165 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 3F/1
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    3
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text10
  3037  0049F8                     __ptext10:
  3038                           	callstack 0
  3039  0049F8                     _inicializa_tarefas:
  3040                           	callstack 27
  3041                           
  3042                           ;main.c: 168: p_tarefas[0] = verifica_dados_operacionais;
  3043                           
  3044                           ;incstack = 0
  3045  0049F8  0E4C               	movlw	low _verifica_dados_operacionais
  3046  0049FA  0101               	movlb	1	; () banked
  3047  0049FC  6F10               	movwf	_p_tarefas& (0+255),b
  3048  0049FE  0E54               	movlw	high _verifica_dados_operacionais
  3049  004A00  6F11               	movwf	(_p_tarefas+1)& (0+255),b
  3050                           
  3051                           ;main.c: 169: p_tarefas[1] = disparo_gravacao;
  3052  004A02  0E64               	movlw	low _disparo_gravacao
  3053  004A04  6F12               	movwf	(_p_tarefas+2)& (0+255),b
  3054  004A06  0E53               	movlw	high _disparo_gravacao
  3055  004A08  6F13               	movwf	(_p_tarefas+3)& (0+255),b
  3056                           
  3057                           ;main.c: 170: p_tarefas[2] = verifica_fence_externo;
  3058  004A0A  0E12               	movlw	low _verifica_fence_externo
  3059  004A0C  6F14               	movwf	(_p_tarefas+4)& (0+255),b
  3060  004A0E  0E00               	movlw	high _verifica_fence_externo
  3061  004A10  6F15               	movwf	(_p_tarefas+5)& (0+255),b
  3062                           
  3063                           ;main.c: 171: p_tarefas[3] = troca_de_tela;
  3064  004A12  0ED8               	movlw	low _troca_de_tela
  3065  004A14  6F16               	movwf	(_p_tarefas+6)& (0+255),b
  3066  004A16  0E19               	movlw	high _troca_de_tela
  3067  004A18  6F17               	movwf	(_p_tarefas+7)& (0+255),b
  3068                           
  3069                           ; BSR set to: 1
  3070                           ;main.c: 175: tempo_backup[0] = 100;
  3071  004A1A  0E00               	movlw	0
  3072  004A1C  6F09               	movwf	(_tempo_backup+1)& (0+255),b
  3073  004A1E  0E64               	movlw	100
  3074  004A20  6F08               	movwf	_tempo_backup& (0+255),b
  3075                           
  3076                           ; BSR set to: 1
  3077                           ;main.c: 176: tempo_backup[1] = 100;
  3078  004A22  0E00               	movlw	0
  3079  004A24  6F0B               	movwf	(_tempo_backup+3)& (0+255),b
  3080  004A26  0E64               	movlw	100
  3081  004A28  6F0A               	movwf	(_tempo_backup+2)& (0+255),b
  3082                           
  3083                           ; BSR set to: 1
  3084                           ;main.c: 177: tempo_backup[2] = 1000;
  3085  004A2A  0E03               	movlw	3
  3086  004A2C  6F0D               	movwf	(_tempo_backup+5)& (0+255),b
  3087  004A2E  0EE8               	movlw	232
  3088  004A30  6F0C               	movwf	(_tempo_backup+4)& (0+255),b
  3089                           
  3090                           ; BSR set to: 1
  3091                           ;main.c: 178: tempo_backup[3] = 100;
  3092  004A32  0E00               	movlw	0
  3093  004A34  6F0F               	movwf	(_tempo_backup+7)& (0+255),b
  3094  004A36  0E64               	movlw	100
  3095  004A38  6F0E               	movwf	(_tempo_backup+6)& (0+255),b
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;main.c: 181: tempo_tarefa[0] = 100;
  3099  004A3A  0E00               	movlw	0
  3100  004A3C  6F01               	movwf	(_tempo_tarefa+1)& (0+255),b
  3101  004A3E  0E64               	movlw	100
  3102  004A40  6F00               	movwf	_tempo_tarefa& (0+255),b
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;main.c: 182: tempo_tarefa[1] = 100;
  3106  004A42  0E00               	movlw	0
  3107  004A44  6F03               	movwf	(_tempo_tarefa+3)& (0+255),b
  3108  004A46  0E64               	movlw	100
  3109  004A48  6F02               	movwf	(_tempo_tarefa+2)& (0+255),b
  3110                           
  3111                           ; BSR set to: 1
  3112                           ;main.c: 183: tempo_tarefa[2] = 1000;
  3113  004A4A  0E03               	movlw	3
  3114  004A4C  6F05               	movwf	(_tempo_tarefa+5)& (0+255),b
  3115  004A4E  0EE8               	movlw	232
  3116  004A50  6F04               	movwf	(_tempo_tarefa+4)& (0+255),b
  3117                           
  3118                           ; BSR set to: 1
  3119                           ;main.c: 184: tempo_tarefa[3] = 1000;
  3120  004A52  0E03               	movlw	3
  3121  004A54  6F07               	movwf	(_tempo_tarefa+7)& (0+255),b
  3122  004A56  0EE8               	movlw	232
  3123  004A58  6F06               	movwf	(_tempo_tarefa+6)& (0+255),b
  3124                           
  3125                           ; BSR set to: 1
  3126                           ;main.c: 186: tarefa_em_execucao = 0;
  3127  004A5A  0E00               	movlw	0
  3128  004A5C  6E3D               	movwf	_tarefa_em_execucao^0,c	;volatile
  3129                           
  3130                           ; BSR set to: 1
  3131  004A5E  0012               	return		;funcret
  3132  004A60                     __end_of_inicializa_tarefas:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _escalonador *****************
  3136 ;; Defined at:
  3137 ;;		line 197 in file "main.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  cont            1  149[BANK0 ] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 3F/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3151 ;;      Params:         0       0       0       0       0       0       0       0       0
  3152 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3153 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3154 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3155 ;;Total ram usage:        3 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:   17
  3158 ;; This function calls:
  3159 ;;		_disparo_gravacao
  3160 ;;		_troca_de_tela
  3161 ;;		_verifica_dados_operacionais
  3162 ;;		_verifica_fence_externo
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text11
  3169  004168                     __ptext11:
  3170                           	callstack 0
  3171  004168                     _escalonador:
  3172                           	callstack 13
  3173                           
  3174                           ;main.c: 199: unsigned char cont;;main.c: 200: for(cont = 0; cont<4;cont++)
  3175                           
  3176                           ; BSR set to: 1
  3177                           ;incstack = 0
  3178  004168  0E00               	movlw	0
  3179  00416A  0100               	movlb	0	; () banked
  3180  00416C  6FF5               	movwf	escalonador@cont& (0+255),b
  3181  00416E                     l12183:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;main.c: 201: {;main.c: 202: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3185  00416E  51F5               	movf	escalonador@cont& (0+255),w,b
  3186  004170  0D02               	mullw	2
  3187  004172  0E10               	movlw	low _p_tarefas
  3188  004174  24F3               	addwf	243,w,c
  3189  004176  6ED9               	movwf	fsr2l,c
  3190  004178  0E01               	movlw	high _p_tarefas
  3191  00417A  20F4               	addwfc	prodh,w,c
  3192  00417C  6EDA               	movwf	fsr2h,c
  3193  00417E  50DE               	movf	postinc2,w,c
  3194  004180  10DE               	iorwf	postinc2,w,c
  3195  004182  B4D8               	btfsc	status,2,c
  3196  004184  D03F               	goto	l12195
  3197                           
  3198                           ; BSR set to: 0
  3199  004186  51F5               	movf	escalonador@cont& (0+255),w,b
  3200  004188  0D02               	mullw	2
  3201  00418A  0E00               	movlw	low _tempo_tarefa
  3202  00418C  24F3               	addwf	243,w,c
  3203  00418E  6ED9               	movwf	fsr2l,c
  3204  004190  0E01               	movlw	high _tempo_tarefa
  3205  004192  20F4               	addwfc	prodh,w,c
  3206  004194  6EDA               	movwf	fsr2h,c
  3207  004196  50DE               	movf	postinc2,w,c
  3208  004198  10DE               	iorwf	postinc2,w,c
  3209  00419A  A4D8               	btfss	status,2,c
  3210  00419C  D033               	goto	l12195
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;main.c: 203: {;main.c: 204: tarefa_em_execucao = 1;
  3214  00419E  0E01               	movlw	1
  3215  0041A0  6E3D               	movwf	_tarefa_em_execucao^0,c	;volatile
  3216                           
  3217                           ;main.c: 205: timeout_tarefa = 7000;
  3218  0041A2  0E1B               	movlw	27
  3219  0041A4  0101               	movlb	1	; () banked
  3220  0041A6  6F19               	movwf	(_timeout_tarefa+1)& (0+255),b
  3221  0041A8  0E58               	movlw	88
  3222  0041AA  6F18               	movwf	_timeout_tarefa& (0+255),b
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;main.c: 206: p_tarefas[cont]();
  3226  0041AC  0100               	movlb	0	; () banked
  3227  0041AE  51F5               	movf	escalonador@cont& (0+255),w,b
  3228  0041B0  0D02               	mullw	2
  3229  0041B2  0E10               	movlw	low _p_tarefas
  3230  0041B4  24F3               	addwf	243,w,c
  3231  0041B6  6ED9               	movwf	fsr2l,c
  3232  0041B8  0E01               	movlw	high _p_tarefas
  3233  0041BA  20F4               	addwfc	prodh,w,c
  3234  0041BC  6EDA               	movwf	fsr2h,c
  3235  0041BE  D801               	call	u15758
  3236  0041C0  D00A               	goto	u15759
  3237  0041C2                     u15758:
  3238  0041C2  0005               	push	
  3239  0041C4  6EFA               	movwf	pclath,c
  3240  0041C6  50DE               	movf	postinc2,w,c
  3241  0041C8  6EFD               	movwf	tosl,c
  3242  0041CA  50DE               	movf	postinc2,w,c
  3243  0041CC  6EFE               	movwf	tosh,c
  3244  0041CE  50F8               	movf	tblptru,w,c
  3245  0041D0  6EFF               	movwf	tosu,c
  3246  0041D2  50FA               	movf	pclath,w,c
  3247  0041D4  0012               	return		;indir
  3248  0041D6                     u15759:
  3249                           
  3250                           ;main.c: 207: tarefa_em_execucao = 0;
  3251  0041D6  0E00               	movlw	0
  3252  0041D8  6E3D               	movwf	_tarefa_em_execucao^0,c	;volatile
  3253                           
  3254                           ;main.c: 208: tempo_tarefa[cont] = tempo_backup[cont];
  3255  0041DA  0100               	movlb	0	; () banked
  3256  0041DC  51F5               	movf	escalonador@cont& (0+255),w,b
  3257  0041DE  0D02               	mullw	2
  3258  0041E0  0E08               	movlw	low _tempo_backup
  3259  0041E2  24F3               	addwf	243,w,c
  3260  0041E4  6ED9               	movwf	fsr2l,c
  3261  0041E6  0E01               	movlw	high _tempo_backup
  3262  0041E8  20F4               	addwfc	prodh,w,c
  3263  0041EA  6EDA               	movwf	fsr2h,c
  3264  0041EC  51F5               	movf	escalonador@cont& (0+255),w,b
  3265  0041EE  0D02               	mullw	2
  3266  0041F0  0E00               	movlw	low _tempo_tarefa
  3267  0041F2  24F3               	addwf	243,w,c
  3268  0041F4  6EE1               	movwf	fsr1l,c
  3269  0041F6  0E01               	movlw	high _tempo_tarefa
  3270  0041F8  20F4               	addwfc	prodh,w,c
  3271  0041FA  6EE2               	movwf	fsr1h,c
  3272  0041FC  CFDE FFE6          	movff	postinc2,postinc1
  3273  004200  CFDD FFE5          	movff	postdec2,postdec1
  3274  004204                     l12195:
  3275                           
  3276                           ; BSR set to: 0
  3277  004204  2BF5               	incf	escalonador@cont& (0+255),f,b
  3278                           
  3279                           ; BSR set to: 0
  3280  004206  0E03               	movlw	3
  3281  004208  65F5               	cpfsgt	escalonador@cont& (0+255),b
  3282  00420A  D7B1               	goto	l12183
  3283  00420C  0012               	return	
  3284  00420E                     __end_of_escalonador:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function _troca_de_tela *****************
  3288 ;; Defined at:
  3289 ;;		line 617 in file "main.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 3F/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3305 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3306 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3307 ;;Total ram usage:        2 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    7
  3310 ;; This function calls:
  3311 ;;		_Latitude
  3312 ;;		_Longitude
  3313 ;;		_escreve_cmd_lcd
  3314 ;;		_escreve_frase_ram_lcd
  3315 ;;		_escreve_inteiro_lcd
  3316 ;;		_fix
  3317 ;;		_posicao_cursor_lcd
  3318 ;; This function is called by:
  3319 ;;		_inicializa_tarefas
  3320 ;;		_escalonador
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text12
  3325  0019D8                     __ptext12:
  3326                           	callstack 0
  3327  0019D8                     _troca_de_tela:
  3328                           	callstack 22
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;main.c: 620: static unsigned char state = 0;;main.c: 621: static unsigned char last_sta
      +                          te = 0;;;main.c: 624: switch(!flag[2].point)
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;incstack = 0
  3335  0019D8  D18D               	goto	l11885
  3336  0019DA                     l1499:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;main.c: 628: if(!PORTEbits.RE0 && !flag[2].point || (state == 1 ))
  3340  0019DA  B084               	btfsc	132,0,c	;volatile
  3341  0019DC  D002               	goto	u14990
  3342                           
  3343                           ; BSR set to: 0
  3344  0019DE  A1F8               	btfss	(_flag+2)& (0+255),0,b
  3345  0019E0  D003               	goto	u15000
  3346  0019E2                     u14990:
  3347                           
  3348                           ; BSR set to: 0
  3349  0019E2  043C               	decf	troca_de_tela@state^0,w,c
  3350  0019E4  A4D8               	btfss	status,2,c
  3351  0019E6  D042               	goto	l11763
  3352  0019E8                     u15000:
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;main.c: 629: {;main.c: 631: if(!time_atualizacao)
  3356  0019E8  5035               	movf	_time_atualizacao^0,w,c
  3357  0019EA  1036               	iorwf	(_time_atualizacao+1)^0,w,c
  3358  0019EC  A4D8               	btfss	status,2,c
  3359  0019EE  D011               	goto	l11743
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;main.c: 632: {;main.c: 633: posicao_cursor_lcd(2,6);
  3363  0019F0  0E06               	movlw	6
  3364  0019F2  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3365  0019F4  0E02               	movlw	2
  3366  0019F6  EC63  F025         	call	_posicao_cursor_lcd
  3367                           
  3368                           ;main.c: 634: escreve_frase_ram_lcd(fix());
  3369  0019FA  EC14  F02A         	call	_fix	;wreg free
  3370  0019FE  C019  F01C         	movff	?_fix,escreve_frase_ram_lcd@buffer
  3371  001A02  C01A  F01D         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  3372  001A06  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3373                           
  3374                           ;main.c: 635: time_atualizacao = 10000;
  3375  001A0A  0E27               	movlw	39
  3376  001A0C  6E36               	movwf	(_time_atualizacao+1)^0,c
  3377  001A0E  0E10               	movlw	16
  3378  001A10  6E35               	movwf	_time_atualizacao^0,c
  3379  001A12                     l11743:
  3380                           
  3381                           ;main.c: 636: };main.c: 638: if(last_state != 1)
  3382  001A12  043B               	decf	troca_de_tela@last_state^0,w,c
  3383  001A14  B4D8               	btfsc	status,2,c
  3384  001A16  D028               	goto	l11761
  3385                           
  3386                           ;main.c: 639: {;main.c: 640: state = 1;
  3387  001A18  0E01               	movlw	1
  3388  001A1A  6E3C               	movwf	troca_de_tela@state^0,c
  3389                           
  3390                           ;main.c: 641: escreve_cmd_lcd(0b00000001);
  3391  001A1C  0E01               	movlw	1
  3392  001A1E  ECD1  F022         	call	_escreve_cmd_lcd
  3393                           
  3394                           ;main.c: 642: posicao_cursor_lcd(1,0);
  3395  001A22  0E00               	movlw	0
  3396  001A24  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3397  001A26  0E01               	movlw	1
  3398  001A28  EC63  F025         	call	_posicao_cursor_lcd
  3399                           
  3400                           ;main.c: 643: escreve_frase_ram_lcd("RPM:");
  3401  001A2C  0E63               	movlw	low STR_23
  3402  001A2E  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3403  001A30  0E62               	movlw	high STR_23
  3404  001A32  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3405  001A34  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3406                           
  3407                           ;main.c: 644: posicao_cursor_lcd(2,0);
  3408  001A38  0E00               	movlw	0
  3409  001A3A  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3410  001A3C  0E02               	movlw	2
  3411  001A3E  EC63  F025         	call	_posicao_cursor_lcd
  3412                           
  3413                           ;main.c: 645: escreve_frase_ram_lcd("VEL:");
  3414  001A42  0E5E               	movlw	low STR_24
  3415  001A44  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3416  001A46  0E62               	movlw	high STR_24
  3417  001A48  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3418  001A4A  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3419                           
  3420                           ;main.c: 646: posicao_cursor_lcd(2,6);
  3421  001A4E  0E06               	movlw	6
  3422  001A50  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3423  001A52  0E02               	movlw	2
  3424  001A54  EC63  F025         	call	_posicao_cursor_lcd
  3425                           
  3426                           ;main.c: 647: escreve_frase_ram_lcd(fix());
  3427  001A58  EC14  F02A         	call	_fix	;wreg free
  3428  001A5C  C019  F01C         	movff	?_fix,escreve_frase_ram_lcd@buffer
  3429  001A60  C01A  F01D         	movff	?_fix+1,escreve_frase_ram_lcd@buffer+1
  3430  001A64  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3431  001A68                     l11761:
  3432                           
  3433                           ;main.c: 648: };main.c: 649: last_state = 1;
  3434  001A68  0E01               	movlw	1
  3435  001A6A  6E3B               	movwf	troca_de_tela@last_state^0,c
  3436  001A6C                     l11763:
  3437                           
  3438                           ;main.c: 651: };main.c: 654: if(!PORTEbits.RE1 && !flag[2].point || (state == 2))
  3439  001A6C  B284               	btfsc	132,1,c	;volatile
  3440  001A6E  D003               	goto	u15040
  3441  001A70  0100               	movlb	0	; () banked
  3442  001A72  A1F8               	btfss	(_flag+2)& (0+255),0,b
  3443  001A74  D004               	goto	u15050
  3444  001A76                     u15040:
  3445  001A76  0E02               	movlw	2
  3446  001A78  183C               	xorwf	troca_de_tela@state^0,w,c
  3447  001A7A  A4D8               	btfss	status,2,c
  3448  001A7C  D06D               	goto	l11807
  3449  001A7E                     u15050:
  3450                           
  3451                           ;main.c: 655: {;main.c: 656: if(!time_atualizacao)
  3452  001A7E  5035               	movf	_time_atualizacao^0,w,c
  3453  001A80  1036               	iorwf	(_time_atualizacao+1)^0,w,c
  3454  001A82  A4D8               	btfss	status,2,c
  3455  001A84  D026               	goto	l11779
  3456                           
  3457                           ;main.c: 657: {;main.c: 658: point_buff_gps_lat = Latitude();
  3458  001A86  EC0F  F02A         	call	_Latitude	;wreg free
  3459  001A8A  C019  F033         	movff	?_Latitude,_point_buff_gps_lat
  3460  001A8E  C01A  F034         	movff	?_Latitude+1,_point_buff_gps_lat+1
  3461                           
  3462                           ;main.c: 659: point_buff_gps_long = Longitude();
  3463  001A92  EC0A  F02A         	call	_Longitude	;wreg free
  3464  001A96  C019  F0F9         	movff	?_Longitude,_point_buff_gps_long
  3465  001A9A  C01A  F0FA         	movff	?_Longitude+1,_point_buff_gps_long+1
  3466                           
  3467                           ;main.c: 660: posicao_cursor_lcd(1,4);
  3468  001A9E  0E04               	movlw	4
  3469  001AA0  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3470  001AA2  0E01               	movlw	1
  3471  001AA4  EC63  F025         	call	_posicao_cursor_lcd
  3472                           
  3473                           ;main.c: 661: escreve_frase_ram_lcd(point_buff_gps_lat);
  3474  001AA8  C033  F01C         	movff	_point_buff_gps_lat,escreve_frase_ram_lcd@buffer
  3475  001AAC  C034  F01D         	movff	_point_buff_gps_lat+1,escreve_frase_ram_lcd@buffer+1
  3476  001AB0  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3477                           
  3478                           ;main.c: 662: posicao_cursor_lcd(2,4);
  3479  001AB4  0E04               	movlw	4
  3480  001AB6  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3481  001AB8  0E02               	movlw	2
  3482  001ABA  EC63  F025         	call	_posicao_cursor_lcd
  3483                           
  3484                           ;main.c: 663: escreve_frase_ram_lcd(point_buff_gps_long);
  3485  001ABE  C0F9  F01C         	movff	_point_buff_gps_long,escreve_frase_ram_lcd@buffer
  3486  001AC2  C0FA  F01D         	movff	_point_buff_gps_long+1,escreve_frase_ram_lcd@buffer+1
  3487  001AC6  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3488                           
  3489                           ;main.c: 664: time_atualizacao = 2000;
  3490  001ACA  0E07               	movlw	7
  3491  001ACC  6E36               	movwf	(_time_atualizacao+1)^0,c
  3492  001ACE  0ED0               	movlw	208
  3493  001AD0  6E35               	movwf	_time_atualizacao^0,c
  3494  001AD2                     l11779:
  3495                           
  3496                           ;main.c: 665: };main.c: 668: if(last_state != 2)
  3497  001AD2  0E02               	movlw	2
  3498  001AD4  183B               	xorwf	troca_de_tela@last_state^0,w,c
  3499  001AD6  B4D8               	btfsc	status,2,c
  3500  001AD8  D03D               	goto	l11805
  3501                           
  3502                           ;main.c: 669: {;main.c: 670: state = 2;
  3503  001ADA  0E02               	movlw	2
  3504  001ADC  6E3C               	movwf	troca_de_tela@state^0,c
  3505                           
  3506                           ;main.c: 671: escreve_cmd_lcd(0b00000001);
  3507  001ADE  0E01               	movlw	1
  3508  001AE0  ECD1  F022         	call	_escreve_cmd_lcd
  3509                           
  3510                           ;main.c: 672: point_buff_gps_lat = Latitude();
  3511  001AE4  EC0F  F02A         	call	_Latitude	;wreg free
  3512  001AE8  C019  F033         	movff	?_Latitude,_point_buff_gps_lat
  3513  001AEC  C01A  F034         	movff	?_Latitude+1,_point_buff_gps_lat+1
  3514                           
  3515                           ;main.c: 673: point_buff_gps_long = Longitude();
  3516  001AF0  EC0A  F02A         	call	_Longitude	;wreg free
  3517  001AF4  C019  F0F9         	movff	?_Longitude,_point_buff_gps_long
  3518  001AF8  C01A  F0FA         	movff	?_Longitude+1,_point_buff_gps_long+1
  3519                           
  3520                           ;main.c: 674: posicao_cursor_lcd(1,0);
  3521  001AFC  0E00               	movlw	0
  3522  001AFE  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3523  001B00  0E01               	movlw	1
  3524  001B02  EC63  F025         	call	_posicao_cursor_lcd
  3525                           
  3526                           ;main.c: 675: escreve_frase_ram_lcd("lt:");
  3527  001B06  0E71               	movlw	low STR_25
  3528  001B08  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3529  001B0A  0E62               	movlw	high STR_25
  3530  001B0C  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3531  001B0E  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3532                           
  3533                           ;main.c: 676: posicao_cursor_lcd(1,4);
  3534  001B12  0E04               	movlw	4
  3535  001B14  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3536  001B16  0E01               	movlw	1
  3537  001B18  EC63  F025         	call	_posicao_cursor_lcd
  3538                           
  3539                           ;main.c: 677: escreve_frase_ram_lcd(point_buff_gps_lat);
  3540  001B1C  C033  F01C         	movff	_point_buff_gps_lat,escreve_frase_ram_lcd@buffer
  3541  001B20  C034  F01D         	movff	_point_buff_gps_lat+1,escreve_frase_ram_lcd@buffer+1
  3542  001B24  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3543                           
  3544                           ;main.c: 678: posicao_cursor_lcd(2,0);
  3545  001B28  0E00               	movlw	0
  3546  001B2A  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3547  001B2C  0E02               	movlw	2
  3548  001B2E  EC63  F025         	call	_posicao_cursor_lcd
  3549                           
  3550                           ;main.c: 679: escreve_frase_ram_lcd("lo:");
  3551  001B32  0E6D               	movlw	low STR_26
  3552  001B34  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3553  001B36  0E62               	movlw	high STR_26
  3554  001B38  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3555  001B3A  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3556                           
  3557                           ;main.c: 680: posicao_cursor_lcd(2,4);
  3558  001B3E  0E04               	movlw	4
  3559  001B40  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3560  001B42  0E02               	movlw	2
  3561  001B44  EC63  F025         	call	_posicao_cursor_lcd
  3562                           
  3563                           ;main.c: 681: escreve_frase_ram_lcd(point_buff_gps_long);
  3564  001B48  C0F9  F01C         	movff	_point_buff_gps_long,escreve_frase_ram_lcd@buffer
  3565  001B4C  C0FA  F01D         	movff	_point_buff_gps_long+1,escreve_frase_ram_lcd@buffer+1
  3566  001B50  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3567  001B54                     l11805:
  3568                           
  3569                           ;main.c: 682: };main.c: 683: last_state = 2;
  3570  001B54  0E02               	movlw	2
  3571  001B56  6E3B               	movwf	troca_de_tela@last_state^0,c
  3572  001B58                     l11807:
  3573                           
  3574                           ;main.c: 684: };main.c: 687: if((!PORTEbits.RE1 && state!=0) && !flag[2].point )
  3575  001B58  B284               	btfsc	132,1,c	;volatile
  3576  001B5A  D027               	goto	l11829
  3577  001B5C  503C               	movf	troca_de_tela@state^0,w,c
  3578  001B5E  B4D8               	btfsc	status,2,c
  3579  001B60  D024               	goto	l11829
  3580  001B62  0100               	movlb	0	; () banked
  3581  001B64  B1F8               	btfsc	(_flag+2)& (0+255),0,b
  3582  001B66  D021               	goto	l11829
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;main.c: 688: {;main.c: 689: if(last_state != 4)
  3586  001B68  0E04               	movlw	4
  3587  001B6A  183B               	xorwf	troca_de_tela@last_state^0,w,c
  3588  001B6C  B4D8               	btfsc	status,2,c
  3589  001B6E  D01B               	goto	l11827
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;main.c: 690: {;main.c: 691: escreve_cmd_lcd(0b00000001);
  3593  001B70  0E01               	movlw	1
  3594  001B72  ECD1  F022         	call	_escreve_cmd_lcd
  3595                           
  3596                           ;main.c: 692: state = 0;
  3597  001B76  0E00               	movlw	0
  3598  001B78  6E3C               	movwf	troca_de_tela@state^0,c
  3599                           
  3600                           ;main.c: 693: posicao_cursor_lcd(1,0);
  3601  001B7A  0E00               	movlw	0
  3602  001B7C  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3603  001B7E  0E01               	movlw	1
  3604  001B80  EC63  F025         	call	_posicao_cursor_lcd
  3605                           
  3606                           ;main.c: 694: escreve_frase_ram_lcd("B1:RPM B2:FENCE");
  3607  001B84  0E7E               	movlw	low STR_27
  3608  001B86  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3609  001B88  0E61               	movlw	high STR_27
  3610  001B8A  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3611  001B8C  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3612                           
  3613                           ;main.c: 695: posicao_cursor_lcd(2,0);
  3614  001B90  0E00               	movlw	0
  3615  001B92  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3616  001B94  0E02               	movlw	2
  3617  001B96  EC63  F025         	call	_posicao_cursor_lcd
  3618                           
  3619                           ;main.c: 696: escreve_frase_ram_lcd("B2:HOME");
  3620  001B9A  0E43               	movlw	low STR_28
  3621  001B9C  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3622  001B9E  0E62               	movlw	high STR_28
  3623  001BA0  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3624  001BA2  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3625  001BA6                     l11827:
  3626                           
  3627                           ;main.c: 697: };main.c: 698: last_state = 4;
  3628  001BA6  0E04               	movlw	4
  3629  001BA8  6E3B               	movwf	troca_de_tela@last_state^0,c
  3630  001BAA                     l11829:
  3631                           
  3632                           ;main.c: 699: };main.c: 701: if(!state && !flag[2].point)
  3633  001BAA  503C               	movf	troca_de_tela@state^0,w,c
  3634  001BAC  A4D8               	btfss	status,2,c
  3635  001BAE  0012               	return	
  3636  001BB0  0100               	movlb	0	; () banked
  3637  001BB2  B1F8               	btfsc	(_flag+2)& (0+255),0,b
  3638  001BB4  0012               	return	
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;main.c: 702: {;main.c: 703: if(last_state != 4)
  3642  001BB6  0E04               	movlw	4
  3643  001BB8  183B               	xorwf	troca_de_tela@last_state^0,w,c
  3644  001BBA  B4D8               	btfsc	status,2,c
  3645  001BBC  D019               	goto	l11841
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;main.c: 704: {;main.c: 705: escreve_cmd_lcd(0b00000001);
  3649  001BBE  0E01               	movlw	1
  3650  001BC0  ECD1  F022         	call	_escreve_cmd_lcd
  3651                           
  3652                           ;main.c: 706: posicao_cursor_lcd(1,0);
  3653  001BC4  0E00               	movlw	0
  3654  001BC6  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3655  001BC8  0E01               	movlw	1
  3656  001BCA  EC63  F025         	call	_posicao_cursor_lcd
  3657                           
  3658                           ;main.c: 707: escreve_frase_ram_lcd("B1:RPM  B2:FENCE");
  3659  001BCE  0E5C               	movlw	low STR_29
  3660  001BD0  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3661  001BD2  0E61               	movlw	high STR_29
  3662  001BD4  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3663  001BD6  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3664                           
  3665                           ;main.c: 708: posicao_cursor_lcd(2,0);
  3666  001BDA  0E00               	movlw	0
  3667  001BDC  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3668  001BDE  0E02               	movlw	2
  3669  001BE0  EC63  F025         	call	_posicao_cursor_lcd
  3670                           
  3671                           ;main.c: 709: escreve_frase_ram_lcd("B2:HOME");
  3672  001BE4  0E43               	movlw	low STR_28
  3673  001BE6  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3674  001BE8  0E62               	movlw	high STR_28
  3675  001BEA  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3676  001BEC  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3677  001BF0                     l11841:
  3678                           
  3679                           ;main.c: 710: };main.c: 711: last_state = 4;
  3680  001BF0  0E04               	movlw	4
  3681  001BF2  6E3B               	movwf	troca_de_tela@last_state^0,c
  3682  001BF4  0012               	return	
  3683  001BF6                     l1519:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;main.c: 716: if(flag[2].point || state == 3)
  3687  001BF6  B1F8               	btfsc	(_flag+2)& (0+255),0,b
  3688  001BF8  D004               	goto	u15160
  3689                           
  3690                           ; BSR set to: 0
  3691  001BFA  0E03               	movlw	3
  3692  001BFC  183C               	xorwf	troca_de_tela@state^0,w,c
  3693  001BFE  A4D8               	btfss	status,2,c
  3694  001C00  0012               	return	
  3695  001C02                     u15160:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;main.c: 717: {;main.c: 719: if(!time_atualizacao)
  3699  001C02  5035               	movf	_time_atualizacao^0,w,c
  3700  001C04  1036               	iorwf	(_time_atualizacao+1)^0,w,c
  3701  001C06  A4D8               	btfss	status,2,c
  3702  001C08  D026               	goto	l11855
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;main.c: 720: {;main.c: 721: posicao_cursor_lcd(2,7);
  3706  001C0A  0E07               	movlw	7
  3707  001C0C  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3708  001C0E  0E02               	movlw	2
  3709  001C10  EC63  F025         	call	_posicao_cursor_lcd
  3710                           
  3711                           ;main.c: 722: escreve_inteiro_lcd(flag[0].point);
  3712  001C14  0100               	movlb	0	; () banked
  3713  001C16  A1F6               	btfss	_flag& (0+255),0,b
  3714  001C18  D003               	goto	u15180
  3715  001C1A  6A30               	clrf	??_troca_de_tela^0,c
  3716  001C1C  2A30               	incf	??_troca_de_tela^0,f,c
  3717  001C1E  D001               	goto	u15188
  3718  001C20                     u15180:
  3719  001C20  6A30               	clrf	??_troca_de_tela^0,c
  3720  001C22                     u15188:
  3721  001C22  5030               	movf	??_troca_de_tela^0,w,c
  3722  001C24  6E2E               	movwf	escreve_inteiro_lcd@valor^0,c
  3723  001C26  6A2F               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3724  001C28  ECDC  F027         	call	_escreve_inteiro_lcd	;wreg free
  3725                           
  3726                           ;main.c: 723: posicao_cursor_lcd(2,9);
  3727  001C2C  0E09               	movlw	9
  3728  001C2E  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3729  001C30  0E02               	movlw	2
  3730  001C32  EC63  F025         	call	_posicao_cursor_lcd
  3731                           
  3732                           ;main.c: 724: escreve_inteiro_lcd(flag[1].point);
  3733  001C36  0100               	movlb	0	; () banked
  3734  001C38  A1F7               	btfss	(_flag+1)& (0+255),0,b
  3735  001C3A  D003               	goto	u15190
  3736  001C3C  6A30               	clrf	??_troca_de_tela^0,c
  3737  001C3E  2A30               	incf	??_troca_de_tela^0,f,c
  3738  001C40  D001               	goto	u15198
  3739  001C42                     u15190:
  3740  001C42  6A30               	clrf	??_troca_de_tela^0,c
  3741  001C44                     u15198:
  3742  001C44  5030               	movf	??_troca_de_tela^0,w,c
  3743  001C46  6E2E               	movwf	escreve_inteiro_lcd@valor^0,c
  3744  001C48  6A2F               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3745  001C4A  ECDC  F027         	call	_escreve_inteiro_lcd	;wreg free
  3746                           
  3747                           ;main.c: 725: time_atualizacao = 10000;
  3748  001C4E  0E27               	movlw	39
  3749  001C50  6E36               	movwf	(_time_atualizacao+1)^0,c
  3750  001C52  0E10               	movlw	16
  3751  001C54  6E35               	movwf	_time_atualizacao^0,c
  3752  001C56                     l11855:
  3753                           
  3754                           ;main.c: 726: };main.c: 728: if(last_state != 3)
  3755  001C56  0E03               	movlw	3
  3756  001C58  183B               	xorwf	troca_de_tela@last_state^0,w,c
  3757  001C5A  B4D8               	btfsc	status,2,c
  3758  001C5C  D048               	goto	l11881
  3759                           
  3760                           ;main.c: 729: {;main.c: 730: state = 3;
  3761  001C5E  0E03               	movlw	3
  3762  001C60  6E3C               	movwf	troca_de_tela@state^0,c
  3763                           
  3764                           ;main.c: 731: escreve_cmd_lcd(0b00000001);
  3765  001C62  0E01               	movlw	1
  3766  001C64  ECD1  F022         	call	_escreve_cmd_lcd
  3767                           
  3768                           ;main.c: 732: posicao_cursor_lcd(1,0);
  3769  001C68  0E00               	movlw	0
  3770  001C6A  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3771  001C6C  0E01               	movlw	1
  3772  001C6E  EC63  F025         	call	_posicao_cursor_lcd
  3773                           
  3774                           ;main.c: 733: escreve_frase_ram_lcd("REGIAO NEGADA");
  3775  001C72  0EDD               	movlw	low STR_31
  3776  001C74  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3777  001C76  0E61               	movlw	high STR_31
  3778  001C78  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3779  001C7A  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3780                           
  3781                           ;main.c: 734: posicao_cursor_lcd(2,0);
  3782  001C7E  0E00               	movlw	0
  3783  001C80  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3784  001C82  0E02               	movlw	2
  3785  001C84  EC63  F025         	call	_posicao_cursor_lcd
  3786                           
  3787                           ;main.c: 735: escreve_frase_ram_lcd("LO-LT:");
  3788  001C88  0E4B               	movlw	low STR_32
  3789  001C8A  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3790  001C8C  0E62               	movlw	high STR_32
  3791  001C8E  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3792  001C90  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3793                           
  3794                           ;main.c: 736: posicao_cursor_lcd(2,7);
  3795  001C94  0E07               	movlw	7
  3796  001C96  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3797  001C98  0E02               	movlw	2
  3798  001C9A  EC63  F025         	call	_posicao_cursor_lcd
  3799                           
  3800                           ;main.c: 737: escreve_inteiro_lcd(flag[0].point);
  3801  001C9E  0100               	movlb	0	; () banked
  3802  001CA0  A1F6               	btfss	_flag& (0+255),0,b
  3803  001CA2  D003               	goto	u15210
  3804  001CA4  6A30               	clrf	??_troca_de_tela^0,c
  3805  001CA6  2A30               	incf	??_troca_de_tela^0,f,c
  3806  001CA8  D001               	goto	u15218
  3807  001CAA                     u15210:
  3808  001CAA  6A30               	clrf	??_troca_de_tela^0,c
  3809  001CAC                     u15218:
  3810  001CAC  5030               	movf	??_troca_de_tela^0,w,c
  3811  001CAE  6E2E               	movwf	escreve_inteiro_lcd@valor^0,c
  3812  001CB0  6A2F               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3813  001CB2  ECDC  F027         	call	_escreve_inteiro_lcd	;wreg free
  3814                           
  3815                           ;main.c: 738: posicao_cursor_lcd(2,8);
  3816  001CB6  0E08               	movlw	8
  3817  001CB8  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3818  001CBA  0E02               	movlw	2
  3819  001CBC  EC63  F025         	call	_posicao_cursor_lcd
  3820                           
  3821                           ;main.c: 739: escreve_frase_ram_lcd("-");
  3822  001CC0  0E7C               	movlw	low STR_33
  3823  001CC2  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3824  001CC4  0E62               	movlw	high STR_33
  3825  001CC6  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3826  001CC8  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  3827                           
  3828                           ;main.c: 740: posicao_cursor_lcd(2,9);
  3829  001CCC  0E09               	movlw	9
  3830  001CCE  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
  3831  001CD0  0E02               	movlw	2
  3832  001CD2  EC63  F025         	call	_posicao_cursor_lcd
  3833                           
  3834                           ;main.c: 741: escreve_inteiro_lcd(flag[1].point);
  3835  001CD6  0100               	movlb	0	; () banked
  3836  001CD8  A1F7               	btfss	(_flag+1)& (0+255),0,b
  3837  001CDA  D003               	goto	u15220
  3838  001CDC  6A30               	clrf	??_troca_de_tela^0,c
  3839  001CDE  2A30               	incf	??_troca_de_tela^0,f,c
  3840  001CE0  D001               	goto	u15228
  3841  001CE2                     u15220:
  3842  001CE2  6A30               	clrf	??_troca_de_tela^0,c
  3843  001CE4                     u15228:
  3844  001CE4  5030               	movf	??_troca_de_tela^0,w,c
  3845  001CE6  6E2E               	movwf	escreve_inteiro_lcd@valor^0,c
  3846  001CE8  6A2F               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3847  001CEA  ECDC  F027         	call	_escreve_inteiro_lcd	;wreg free
  3848  001CEE                     l11881:
  3849                           
  3850                           ;main.c: 742: };main.c: 743: last_state = 3;
  3851  001CEE  0E03               	movlw	3
  3852  001CF0  6E3B               	movwf	troca_de_tela@last_state^0,c
  3853  001CF2  0012               	return	
  3854  001CF4                     l11885:
  3855                           
  3856                           ; BSR set to: 0
  3857  001CF4  B1F8               	btfsc	(_flag+2)& (0+255),0,b
  3858  001CF6  D002               	goto	u15230
  3859  001CF8  0E01               	movlw	1
  3860  001CFA  D001               	goto	u15240
  3861  001CFC                     u15230:
  3862  001CFC  0E00               	movlw	0
  3863  001CFE                     u15240:
  3864  001CFE  6E30               	movwf	??_troca_de_tela^0,c
  3865  001D00  6A31               	clrf	(??_troca_de_tela+1)^0,c
  3866                           
  3867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3868                           ; Switch size 1, requested type "simple"
  3869                           ; Number of cases is 1, Range of values is 0 to 0
  3870                           ; switch strategies available:
  3871                           ; Name         Instructions Cycles
  3872                           ; simple_byte            4     3 (average)
  3873                           ;	Chosen strategy is simple_byte
  3874  001D02  5031               	movf	(??_troca_de_tela+1)^0,w,c
  3875  001D04  0A00               	xorlw	0	; case 0
  3876  001D06  A4D8               	btfss	status,2,c
  3877  001D08  D776               	goto	l1519
  3878                           
  3879                           ; BSR set to: 0
  3880                           ; Switch size 1, requested type "simple"
  3881                           ; Number of cases is 1, Range of values is 1 to 1
  3882                           ; switch strategies available:
  3883                           ; Name         Instructions Cycles
  3884                           ; simple_byte            4     3 (average)
  3885                           ;	Chosen strategy is simple_byte
  3886  001D0A  5030               	movf	??_troca_de_tela^0,w,c
  3887  001D0C  0A01               	xorlw	1	; case 1
  3888  001D0E  B4D8               	btfsc	status,2,c
  3889  001D10  D664               	goto	l1499
  3890  001D12  D771               	goto	l1519
  3891  001D14                     __end_of_troca_de_tela:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _disparo_gravacao *****************
  3895 ;; Defined at:
  3896 ;;		line 596 in file "main.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 3F/0
  3907 ;;		On exit  : 3F/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3910 ;;      Params:         0       0       0       0       0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3913 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:   16
  3917 ;; This function calls:
  3918 ;;		_escrita_sdcard
  3919 ;; This function is called by:
  3920 ;;		_inicializa_tarefas
  3921 ;;		_escalonador
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text13
  3926  005364                     __ptext13:
  3927                           	callstack 0
  3928  005364                     _disparo_gravacao:
  3929                           	callstack 13
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;main.c: 598: if(!time_sd)
  3933                           
  3934                           ;incstack = 0
  3935  005364  5037               	movf	_time_sd^0,w,c
  3936  005366  1038               	iorwf	(_time_sd+1)^0,w,c
  3937  005368  A4D8               	btfss	status,2,c
  3938  00536A  0012               	return	
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;main.c: 599: {;main.c: 602: escrita_sdcard();
  3942  00536C  EC3C  F01C         	call	_escrita_sdcard	;wreg free
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;main.c: 603: time_sd = 1000;
  3946  005370  0E03               	movlw	3
  3947  005372  6E38               	movwf	(_time_sd+1)^0,c
  3948  005374  0EE8               	movlw	232
  3949  005376  6E37               	movwf	_time_sd^0,c
  3950                           
  3951                           ; BSR set to: 0
  3952  005378  0012               	return		;funcret
  3953  00537A                     __end_of_disparo_gravacao:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _verifica_dados_operacionais *****************
  3957 ;; Defined at:
  3958 ;;		line 577 in file "main.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		None
  3967 ;; Tracked objects:
  3968 ;;		On entry : 3F/0
  3969 ;;		On exit  : 3F/0
  3970 ;;		Unchanged: 3F/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3975 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    3
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_inicializa_tarefas
  3983 ;;		_escalonador
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text14
  3988  00544C                     __ptext14:
  3989                           	callstack 0
  3990  00544C                     _verifica_dados_operacionais:
  3991                           	callstack 26
  3992                           
  3993                           ; BSR set to: 0
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;incstack = 0
  3997  00544C  0012               	return		;funcret
  3998  00544E                     __end_of_verifica_dados_operacionais:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _verifica_fence_externo *****************
  4002 ;; Defined at:
  4003 ;;		line 269 in file "main.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;		None
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  fence_diff_l   48    0[BANK0 ] unsigned char [12][4]
  4008 ;;  fence_diff_l   44   48[BANK0 ] unsigned char [11][4]
  4009 ;;  temp_buff_lo   12   92[BANK0 ] unsigned char [12]
  4010 ;;  temp_buff_la   11  104[BANK0 ] unsigned char [11]
  4011 ;;  temp_var_deg    4  119[BANK0 ] unsigned long 
  4012 ;;  p_buff_gps_l    2    0        PTR unsigned char 
  4013 ;;		 -> rawLongitude(13), 
  4014 ;;  p_buff_gps_l    2    0        PTR unsigned char 
  4015 ;;		 -> rawLatitude(13), 
  4016 ;;  i               1  128[BANK0 ] unsigned char 
  4017 ;;  point           1  127[BANK0 ] unsigned char 
  4018 ;;  count           1  126[BANK0 ] unsigned char 
  4019 ;;  j               1  125[BANK0 ] unsigned char 
  4020 ;;  point_index_    1  124[BANK0 ] unsigned char 
  4021 ;;  point_index_    1  123[BANK0 ] unsigned char 
  4022 ;;  count_index     1    0        unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 3F/0
  4029 ;;		On exit  : 3F/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0
  4033 ;;      Locals:         0     129       0       0       0       0       0       0       0
  4034 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4035 ;;      Totals:         6     129       0       0       0       0       0       0       0
  4036 ;;Total ram usage:      135 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    5
  4039 ;; This function calls:
  4040 ;;		_Latitude
  4041 ;;		_Longitude
  4042 ;;		_atoi
  4043 ;; This function is called by:
  4044 ;;		_inicializa_tarefas
  4045 ;;		_escalonador
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text15
  4050  000012                     __ptext15:
  4051                           	callstack 0
  4052  000012                     _verifica_fence_externo:
  4053                           	callstack 24
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;main.c: 271: unsigned char fence_diff_lat[4][11] = {"-2342.07112", "-2342.07112", "-234
      +                          2.11784", "-2342.11784"};
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;incstack = 0
  4060  000012  EE22  F030         	lfsr	2,verifica_fence_externo@F3645
  4061  000016  EE10  F090         	lfsr	1,verifica_fence_externo@fence_diff_lat
  4062  00001A  0E2B               	movlw	43
  4063  00001C                     u14271:
  4064  00001C  CFDB FFE3          	movff	plusw2,plusw1
  4065  000020  06E8               	decf	wreg,f,c
  4066  000022  E2FC               	bc	u14271
  4067                           
  4068                           ;main.c: 272: unsigned char fence_diff_long[4][12] = {"-04629.73477", "-04629.68601", "-
      +                          04629.68601", "-04629.73477"};
  4069  000024  EE22  F000         	lfsr	2,verifica_fence_externo@F3648
  4070  000028  EE10  F060         	lfsr	1,verifica_fence_externo@fence_diff_long
  4071  00002C  0E2F               	movlw	47
  4072  00002E                     u14281:
  4073  00002E  CFDB FFE3          	movff	plusw2,plusw1
  4074  000032  06E8               	decf	wreg,f,c
  4075  000034  E2FC               	bc	u14281
  4076                           
  4077                           ;main.c: 275: unsigned char *p_buff_gps_lat, *p_buff_gps_long;;main.c: 276: unsigned cha
      +                          r i, j, count, count_index;;main.c: 277: unsigned char point, point_index_lat ,point_ind
      +                          ex_long;;main.c: 278: unsigned long int temp_var_deg;;main.c: 279: unsigned char temp_bu
      +                          ff_lat[11] = "-2342.07112";
  4078  000036  EE22  F068         	lfsr	2,verifica_fence_externo@F3660
  4079  00003A  EE10  F0C8         	lfsr	1,verifica_fence_externo@temp_buff_lat
  4080  00003E  0E0A               	movlw	10
  4081  000040                     u14291:
  4082  000040  CFDB FFE3          	movff	plusw2,plusw1
  4083  000044  06E8               	decf	wreg,f,c
  4084  000046  E2FC               	bc	u14291
  4085                           
  4086                           ;main.c: 280: unsigned char temp_buff_long[12] = "-04629.73477";
  4087  000048  EE22  F05C         	lfsr	2,verifica_fence_externo@F3662
  4088  00004C  EE10  F0BC         	lfsr	1,verifica_fence_externo@temp_buff_long
  4089  000050  0E0B               	movlw	11
  4090  000052                     u14301:
  4091  000052  CFDB FFE3          	movff	plusw2,plusw1
  4092  000056  06E8               	decf	wreg,f,c
  4093  000058  E2FC               	bc	u14301
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;main.c: 281: count = 0;
  4097  00005A  0E00               	movlw	0
  4098  00005C  6FDE               	movwf	verifica_fence_externo@count& (0+255),b
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;main.c: 282: point = 0;
  4102  00005E  0E00               	movlw	0
  4103  000060  6FDF               	movwf	verifica_fence_externo@point& (0+255),b
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;main.c: 283: point_index_lat = 0;
  4107  000062  0E00               	movlw	0
  4108  000064  6FDB               	movwf	verifica_fence_externo@point_index_lat& (0+255),b
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;main.c: 284: point_index_long = 0;
  4112  000066  0E00               	movlw	0
  4113  000068  6FDC               	movwf	verifica_fence_externo@point_index_long& (0+255),b
  4114                           
  4115                           ; BSR set to: 0
  4116                           
  4117                           ; BSR set to: 0
  4118  00006A  EC0F  F02A         	call	_Latitude	;wreg free
  4119  00006E  EC0A  F02A         	call	_Longitude	;wreg free
  4120                           
  4121                           ;main.c: 301: while(point<4)
  4122  000072  D13D               	goto	l11547
  4123  000074                     l11461:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;main.c: 302: {;main.c: 304: for(i=1; i<6; i++)
  4127  000074  0E01               	movlw	1
  4128  000076  6FE0               	movwf	verifica_fence_externo@i& (0+255),b
  4129  000078                     l11467:
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;main.c: 305: {;main.c: 306: if(point == 0 || point == 2)
  4133  000078  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4134  00007A  B4D8               	btfsc	status,2,c
  4135  00007C  D004               	goto	u14320
  4136                           
  4137                           ; BSR set to: 0
  4138  00007E  0E02               	movlw	2
  4139  000080  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4140  000082  A4D8               	btfss	status,2,c
  4141  000084  D047               	goto	l11491
  4142  000086                     u14320:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;main.c: 307: {;main.c: 308: if(point == 2 && !point_index_long)
  4146  000086  0E02               	movlw	2
  4147  000088  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4148  00008A  A4D8               	btfss	status,2,c
  4149  00008C  D003               	goto	l11477
  4150                           
  4151                           ; BSR set to: 0
  4152  00008E  51DC               	movf	verifica_fence_externo@point_index_long& (0+255),w,b
  4153  000090  B4D8               	btfsc	status,2,c
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;main.c: 309: {;main.c: 310: point_index_long++;
  4157  000092  2BDC               	incf	verifica_fence_externo@point_index_long& (0+255),f,b
  4158  000094                     l11477:
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;main.c: 311: };main.c: 312: for(j= 0; i < 6; j++)
  4162  000094  0E00               	movlw	0
  4163  000096  6FDD               	movwf	verifica_fence_externo@j& (0+255),b
  4164  000098                     l11479:
  4165                           
  4166                           ; BSR set to: 0
  4167  000098  0E05               	movlw	5
  4168  00009A  65E0               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4169  00009C  D001               	goto	l11483
  4170  00009E  D03A               	goto	l11491
  4171  0000A0                     l11483:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;main.c: 313: {;main.c: 314: poligono_ext[point_index_long].point_long_deg[j] = temp_buf
      +                          f_long[i];
  4175  0000A0  51E0               	movf	verifica_fence_externo@i& (0+255),w,b
  4176  0000A2  0FBC               	addlw	low verifica_fence_externo@temp_buff_long
  4177  0000A4  6ED9               	movwf	fsr2l,c
  4178  0000A6  6ADA               	clrf	fsr2h,c
  4179  0000A8  51DC               	movf	verifica_fence_externo@point_index_long& (0+255),w,b
  4180  0000AA  0D3E               	mullw	62
  4181  0000AC  0E20               	movlw	low _poligono_ext
  4182  0000AE  6E26               	movwf	??_verifica_fence_externo^0,c
  4183  0000B0  0E01               	movlw	high _poligono_ext
  4184  0000B2  6E27               	movwf	(??_verifica_fence_externo+1)^0,c
  4185  0000B4  0E10               	movlw	16
  4186  0000B6  2626               	addwf	??_verifica_fence_externo^0,f,c
  4187  0000B8  0E00               	movlw	0
  4188  0000BA  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4189  0000BC  50F3               	movf	243,w,c
  4190  0000BE  2626               	addwf	??_verifica_fence_externo^0,f,c
  4191  0000C0  50F4               	movf	244,w,c
  4192  0000C2  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4193  0000C4  51DD               	movf	verifica_fence_externo@j& (0+255),w,b
  4194  0000C6  2426               	addwf	??_verifica_fence_externo^0,w,c
  4195  0000C8  6EE1               	movwf	fsr1l,c
  4196  0000CA  0E00               	movlw	0
  4197  0000CC  2027               	addwfc	(??_verifica_fence_externo+1)^0,w,c
  4198  0000CE  6EE2               	movwf	fsr1h,c
  4199  0000D0  CFDF FFE7          	movff	indf2,indf1
  4200                           
  4201                           ;main.c: 315: poligono_ext[point_index_long].fence_long_deg[j] = fence_diff_long[point][
      +                          i];
  4202  0000D4  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4203  0000D6  0D0C               	mullw	12
  4204  0000D8  50F3               	movf	243,w,c
  4205  0000DA  0F60               	addlw	low verifica_fence_externo@fence_diff_long
  4206  0000DC  25E0               	addwf	verifica_fence_externo@i& (0+255),w,b
  4207  0000DE  6ED9               	movwf	fsr2l,c
  4208  0000E0  6ADA               	clrf	fsr2h,c
  4209  0000E2  51DC               	movf	verifica_fence_externo@point_index_long& (0+255),w,b
  4210  0000E4  0D3E               	mullw	62
  4211  0000E6  0E20               	movlw	low _poligono_ext
  4212  0000E8  6E26               	movwf	??_verifica_fence_externo^0,c
  4213  0000EA  0E01               	movlw	high _poligono_ext
  4214  0000EC  6E27               	movwf	(??_verifica_fence_externo+1)^0,c
  4215  0000EE  0E05               	movlw	5
  4216  0000F0  2626               	addwf	??_verifica_fence_externo^0,f,c
  4217  0000F2  0E00               	movlw	0
  4218  0000F4  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4219  0000F6  50F3               	movf	243,w,c
  4220  0000F8  2626               	addwf	??_verifica_fence_externo^0,f,c
  4221  0000FA  50F4               	movf	244,w,c
  4222  0000FC  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4223  0000FE  51DD               	movf	verifica_fence_externo@j& (0+255),w,b
  4224  000100  2426               	addwf	??_verifica_fence_externo^0,w,c
  4225  000102  6EE1               	movwf	fsr1l,c
  4226  000104  0E00               	movlw	0
  4227  000106  2027               	addwfc	(??_verifica_fence_externo+1)^0,w,c
  4228  000108  6EE2               	movwf	fsr1h,c
  4229  00010A  CFDF FFE7          	movff	indf2,indf1
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;main.c: 317: i++;
  4233  00010E  2BE0               	incf	verifica_fence_externo@i& (0+255),f,b
  4234                           
  4235                           ; BSR set to: 0
  4236  000110  2BDD               	incf	verifica_fence_externo@j& (0+255),f,b
  4237  000112  D7C2               	goto	l11479
  4238  000114                     l11491:
  4239                           
  4240                           ; BSR set to: 0
  4241  000114  2BE0               	incf	verifica_fence_externo@i& (0+255),f,b
  4242                           
  4243                           ; BSR set to: 0
  4244  000116  0E05               	movlw	5
  4245  000118  65E0               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4246  00011A  D7AE               	goto	l11467
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;main.c: 318: };main.c: 320: };main.c: 322: };main.c: 324: for(i=1; i<5; i++)
  4250  00011C  0E01               	movlw	1
  4251  00011E  6FE0               	movwf	verifica_fence_externo@i& (0+255),b
  4252  000120                     l11501:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;main.c: 325: {;main.c: 326: if(point == 0 || point == 2)
  4256  000120  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4257  000122  B4D8               	btfsc	status,2,c
  4258  000124  D004               	goto	u14380
  4259                           
  4260                           ; BSR set to: 0
  4261  000126  0E02               	movlw	2
  4262  000128  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4263  00012A  A4D8               	btfss	status,2,c
  4264  00012C  D043               	goto	l11525
  4265  00012E                     u14380:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;main.c: 327: {;main.c: 329: if(point == 2 && !point_index_lat)
  4269  00012E  0E02               	movlw	2
  4270  000130  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4271  000132  A4D8               	btfss	status,2,c
  4272  000134  D003               	goto	l11511
  4273                           
  4274                           ; BSR set to: 0
  4275  000136  51DB               	movf	verifica_fence_externo@point_index_lat& (0+255),w,b
  4276  000138  B4D8               	btfsc	status,2,c
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;main.c: 330: {;main.c: 331: point_index_lat++;
  4280  00013A  2BDB               	incf	verifica_fence_externo@point_index_lat& (0+255),f,b
  4281  00013C                     l11511:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;main.c: 332: };main.c: 335: for(j= 0; i < 5; j++)
  4285  00013C  0E00               	movlw	0
  4286  00013E  6FDD               	movwf	verifica_fence_externo@j& (0+255),b
  4287  000140                     l11513:
  4288                           
  4289                           ; BSR set to: 0
  4290  000140  0E04               	movlw	4
  4291  000142  65E0               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4292  000144  D001               	goto	l11517
  4293  000146  D036               	goto	l11525
  4294  000148                     l11517:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;main.c: 336: {;main.c: 337: poligono_ext[point_index_lat].point_lat_deg[j] = temp_buff_
      +                          lat[i];
  4298  000148  51E0               	movf	verifica_fence_externo@i& (0+255),w,b
  4299  00014A  0FC8               	addlw	low verifica_fence_externo@temp_buff_lat
  4300  00014C  6ED9               	movwf	fsr2l,c
  4301  00014E  6ADA               	clrf	fsr2h,c
  4302  000150  51DB               	movf	verifica_fence_externo@point_index_lat& (0+255),w,b
  4303  000152  0D3E               	mullw	62
  4304  000154  0E20               	movlw	low _poligono_ext
  4305  000156  6E26               	movwf	??_verifica_fence_externo^0,c
  4306  000158  0E01               	movlw	high _poligono_ext
  4307  00015A  6E27               	movwf	(??_verifica_fence_externo+1)^0,c
  4308  00015C  0E0B               	movlw	11
  4309  00015E  2626               	addwf	??_verifica_fence_externo^0,f,c
  4310  000160  0E00               	movlw	0
  4311  000162  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4312  000164  50F3               	movf	243,w,c
  4313  000166  2626               	addwf	??_verifica_fence_externo^0,f,c
  4314  000168  50F4               	movf	244,w,c
  4315  00016A  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4316  00016C  51DD               	movf	verifica_fence_externo@j& (0+255),w,b
  4317  00016E  2426               	addwf	??_verifica_fence_externo^0,w,c
  4318  000170  6EE1               	movwf	fsr1l,c
  4319  000172  0E00               	movlw	0
  4320  000174  2027               	addwfc	(??_verifica_fence_externo+1)^0,w,c
  4321  000176  6EE2               	movwf	fsr1h,c
  4322  000178  CFDF FFE7          	movff	indf2,indf1
  4323                           
  4324                           ;main.c: 338: poligono_ext[point_index_lat].fence_lat_deg[j] = fence_diff_lat[point][i];
  4325  00017C  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4326  00017E  0D0B               	mullw	11
  4327  000180  50F3               	movf	243,w,c
  4328  000182  0F90               	addlw	low verifica_fence_externo@fence_diff_lat
  4329  000184  25E0               	addwf	verifica_fence_externo@i& (0+255),w,b
  4330  000186  6ED9               	movwf	fsr2l,c
  4331  000188  6ADA               	clrf	fsr2h,c
  4332  00018A  51DB               	movf	verifica_fence_externo@point_index_lat& (0+255),w,b
  4333  00018C  0D3E               	mullw	62
  4334  00018E  0E20               	movlw	low _poligono_ext
  4335  000190  6E26               	movwf	??_verifica_fence_externo^0,c
  4336  000192  0E01               	movlw	high _poligono_ext
  4337  000194  6E27               	movwf	(??_verifica_fence_externo+1)^0,c
  4338  000196  50F3               	movf	243,w,c
  4339  000198  2626               	addwf	??_verifica_fence_externo^0,f,c
  4340  00019A  50F4               	movf	244,w,c
  4341  00019C  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4342  00019E  51DD               	movf	verifica_fence_externo@j& (0+255),w,b
  4343  0001A0  2426               	addwf	??_verifica_fence_externo^0,w,c
  4344  0001A2  6EE1               	movwf	fsr1l,c
  4345  0001A4  0E00               	movlw	0
  4346  0001A6  2027               	addwfc	(??_verifica_fence_externo+1)^0,w,c
  4347  0001A8  6EE2               	movwf	fsr1h,c
  4348  0001AA  CFDF FFE7          	movff	indf2,indf1
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;main.c: 339: i++;
  4352  0001AE  2BE0               	incf	verifica_fence_externo@i& (0+255),f,b
  4353                           
  4354                           ; BSR set to: 0
  4355  0001B0  2BDD               	incf	verifica_fence_externo@j& (0+255),f,b
  4356  0001B2  D7C6               	goto	l11513
  4357  0001B4                     l11525:
  4358                           
  4359                           ; BSR set to: 0
  4360  0001B4  2BE0               	incf	verifica_fence_externo@i& (0+255),f,b
  4361                           
  4362                           ; BSR set to: 0
  4363  0001B6  0E04               	movlw	4
  4364  0001B8  65E0               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4365  0001BA  D7B2               	goto	l11501
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;main.c: 340: };main.c: 342: };main.c: 343: };main.c: 347: if(point == 0 || point == 2)
  4369  0001BC  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4370  0001BE  B4D8               	btfsc	status,2,c
  4371  0001C0  D004               	goto	u14440
  4372                           
  4373                           ; BSR set to: 0
  4374  0001C2  0E02               	movlw	2
  4375  0001C4  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4376  0001C6  A4D8               	btfss	status,2,c
  4377  0001C8  D091               	goto	l11545
  4378  0001CA                     u14440:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;main.c: 348: {;main.c: 349: temp_var_deg = atoi(poligono_ext[count].point_lat_deg);
  4382  0001CA  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4383  0001CC  0D3E               	mullw	62
  4384  0001CE  0E2B               	movlw	low (_poligono_ext+11)
  4385  0001D0  24F3               	addwf	243,w,c
  4386  0001D2  6E1F               	movwf	atoi@s^0,c
  4387  0001D4  0E01               	movlw	high (_poligono_ext+11)
  4388  0001D6  20F4               	addwfc	prodh,w,c
  4389  0001D8  6E20               	movwf	(atoi@s+1)^0,c
  4390  0001DA  EC8E  F01F         	call	_atoi	;wreg free
  4391  0001DE  C01F  F0D7         	movff	?_atoi,verifica_fence_externo@temp_var_deg
  4392  0001E2  C020  F0D8         	movff	?_atoi+1,verifica_fence_externo@temp_var_deg+1
  4393  0001E6  0100               	movlb	0	; () banked
  4394  0001E8  0E00               	movlw	0
  4395  0001EA  BFD8               	btfsc	(verifica_fence_externo@temp_var_deg+1)& (0+255),7,b
  4396  0001EC  0EFF               	movlw	-1
  4397  0001EE  6FD9               	movwf	(verifica_fence_externo@temp_var_deg+2)& (0+255),b
  4398  0001F0  6FDA               	movwf	(verifica_fence_externo@temp_var_deg+3)& (0+255),b
  4399                           
  4400                           ;main.c: 350: poligono_ext[count].diff_lat_deg = atoi(poligono_ext[count].fence_lat_deg)
      +                          ;
  4401  0001F2  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4402  0001F4  0D3E               	mullw	62
  4403  0001F6  0E20               	movlw	low _poligono_ext
  4404  0001F8  24F3               	addwf	243,w,c
  4405  0001FA  6E1F               	movwf	atoi@s^0,c
  4406  0001FC  0E01               	movlw	high _poligono_ext
  4407  0001FE  20F4               	addwfc	prodh,w,c
  4408  000200  6E20               	movwf	(atoi@s+1)^0,c
  4409  000202  EC8E  F01F         	call	_atoi	;wreg free
  4410  000206  C01F  F026         	movff	?_atoi,??_verifica_fence_externo
  4411  00020A  C020  F027         	movff	?_atoi+1,??_verifica_fence_externo+1
  4412  00020E  0E00               	movlw	0
  4413  000210  BE27               	btfsc	(??_verifica_fence_externo+1)^0,7,c
  4414  000212  0EFF               	movlw	255
  4415  000214  6E28               	movwf	(??_verifica_fence_externo+2)^0,c
  4416  000216  6E29               	movwf	(??_verifica_fence_externo+3)^0,c
  4417  000218  0100               	movlb	0	; () banked
  4418  00021A  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4419  00021C  0D3E               	mullw	62
  4420  00021E  0E36               	movlw	low (_poligono_ext+22)
  4421  000220  24F3               	addwf	243,w,c
  4422  000222  6ED9               	movwf	fsr2l,c
  4423  000224  0E01               	movlw	high (_poligono_ext+22)
  4424  000226  20F4               	addwfc	prodh,w,c
  4425  000228  6EDA               	movwf	fsr2h,c
  4426  00022A  C026  FFDE         	movff	??_verifica_fence_externo,postinc2
  4427  00022E  C027  FFDE         	movff	??_verifica_fence_externo+1,postinc2
  4428  000232  C028  FFDE         	movff	??_verifica_fence_externo+2,postinc2
  4429  000236  C029  FFDE         	movff	??_verifica_fence_externo+3,postinc2
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;main.c: 351: poligono_ext[count].diff_lat_deg -= temp_var_deg;
  4433  00023A  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4434  00023C  0D3E               	mullw	62
  4435  00023E  0E36               	movlw	low (_poligono_ext+22)
  4436  000240  24F3               	addwf	243,w,c
  4437  000242  6ED9               	movwf	fsr2l,c
  4438  000244  0E01               	movlw	high (_poligono_ext+22)
  4439  000246  20F4               	addwfc	prodh,w,c
  4440  000248  6EDA               	movwf	fsr2h,c
  4441  00024A  51D7               	movf	verifica_fence_externo@temp_var_deg& (0+255),w,b
  4442  00024C  5EDE               	subwf	postinc2,f,c
  4443  00024E  51D8               	movf	(verifica_fence_externo@temp_var_deg+1)& (0+255),w,b
  4444  000250  5ADE               	subwfb	postinc2,f,c
  4445  000252  51D9               	movf	(verifica_fence_externo@temp_var_deg+2)& (0+255),w,b
  4446  000254  5ADE               	subwfb	postinc2,f,c
  4447  000256  51DA               	movf	(verifica_fence_externo@temp_var_deg+3)& (0+255),w,b
  4448  000258  5ADE               	subwfb	postinc2,f,c
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;main.c: 352: temp_var_deg = atoi(poligono_ext[count].point_long_deg);
  4452  00025A  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4453  00025C  0D3E               	mullw	62
  4454  00025E  0E30               	movlw	low (_poligono_ext+16)
  4455  000260  24F3               	addwf	243,w,c
  4456  000262  6E1F               	movwf	atoi@s^0,c
  4457  000264  0E01               	movlw	high (_poligono_ext+16)
  4458  000266  20F4               	addwfc	prodh,w,c
  4459  000268  6E20               	movwf	(atoi@s+1)^0,c
  4460  00026A  EC8E  F01F         	call	_atoi	;wreg free
  4461  00026E  C01F  F0D7         	movff	?_atoi,verifica_fence_externo@temp_var_deg
  4462  000272  C020  F0D8         	movff	?_atoi+1,verifica_fence_externo@temp_var_deg+1
  4463  000276  0100               	movlb	0	; () banked
  4464  000278  0E00               	movlw	0
  4465  00027A  BFD8               	btfsc	(verifica_fence_externo@temp_var_deg+1)& (0+255),7,b
  4466  00027C  0EFF               	movlw	-1
  4467  00027E  6FD9               	movwf	(verifica_fence_externo@temp_var_deg+2)& (0+255),b
  4468  000280  6FDA               	movwf	(verifica_fence_externo@temp_var_deg+3)& (0+255),b
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;main.c: 353: poligono_ext[count].diff_long_deg = atoi(poligono_ext[count].fence_long_de
      +                          g);
  4472  000282  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4473  000284  0D3E               	mullw	62
  4474  000286  0E25               	movlw	low (_poligono_ext+5)
  4475  000288  24F3               	addwf	243,w,c
  4476  00028A  6E1F               	movwf	atoi@s^0,c
  4477  00028C  0E01               	movlw	high (_poligono_ext+5)
  4478  00028E  20F4               	addwfc	prodh,w,c
  4479  000290  6E20               	movwf	(atoi@s+1)^0,c
  4480  000292  EC8E  F01F         	call	_atoi	;wreg free
  4481  000296  C01F  F026         	movff	?_atoi,??_verifica_fence_externo
  4482  00029A  C020  F027         	movff	?_atoi+1,??_verifica_fence_externo+1
  4483  00029E  0E00               	movlw	0
  4484  0002A0  BE27               	btfsc	(??_verifica_fence_externo+1)^0,7,c
  4485  0002A2  0EFF               	movlw	255
  4486  0002A4  6E28               	movwf	(??_verifica_fence_externo+2)^0,c
  4487  0002A6  6E29               	movwf	(??_verifica_fence_externo+3)^0,c
  4488  0002A8  0100               	movlb	0	; () banked
  4489  0002AA  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4490  0002AC  0D3E               	mullw	62
  4491  0002AE  0E3A               	movlw	low (_poligono_ext+26)
  4492  0002B0  24F3               	addwf	243,w,c
  4493  0002B2  6ED9               	movwf	fsr2l,c
  4494  0002B4  0E01               	movlw	high (_poligono_ext+26)
  4495  0002B6  20F4               	addwfc	prodh,w,c
  4496  0002B8  6EDA               	movwf	fsr2h,c
  4497  0002BA  C026  FFDE         	movff	??_verifica_fence_externo,postinc2
  4498  0002BE  C027  FFDE         	movff	??_verifica_fence_externo+1,postinc2
  4499  0002C2  C028  FFDE         	movff	??_verifica_fence_externo+2,postinc2
  4500  0002C6  C029  FFDE         	movff	??_verifica_fence_externo+3,postinc2
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;main.c: 354: poligono_ext[count].diff_long_deg -= temp_var_deg;
  4504  0002CA  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4505  0002CC  0D3E               	mullw	62
  4506  0002CE  0E3A               	movlw	low (_poligono_ext+26)
  4507  0002D0  24F3               	addwf	243,w,c
  4508  0002D2  6ED9               	movwf	fsr2l,c
  4509  0002D4  0E01               	movlw	high (_poligono_ext+26)
  4510  0002D6  20F4               	addwfc	prodh,w,c
  4511  0002D8  6EDA               	movwf	fsr2h,c
  4512  0002DA  51D7               	movf	verifica_fence_externo@temp_var_deg& (0+255),w,b
  4513  0002DC  5EDE               	subwf	postinc2,f,c
  4514  0002DE  51D8               	movf	(verifica_fence_externo@temp_var_deg+1)& (0+255),w,b
  4515  0002E0  5ADE               	subwfb	postinc2,f,c
  4516  0002E2  51D9               	movf	(verifica_fence_externo@temp_var_deg+2)& (0+255),w,b
  4517  0002E4  5ADE               	subwfb	postinc2,f,c
  4518  0002E6  51DA               	movf	(verifica_fence_externo@temp_var_deg+3)& (0+255),w,b
  4519  0002E8  5ADE               	subwfb	postinc2,f,c
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;main.c: 356: count++;
  4523  0002EA  2BDE               	incf	verifica_fence_externo@count& (0+255),f,b
  4524  0002EC                     l11545:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;main.c: 357: };main.c: 358: point++;
  4528  0002EC  2BDF               	incf	verifica_fence_externo@point& (0+255),f,b
  4529  0002EE                     l11547:
  4530  0002EE  0E03               	movlw	3
  4531  0002F0  0100               	movlb	0	; () banked
  4532  0002F2  65DF               	cpfsgt	verifica_fence_externo@point& (0+255),b
  4533  0002F4  D6BF               	goto	l11461
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;main.c: 359: };main.c: 365: point = 0;
  4537  0002F6  0E00               	movlw	0
  4538  0002F8  6FDF               	movwf	verifica_fence_externo@point& (0+255),b
  4539                           
  4540                           ;main.c: 366: count = 0;
  4541  0002FA  0E00               	movlw	0
  4542  0002FC  6FDE               	movwf	verifica_fence_externo@count& (0+255),b
  4543                           
  4544                           ;main.c: 367: point_index_lat = 0;
  4545  0002FE  0E00               	movlw	0
  4546  000300  6FDB               	movwf	verifica_fence_externo@point_index_lat& (0+255),b
  4547                           
  4548                           ;main.c: 368: point_index_long = 0;
  4549  000302  0E00               	movlw	0
  4550  000304  6FDC               	movwf	verifica_fence_externo@point_index_long& (0+255),b
  4551                           
  4552                           ;main.c: 372: while(point<4)
  4553  000306  D13D               	goto	l11637
  4554  000308                     l11551:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;main.c: 373: {;main.c: 374: for(i=6; i<11; i++)
  4558  000308  0E06               	movlw	6
  4559  00030A  6FE0               	movwf	verifica_fence_externo@i& (0+255),b
  4560  00030C                     l11557:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;main.c: 375: {;main.c: 376: if(point == 0 || point == 2)
  4564  00030C  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4565  00030E  B4D8               	btfsc	status,2,c
  4566  000310  D004               	goto	u14470
  4567                           
  4568                           ; BSR set to: 0
  4569  000312  0E02               	movlw	2
  4570  000314  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4571  000316  A4D8               	btfss	status,2,c
  4572  000318  D056               	goto	l11583
  4573  00031A                     u14470:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;main.c: 377: {;main.c: 378: if(point == 2 && !point_index_lat)
  4577  00031A  0E02               	movlw	2
  4578  00031C  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4579  00031E  A4D8               	btfss	status,2,c
  4580  000320  D003               	goto	l11567
  4581                           
  4582                           ; BSR set to: 0
  4583  000322  51DB               	movf	verifica_fence_externo@point_index_lat& (0+255),w,b
  4584  000324  B4D8               	btfsc	status,2,c
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;main.c: 379: {;main.c: 380: point_index_lat++;
  4588  000326  2BDB               	incf	verifica_fence_externo@point_index_lat& (0+255),f,b
  4589  000328                     l11567:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;main.c: 381: };main.c: 382: if(fence_diff_lat[point][i] != temp_buff_lat[i])
  4593  000328  51E0               	movf	verifica_fence_externo@i& (0+255),w,b
  4594  00032A  0FC8               	addlw	low verifica_fence_externo@temp_buff_lat
  4595  00032C  6ED9               	movwf	fsr2l,c
  4596  00032E  6ADA               	clrf	fsr2h,c
  4597  000330  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4598  000332  0D0B               	mullw	11
  4599  000334  50F3               	movf	243,w,c
  4600  000336  0F90               	addlw	low verifica_fence_externo@fence_diff_lat
  4601  000338  25E0               	addwf	verifica_fence_externo@i& (0+255),w,b
  4602  00033A  6EE1               	movwf	fsr1l,c
  4603  00033C  6AE2               	clrf	fsr1h,c
  4604  00033E  50DE               	movf	postinc2,w,c
  4605  000340  18E6               	xorwf	postinc1,w,c
  4606  000342  B4D8               	btfsc	status,2,c
  4607  000344  D042               	goto	l11585
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;main.c: 383: {;main.c: 384: for(j= 0; i < 11; j++)
  4611  000346  0E00               	movlw	0
  4612  000348  6FDD               	movwf	verifica_fence_externo@j& (0+255),b
  4613  00034A                     l11571:
  4614                           
  4615                           ; BSR set to: 0
  4616  00034A  0E0A               	movlw	10
  4617  00034C  65E0               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4618  00034E  D001               	goto	l11575
  4619  000350  D03C               	goto	l11585
  4620  000352                     l11575:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;main.c: 385: {;main.c: 386: poligono_ext[point_index_lat].fence_lat_min[j] = fence_diff
      +                          _lat[point][i];
  4624  000352  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4625  000354  0D0B               	mullw	11
  4626  000356  50F3               	movf	243,w,c
  4627  000358  0F90               	addlw	low verifica_fence_externo@fence_diff_lat
  4628  00035A  25E0               	addwf	verifica_fence_externo@i& (0+255),w,b
  4629  00035C  6ED9               	movwf	fsr2l,c
  4630  00035E  6ADA               	clrf	fsr2h,c
  4631  000360  51DB               	movf	verifica_fence_externo@point_index_lat& (0+255),w,b
  4632  000362  0D3E               	mullw	62
  4633  000364  0E20               	movlw	low _poligono_ext
  4634  000366  6E26               	movwf	??_verifica_fence_externo^0,c
  4635  000368  0E01               	movlw	high _poligono_ext
  4636  00036A  6E27               	movwf	(??_verifica_fence_externo+1)^0,c
  4637  00036C  0E1E               	movlw	30
  4638  00036E  2626               	addwf	??_verifica_fence_externo^0,f,c
  4639  000370  0E00               	movlw	0
  4640  000372  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4641  000374  50F3               	movf	243,w,c
  4642  000376  2626               	addwf	??_verifica_fence_externo^0,f,c
  4643  000378  50F4               	movf	244,w,c
  4644  00037A  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4645  00037C  51DD               	movf	verifica_fence_externo@j& (0+255),w,b
  4646  00037E  2426               	addwf	??_verifica_fence_externo^0,w,c
  4647  000380  6EE1               	movwf	fsr1l,c
  4648  000382  0E00               	movlw	0
  4649  000384  2027               	addwfc	(??_verifica_fence_externo+1)^0,w,c
  4650  000386  6EE2               	movwf	fsr1h,c
  4651  000388  CFDF FFE7          	movff	indf2,indf1
  4652                           
  4653                           ;main.c: 387: poligono_ext[point_index_lat].point_lat_min[j] = temp_buff_lat[i];
  4654  00038C  51E0               	movf	verifica_fence_externo@i& (0+255),w,b
  4655  00038E  0FC8               	addlw	low verifica_fence_externo@temp_buff_lat
  4656  000390  6ED9               	movwf	fsr2l,c
  4657  000392  6ADA               	clrf	fsr2h,c
  4658  000394  51DB               	movf	verifica_fence_externo@point_index_lat& (0+255),w,b
  4659  000396  0D3E               	mullw	62
  4660  000398  0E20               	movlw	low _poligono_ext
  4661  00039A  6E26               	movwf	??_verifica_fence_externo^0,c
  4662  00039C  0E01               	movlw	high _poligono_ext
  4663  00039E  6E27               	movwf	(??_verifica_fence_externo+1)^0,c
  4664  0003A0  0E2A               	movlw	42
  4665  0003A2  2626               	addwf	??_verifica_fence_externo^0,f,c
  4666  0003A4  0E00               	movlw	0
  4667  0003A6  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4668  0003A8  50F3               	movf	243,w,c
  4669  0003AA  2626               	addwf	??_verifica_fence_externo^0,f,c
  4670  0003AC  50F4               	movf	244,w,c
  4671  0003AE  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4672  0003B0  51DD               	movf	verifica_fence_externo@j& (0+255),w,b
  4673  0003B2  2426               	addwf	??_verifica_fence_externo^0,w,c
  4674  0003B4  6EE1               	movwf	fsr1l,c
  4675  0003B6  0E00               	movlw	0
  4676  0003B8  2027               	addwfc	(??_verifica_fence_externo+1)^0,w,c
  4677  0003BA  6EE2               	movwf	fsr1h,c
  4678  0003BC  CFDF FFE7          	movff	indf2,indf1
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;main.c: 388: i++;
  4682  0003C0  2BE0               	incf	verifica_fence_externo@i& (0+255),f,b
  4683                           
  4684                           ; BSR set to: 0
  4685  0003C2  2BDD               	incf	verifica_fence_externo@j& (0+255),f,b
  4686  0003C4  D7C2               	goto	l11571
  4687  0003C6                     l11583:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;main.c: 394: else;main.c: 395: {;main.c: 396: i = 11;
  4691  0003C6  0E0B               	movlw	11
  4692  0003C8  6FE0               	movwf	verifica_fence_externo@i& (0+255),b
  4693  0003CA                     l11585:
  4694                           
  4695                           ; BSR set to: 0
  4696  0003CA  2BE0               	incf	verifica_fence_externo@i& (0+255),f,b
  4697                           
  4698                           ; BSR set to: 0
  4699  0003CC  0E0A               	movlw	10
  4700  0003CE  65E0               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4701  0003D0  D79D               	goto	l11557
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;main.c: 397: };main.c: 398: };main.c: 402: for(i=7; i<12; i++)
  4705  0003D2  0E07               	movlw	7
  4706  0003D4  6FE0               	movwf	verifica_fence_externo@i& (0+255),b
  4707  0003D6                     l11595:
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;main.c: 403: {;main.c: 404: if(point == 0 || point == 2)
  4711  0003D6  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4712  0003D8  B4D8               	btfsc	status,2,c
  4713  0003DA  D004               	goto	u14540
  4714                           
  4715                           ; BSR set to: 0
  4716  0003DC  0E02               	movlw	2
  4717  0003DE  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4718  0003E0  A4D8               	btfss	status,2,c
  4719  0003E2  D056               	goto	l11621
  4720  0003E4                     u14540:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;main.c: 405: {;main.c: 406: if(point == 2 && !point_index_long)
  4724  0003E4  0E02               	movlw	2
  4725  0003E6  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4726  0003E8  A4D8               	btfss	status,2,c
  4727  0003EA  D003               	goto	l11605
  4728                           
  4729                           ; BSR set to: 0
  4730  0003EC  51DC               	movf	verifica_fence_externo@point_index_long& (0+255),w,b
  4731  0003EE  B4D8               	btfsc	status,2,c
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;main.c: 407: {;main.c: 408: point_index_long++;
  4735  0003F0  2BDC               	incf	verifica_fence_externo@point_index_long& (0+255),f,b
  4736  0003F2                     l11605:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;main.c: 409: };main.c: 412: if(fence_diff_long[point][i] != temp_buff_long[i])
  4740  0003F2  51E0               	movf	verifica_fence_externo@i& (0+255),w,b
  4741  0003F4  0FBC               	addlw	low verifica_fence_externo@temp_buff_long
  4742  0003F6  6ED9               	movwf	fsr2l,c
  4743  0003F8  6ADA               	clrf	fsr2h,c
  4744  0003FA  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4745  0003FC  0D0C               	mullw	12
  4746  0003FE  50F3               	movf	243,w,c
  4747  000400  0F60               	addlw	low verifica_fence_externo@fence_diff_long
  4748  000402  25E0               	addwf	verifica_fence_externo@i& (0+255),w,b
  4749  000404  6EE1               	movwf	fsr1l,c
  4750  000406  6AE2               	clrf	fsr1h,c
  4751  000408  50DE               	movf	postinc2,w,c
  4752  00040A  18E6               	xorwf	postinc1,w,c
  4753  00040C  B4D8               	btfsc	status,2,c
  4754  00040E  D042               	goto	l11623
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;main.c: 413: {;main.c: 414: for(j= 0; i < 12; j++)
  4758  000410  0E00               	movlw	0
  4759  000412  6FDD               	movwf	verifica_fence_externo@j& (0+255),b
  4760  000414                     l11609:
  4761                           
  4762                           ; BSR set to: 0
  4763  000414  0E0B               	movlw	11
  4764  000416  65E0               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4765  000418  D001               	goto	l11613
  4766  00041A  D03C               	goto	l11623
  4767  00041C                     l11613:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;main.c: 415: {;main.c: 416: poligono_ext[point_index_long].fence_long_min[j] = fence_di
      +                          ff_long[point][i];
  4771  00041C  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4772  00041E  0D0C               	mullw	12
  4773  000420  50F3               	movf	243,w,c
  4774  000422  0F60               	addlw	low verifica_fence_externo@fence_diff_long
  4775  000424  25E0               	addwf	verifica_fence_externo@i& (0+255),w,b
  4776  000426  6ED9               	movwf	fsr2l,c
  4777  000428  6ADA               	clrf	fsr2h,c
  4778  00042A  51DC               	movf	verifica_fence_externo@point_index_long& (0+255),w,b
  4779  00042C  0D3E               	mullw	62
  4780  00042E  0E20               	movlw	low _poligono_ext
  4781  000430  6E26               	movwf	??_verifica_fence_externo^0,c
  4782  000432  0E01               	movlw	high _poligono_ext
  4783  000434  6E27               	movwf	(??_verifica_fence_externo+1)^0,c
  4784  000436  0E24               	movlw	36
  4785  000438  2626               	addwf	??_verifica_fence_externo^0,f,c
  4786  00043A  0E00               	movlw	0
  4787  00043C  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4788  00043E  50F3               	movf	243,w,c
  4789  000440  2626               	addwf	??_verifica_fence_externo^0,f,c
  4790  000442  50F4               	movf	244,w,c
  4791  000444  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4792  000446  51DD               	movf	verifica_fence_externo@j& (0+255),w,b
  4793  000448  2426               	addwf	??_verifica_fence_externo^0,w,c
  4794  00044A  6EE1               	movwf	fsr1l,c
  4795  00044C  0E00               	movlw	0
  4796  00044E  2027               	addwfc	(??_verifica_fence_externo+1)^0,w,c
  4797  000450  6EE2               	movwf	fsr1h,c
  4798  000452  CFDF FFE7          	movff	indf2,indf1
  4799                           
  4800                           ;main.c: 417: poligono_ext[point_index_long].point_long_min[j] = temp_buff_long[i];
  4801  000456  51E0               	movf	verifica_fence_externo@i& (0+255),w,b
  4802  000458  0FBC               	addlw	low verifica_fence_externo@temp_buff_long
  4803  00045A  6ED9               	movwf	fsr2l,c
  4804  00045C  6ADA               	clrf	fsr2h,c
  4805  00045E  51DC               	movf	verifica_fence_externo@point_index_long& (0+255),w,b
  4806  000460  0D3E               	mullw	62
  4807  000462  0E20               	movlw	low _poligono_ext
  4808  000464  6E26               	movwf	??_verifica_fence_externo^0,c
  4809  000466  0E01               	movlw	high _poligono_ext
  4810  000468  6E27               	movwf	(??_verifica_fence_externo+1)^0,c
  4811  00046A  0E30               	movlw	48
  4812  00046C  2626               	addwf	??_verifica_fence_externo^0,f,c
  4813  00046E  0E00               	movlw	0
  4814  000470  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4815  000472  50F3               	movf	243,w,c
  4816  000474  2626               	addwf	??_verifica_fence_externo^0,f,c
  4817  000476  50F4               	movf	244,w,c
  4818  000478  2227               	addwfc	(??_verifica_fence_externo+1)^0,f,c
  4819  00047A  51DD               	movf	verifica_fence_externo@j& (0+255),w,b
  4820  00047C  2426               	addwf	??_verifica_fence_externo^0,w,c
  4821  00047E  6EE1               	movwf	fsr1l,c
  4822  000480  0E00               	movlw	0
  4823  000482  2027               	addwfc	(??_verifica_fence_externo+1)^0,w,c
  4824  000484  6EE2               	movwf	fsr1h,c
  4825  000486  CFDF FFE7          	movff	indf2,indf1
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;main.c: 418: i++;
  4829  00048A  2BE0               	incf	verifica_fence_externo@i& (0+255),f,b
  4830                           
  4831                           ; BSR set to: 0
  4832  00048C  2BDD               	incf	verifica_fence_externo@j& (0+255),f,b
  4833  00048E  D7C2               	goto	l11609
  4834  000490                     l11621:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;main.c: 422: else;main.c: 423: {;main.c: 424: i = 11;
  4838  000490  0E0B               	movlw	11
  4839  000492  6FE0               	movwf	verifica_fence_externo@i& (0+255),b
  4840  000494                     l11623:
  4841                           
  4842                           ; BSR set to: 0
  4843  000494  2BE0               	incf	verifica_fence_externo@i& (0+255),f,b
  4844                           
  4845                           ; BSR set to: 0
  4846  000496  0E0B               	movlw	11
  4847  000498  65E0               	cpfsgt	verifica_fence_externo@i& (0+255),b
  4848  00049A  D79D               	goto	l11595
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;main.c: 425: };main.c: 427: };main.c: 430: if(point == 0 || point == 2)
  4852  00049C  51DF               	movf	verifica_fence_externo@point& (0+255),w,b
  4853  00049E  B4D8               	btfsc	status,2,c
  4854  0004A0  D004               	goto	u14610
  4855                           
  4856                           ; BSR set to: 0
  4857  0004A2  0E02               	movlw	2
  4858  0004A4  19DF               	xorwf	verifica_fence_externo@point& (0+255),w,b
  4859  0004A6  A4D8               	btfss	status,2,c
  4860  0004A8  D06B               	goto	l11635
  4861  0004AA                     u14610:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;main.c: 431: {;main.c: 432: poligono_ext[count].diff_lat_min = (atoi(poligono_ext[count
      +                          ].fence_lat_min)) - (atoi(poligono_ext[count].point_lat_min));
  4865  0004AA  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4866  0004AC  0D3E               	mullw	62
  4867  0004AE  0E3E               	movlw	low (_poligono_ext+30)
  4868  0004B0  24F3               	addwf	243,w,c
  4869  0004B2  6E1F               	movwf	atoi@s^0,c
  4870  0004B4  0E01               	movlw	high (_poligono_ext+30)
  4871  0004B6  20F4               	addwfc	prodh,w,c
  4872  0004B8  6E20               	movwf	(atoi@s+1)^0,c
  4873  0004BA  EC8E  F01F         	call	_atoi	;wreg free
  4874  0004BE  C01F  F026         	movff	?_atoi,??_verifica_fence_externo
  4875  0004C2  C020  F027         	movff	?_atoi+1,??_verifica_fence_externo+1
  4876  0004C6  0100               	movlb	0	; () banked
  4877  0004C8  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4878  0004CA  0D3E               	mullw	62
  4879  0004CC  0E4A               	movlw	low (_poligono_ext+42)
  4880  0004CE  24F3               	addwf	243,w,c
  4881  0004D0  6E1F               	movwf	atoi@s^0,c
  4882  0004D2  0E01               	movlw	high (_poligono_ext+42)
  4883  0004D4  20F4               	addwfc	prodh,w,c
  4884  0004D6  6E20               	movwf	(atoi@s+1)^0,c
  4885  0004D8  EC8E  F01F         	call	_atoi	;wreg free
  4886  0004DC  501F               	movf	?_atoi^0,w,c
  4887  0004DE  5C26               	subwf	??_verifica_fence_externo^0,w,c
  4888  0004E0  6E28               	movwf	(??_verifica_fence_externo+2)^0,c
  4889  0004E2  5020               	movf	(?_atoi+1)^0,w,c
  4890  0004E4  5827               	subwfb	(??_verifica_fence_externo+1)^0,w,c
  4891  0004E6  6E29               	movwf	(??_verifica_fence_externo+3)^0,c
  4892  0004E8  6A2A               	clrf	(??_verifica_fence_externo+4)^0,c
  4893  0004EA  BE29               	btfsc	(??_verifica_fence_externo+3)^0,7,c
  4894  0004EC  062A               	decf	(??_verifica_fence_externo+4)^0,f,c
  4895  0004EE  502A               	movf	(??_verifica_fence_externo+4)^0,w,c
  4896  0004F0  6E2B               	movwf	(??_verifica_fence_externo+5)^0,c
  4897  0004F2  0100               	movlb	0	; () banked
  4898  0004F4  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4899  0004F6  0D3E               	mullw	62
  4900  0004F8  0E56               	movlw	low (_poligono_ext+54)
  4901  0004FA  24F3               	addwf	243,w,c
  4902  0004FC  6ED9               	movwf	fsr2l,c
  4903  0004FE  0E01               	movlw	high (_poligono_ext+54)
  4904  000500  20F4               	addwfc	prodh,w,c
  4905  000502  6EDA               	movwf	fsr2h,c
  4906  000504  C028  FFDE         	movff	??_verifica_fence_externo+2,postinc2
  4907  000508  C029  FFDE         	movff	??_verifica_fence_externo+3,postinc2
  4908  00050C  C02A  FFDE         	movff	??_verifica_fence_externo+4,postinc2
  4909  000510  C02B  FFDE         	movff	??_verifica_fence_externo+5,postinc2
  4910                           
  4911                           ;main.c: 433: poligono_ext[count].diff_long_min = (atoi(poligono_ext[count].fence_long_m
      +                          in)) - (atoi(poligono_ext[count].point_long_min));
  4912  000514  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4913  000516  0D3E               	mullw	62
  4914  000518  0E44               	movlw	low (_poligono_ext+36)
  4915  00051A  24F3               	addwf	243,w,c
  4916  00051C  6E1F               	movwf	atoi@s^0,c
  4917  00051E  0E01               	movlw	high (_poligono_ext+36)
  4918  000520  20F4               	addwfc	prodh,w,c
  4919  000522  6E20               	movwf	(atoi@s+1)^0,c
  4920  000524  EC8E  F01F         	call	_atoi	;wreg free
  4921  000528  C01F  F026         	movff	?_atoi,??_verifica_fence_externo
  4922  00052C  C020  F027         	movff	?_atoi+1,??_verifica_fence_externo+1
  4923  000530  0100               	movlb	0	; () banked
  4924  000532  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4925  000534  0D3E               	mullw	62
  4926  000536  0E50               	movlw	low (_poligono_ext+48)
  4927  000538  24F3               	addwf	243,w,c
  4928  00053A  6E1F               	movwf	atoi@s^0,c
  4929  00053C  0E01               	movlw	high (_poligono_ext+48)
  4930  00053E  20F4               	addwfc	prodh,w,c
  4931  000540  6E20               	movwf	(atoi@s+1)^0,c
  4932  000542  EC8E  F01F         	call	_atoi	;wreg free
  4933  000546  501F               	movf	?_atoi^0,w,c
  4934  000548  5C26               	subwf	??_verifica_fence_externo^0,w,c
  4935  00054A  6E28               	movwf	(??_verifica_fence_externo+2)^0,c
  4936  00054C  5020               	movf	(?_atoi+1)^0,w,c
  4937  00054E  5827               	subwfb	(??_verifica_fence_externo+1)^0,w,c
  4938  000550  6E29               	movwf	(??_verifica_fence_externo+3)^0,c
  4939  000552  6A2A               	clrf	(??_verifica_fence_externo+4)^0,c
  4940  000554  BE29               	btfsc	(??_verifica_fence_externo+3)^0,7,c
  4941  000556  062A               	decf	(??_verifica_fence_externo+4)^0,f,c
  4942  000558  502A               	movf	(??_verifica_fence_externo+4)^0,w,c
  4943  00055A  6E2B               	movwf	(??_verifica_fence_externo+5)^0,c
  4944  00055C  0100               	movlb	0	; () banked
  4945  00055E  51DE               	movf	verifica_fence_externo@count& (0+255),w,b
  4946  000560  0D3E               	mullw	62
  4947  000562  0E5A               	movlw	low (_poligono_ext+58)
  4948  000564  24F3               	addwf	243,w,c
  4949  000566  6ED9               	movwf	fsr2l,c
  4950  000568  0E01               	movlw	high (_poligono_ext+58)
  4951  00056A  20F4               	addwfc	prodh,w,c
  4952  00056C  6EDA               	movwf	fsr2h,c
  4953  00056E  C028  FFDE         	movff	??_verifica_fence_externo+2,postinc2
  4954  000572  C029  FFDE         	movff	??_verifica_fence_externo+3,postinc2
  4955  000576  C02A  FFDE         	movff	??_verifica_fence_externo+4,postinc2
  4956  00057A  C02B  FFDE         	movff	??_verifica_fence_externo+5,postinc2
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;main.c: 434: count++;
  4960  00057E  2BDE               	incf	verifica_fence_externo@count& (0+255),f,b
  4961  000580                     l11635:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;main.c: 435: };main.c: 437: point++;
  4965  000580  2BDF               	incf	verifica_fence_externo@point& (0+255),f,b
  4966  000582                     l11637:
  4967                           
  4968                           ; BSR set to: 0
  4969  000582  0E03               	movlw	3
  4970  000584  65DF               	cpfsgt	verifica_fence_externo@point& (0+255),b
  4971  000586  D6C0               	goto	l11551
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;main.c: 440: point = 0;
  4975  000588  0E00               	movlw	0
  4976  00058A  6FDF               	movwf	verifica_fence_externo@point& (0+255),b
  4977                           
  4978                           ;main.c: 446: switch(temp_buff_long[0])
  4979  00058C  D053               	goto	l11679
  4980  00058E                     l11641:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;main.c: 449: if(;main.c: 450: ((poligono_ext[0].diff_long_min >= 0 &&;main.c: 451: poli
      +                          gono_ext[1].diff_long_min <= 0) &&;main.c: 453: (poligono_ext[0].diff_long_deg >= 0 &&;m
      +                          ain.c: 454: poligono_ext[1].diff_long_deg <= 0)))
  4984  00058E  0101               	movlb	1	; () banked
  4985  000590  BF5D               	btfsc	(_poligono_ext+61)& (0+255),7,b
  4986  000592  D017               	goto	l11651
  4987                           
  4988                           ; BSR set to: 1
  4989  000594  BF9B               	btfsc	(_poligono_ext+123)& (0+255),7,b
  4990  000596  D007               	goto	u14640
  4991  000598  519B               	movf	(_poligono_ext+123)& (0+255),w,b
  4992  00059A  119A               	iorwf	(_poligono_ext+122)& (0+255),w,b
  4993  00059C  1199               	iorwf	(_poligono_ext+121)& (0+255),w,b
  4994  00059E  E111               	bnz	l11651
  4995  0005A0  0598               	decf	(_poligono_ext+120)& (0+255),w,b
  4996  0005A2  B0D8               	btfsc	status,0,c
  4997  0005A4  D00E               	goto	l11651
  4998  0005A6                     u14640:
  4999                           
  5000                           ; BSR set to: 1
  5001  0005A6  BF3D               	btfsc	(_poligono_ext+29)& (0+255),7,b
  5002  0005A8  D00C               	goto	l11651
  5003                           
  5004                           ; BSR set to: 1
  5005  0005AA  BF7B               	btfsc	(_poligono_ext+91)& (0+255),7,b
  5006  0005AC  D007               	goto	u14660
  5007  0005AE  517B               	movf	(_poligono_ext+91)& (0+255),w,b
  5008  0005B0  117A               	iorwf	(_poligono_ext+90)& (0+255),w,b
  5009  0005B2  1179               	iorwf	(_poligono_ext+89)& (0+255),w,b
  5010  0005B4  E106               	bnz	l11651
  5011  0005B6  0578               	decf	(_poligono_ext+88)& (0+255),w,b
  5012  0005B8  B0D8               	btfsc	status,0,c
  5013  0005BA  D003               	goto	l11651
  5014  0005BC                     u14660:
  5015                           
  5016                           ; BSR set to: 1
  5017                           ;main.c: 455: {;main.c: 456: flag[0].point = 0;
  5018  0005BC  0100               	movlb	0	; () banked
  5019  0005BE  91F6               	bcf	_flag& (0+255),0,b
  5020                           
  5021                           ;main.c: 457: }
  5022  0005C0  D091               	goto	l11719
  5023  0005C2                     l11651:
  5024                           
  5025                           ; BSR set to: 1
  5026                           ;main.c: 458: else if((poligono_ext[0].diff_long_min == 0 ||;main.c: 459: poligono_ext[1
      +                          ].diff_long_min == 0 ) &&;main.c: 462: (poligono_ext[0].diff_long_deg == 0 ||;main.c: 46
      +                          3: poligono_ext[1].diff_long_deg == 0))
  5027  0005C2  515A               	movf	(_poligono_ext+58)& (0+255),w,b
  5028  0005C4  115B               	iorwf	(_poligono_ext+59)& (0+255),w,b
  5029  0005C6  115C               	iorwf	(_poligono_ext+60)& (0+255),w,b
  5030  0005C8  115D               	iorwf	(_poligono_ext+61)& (0+255),w,b
  5031  0005CA  B4D8               	btfsc	status,2,c
  5032  0005CC  D006               	goto	u14680
  5033  0005CE                     u14670:
  5034                           
  5035                           ; BSR set to: 1
  5036  0005CE  5198               	movf	(_poligono_ext+120)& (0+255),w,b
  5037  0005D0  1199               	iorwf	(_poligono_ext+121)& (0+255),w,b
  5038  0005D2  119A               	iorwf	(_poligono_ext+122)& (0+255),w,b
  5039  0005D4  119B               	iorwf	(_poligono_ext+123)& (0+255),w,b
  5040  0005D6  A4D8               	btfss	status,2,c
  5041  0005D8  D00C               	goto	l1444
  5042  0005DA                     u14680:
  5043                           
  5044                           ; BSR set to: 1
  5045  0005DA  513A               	movf	(_poligono_ext+26)& (0+255),w,b
  5046  0005DC  113B               	iorwf	(_poligono_ext+27)& (0+255),w,b
  5047  0005DE  113C               	iorwf	(_poligono_ext+28)& (0+255),w,b
  5048  0005E0  113D               	iorwf	(_poligono_ext+29)& (0+255),w,b
  5049  0005E2  B4D8               	btfsc	status,2,c
  5050  0005E4  D7EB               	goto	u14660
  5051                           
  5052                           ; BSR set to: 1
  5053  0005E6  5178               	movf	(_poligono_ext+88)& (0+255),w,b
  5054  0005E8  1179               	iorwf	(_poligono_ext+89)& (0+255),w,b
  5055  0005EA  117A               	iorwf	(_poligono_ext+90)& (0+255),w,b
  5056  0005EC  117B               	iorwf	(_poligono_ext+91)& (0+255),w,b
  5057  0005EE  B4D8               	btfsc	status,2,c
  5058  0005F0  D7E5               	goto	u14660
  5059  0005F2                     l1444:
  5060                           
  5061                           ; BSR set to: 1
  5062                           ;main.c: 467: else;main.c: 468: {;main.c: 469: flag[0].point = 1;
  5063  0005F2  0100               	movlb	0	; () banked
  5064  0005F4  81F6               	bsf	_flag& (0+255),0,b
  5065  0005F6  D076               	goto	l11719
  5066  0005F8                     l11659:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;main.c: 474: if(;main.c: 475: (poligono_ext[0].diff_long_min <= 0 &&;main.c: 476: polig
      +                          ono_ext[1].diff_long_min >= 0 ) &&;main.c: 477: (poligono_ext[0].diff_lat_deg <= 0 &&;ma
      +                          in.c: 478: poligono_ext[1].diff_lat_deg >= 0))
  5070  0005F8  0101               	movlb	1	; () banked
  5071  0005FA  BF5D               	btfsc	(_poligono_ext+61)& (0+255),7,b
  5072  0005FC  D007               	goto	u14710
  5073  0005FE  515D               	movf	(_poligono_ext+61)& (0+255),w,b
  5074  000600  115C               	iorwf	(_poligono_ext+60)& (0+255),w,b
  5075  000602  115B               	iorwf	(_poligono_ext+59)& (0+255),w,b
  5076  000604  E110               	bnz	l11669
  5077  000606  055A               	decf	(_poligono_ext+58)& (0+255),w,b
  5078  000608  B0D8               	btfsc	status,0,c
  5079  00060A  D00D               	goto	l11669
  5080  00060C                     u14710:
  5081                           
  5082                           ; BSR set to: 1
  5083  00060C  BF9B               	btfsc	(_poligono_ext+123)& (0+255),7,b
  5084  00060E  D00B               	goto	l11669
  5085                           
  5086                           ; BSR set to: 1
  5087  000610  BF39               	btfsc	(_poligono_ext+25)& (0+255),7,b
  5088  000612  D007               	goto	u14730
  5089  000614  5139               	movf	(_poligono_ext+25)& (0+255),w,b
  5090  000616  1138               	iorwf	(_poligono_ext+24)& (0+255),w,b
  5091  000618  1137               	iorwf	(_poligono_ext+23)& (0+255),w,b
  5092  00061A  E105               	bnz	l11669
  5093  00061C  0536               	decf	(_poligono_ext+22)& (0+255),w,b
  5094  00061E  B0D8               	btfsc	status,0,c
  5095  000620  D002               	goto	l11669
  5096  000622                     u14730:
  5097                           
  5098                           ; BSR set to: 1
  5099  000622  AF77               	btfss	(_poligono_ext+87)& (0+255),7,b
  5100  000624  D7CB               	goto	u14660
  5101  000626                     l11669:
  5102                           
  5103                           ; BSR set to: 1
  5104                           ;main.c: 482: else if((poligono_ext[0].diff_long_min == 0 ||;main.c: 483: poligono_ext[1
      +                          ].diff_long_min == 0) &&;main.c: 484: (poligono_ext[0].diff_long_deg == 0 ||;main.c: 485
      +                          : poligono_ext[1].diff_long_deg == 0))
  5105  000626  515A               	movf	(_poligono_ext+58)& (0+255),w,b
  5106  000628  115B               	iorwf	(_poligono_ext+59)& (0+255),w,b
  5107  00062A  115C               	iorwf	(_poligono_ext+60)& (0+255),w,b
  5108  00062C  115D               	iorwf	(_poligono_ext+61)& (0+255),w,b
  5109  00062E  A4D8               	btfss	status,2,c
  5110  000630  D7CE               	goto	u14670
  5111                           
  5112                           ; BSR set to: 1
  5113  000632  D7D3               	goto	u14680
  5114  000634                     l11679:
  5115                           
  5116                           ; BSR set to: 0
  5117  000634  51BC               	movf	verifica_fence_externo@temp_buff_long& (0+255),w,b
  5118                           
  5119                           ; Switch size 1, requested type "simple"
  5120                           ; Number of cases is 1, Range of values is 45 to 45
  5121                           ; switch strategies available:
  5122                           ; Name         Instructions Cycles
  5123                           ; simple_byte            4     3 (average)
  5124                           ;	Chosen strategy is simple_byte
  5125  000636  0A2D               	xorlw	45	; case 45
  5126  000638  B4D8               	btfsc	status,2,c
  5127  00063A  D7A9               	goto	l11641
  5128  00063C  D7DD               	goto	l11659
  5129  00063E                     l11681:
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;main.c: 500: if(;main.c: 501: (;main.c: 502: poligono_ext[0].diff_lat_min <= 0 &&;main.
      +                          c: 503: poligono_ext[1].diff_lat_min >= 0) &&;main.c: 505: (poligono_ext[0].diff_lat_deg
      +                           <= 0 &&;main.c: 506: poligono_ext[1].diff_lat_deg >= 0))
  5133  00063E  0101               	movlb	1	; () banked
  5134  000640  BF59               	btfsc	(_poligono_ext+57)& (0+255),7,b
  5135  000642  D007               	goto	u14790
  5136  000644  5159               	movf	(_poligono_ext+57)& (0+255),w,b
  5137  000646  1158               	iorwf	(_poligono_ext+56)& (0+255),w,b
  5138  000648  1157               	iorwf	(_poligono_ext+55)& (0+255),w,b
  5139  00064A  E113               	bnz	l11691
  5140  00064C  0556               	decf	(_poligono_ext+54)& (0+255),w,b
  5141  00064E  B0D8               	btfsc	status,0,c
  5142  000650  D010               	goto	l11691
  5143  000652                     u14790:
  5144                           
  5145                           ; BSR set to: 1
  5146  000652  BF97               	btfsc	(_poligono_ext+119)& (0+255),7,b
  5147  000654  D00E               	goto	l11691
  5148                           
  5149                           ; BSR set to: 1
  5150  000656  BF39               	btfsc	(_poligono_ext+25)& (0+255),7,b
  5151  000658  D007               	goto	u14810
  5152  00065A  5139               	movf	(_poligono_ext+25)& (0+255),w,b
  5153  00065C  1138               	iorwf	(_poligono_ext+24)& (0+255),w,b
  5154  00065E  1137               	iorwf	(_poligono_ext+23)& (0+255),w,b
  5155  000660  E108               	bnz	l11691
  5156  000662  0536               	decf	(_poligono_ext+22)& (0+255),w,b
  5157  000664  B0D8               	btfsc	status,0,c
  5158  000666  D005               	goto	l11691
  5159  000668                     u14810:
  5160                           
  5161                           ; BSR set to: 1
  5162  000668  BF77               	btfsc	(_poligono_ext+87)& (0+255),7,b
  5163  00066A  D003               	goto	l11691
  5164  00066C                     u14820:
  5165                           
  5166                           ; BSR set to: 1
  5167                           ;main.c: 508: {;main.c: 509: flag[1].point = 0;
  5168  00066C  0100               	movlb	0	; () banked
  5169  00066E  91F7               	bcf	(_flag+1)& (0+255),0,b
  5170                           
  5171                           ;main.c: 510: }
  5172  000670  D03E               	goto	l1470
  5173  000672                     l11691:
  5174                           
  5175                           ; BSR set to: 1
  5176                           ;main.c: 511: else if(;main.c: 512: (poligono_ext[0].diff_lat_min == 0 ||;main.c: 513: p
      +                          oligono_ext[1].diff_lat_min == 0) &&;main.c: 514: (poligono_ext[0].diff_lat_deg == 0 ||;
      +                          main.c: 515: poligono_ext[1].diff_lat_deg == 0))
  5177  000672  5156               	movf	(_poligono_ext+54)& (0+255),w,b
  5178  000674  1157               	iorwf	(_poligono_ext+55)& (0+255),w,b
  5179  000676  1158               	iorwf	(_poligono_ext+56)& (0+255),w,b
  5180  000678  1159               	iorwf	(_poligono_ext+57)& (0+255),w,b
  5181  00067A  B4D8               	btfsc	status,2,c
  5182  00067C  D006               	goto	u14840
  5183  00067E                     u14830:
  5184                           
  5185                           ; BSR set to: 1
  5186  00067E  5194               	movf	(_poligono_ext+116)& (0+255),w,b
  5187  000680  1195               	iorwf	(_poligono_ext+117)& (0+255),w,b
  5188  000682  1196               	iorwf	(_poligono_ext+118)& (0+255),w,b
  5189  000684  1197               	iorwf	(_poligono_ext+119)& (0+255),w,b
  5190  000686  A4D8               	btfss	status,2,c
  5191  000688  D00C               	goto	l1464
  5192  00068A                     u14840:
  5193                           
  5194                           ; BSR set to: 1
  5195  00068A  5136               	movf	(_poligono_ext+22)& (0+255),w,b
  5196  00068C  1137               	iorwf	(_poligono_ext+23)& (0+255),w,b
  5197  00068E  1138               	iorwf	(_poligono_ext+24)& (0+255),w,b
  5198  000690  1139               	iorwf	(_poligono_ext+25)& (0+255),w,b
  5199  000692  B4D8               	btfsc	status,2,c
  5200  000694  D7EB               	goto	u14820
  5201                           
  5202                           ; BSR set to: 1
  5203  000696  5174               	movf	(_poligono_ext+84)& (0+255),w,b
  5204  000698  1175               	iorwf	(_poligono_ext+85)& (0+255),w,b
  5205  00069A  1176               	iorwf	(_poligono_ext+86)& (0+255),w,b
  5206  00069C  1177               	iorwf	(_poligono_ext+87)& (0+255),w,b
  5207  00069E  B4D8               	btfsc	status,2,c
  5208  0006A0  D7E5               	goto	u14820
  5209  0006A2                     l1464:
  5210                           
  5211                           ; BSR set to: 1
  5212                           ;main.c: 520: else;main.c: 521: {;main.c: 522: flag[1].point = 1;
  5213  0006A2  0100               	movlb	0	; () banked
  5214  0006A4  81F7               	bsf	(_flag+1)& (0+255),0,b
  5215  0006A6  D023               	goto	l1470
  5216  0006A8                     l11699:
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;main.c: 527: if((poligono_ext[0].diff_lat_min >= 0 &&;main.c: 528: poligono_ext[1].diff
      +                          _lat_min <= 0 ) &&;main.c: 531: (poligono_ext[0].diff_lat_deg >= 0 &&;main.c: 532: polig
      +                          ono_ext[1].diff_lat_deg <= 0);main.c: 533: )
  5220  0006A8  0101               	movlb	1	; () banked
  5221  0006AA  BF59               	btfsc	(_poligono_ext+57)& (0+255),7,b
  5222  0006AC  D014               	goto	l11709
  5223                           
  5224                           ; BSR set to: 1
  5225  0006AE  BF97               	btfsc	(_poligono_ext+119)& (0+255),7,b
  5226  0006B0  D007               	goto	u14880
  5227  0006B2  5197               	movf	(_poligono_ext+119)& (0+255),w,b
  5228  0006B4  1196               	iorwf	(_poligono_ext+118)& (0+255),w,b
  5229  0006B6  1195               	iorwf	(_poligono_ext+117)& (0+255),w,b
  5230  0006B8  E10E               	bnz	l11709
  5231  0006BA  0594               	decf	(_poligono_ext+116)& (0+255),w,b
  5232  0006BC  B0D8               	btfsc	status,0,c
  5233  0006BE  D00B               	goto	l11709
  5234  0006C0                     u14880:
  5235                           
  5236                           ; BSR set to: 1
  5237  0006C0  BF39               	btfsc	(_poligono_ext+25)& (0+255),7,b
  5238  0006C2  D009               	goto	l11709
  5239                           
  5240                           ; BSR set to: 1
  5241  0006C4  BF77               	btfsc	(_poligono_ext+87)& (0+255),7,b
  5242  0006C6  D7D2               	goto	u14820
  5243  0006C8  5177               	movf	(_poligono_ext+87)& (0+255),w,b
  5244  0006CA  1176               	iorwf	(_poligono_ext+86)& (0+255),w,b
  5245  0006CC  1175               	iorwf	(_poligono_ext+85)& (0+255),w,b
  5246  0006CE  E103               	bnz	l11709
  5247  0006D0  0574               	decf	(_poligono_ext+84)& (0+255),w,b
  5248  0006D2  A0D8               	btfss	status,0,c
  5249  0006D4  D7CB               	goto	u14820
  5250  0006D6                     l11709:
  5251                           
  5252                           ; BSR set to: 1
  5253                           ;main.c: 537: else if((poligono_ext[0].diff_lat_min == 0 ||;main.c: 538: poligono_ext[1]
      +                          .diff_lat_min == 0) &&;main.c: 540: (poligono_ext[0].diff_lat_deg == 0 ||;main.c: 541: p
      +                          oligono_ext[1].diff_lat_deg == 0))
  5254  0006D6  5156               	movf	(_poligono_ext+54)& (0+255),w,b
  5255  0006D8  1157               	iorwf	(_poligono_ext+55)& (0+255),w,b
  5256  0006DA  1158               	iorwf	(_poligono_ext+56)& (0+255),w,b
  5257  0006DC  1159               	iorwf	(_poligono_ext+57)& (0+255),w,b
  5258  0006DE  A4D8               	btfss	status,2,c
  5259  0006E0  D7CE               	goto	u14830
  5260                           
  5261                           ; BSR set to: 1
  5262  0006E2  D7D3               	goto	u14840
  5263  0006E4                     l11719:
  5264                           
  5265                           ; BSR set to: 0
  5266  0006E4  51C8               	movf	verifica_fence_externo@temp_buff_lat& (0+255),w,b
  5267                           
  5268                           ; Switch size 1, requested type "simple"
  5269                           ; Number of cases is 1, Range of values is 45 to 45
  5270                           ; switch strategies available:
  5271                           ; Name         Instructions Cycles
  5272                           ; simple_byte            4     3 (average)
  5273                           ;	Chosen strategy is simple_byte
  5274  0006E6  0A2D               	xorlw	45	; case 45
  5275  0006E8  B4D8               	btfsc	status,2,c
  5276  0006EA  D7A9               	goto	l11681
  5277  0006EC  D7DD               	goto	l11699
  5278  0006EE                     l1470:
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;main.c: 556: if(flag[0].point || flag[1].point)
  5282  0006EE  B1F6               	btfsc	_flag& (0+255),0,b
  5283  0006F0  D002               	goto	u14960
  5284                           
  5285                           ; BSR set to: 0
  5286  0006F2  A1F7               	btfss	(_flag+1)& (0+255),0,b
  5287  0006F4  D002               	goto	l1480
  5288  0006F6                     u14960:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;main.c: 557: {;main.c: 558: flag[2].point = 1;
  5292  0006F6  81F8               	bsf	(_flag+2)& (0+255),0,b
  5293                           
  5294                           ;main.c: 559: }
  5295  0006F8  0012               	return	
  5296  0006FA                     l1480:
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;main.c: 560: else;main.c: 561: {;main.c: 562: flag[2].point = 0;
  5300  0006FA  91F8               	bcf	(_flag+2)& (0+255),0,b
  5301                           
  5302                           ; BSR set to: 0
  5303  0006FC  0012               	return		;funcret
  5304  0006FE                     __end_of_verifica_fence_externo:
  5305                           	callstack 0
  5306                           
  5307 ;; *************** function _atoi *****************
  5308 ;; Defined at:
  5309 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5312 ;;		 -> poligono_ext.point_long_min(6), poligono_ext.fence_long_min(6), poligono_ext.point_lat_min(6), poligono_ext.fenc
      +e_lat_min(6), 
  5313 ;;		 -> poligono_ext.fence_lat_deg(5), poligono_ext.point_lat_deg(5), poligono_ext.fence_long_deg(6), poligono_ext.point
      +_long_deg(6), 
  5314 ;;		 -> poligono_ext(124), 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  a               2   35[COMRAM] int 
  5317 ;;  sign            1   34[COMRAM] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  2   30[COMRAM] int 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 3F/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5327 ;;      Params:         2       0       0       0       0       0       0       0       0
  5328 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5329 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5330 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5331 ;;Total ram usage:        7 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    4
  5334 ;; This function calls:
  5335 ;;		___wmul
  5336 ;;		_isdigit
  5337 ;; This function is called by:
  5338 ;;		_verifica_fence_externo
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text16
  5343  003F1C                     __ptext16:
  5344                           	callstack 0
  5345  003F1C                     _atoi:
  5346                           	callstack 24
  5347                           
  5348                           ; BSR set to: 0
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;incstack = 0
  5352  003F1C  D002               	goto	l11331
  5353  003F1E                     l11329:
  5354                           
  5355                           ; BSR set to: 0
  5356  003F1E  4A1F               	infsnz	atoi@s^0,f,c
  5357  003F20  2A20               	incf	(atoi@s+1)^0,f,c
  5358  003F22                     l11331:
  5359                           
  5360                           ; BSR set to: 0
  5361  003F22  C01F  FFD9         	movff	atoi@s,fsr2l
  5362  003F26  C020  FFDA         	movff	atoi@s+1,fsr2h
  5363  003F2A  0E20               	movlw	32
  5364  003F2C  18DE               	xorwf	postinc2,w,c
  5365  003F2E  B4D8               	btfsc	status,2,c
  5366  003F30  D7F6               	goto	l11329
  5367                           
  5368                           ; BSR set to: 0
  5369  003F32  C01F  FFD9         	movff	atoi@s,fsr2l
  5370  003F36  C020  FFDA         	movff	atoi@s+1,fsr2h
  5371  003F3A  0E09               	movlw	9
  5372  003F3C  18DE               	xorwf	postinc2,w,c
  5373  003F3E  B4D8               	btfsc	status,2,c
  5374  003F40  D7EE               	goto	l11329
  5375                           
  5376                           ; BSR set to: 0
  5377  003F42  0E00               	movlw	0
  5378  003F44  6E25               	movwf	(atoi@a+1)^0,c
  5379  003F46  0E00               	movlw	0
  5380  003F48  6E24               	movwf	atoi@a^0,c
  5381  003F4A  0E00               	movlw	0
  5382  003F4C  6E23               	movwf	atoi@sign^0,c
  5383                           
  5384                           ; BSR set to: 0
  5385  003F4E  C01F  FFD9         	movff	atoi@s,fsr2l
  5386  003F52  C020  FFDA         	movff	atoi@s+1,fsr2h
  5387  003F56  0E2D               	movlw	45
  5388  003F58  18DE               	xorwf	postinc2,w,c
  5389  003F5A  A4D8               	btfss	status,2,c
  5390  003F5C  D002               	goto	l11341
  5391                           
  5392                           ; BSR set to: 0
  5393  003F5E  2A23               	incf	atoi@sign^0,f,c
  5394  003F60  D008               	goto	u14160
  5395  003F62                     l11341:
  5396                           
  5397                           ; BSR set to: 0
  5398  003F62  C01F  FFD9         	movff	atoi@s,fsr2l
  5399  003F66  C020  FFDA         	movff	atoi@s+1,fsr2h
  5400  003F6A  0E2B               	movlw	43
  5401  003F6C  18DE               	xorwf	postinc2,w,c
  5402  003F6E  A4D8               	btfss	status,2,c
  5403  003F70  D01E               	goto	l11349
  5404  003F72                     u14160:
  5405  003F72  4A1F               	infsnz	atoi@s^0,f,c
  5406  003F74  2A20               	incf	(atoi@s+1)^0,f,c
  5407  003F76  D01B               	goto	l11349
  5408  003F78                     l11345:
  5409  003F78  C024  F019         	movff	atoi@a,___wmul@multiplier
  5410  003F7C  C025  F01A         	movff	atoi@a+1,___wmul@multiplier+1
  5411  003F80  0E00               	movlw	0
  5412  003F82  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
  5413  003F84  0E0A               	movlw	10
  5414  003F86  6E1B               	movwf	___wmul@multiplicand^0,c
  5415  003F88  ECC3  F028         	call	___wmul	;wreg free
  5416  003F8C  C01F  FFD9         	movff	atoi@s,fsr2l
  5417  003F90  C020  FFDA         	movff	atoi@s+1,fsr2h
  5418  003F94  50DF               	movf	indf2,w,c
  5419  003F96  6E21               	movwf	??_atoi^0,c
  5420  003F98  5021               	movf	??_atoi^0,w,c
  5421  003F9A  2619               	addwf	?___wmul^0,f,c
  5422  003F9C  0E00               	movlw	0
  5423  003F9E  221A               	addwfc	(?___wmul+1)^0,f,c
  5424  003FA0  0ED0               	movlw	208
  5425  003FA2  2419               	addwf	?___wmul^0,w,c
  5426  003FA4  6E24               	movwf	atoi@a^0,c
  5427  003FA6  0EFF               	movlw	255
  5428  003FA8  201A               	addwfc	(?___wmul+1)^0,w,c
  5429  003FAA  6E25               	movwf	(atoi@a+1)^0,c
  5430  003FAC  D7E2               	goto	u14160
  5431  003FAE                     l11349:
  5432  003FAE  C01F  FFD9         	movff	atoi@s,fsr2l
  5433  003FB2  C020  FFDA         	movff	atoi@s+1,fsr2h
  5434  003FB6  50DF               	movf	indf2,w,c
  5435  003FB8  EC6E  F029         	call	_isdigit
  5436  003FBC  B0D8               	btfsc	status,0,c
  5437  003FBE  D7DC               	goto	l11345
  5438  003FC0  5023               	movf	atoi@sign^0,w,c
  5439  003FC2  B4D8               	btfsc	status,2,c
  5440  003FC4  D00D               	goto	l2205
  5441  003FC6  C024  F021         	movff	atoi@a,??_atoi
  5442  003FCA  C025  F022         	movff	atoi@a+1,??_atoi+1
  5443  003FCE  1E21               	comf	??_atoi^0,f,c
  5444  003FD0  1E22               	comf	(??_atoi+1)^0,f,c
  5445  003FD2  4A21               	infsnz	??_atoi^0,f,c
  5446  003FD4  2A22               	incf	(??_atoi+1)^0,f,c
  5447  003FD6  C021  F01F         	movff	??_atoi,?_atoi
  5448  003FDA  C022  F020         	movff	??_atoi+1,?_atoi+1
  5449  003FDE  0012               	return	
  5450  003FE0                     l2205:
  5451  003FE0  C024  F01F         	movff	atoi@a,?_atoi
  5452  003FE4  C025  F020         	movff	atoi@a+1,?_atoi+1
  5453  003FE8  0012               	return		;funcret
  5454  003FEA                     __end_of_atoi:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _isdigit *****************
  5458 ;; Defined at:
  5459 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  c               1    wreg     unsigned char 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  c               1   26[COMRAM] unsigned char 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;		None               void
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5473 ;;      Params:         0       0       0       0       0       0       0       0       0
  5474 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5475 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5476 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5477 ;;Total ram usage:        3 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:    3
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_atoi
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text17
  5488  0052DC                     __ptext17:
  5489                           	callstack 0
  5490  0052DC                     _isdigit:
  5491                           	callstack 24
  5492                           
  5493                           ;incstack = 0
  5494                           ;isdigit@c stored from wreg
  5495  0052DC  6E1B               	movwf	isdigit@c^0,c
  5496  0052DE  0E00               	movlw	0
  5497  0052E0  6E1A               	movwf	_isdigit$3080^0,c
  5498  0052E2  0E3A               	movlw	58
  5499  0052E4  601B               	cpfslt	isdigit@c^0,c
  5500  0052E6  D005               	goto	l7995
  5501  0052E8  0E2F               	movlw	47
  5502  0052EA  641B               	cpfsgt	isdigit@c^0,c
  5503  0052EC  D002               	goto	l7995
  5504  0052EE  0E01               	movlw	1
  5505  0052F0  6E1A               	movwf	_isdigit$3080^0,c
  5506  0052F2                     l7995:
  5507  0052F2  C01A  F019         	movff	_isdigit$3080,??_isdigit
  5508  0052F6  3019               	rrcf	??_isdigit^0,w,c
  5509  0052F8  0012               	return		;funcret
  5510  0052FA                     __end_of_isdigit:
  5511                           	callstack 0
  5512                           
  5513 ;; *************** function _escreve_inteiro_lcd *****************
  5514 ;; Defined at:
  5515 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  valor           2   45[COMRAM] int 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  texto           7    0[BANK0 ] unsigned char [7]
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5529 ;;      Params:         2       0       0       0       0       0       0       0       0
  5530 ;;      Locals:         0       7       0       0       0       0       0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5532 ;;      Totals:         2       7       0       0       0       0       0       0       0
  5533 ;;Total ram usage:        9 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    6
  5536 ;; This function calls:
  5537 ;;		_escreve_frase_ram_lcd
  5538 ;;		_itoa
  5539 ;; This function is called by:
  5540 ;;		_troca_de_tela
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text18
  5545  004FB8                     __ptext18:
  5546                           	callstack 0
  5547  004FB8                     _escreve_inteiro_lcd:
  5548                           	callstack 22
  5549                           
  5550                           ;display_lcd.c: 378: char texto[7] = "000000";
  5551                           
  5552                           ;incstack = 0
  5553  004FB8  EE21  F0F4         	lfsr	2,escreve_inteiro_lcd@F3223
  5554  004FBC  EE10  F060         	lfsr	1,escreve_inteiro_lcd@texto
  5555  004FC0  0E06               	movlw	6
  5556  004FC2                     u14081:
  5557  004FC2  CFDB FFE3          	movff	plusw2,plusw1
  5558  004FC6  06E8               	decf	wreg,f,c
  5559  004FC8  E2FC               	bc	u14081
  5560                           
  5561                           ;display_lcd.c: 379: itoa(texto,valor, 10);
  5562  004FCA  0E60               	movlw	low escreve_inteiro_lcd@texto
  5563  004FCC  6E28               	movwf	itoa@buf^0,c
  5564  004FCE  C02E  F029         	movff	escreve_inteiro_lcd@valor,itoa@val
  5565  004FD2  C02F  F02A         	movff	escreve_inteiro_lcd@valor+1,itoa@val+1
  5566  004FD6  0E00               	movlw	0
  5567  004FD8  6E2C               	movwf	(itoa@base+1)^0,c
  5568  004FDA  0E0A               	movlw	10
  5569  004FDC  6E2B               	movwf	itoa@base^0,c
  5570  004FDE  EC12  F028         	call	_itoa	;wreg free
  5571                           
  5572                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  5573  004FE2  0E60               	movlw	low escreve_inteiro_lcd@texto
  5574  004FE4  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5575  004FE6  6A1D               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5576  004FE8  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
  5577  004FEC  0012               	return		;funcret
  5578  004FEE                     __end_of_escreve_inteiro_lcd:
  5579                           	callstack 0
  5580                           
  5581 ;; *************** function _itoa *****************
  5582 ;; Defined at:
  5583 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  buf             1   39[COMRAM] PTR unsigned char 
  5586 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  5587 ;;  val             2   40[COMRAM] int 
  5588 ;;  base            2   42[COMRAM] int 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;  cp              1    0        PTR unsigned char 
  5591 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      PTR unsigned char 
  5594 ;; Registers used:
  5595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5601 ;;      Params:         5       0       0       0       0       0       0       0       0
  5602 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5604 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5605 ;;Total ram usage:        6 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:    5
  5608 ;; This function calls:
  5609 ;;		_utoa
  5610 ;; This function is called by:
  5611 ;;		_escreve_inteiro_lcd
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text19
  5616  005024                     __ptext19:
  5617                           	callstack 0
  5618  005024                     _itoa:
  5619                           	callstack 22
  5620                           
  5621                           ;incstack = 0
  5622  005024  AE2A               	btfss	(itoa@val+1)^0,7,c
  5623  005026  D00A               	goto	l10843
  5624  005028  5028               	movf	itoa@buf^0,w,c
  5625  00502A  6ED9               	movwf	fsr2l,c
  5626  00502C  6ADA               	clrf	fsr2h,c
  5627  00502E  0E2D               	movlw	45
  5628  005030  6EDF               	movwf	indf2,c
  5629  005032  2A28               	incf	itoa@buf^0,f,c
  5630  005034  6C29               	negf	itoa@val^0,c
  5631  005036  1E2A               	comf	(itoa@val+1)^0,f,c
  5632  005038  B0D8               	btfsc	status,0,c
  5633  00503A  2A2A               	incf	(itoa@val+1)^0,f,c
  5634  00503C                     l10843:
  5635  00503C  C028  F020         	movff	itoa@buf,utoa@buf
  5636  005040  C029  F021         	movff	itoa@val,utoa@val
  5637  005044  C02A  F022         	movff	itoa@val+1,utoa@val+1
  5638  005048  C02B  F023         	movff	itoa@base,utoa@base
  5639  00504C  C02C  F024         	movff	itoa@base+1,utoa@base+1
  5640  005050  ECF6  F021         	call	_utoa	;wreg free
  5641  005054  0012               	return		;funcret
  5642  005056                     __end_of_itoa:
  5643                           	callstack 0
  5644                           
  5645 ;; *************** function _utoa *****************
  5646 ;; Defined at:
  5647 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  buf             1   31[COMRAM] PTR unsigned char 
  5650 ;;		 -> escreve_inteiro_uart@valor_final(7), escreve_inteiro_lcd@texto(7), 
  5651 ;;  val             2   32[COMRAM] unsigned int 
  5652 ;;  base            2   34[COMRAM] int 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  v               2   36[COMRAM] unsigned int 
  5655 ;;  c               1   38[COMRAM] unsigned char 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      PTR unsigned char 
  5658 ;; Registers used:
  5659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5665 ;;      Params:         5       0       0       0       0       0       0       0       0
  5666 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5668 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5669 ;;Total ram usage:        8 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    4
  5672 ;; This function calls:
  5673 ;;		___lwdiv
  5674 ;;		___lwmod
  5675 ;; This function is called by:
  5676 ;;		_itoa
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text20
  5681  0043EC                     __ptext20:
  5682                           	callstack 0
  5683  0043EC                     _utoa:
  5684                           	callstack 22
  5685                           
  5686                           ;incstack = 0
  5687  0043EC  C021  F025         	movff	utoa@val,utoa@v
  5688  0043F0  C022  F026         	movff	utoa@val+1,utoa@v+1
  5689  0043F4                     l10807:
  5690  0043F4  C025  F019         	movff	utoa@v,___lwdiv@dividend
  5691  0043F8  C026  F01A         	movff	utoa@v+1,___lwdiv@dividend+1
  5692  0043FC  C023  F01B         	movff	utoa@base,___lwdiv@divisor
  5693  004400  C024  F01C         	movff	utoa@base+1,___lwdiv@divisor+1
  5694  004404  ECEA  F025         	call	___lwdiv	;wreg free
  5695  004408  C019  F025         	movff	?___lwdiv,utoa@v
  5696  00440C  C01A  F026         	movff	?___lwdiv+1,utoa@v+1
  5697  004410  2A20               	incf	utoa@buf^0,f,c
  5698  004412  5025               	movf	utoa@v^0,w,c
  5699  004414  1026               	iorwf	(utoa@v+1)^0,w,c
  5700  004416  A4D8               	btfss	status,2,c
  5701  004418  D7ED               	goto	l10807
  5702  00441A  5020               	movf	utoa@buf^0,w,c
  5703  00441C  6ED9               	movwf	fsr2l,c
  5704  00441E  6ADA               	clrf	fsr2h,c
  5705  004420  0E00               	movlw	0
  5706  004422  6EDF               	movwf	indf2,c
  5707  004424  0620               	decf	utoa@buf^0,f,c
  5708  004426                     l10817:
  5709  004426  C021  F019         	movff	utoa@val,___lwmod@dividend
  5710  00442A  C022  F01A         	movff	utoa@val+1,___lwmod@dividend+1
  5711  00442E  C023  F01B         	movff	utoa@base,___lwmod@divisor
  5712  004432  C024  F01C         	movff	utoa@base+1,___lwmod@divisor+1
  5713  004436  EC60  F027         	call	___lwmod	;wreg free
  5714  00443A  5019               	movf	?___lwmod^0,w,c
  5715  00443C  6E27               	movwf	utoa@c^0,c
  5716  00443E  C021  F019         	movff	utoa@val,___lwdiv@dividend
  5717  004442  C022  F01A         	movff	utoa@val+1,___lwdiv@dividend+1
  5718  004446  C023  F01B         	movff	utoa@base,___lwdiv@divisor
  5719  00444A  C024  F01C         	movff	utoa@base+1,___lwdiv@divisor+1
  5720  00444E  ECEA  F025         	call	___lwdiv	;wreg free
  5721  004452  C019  F021         	movff	?___lwdiv,utoa@val
  5722  004456  C01A  F022         	movff	?___lwdiv+1,utoa@val+1
  5723  00445A  0E09               	movlw	9
  5724  00445C  6427               	cpfsgt	utoa@c^0,c
  5725  00445E  D002               	goto	l2223
  5726  004460  0E07               	movlw	7
  5727  004462  2627               	addwf	utoa@c^0,f,c
  5728  004464                     l2223:
  5729  004464  0E30               	movlw	48
  5730  004466  2627               	addwf	utoa@c^0,f,c
  5731  004468  5020               	movf	utoa@buf^0,w,c
  5732  00446A  6ED9               	movwf	fsr2l,c
  5733  00446C  6ADA               	clrf	fsr2h,c
  5734  00446E  C027  FFDF         	movff	utoa@c,indf2
  5735  004472  0620               	decf	utoa@buf^0,f,c
  5736  004474  5021               	movf	utoa@val^0,w,c
  5737  004476  1022               	iorwf	(utoa@val+1)^0,w,c
  5738  004478  A4D8               	btfss	status,2,c
  5739  00447A  D7D5               	goto	l10817
  5740                           
  5741                           ;	Return value of _utoa is never used
  5742  00447C  2A20               	incf	utoa@buf^0,f,c
  5743  00447E  0012               	return		;funcret
  5744  004480                     __end_of_utoa:
  5745                           	callstack 0
  5746                           
  5747 ;; *************** function ___lwmod *****************
  5748 ;; Defined at:
  5749 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  dividend        2   24[COMRAM] unsigned int 
  5752 ;;  divisor         2   26[COMRAM] unsigned int 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  counter         1   28[COMRAM] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  2   24[COMRAM] unsigned int 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5764 ;;      Params:         4       0       0       0       0       0       0       0       0
  5765 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5767 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5768 ;;Total ram usage:        5 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    3
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_utoa
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text21
  5779  004EC0                     __ptext21:
  5780                           	callstack 0
  5781  004EC0                     ___lwmod:
  5782                           	callstack 22
  5783                           
  5784                           ;incstack = 0
  5785  004EC0  501B               	movf	___lwmod@divisor^0,w,c
  5786  004EC2  101C               	iorwf	(___lwmod@divisor+1)^0,w,c
  5787  004EC4  B4D8               	btfsc	status,2,c
  5788  004EC6  D018               	goto	l2017
  5789  004EC8  0E01               	movlw	1
  5790  004ECA  6E1D               	movwf	___lwmod@counter^0,c
  5791  004ECC  D004               	goto	l10423
  5792  004ECE                     l10421:
  5793  004ECE  90D8               	bcf	status,0,c
  5794  004ED0  361B               	rlcf	___lwmod@divisor^0,f,c
  5795  004ED2  361C               	rlcf	(___lwmod@divisor+1)^0,f,c
  5796  004ED4  2A1D               	incf	___lwmod@counter^0,f,c
  5797  004ED6                     l10423:
  5798  004ED6  AE1C               	btfss	(___lwmod@divisor+1)^0,7,c
  5799  004ED8  D7FA               	goto	l10421
  5800  004EDA                     u12550:
  5801  004EDA  501B               	movf	___lwmod@divisor^0,w,c
  5802  004EDC  5C19               	subwf	___lwmod@dividend^0,w,c
  5803  004EDE  501C               	movf	(___lwmod@divisor+1)^0,w,c
  5804  004EE0  581A               	subwfb	(___lwmod@dividend+1)^0,w,c
  5805  004EE2  A0D8               	btfss	status,0,c
  5806  004EE4  D004               	goto	l10429
  5807  004EE6  501B               	movf	___lwmod@divisor^0,w,c
  5808  004EE8  5E19               	subwf	___lwmod@dividend^0,f,c
  5809  004EEA  501C               	movf	(___lwmod@divisor+1)^0,w,c
  5810  004EEC  5A1A               	subwfb	(___lwmod@dividend+1)^0,f,c
  5811  004EEE                     l10429:
  5812  004EEE  90D8               	bcf	status,0,c
  5813  004EF0  321C               	rrcf	(___lwmod@divisor+1)^0,f,c
  5814  004EF2  321B               	rrcf	___lwmod@divisor^0,f,c
  5815  004EF4  2E1D               	decfsz	___lwmod@counter^0,f,c
  5816  004EF6  D7F1               	goto	u12550
  5817  004EF8                     l2017:
  5818  004EF8  C019  F019         	movff	___lwmod@dividend,?___lwmod
  5819  004EFC  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  5820  004F00  0012               	return		;funcret
  5821  004F02                     __end_of___lwmod:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function ___lwdiv *****************
  5825 ;; Defined at:
  5826 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  dividend        2   24[COMRAM] unsigned int 
  5829 ;;  divisor         2   26[COMRAM] unsigned int 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  quotient        2   29[COMRAM] unsigned int 
  5832 ;;  counter         1   28[COMRAM] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  2   24[COMRAM] unsigned int 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5842 ;;      Params:         4       0       0       0       0       0       0       0       0
  5843 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5845 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5846 ;;Total ram usage:        7 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    3
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_utoa
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text22
  5857  004BD4                     __ptext22:
  5858                           	callstack 0
  5859  004BD4                     ___lwdiv:
  5860                           	callstack 22
  5861                           
  5862                           ;incstack = 0
  5863  004BD4  0E00               	movlw	0
  5864  004BD6  6E1F               	movwf	(___lwdiv@quotient+1)^0,c
  5865  004BD8  0E00               	movlw	0
  5866  004BDA  6E1E               	movwf	___lwdiv@quotient^0,c
  5867  004BDC  501B               	movf	___lwdiv@divisor^0,w,c
  5868  004BDE  101C               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5869  004BE0  B4D8               	btfsc	status,2,c
  5870  004BE2  D01C               	goto	l2007
  5871  004BE4  0E01               	movlw	1
  5872  004BE6  6E1D               	movwf	___lwdiv@counter^0,c
  5873  004BE8  D004               	goto	l10403
  5874  004BEA                     l10401:
  5875  004BEA  90D8               	bcf	status,0,c
  5876  004BEC  361B               	rlcf	___lwdiv@divisor^0,f,c
  5877  004BEE  361C               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5878  004BF0  2A1D               	incf	___lwdiv@counter^0,f,c
  5879  004BF2                     l10403:
  5880  004BF2  AE1C               	btfss	(___lwdiv@divisor+1)^0,7,c
  5881  004BF4  D7FA               	goto	l10401
  5882  004BF6                     u12520:
  5883  004BF6  90D8               	bcf	status,0,c
  5884  004BF8  361E               	rlcf	___lwdiv@quotient^0,f,c
  5885  004BFA  361F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5886  004BFC  501B               	movf	___lwdiv@divisor^0,w,c
  5887  004BFE  5C19               	subwf	___lwdiv@dividend^0,w,c
  5888  004C00  501C               	movf	(___lwdiv@divisor+1)^0,w,c
  5889  004C02  581A               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5890  004C04  A0D8               	btfss	status,0,c
  5891  004C06  D005               	goto	l10413
  5892  004C08  501B               	movf	___lwdiv@divisor^0,w,c
  5893  004C0A  5E19               	subwf	___lwdiv@dividend^0,f,c
  5894  004C0C  501C               	movf	(___lwdiv@divisor+1)^0,w,c
  5895  004C0E  5A1A               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5896  004C10  801E               	bsf	___lwdiv@quotient^0,0,c
  5897  004C12                     l10413:
  5898  004C12  90D8               	bcf	status,0,c
  5899  004C14  321C               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5900  004C16  321B               	rrcf	___lwdiv@divisor^0,f,c
  5901  004C18  2E1D               	decfsz	___lwdiv@counter^0,f,c
  5902  004C1A  D7ED               	goto	u12520
  5903  004C1C                     l2007:
  5904  004C1C  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  5905  004C20  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5906  004C24  0012               	return		;funcret
  5907  004C26                     __end_of___lwdiv:
  5908                           	callstack 0
  5909                           
  5910 ;; *************** function _escreve_cmd_lcd *****************
  5911 ;; Defined at:
  5912 ;;		line 162 in file "bibliotecas/display_lcd.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  comando         1    wreg     unsigned char 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  comando         1   26[COMRAM] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0
  5927 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5929 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5930 ;;Total ram usage:        1 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    4
  5933 ;; This function calls:
  5934 ;;		_delay
  5935 ;; This function is called by:
  5936 ;;		_init_lcd
  5937 ;;		_mensagem_inicial
  5938 ;;		_troca_de_tela
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text23
  5943  0045A2                     __ptext23:
  5944                           	callstack 0
  5945  0045A2                     _escreve_cmd_lcd:
  5946                           	callstack 25
  5947                           
  5948                           ;incstack = 0
  5949                           ;escreve_cmd_lcd@comando stored from wreg
  5950  0045A2  6E1B               	movwf	escreve_cmd_lcd@comando^0,c
  5951                           
  5952                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  5953  0045A4  9483               	bcf	131,2,c	;volatile
  5954                           
  5955                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  5956  0045A6  9283               	bcf	131,1,c	;volatile
  5957                           
  5958                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  5959  0045A8  9083               	bcf	131,0,c	;volatile
  5960                           
  5961                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  5962  0045AA  A81B               	btfss	escreve_cmd_lcd@comando^0,4,c
  5963  0045AC  D002               	goto	l191
  5964  0045AE  8883               	bsf	131,4,c	;volatile
  5965  0045B0  D001               	goto	l11233
  5966  0045B2                     l191:
  5967                           
  5968                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  5969  0045B2  9883               	bcf	131,4,c	;volatile
  5970  0045B4                     l11233:
  5971                           
  5972                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  5973  0045B4  AA1B               	btfss	escreve_cmd_lcd@comando^0,5,c
  5974  0045B6  D002               	goto	l193
  5975  0045B8  8A83               	bsf	131,5,c	;volatile
  5976  0045BA  D001               	goto	l11237
  5977  0045BC                     l193:
  5978                           
  5979                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  5980  0045BC  9A83               	bcf	131,5,c	;volatile
  5981  0045BE                     l11237:
  5982                           
  5983                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  5984  0045BE  AC1B               	btfss	escreve_cmd_lcd@comando^0,6,c
  5985  0045C0  D002               	goto	l195
  5986  0045C2  8C83               	bsf	131,6,c	;volatile
  5987  0045C4  D001               	goto	l11241
  5988  0045C6                     l195:
  5989                           
  5990                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  5991  0045C6  9C83               	bcf	131,6,c	;volatile
  5992  0045C8                     l11241:
  5993                           
  5994                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  5995  0045C8  AE1B               	btfss	escreve_cmd_lcd@comando^0,7,c
  5996  0045CA  D002               	goto	l197
  5997  0045CC  8E83               	bsf	131,7,c	;volatile
  5998  0045CE  D001               	goto	l198
  5999  0045D0                     l197:
  6000                           
  6001                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  6002  0045D0  9E83               	bcf	131,7,c	;volatile
  6003  0045D2                     l198:
  6004                           
  6005                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  6006  0045D2  8083               	bsf	131,0,c	;volatile
  6007                           
  6008                           ;display_lcd.c: 181: delay();
  6009  0045D4  EC7D  F029         	call	_delay	;wreg free
  6010                           
  6011                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  6012  0045D8  9083               	bcf	131,0,c	;volatile
  6013                           
  6014                           ;display_lcd.c: 183: delay();
  6015  0045DA  EC7D  F029         	call	_delay	;wreg free
  6016                           
  6017                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  6018  0045DE  A01B               	btfss	escreve_cmd_lcd@comando^0,0,c
  6019  0045E0  D002               	goto	l199
  6020  0045E2  8883               	bsf	131,4,c	;volatile
  6021  0045E4  D001               	goto	l200
  6022  0045E6                     l199:
  6023                           
  6024                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  6025  0045E6  9883               	bcf	131,4,c	;volatile
  6026  0045E8                     l200:
  6027                           
  6028                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  6029  0045E8  A21B               	btfss	escreve_cmd_lcd@comando^0,1,c
  6030  0045EA  D002               	goto	l201
  6031  0045EC  8A83               	bsf	131,5,c	;volatile
  6032  0045EE  D001               	goto	l202
  6033  0045F0                     l201:
  6034                           
  6035                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  6036  0045F0  9A83               	bcf	131,5,c	;volatile
  6037  0045F2                     l202:
  6038                           
  6039                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  6040  0045F2  A41B               	btfss	escreve_cmd_lcd@comando^0,2,c
  6041  0045F4  D002               	goto	l203
  6042  0045F6  8C83               	bsf	131,6,c	;volatile
  6043  0045F8  D001               	goto	l204
  6044  0045FA                     l203:
  6045                           
  6046                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  6047  0045FA  9C83               	bcf	131,6,c	;volatile
  6048  0045FC                     l204:
  6049                           
  6050                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  6051  0045FC  A61B               	btfss	escreve_cmd_lcd@comando^0,3,c
  6052  0045FE  D002               	goto	l205
  6053  004600  8E83               	bsf	131,7,c	;volatile
  6054  004602  D001               	goto	l206
  6055  004604                     l205:
  6056                           
  6057                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  6058  004604  9E83               	bcf	131,7,c	;volatile
  6059  004606                     l206:
  6060                           
  6061                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  6062  004606  8083               	bsf	131,0,c	;volatile
  6063                           
  6064                           ;display_lcd.c: 197: delay();
  6065  004608  EC7D  F029         	call	_delay	;wreg free
  6066                           
  6067                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  6068  00460C  9083               	bcf	131,0,c	;volatile
  6069                           
  6070                           ;display_lcd.c: 199: delay();
  6071  00460E  EC7D  F029         	call	_delay	;wreg free
  6072                           
  6073                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  6074  004612  041B               	decf	escreve_cmd_lcd@comando^0,w,c
  6075  004614  B4D8               	btfsc	status,2,c
  6076  004616  D008               	goto	u14070
  6077  004618  0E02               	movlw	2
  6078  00461A  181B               	xorwf	escreve_cmd_lcd@comando^0,w,c
  6079  00461C  B4D8               	btfsc	status,2,c
  6080  00461E  D004               	goto	u14070
  6081  004620  0E03               	movlw	3
  6082  004622  181B               	xorwf	escreve_cmd_lcd@comando^0,w,c
  6083  004624  A4D8               	btfss	status,2,c
  6084  004626  0012               	return	
  6085  004628                     u14070:
  6086                           
  6087                           ;display_lcd.c: 205: { delay(); }
  6088  004628  EC7D  F029         	call	_delay	;wreg free
  6089  00462C  0012               	return		;funcret
  6090  00462E                     __end_of_escreve_cmd_lcd:
  6091                           	callstack 0
  6092                           
  6093 ;; *************** function _Longitude *****************
  6094 ;; Defined at:
  6095 ;;		line 178 in file "bibliotecas/GPS.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  2   24[COMRAM] PTR unsigned char 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6109 ;;      Params:         2       0       0       0       0       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6112 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6113 ;;Total ram usage:        2 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:    3
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_verifica_fence_externo
  6120 ;;		_troca_de_tela
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text24
  6125  005414                     __ptext24:
  6126                           	callstack 0
  6127  005414                     _Longitude:
  6128                           	callstack 25
  6129                           
  6130                           ;GPS.c: 180: return rawLongitude;
  6131                           
  6132                           ;incstack = 0
  6133  005414  0ED8               	movlw	low _rawLongitude
  6134  005416  6E19               	movwf	?_Longitude^0,c
  6135  005418  0E02               	movlw	high _rawLongitude
  6136  00541A  6E1A               	movwf	(?_Longitude+1)^0,c
  6137  00541C  0012               	return		;funcret
  6138  00541E                     __end_of_Longitude:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _Latitude *****************
  6142 ;; Defined at:
  6143 ;;		line 173 in file "bibliotecas/GPS.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;		None
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  2   24[COMRAM] PTR unsigned char 
  6150 ;; Registers used:
  6151 ;;		wreg, status,2, status,0
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6157 ;;      Params:         2       0       0       0       0       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6160 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6161 ;;Total ram usage:        2 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:    3
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_verifica_fence_externo
  6168 ;;		_troca_de_tela
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text25
  6173  00541E                     __ptext25:
  6174                           	callstack 0
  6175  00541E                     _Latitude:
  6176                           	callstack 25
  6177                           
  6178                           ;GPS.c: 175: return rawLatitude;
  6179                           
  6180                           ;incstack = 0
  6181  00541E  0EE5               	movlw	low _rawLatitude
  6182  005420  6E19               	movwf	?_Latitude^0,c
  6183  005422  0E02               	movlw	high _rawLatitude
  6184  005424  6E1A               	movwf	(?_Latitude+1)^0,c
  6185  005426  0012               	return		;funcret
  6186  005428                     __end_of_Latitude:
  6187                           	callstack 0
  6188                           
  6189 ;; *************** function _escrita_sdcard *****************
  6190 ;; Defined at:
  6191 ;;		line 206 in file "bibliotecas/SDCard.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  fix_gps         2  145[BANK0 ] PTR unsigned char 
  6196 ;;		 -> rawFix(2), 
  6197 ;;  bw              2    0        unsigned short 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 3F/0
  6204 ;;		On exit  : 3F/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6207 ;;      Params:         0       0       0       0       0       0       0       0       0
  6208 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6210 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6211 ;;Total ram usage:        3 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:   15
  6214 ;; This function calls:
  6215 ;;		_desliga_SPI
  6216 ;;		_desliga_uart
  6217 ;;		_f_close
  6218 ;;		_f_lseek
  6219 ;;		_f_mount
  6220 ;;		_f_open
  6221 ;;		_fix
  6222 ;;		_fprintf
  6223 ;;		_inicializa_SPI
  6224 ;;		_inicializa_uart
  6225 ;;		_strcat
  6226 ;;		_strcpy
  6227 ;; This function is called by:
  6228 ;;		_disparo_gravacao
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text26
  6233  003878                     __ptext26:
  6234                           	callstack 0
  6235  003878                     _escrita_sdcard:
  6236                           	callstack 13
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;SDCard.c: 208: unsigned char *fix_gps;;SDCard.c: 209: static unsigned char f_fix = 0;;S
      +                          DCard.c: 210: WORD bw;;SDCard.c: 211: PORTBbits.RB3 = 0;
  6240                           
  6241                           ;incstack = 0
  6242  003878  9681               	bcf	129,3,c	;volatile
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;SDCard.c: 212: desliga_uart();
  6246  00387A  ECE6  F029         	call	_desliga_uart	;wreg free
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;SDCard.c: 213: inicializa_SPI();
  6250  00387E  EC4E  F029         	call	_inicializa_SPI	;wreg free
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;SDCard.c: 214: f_mount(0,&fs);
  6254  003882  0E22               	movlw	low _fs
  6255  003884  6E19               	movwf	f_mount@fs^0,c
  6256  003886  0E03               	movlw	high _fs
  6257  003888  6E1A               	movwf	(f_mount@fs+1)^0,c
  6258  00388A  0E00               	movlw	0
  6259  00388C  ECB1  F026         	call	_f_mount
  6260                           
  6261                           ;SDCard.c: 215: fix_gps = fix();
  6262  003890  EC14  F02A         	call	_fix	;wreg free
  6263  003894  C019  F0F1         	movff	?_fix,escrita_sdcard@fix_gps
  6264  003898  C01A  F0F2         	movff	?_fix+1,escrita_sdcard@fix_gps+1
  6265                           
  6266                           ;SDCard.c: 217: if(fix_gps[0] == '1')
  6267  00389C  C0F1  FFD9         	movff	escrita_sdcard@fix_gps,fsr2l
  6268  0038A0  C0F2  FFDA         	movff	escrita_sdcard@fix_gps+1,fsr2h
  6269  0038A4  0E31               	movlw	49
  6270  0038A6  18DE               	xorwf	postinc2,w,c
  6271  0038A8  A4D8               	btfss	status,2,c
  6272  0038AA  D076               	goto	l11309
  6273                           
  6274                           ;SDCard.c: 218: {;SDCard.c: 219: if(!f_fix)
  6275  0038AC  0100               	movlb	0	; () banked
  6276  0038AE  51FD               	movf	escrita_sdcard@f_fix& (0+255),w,b
  6277  0038B0  A4D8               	btfss	status,2,c
  6278  0038B2  D016               	goto	l11297
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;SDCard.c: 220: {;SDCard.c: 224: strcpy(filename, string_dado.data);
  6282  0038B4  0EC9               	movlw	low _filename
  6283  0038B6  6E19               	movwf	strcpy@to^0,c
  6284  0038B8  0E02               	movlw	high _filename
  6285  0038BA  6E1A               	movwf	(strcpy@to+1)^0,c
  6286  0038BC  0E7A               	movlw	low _string_dado
  6287  0038BE  6E1B               	movwf	strcpy@from^0,c
  6288  0038C0  0E02               	movlw	high _string_dado
  6289  0038C2  6E1C               	movwf	(strcpy@from+1)^0,c
  6290  0038C4  EC43  F028         	call	_strcpy	;wreg free
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;SDCard.c: 226: strcat(filename, ".tlm");
  6294  0038C8  0EC9               	movlw	low _filename
  6295  0038CA  6E19               	movwf	strcat@to^0,c
  6296  0038CC  0E02               	movlw	high _filename
  6297  0038CE  6E1A               	movwf	(strcat@to+1)^0,c
  6298  0038D0  0E68               	movlw	low STR_13
  6299  0038D2  6E1B               	movwf	strcat@from^0,c
  6300  0038D4  0E62               	movlw	high STR_13
  6301  0038D6  6E1C               	movwf	(strcat@from+1)^0,c
  6302  0038D8  EC1C  F027         	call	_strcat	;wreg free
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;SDCard.c: 227: f_fix = 1;
  6306  0038DC  0E01               	movlw	1
  6307  0038DE  6FFD               	movwf	escrita_sdcard@f_fix& (0+255),b
  6308  0038E0                     l11297:
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;SDCard.c: 228: };SDCard.c: 229: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  6312  0038E0  0E9C               	movlw	low _fil
  6313  0038E2  6FC0               	movwf	f_open@fp& (0+255),b
  6314  0038E4  0E01               	movlw	high _fil
  6315  0038E6  6FC1               	movwf	(f_open@fp+1)& (0+255),b
  6316  0038E8  0EC9               	movlw	low _filename
  6317  0038EA  6FC2               	movwf	f_open@path& (0+255),b
  6318  0038EC  0E02               	movlw	high _filename
  6319  0038EE  6FC3               	movwf	(f_open@path+1)& (0+255),b
  6320  0038F0  0E02               	movlw	2
  6321  0038F2  6FC4               	movwf	f_open@mode& (0+255),b
  6322  0038F4  EC8A  F00E         	call	_f_open	;wreg free
  6323  0038F8  0900               	iorlw	0
  6324  0038FA  A4D8               	btfss	status,2,c
  6325  0038FC  D040               	goto	l11305
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;SDCard.c: 230: {;SDCard.c: 232: f_lseek(&fil, ((&fil)->fsize));
  6329  0038FE  0E9C               	movlw	low _fil
  6330  003900  6FAE               	movwf	f_lseek@fp& (0+255),b
  6331  003902  0E01               	movlw	high _fil
  6332  003904  6FAF               	movwf	(f_lseek@fp+1)& (0+255),b
  6333  003906  C1A6  F0B0         	movff	_fil+10,f_lseek@ofs
  6334  00390A  C1A7  F0B1         	movff	_fil+11,f_lseek@ofs+1
  6335  00390E  C1A8  F0B2         	movff	_fil+12,f_lseek@ofs+2
  6336  003912  C1A9  F0B3         	movff	_fil+13,f_lseek@ofs+3
  6337  003916  ECE8  F008         	call	_f_lseek	;wreg free
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;SDCard.c: 233: fprintf(&fil, "\nv%s;lt%s;lo%s;r%s;c%s;k%s;h%s;d%s", "string_dado.vel", 
      +                          string_dado.lt, string_dado.lo, "string_dado.rpm", "string_dado.comb", "string_dado.odom
      +                          etro_total", string_dado.hora, "string_dado.dtc");
  6341  00391A  0E9C               	movlw	low _fil
  6342  00391C  6FDA               	movwf	fprintf@fil& (0+255),b
  6343  00391E  0E01               	movlw	high _fil
  6344  003920  6FDB               	movwf	(fprintf@fil+1)& (0+255),b
  6345  003922  0E09               	movlw	low STR_14
  6346  003924  6FDC               	movwf	fprintf@str& (0+255),b
  6347  003926  0E61               	movlw	high STR_14
  6348  003928  6FDD               	movwf	(fprintf@str+1)& (0+255),b
  6349  00392A  0E9E               	movlw	low STR_15
  6350  00392C  6FDE               	movwf	(?_fprintf+4)& (0+255),b
  6351  00392E  0E61               	movlw	high STR_15
  6352  003930  6FDF               	movwf	(?_fprintf+5)& (0+255),b
  6353  003932  0E8C               	movlw	low (_string_dado+18)
  6354  003934  6FE0               	movwf	(?_fprintf+6)& (0+255),b
  6355  003936  0E02               	movlw	high (_string_dado+18)
  6356  003938  6FE1               	movwf	(?_fprintf+7)& (0+255),b
  6357  00393A  0E99               	movlw	low (_string_dado+31)
  6358  00393C  6FE2               	movwf	(?_fprintf+8)& (0+255),b
  6359  00393E  0E02               	movlw	high (_string_dado+31)
  6360  003940  6FE3               	movwf	(?_fprintf+9)& (0+255),b
  6361  003942  0EAE               	movlw	low STR_16
  6362  003944  6FE4               	movwf	(?_fprintf+10)& (0+255),b
  6363  003946  0E61               	movlw	high STR_16
  6364  003948  6FE5               	movwf	(?_fprintf+11)& (0+255),b
  6365  00394A  0E6D               	movlw	low STR_17
  6366  00394C  6FE6               	movwf	(?_fprintf+12)& (0+255),b
  6367  00394E  0E61               	movlw	high STR_17
  6368  003950  6FE7               	movwf	(?_fprintf+13)& (0+255),b
  6369  003952  0E2C               	movlw	low STR_18
  6370  003954  6FE8               	movwf	(?_fprintf+14)& (0+255),b
  6371  003956  0E61               	movlw	high STR_18
  6372  003958  6FE9               	movwf	(?_fprintf+15)& (0+255),b
  6373  00395A  0E81               	movlw	low (_string_dado+7)
  6374  00395C  6FEA               	movwf	(?_fprintf+16)& (0+255),b
  6375  00395E  0E02               	movlw	high (_string_dado+7)
  6376  003960  6FEB               	movwf	(?_fprintf+17)& (0+255),b
  6377  003962  0E8E               	movlw	low STR_19
  6378  003964  6FEC               	movwf	(?_fprintf+18)& (0+255),b
  6379  003966  0E61               	movlw	high STR_19
  6380  003968  6FED               	movwf	(?_fprintf+19)& (0+255),b
  6381  00396A  EC2D  F00B         	call	_fprintf	;wreg free
  6382  00396E                     l11303:
  6383                           
  6384                           ;SDCard.c: 236: f_close(&fil);
  6385  00396E  0E9C               	movlw	low _fil
  6386  003970  0100               	movlb	0	; () banked
  6387  003972  6F91               	movwf	f_close@fp& (0+255),b
  6388  003974  0E01               	movlw	high _fil
  6389  003976  6F92               	movwf	(f_close@fp+1)& (0+255),b
  6390  003978  EC86  F028         	call	_f_close	;wreg free
  6391                           
  6392                           ;SDCard.c: 237: }
  6393  00397C  D00D               	goto	l11309
  6394  00397E                     l11305:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;SDCard.c: 238: else;SDCard.c: 239: {;SDCard.c: 240: f_open(&fil, filename, 0x08 );
  6398  00397E  0E9C               	movlw	low _fil
  6399  003980  6FC0               	movwf	f_open@fp& (0+255),b
  6400  003982  0E01               	movlw	high _fil
  6401  003984  6FC1               	movwf	(f_open@fp+1)& (0+255),b
  6402  003986  0EC9               	movlw	low _filename
  6403  003988  6FC2               	movwf	f_open@path& (0+255),b
  6404  00398A  0E02               	movlw	high _filename
  6405  00398C  6FC3               	movwf	(f_open@path+1)& (0+255),b
  6406  00398E  0E08               	movlw	8
  6407  003990  6FC4               	movwf	f_open@mode& (0+255),b
  6408  003992  EC8A  F00E         	call	_f_open	;wreg free
  6409  003996  D7EB               	goto	l11303
  6410  003998                     l11309:
  6411                           
  6412                           ;SDCard.c: 243: };SDCard.c: 244: };SDCard.c: 245: PORTBbits.RB3 = 1;
  6413  003998  8681               	bsf	129,3,c	;volatile
  6414                           
  6415                           ;SDCard.c: 246: desliga_SPI();
  6416  00399A  ECFF  F029         	call	_desliga_SPI	;wreg free
  6417                           
  6418                           ;SDCard.c: 247: inicializa_uart();
  6419  00399E  ECE8  F028         	call	_inicializa_uart	;wreg free
  6420                           
  6421                           ; BSR set to: 0
  6422  0039A2  0012               	return		;funcret
  6423  0039A4                     __end_of_escrita_sdcard:
  6424                           	callstack 0
  6425                           
  6426 ;; *************** function _strcpy *****************
  6427 ;; Defined at:
  6428 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  to              2   24[COMRAM] PTR unsigned char 
  6431 ;;		 -> filename(15), 
  6432 ;;  from            2   26[COMRAM] PTR const unsigned char 
  6433 ;;		 -> string_dado.data(7), string_dado(59), 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  cp              2   28[COMRAM] PTR unsigned char 
  6436 ;;		 -> filename(15), 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  2   24[COMRAM] PTR unsigned char 
  6439 ;; Registers used:
  6440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 3F/0
  6443 ;;		On exit  : 3F/0
  6444 ;;		Unchanged: 3F/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6446 ;;      Params:         4       0       0       0       0       0       0       0       0
  6447 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6449 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6450 ;;Total ram usage:        6 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    3
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_escrita_sdcard
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text27
  6461  005086                     __ptext27:
  6462                           	callstack 0
  6463  005086                     _strcpy:
  6464                           	callstack 24
  6465                           
  6466                           ; BSR set to: 0
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;incstack = 0
  6470  005086  C019  F01D         	movff	strcpy@to,strcpy@cp
  6471  00508A  C01A  F01E         	movff	strcpy@to+1,strcpy@cp+1
  6472  00508E  D004               	goto	l10971
  6473  005090                     l10969:
  6474                           
  6475                           ; BSR set to: 0
  6476  005090  4A1D               	infsnz	strcpy@cp^0,f,c
  6477  005092  2A1E               	incf	(strcpy@cp+1)^0,f,c
  6478  005094  4A1B               	infsnz	strcpy@from^0,f,c
  6479  005096  2A1C               	incf	(strcpy@from+1)^0,f,c
  6480  005098                     l10971:
  6481                           
  6482                           ; BSR set to: 0
  6483  005098  C01B  FFD9         	movff	strcpy@from,fsr2l
  6484  00509C  C01C  FFDA         	movff	strcpy@from+1,fsr2h
  6485  0050A0  C01D  FFE1         	movff	strcpy@cp,fsr1l
  6486  0050A4  C01E  FFE2         	movff	strcpy@cp+1,fsr1h
  6487  0050A8  CFDF FFE7          	movff	indf2,indf1
  6488  0050AC  50E7               	movf	indf1,w,c
  6489  0050AE  B4D8               	btfsc	status,2,c
  6490  0050B0  0012               	return	
  6491  0050B2  D7EE               	goto	l10969
  6492  0050B4                     __end_of_strcpy:
  6493                           	callstack 0
  6494                           
  6495 ;; *************** function _strcat *****************
  6496 ;; Defined at:
  6497 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  to              2   24[COMRAM] PTR unsigned char 
  6500 ;;		 -> filename(15), 
  6501 ;;  from            2   26[COMRAM] PTR const unsigned char 
  6502 ;;		 -> STR_13(5), 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  cp              2   28[COMRAM] PTR unsigned char 
  6505 ;;		 -> filename(15), 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  2   24[COMRAM] PTR unsigned char 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6510 ;; Tracked objects:
  6511 ;;		On entry : 3F/0
  6512 ;;		On exit  : 3F/0
  6513 ;;		Unchanged: 3F/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6515 ;;      Params:         4       0       0       0       0       0       0       0       0
  6516 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6518 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6519 ;;Total ram usage:        6 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    3
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_escrita_sdcard
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text28
  6530  004E38                     __ptext28:
  6531                           	callstack 0
  6532  004E38                     _strcat:
  6533                           	callstack 24
  6534                           
  6535                           ; BSR set to: 0
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;incstack = 0
  6539  004E38  C019  F01D         	movff	strcat@to,strcat@cp
  6540  004E3C  C01A  F01E         	movff	strcat@to+1,strcat@cp+1
  6541  004E40  D002               	goto	l10977
  6542  004E42                     l10975:
  6543                           
  6544                           ; BSR set to: 0
  6545  004E42  4A1D               	infsnz	strcat@cp^0,f,c
  6546  004E44  2A1E               	incf	(strcat@cp+1)^0,f,c
  6547  004E46                     l10977:
  6548                           
  6549                           ; BSR set to: 0
  6550  004E46  C01D  FFD9         	movff	strcat@cp,fsr2l
  6551  004E4A  C01E  FFDA         	movff	strcat@cp+1,fsr2h
  6552  004E4E  50DF               	movf	indf2,w,c
  6553  004E50  B4D8               	btfsc	status,2,c
  6554  004E52  D005               	goto	l10981
  6555  004E54  D7F6               	goto	l10975
  6556  004E56                     l10979:
  6557                           
  6558                           ; BSR set to: 0
  6559  004E56  4A1D               	infsnz	strcat@cp^0,f,c
  6560  004E58  2A1E               	incf	(strcat@cp+1)^0,f,c
  6561  004E5A  4A1B               	infsnz	strcat@from^0,f,c
  6562  004E5C  2A1C               	incf	(strcat@from+1)^0,f,c
  6563  004E5E                     l10981:
  6564                           
  6565                           ; BSR set to: 0
  6566  004E5E  C01B  FFF6         	movff	strcat@from,tblptrl
  6567  004E62  C01C  FFF7         	movff	strcat@from+1,tblptrh
  6568  004E66                     	if	0	;tblptru may be non-zero
  6569  004E66                     	endif
  6570  004E66                     	if	0	;tblptru may be non-zero
  6571  004E66                     	endif
  6572  004E66  C01D  FFD9         	movff	strcat@cp,fsr2l
  6573  004E6A  C01E  FFDA         	movff	strcat@cp+1,fsr2h
  6574  004E6E  0008               	tblrd		*
  6575  004E70  CFF5 FFDF          	movff	tablat,indf2
  6576  004E74  50DF               	movf	indf2,w,c
  6577  004E76  B4D8               	btfsc	status,2,c
  6578  004E78  0012               	return	
  6579  004E7A  D7ED               	goto	l10979
  6580  004E7C                     __end_of_strcat:
  6581                           	callstack 0
  6582                           
  6583 ;; *************** function _inicializa_uart *****************
  6584 ;; Defined at:
  6585 ;;		line 206 in file "bibliotecas/uart.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  1    wreg      void 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/1
  6596 ;;		On exit  : 3F/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6599 ;;      Params:         0       0       0       0       0       0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6602 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    5
  6606 ;; This function calls:
  6607 ;;		_configura_baudrate_uart
  6608 ;; This function is called by:
  6609 ;;		_escrita_sdcard
  6610 ;;		_main
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text29
  6615  0051D0                     __ptext29:
  6616                           	callstack 0
  6617  0051D0                     _inicializa_uart:
  6618                           	callstack 25
  6619                           
  6620                           ;uart.c: 208: TRISCbits.RC6 = 0;
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;incstack = 0
  6624  0051D0  9C94               	bcf	148,6,c	;volatile
  6625                           
  6626                           ;uart.c: 209: TRISCbits.RC7 = 0;
  6627  0051D2  9E94               	bcf	148,7,c	;volatile
  6628                           
  6629                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  6630  0051D4  0E80               	movlw	128
  6631  0051D6  6E27               	movwf	configura_baudrate_uart@baudrate^0,c
  6632  0051D8  0E25               	movlw	37
  6633  0051DA  6E28               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  6634  0051DC  0E00               	movlw	0
  6635  0051DE  6E29               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  6636  0051E0  0E00               	movlw	0
  6637  0051E2  6E2A               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  6638  0051E4  EC82  F01E         	call	_configura_baudrate_uart	;wreg free
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;uart.c: 213: TXSTA = 0x20;
  6642  0051E8  0E20               	movlw	32
  6643  0051EA  6EAC               	movwf	172,c	;volatile
  6644                           
  6645                           ; BSR set to: 0
  6646                           ;uart.c: 214: RCSTA = 0x90;
  6647  0051EC  0E90               	movlw	144
  6648  0051EE  6EAB               	movwf	171,c	;volatile
  6649                           
  6650                           ; BSR set to: 0
  6651  0051F0  0012               	return		;funcret
  6652  0051F2                     __end_of_inicializa_uart:
  6653                           	callstack 0
  6654                           
  6655 ;; *************** function _configura_baudrate_uart *****************
  6656 ;; Defined at:
  6657 ;;		line 50 in file "bibliotecas/uart.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  baudrate        4   38[COMRAM] const long 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  x               2    0[BANK0 ] unsigned int 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      unsigned char 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0, cstack
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/1
  6668 ;;		On exit  : 3F/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6671 ;;      Params:         4       0       0       0       0       0       0       0       0
  6672 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6673 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6674 ;;      Totals:        12       2       0       0       0       0       0       0       0
  6675 ;;Total ram usage:       14 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    4
  6678 ;; This function calls:
  6679 ;;		___aldiv
  6680 ;; This function is called by:
  6681 ;;		_inicializa_uart
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text30
  6686  003D04                     __ptext30:
  6687                           	callstack 0
  6688  003D04                     _configura_baudrate_uart:
  6689                           	callstack 25
  6690                           
  6691                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;incstack = 0
  6695  003D04  C027  F02B         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  6696  003D08  C028  F02C         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  6697  003D0C  C029  F02D         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  6698  003D10  C02A  F02E         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  6699  003D14  0E06               	movlw	6
  6700  003D16                     u13175:
  6701  003D16  90D8               	bcf	status,0,c
  6702  003D18  362B               	rlcf	??_configura_baudrate_uart^0,f,c
  6703  003D1A  362C               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  6704  003D1C  362D               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  6705  003D1E  362E               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  6706  003D20  2EE8               	decfsz	wreg,f,c
  6707  003D22  D7F9               	goto	u13175
  6708  003D24  502B               	movf	??_configura_baudrate_uart^0,w,c
  6709  003D26  0800               	sublw	0
  6710  003D28  6E19               	movwf	___aldiv@dividend^0,c
  6711  003D2A  0E6C               	movlw	108
  6712  003D2C  542C               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  6713  003D2E  6E1A               	movwf	(___aldiv@dividend+1)^0,c
  6714  003D30  0EDC               	movlw	220
  6715  003D32  542D               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  6716  003D34  6E1B               	movwf	(___aldiv@dividend+2)^0,c
  6717  003D36  0E02               	movlw	2
  6718  003D38  542E               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  6719  003D3A  6E1C               	movwf	(___aldiv@dividend+3)^0,c
  6720  003D3C  C027  F02F         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  6721  003D40  C028  F030         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  6722  003D44  C029  F031         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  6723  003D48  C02A  F032         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  6724  003D4C  0E06               	movlw	6
  6725  003D4E                     u13185:
  6726  003D4E  90D8               	bcf	status,0,c
  6727  003D50  362F               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  6728  003D52  3630               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  6729  003D54  3631               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  6730  003D56  3632               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  6731  003D58  2EE8               	decfsz	wreg,f,c
  6732  003D5A  D7F9               	goto	u13185
  6733  003D5C  C02F  F01D         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  6734  003D60  C030  F01E         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  6735  003D64  C031  F01F         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  6736  003D68  C032  F020         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  6737  003D6C  ECF5  F01F         	call	___aldiv	;wreg free
  6738  003D70  C019  F060         	movff	?___aldiv,configura_baudrate_uart@x
  6739  003D74  C01A  F061         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  6740                           
  6741                           ;uart.c: 55: if(x > 255)
  6742  003D78  0100               	movlb	0	; () banked
  6743  003D7A  0561               	decf	(configura_baudrate_uart@x+1)& (0+255),w,b
  6744  003D7C  A0D8               	btfss	status,0,c
  6745  003D7E  D03B               	goto	l10785
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  6749  003D80  C027  F02B         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  6750  003D84  C028  F02C         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  6751  003D88  C029  F02D         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  6752  003D8C  C02A  F02E         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  6753  003D90  0E04               	movlw	4
  6754  003D92                     u13205:
  6755  003D92  90D8               	bcf	status,0,c
  6756  003D94  362B               	rlcf	??_configura_baudrate_uart^0,f,c
  6757  003D96  362C               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  6758  003D98  362D               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  6759  003D9A  362E               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  6760  003D9C  2EE8               	decfsz	wreg,f,c
  6761  003D9E  D7F9               	goto	u13205
  6762  003DA0  502B               	movf	??_configura_baudrate_uart^0,w,c
  6763  003DA2  0800               	sublw	0
  6764  003DA4  6E19               	movwf	___aldiv@dividend^0,c
  6765  003DA6  0E6C               	movlw	108
  6766  003DA8  542C               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  6767  003DAA  6E1A               	movwf	(___aldiv@dividend+1)^0,c
  6768  003DAC  0EDC               	movlw	220
  6769  003DAE  542D               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  6770  003DB0  6E1B               	movwf	(___aldiv@dividend+2)^0,c
  6771  003DB2  0E02               	movlw	2
  6772  003DB4  542E               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  6773  003DB6  6E1C               	movwf	(___aldiv@dividend+3)^0,c
  6774  003DB8  C027  F02F         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  6775  003DBC  C028  F030         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  6776  003DC0  C029  F031         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  6777  003DC4  C02A  F032         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  6778  003DC8  0E04               	movlw	4
  6779  003DCA                     u13215:
  6780  003DCA  90D8               	bcf	status,0,c
  6781  003DCC  362F               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  6782  003DCE  3630               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  6783  003DD0  3631               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  6784  003DD2  3632               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  6785  003DD4  2EE8               	decfsz	wreg,f,c
  6786  003DD6  D7F9               	goto	u13215
  6787  003DD8  C02F  F01D         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  6788  003DDC  C030  F01E         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  6789  003DE0  C031  F01F         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  6790  003DE4  C032  F020         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  6791  003DE8  ECF5  F01F         	call	___aldiv	;wreg free
  6792  003DEC  C019  F060         	movff	?___aldiv,configura_baudrate_uart@x
  6793  003DF0  C01A  F061         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  6794                           
  6795                           ;uart.c: 58: BRGH = 1;
  6796  003DF4  84AC               	bsf	4012,2,c	;volatile
  6797  003DF6                     l10785:
  6798                           
  6799                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  6800  003DF6  0100               	movlb	0	; () banked
  6801  003DF8  0561               	decf	(configura_baudrate_uart@x+1)& (0+255),w,b
  6802  003DFA  B0D8               	btfsc	status,0,c
  6803  003DFC  0012               	return	
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  6807  003DFE  C060  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  6808                           
  6809                           ;uart.c: 63: SYNC = 0;
  6810  003E02  98AC               	bcf	4012,4,c	;volatile
  6811                           
  6812                           ;uart.c: 64: SPEN = 1;
  6813  003E04  8EAB               	bsf	4011,7,c	;volatile
  6814                           
  6815                           ;uart.c: 65: TRISCbits.RC7 = 1;
  6816  003E06  8E94               	bsf	148,7,c	;volatile
  6817                           
  6818                           ;uart.c: 66: TRISCbits.RC6 = 0;
  6819  003E08  9C94               	bcf	148,6,c	;volatile
  6820                           
  6821                           ;uart.c: 67: CREN = 1;
  6822  003E0A  88AB               	bsf	4011,4,c	;volatile
  6823                           
  6824                           ;uart.c: 68: TXEN = 1;
  6825  003E0C  8AAC               	bsf	4012,5,c	;volatile
  6826                           
  6827                           ; BSR set to: 0
  6828                           
  6829                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  6830  003E0E  0012               	return		;funcret
  6831  003E10                     __end_of_configura_baudrate_uart:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function ___aldiv *****************
  6835 ;; Defined at:
  6836 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  dividend        4   24[COMRAM] long 
  6839 ;;  divisor         4   28[COMRAM] long 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  quotient        4   34[COMRAM] long 
  6842 ;;  sign            1   33[COMRAM] unsigned char 
  6843 ;;  counter         1   32[COMRAM] unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  4   24[COMRAM] long 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/1
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6853 ;;      Params:         8       0       0       0       0       0       0       0       0
  6854 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6856 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6857 ;;Total ram usage:       14 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    3
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_configura_baudrate_uart
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text31
  6868  003FEA                     __ptext31:
  6869                           	callstack 0
  6870  003FEA                     ___aldiv:
  6871                           	callstack 25
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;incstack = 0
  6875  003FEA  0E00               	movlw	0
  6876  003FEC  6E22               	movwf	___aldiv@sign^0,c
  6877  003FEE  AE20               	btfss	(___aldiv@divisor+3)^0,7,c
  6878  003FF0  D00A               	goto	l10359
  6879  003FF2  1E20               	comf	(___aldiv@divisor+3)^0,f,c
  6880  003FF4  1E1F               	comf	(___aldiv@divisor+2)^0,f,c
  6881  003FF6  1E1E               	comf	(___aldiv@divisor+1)^0,f,c
  6882  003FF8  6C1D               	negf	___aldiv@divisor^0,c
  6883  003FFA  0E00               	movlw	0
  6884  003FFC  221E               	addwfc	(___aldiv@divisor+1)^0,f,c
  6885  003FFE  221F               	addwfc	(___aldiv@divisor+2)^0,f,c
  6886  004000  2220               	addwfc	(___aldiv@divisor+3)^0,f,c
  6887  004002  0E01               	movlw	1
  6888  004004  6E22               	movwf	___aldiv@sign^0,c
  6889  004006                     l10359:
  6890  004006  AE1C               	btfss	(___aldiv@dividend+3)^0,7,c
  6891  004008  D00A               	goto	l10365
  6892  00400A  1E1C               	comf	(___aldiv@dividend+3)^0,f,c
  6893  00400C  1E1B               	comf	(___aldiv@dividend+2)^0,f,c
  6894  00400E  1E1A               	comf	(___aldiv@dividend+1)^0,f,c
  6895  004010  6C19               	negf	___aldiv@dividend^0,c
  6896  004012  0E00               	movlw	0
  6897  004014  221A               	addwfc	(___aldiv@dividend+1)^0,f,c
  6898  004016  221B               	addwfc	(___aldiv@dividend+2)^0,f,c
  6899  004018  221C               	addwfc	(___aldiv@dividend+3)^0,f,c
  6900  00401A  0E01               	movlw	1
  6901  00401C  1A22               	xorwf	___aldiv@sign^0,f,c
  6902  00401E                     l10365:
  6903  00401E  0E00               	movlw	0
  6904  004020  6E23               	movwf	___aldiv@quotient^0,c
  6905  004022  0E00               	movlw	0
  6906  004024  6E24               	movwf	(___aldiv@quotient+1)^0,c
  6907  004026  0E00               	movlw	0
  6908  004028  6E25               	movwf	(___aldiv@quotient+2)^0,c
  6909  00402A  0E00               	movlw	0
  6910  00402C  6E26               	movwf	(___aldiv@quotient+3)^0,c
  6911  00402E  501D               	movf	___aldiv@divisor^0,w,c
  6912  004030  101E               	iorwf	(___aldiv@divisor+1)^0,w,c
  6913  004032  101F               	iorwf	(___aldiv@divisor+2)^0,w,c
  6914  004034  1020               	iorwf	(___aldiv@divisor+3)^0,w,c
  6915  004036  B4D8               	btfsc	status,2,c
  6916  004038  D02A               	goto	l10387
  6917  00403A  0E01               	movlw	1
  6918  00403C  6E21               	movwf	___aldiv@counter^0,c
  6919  00403E  D006               	goto	l10373
  6920  004040                     l10371:
  6921  004040  90D8               	bcf	status,0,c
  6922  004042  361D               	rlcf	___aldiv@divisor^0,f,c
  6923  004044  361E               	rlcf	(___aldiv@divisor+1)^0,f,c
  6924  004046  361F               	rlcf	(___aldiv@divisor+2)^0,f,c
  6925  004048  3620               	rlcf	(___aldiv@divisor+3)^0,f,c
  6926  00404A  2A21               	incf	___aldiv@counter^0,f,c
  6927  00404C                     l10373:
  6928  00404C  AE20               	btfss	(___aldiv@divisor+3)^0,7,c
  6929  00404E  D7F8               	goto	l10371
  6930  004050                     u12480:
  6931  004050  90D8               	bcf	status,0,c
  6932  004052  3623               	rlcf	___aldiv@quotient^0,f,c
  6933  004054  3624               	rlcf	(___aldiv@quotient+1)^0,f,c
  6934  004056  3625               	rlcf	(___aldiv@quotient+2)^0,f,c
  6935  004058  3626               	rlcf	(___aldiv@quotient+3)^0,f,c
  6936  00405A  501D               	movf	___aldiv@divisor^0,w,c
  6937  00405C  5C19               	subwf	___aldiv@dividend^0,w,c
  6938  00405E  501E               	movf	(___aldiv@divisor+1)^0,w,c
  6939  004060  581A               	subwfb	(___aldiv@dividend+1)^0,w,c
  6940  004062  501F               	movf	(___aldiv@divisor+2)^0,w,c
  6941  004064  581B               	subwfb	(___aldiv@dividend+2)^0,w,c
  6942  004066  5020               	movf	(___aldiv@divisor+3)^0,w,c
  6943  004068  581C               	subwfb	(___aldiv@dividend+3)^0,w,c
  6944  00406A  A0D8               	btfss	status,0,c
  6945  00406C  D009               	goto	l10383
  6946  00406E  501D               	movf	___aldiv@divisor^0,w,c
  6947  004070  5E19               	subwf	___aldiv@dividend^0,f,c
  6948  004072  501E               	movf	(___aldiv@divisor+1)^0,w,c
  6949  004074  5A1A               	subwfb	(___aldiv@dividend+1)^0,f,c
  6950  004076  501F               	movf	(___aldiv@divisor+2)^0,w,c
  6951  004078  5A1B               	subwfb	(___aldiv@dividend+2)^0,f,c
  6952  00407A  5020               	movf	(___aldiv@divisor+3)^0,w,c
  6953  00407C  5A1C               	subwfb	(___aldiv@dividend+3)^0,f,c
  6954  00407E  8023               	bsf	___aldiv@quotient^0,0,c
  6955  004080                     l10383:
  6956  004080  90D8               	bcf	status,0,c
  6957  004082  3220               	rrcf	(___aldiv@divisor+3)^0,f,c
  6958  004084  321F               	rrcf	(___aldiv@divisor+2)^0,f,c
  6959  004086  321E               	rrcf	(___aldiv@divisor+1)^0,f,c
  6960  004088  321D               	rrcf	___aldiv@divisor^0,f,c
  6961  00408A  2E21               	decfsz	___aldiv@counter^0,f,c
  6962  00408C  D7E1               	goto	u12480
  6963  00408E                     l10387:
  6964  00408E  5022               	movf	___aldiv@sign^0,w,c
  6965  004090  B4D8               	btfsc	status,2,c
  6966  004092  D008               	goto	l10391
  6967  004094  1E26               	comf	(___aldiv@quotient+3)^0,f,c
  6968  004096  1E25               	comf	(___aldiv@quotient+2)^0,f,c
  6969  004098  1E24               	comf	(___aldiv@quotient+1)^0,f,c
  6970  00409A  6C23               	negf	___aldiv@quotient^0,c
  6971  00409C  0E00               	movlw	0
  6972  00409E  2224               	addwfc	(___aldiv@quotient+1)^0,f,c
  6973  0040A0  2225               	addwfc	(___aldiv@quotient+2)^0,f,c
  6974  0040A2  2226               	addwfc	(___aldiv@quotient+3)^0,f,c
  6975  0040A4                     l10391:
  6976  0040A4  C023  F019         	movff	___aldiv@quotient,?___aldiv
  6977  0040A8  C024  F01A         	movff	___aldiv@quotient+1,?___aldiv+1
  6978  0040AC  C025  F01B         	movff	___aldiv@quotient+2,?___aldiv+2
  6979  0040B0  C026  F01C         	movff	___aldiv@quotient+3,?___aldiv+3
  6980  0040B4  0012               	return		;funcret
  6981  0040B6                     __end_of___aldiv:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function _inicializa_SPI *****************
  6985 ;; Defined at:
  6986 ;;		line 48 in file "bibliotecas/SPI.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 3F/0
  6997 ;;		On exit  : 3F/0
  6998 ;;		Unchanged: 3F/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7004 ;;Total ram usage:        0 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    3
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_escrita_sdcard
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text32
  7015  00529C                     __ptext32:
  7016                           	callstack 0
  7017  00529C                     _inicializa_SPI:
  7018                           	callstack 24
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  7022                           
  7023                           ;incstack = 0
  7024  00529C  9293               	bcf	147,1,c	;volatile
  7025                           
  7026                           ;SPI.c: 51: TRISBbits.RB4 = 0;
  7027  00529E  9893               	bcf	147,4,c	;volatile
  7028                           
  7029                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  7030  0052A0  8093               	bsf	147,0,c	;volatile
  7031                           
  7032                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  7033  0052A2  9E94               	bcf	148,7,c	;volatile
  7034                           
  7035                           ;SPI.c: 55: LATBbits.LATB4 = 1;
  7036  0052A4  888A               	bsf	138,4,c	;volatile
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  7040  0052A6  0E3F               	movlw	63
  7041  0052A8  16C7               	andwf	199,f,c	;volatile
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;SPI.c: 57: SSPCON1 = 0x00;
  7045  0052AA  0E00               	movlw	0
  7046  0052AC  6EC6               	movwf	198,c	;volatile
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  7050  0052AE  9EC7               	bcf	199,7,c	;volatile
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  7054  0052B0  8CC7               	bsf	199,6,c	;volatile
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  7058  0052B2  98C6               	bcf	198,4,c	;volatile
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  7062  0052B4  0E03               	movlw	3
  7063  0052B6  6EC6               	movwf	198,c	;volatile
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  7067  0052B8  8AC6               	bsf	198,5,c	;volatile
  7068                           
  7069                           ; BSR set to: 0
  7070  0052BA  0012               	return		;funcret
  7071  0052BC                     __end_of_inicializa_SPI:
  7072                           	callstack 0
  7073                           
  7074 ;; *************** function _fprintf *****************
  7075 ;; Defined at:
  7076 ;;		line 1816 in file "bibliotecas/tff.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  fil             2  122[BANK0 ] PTR struct _FIL
  7079 ;;		 -> fil(28), 
  7080 ;;  str             2  124[BANK0 ] PTR const unsigned char 
  7081 ;;		 -> STR_14(35), 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;  s              16    0[BANK3 ] unsigned char [16]
  7084 ;;  val             4   24[BANK3 ] unsigned long 
  7085 ;;  i               2   31[BANK3 ] int 
  7086 ;;  cc              2   29[BANK3 ] int 
  7087 ;;  w               2   20[BANK3 ] int 
  7088 ;;  res             2   16[BANK3 ] int 
  7089 ;;  c               1   33[BANK3 ] unsigned char 
  7090 ;;  arp             1   28[BANK3 ] PTR void [1]
  7091 ;;		 -> ?_fprintf(2), 
  7092 ;;  r               1   23[BANK3 ] unsigned char 
  7093 ;;  f               1   22[BANK3 ] unsigned char 
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  2  122[BANK0 ] int 
  7096 ;; Registers used:
  7097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7098 ;; Tracked objects:
  7099 ;;		On entry : 3F/0
  7100 ;;		On exit  : 3F/3
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7103 ;;      Params:         0      20       0       0       0       0       0       0       0
  7104 ;;      Locals:         0       0       0       0      34       0       0       0       0
  7105 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7106 ;;      Totals:         0      22       0       0      34       0       0       0       0
  7107 ;;Total ram usage:       56 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; Hardware stack levels required when called:   14
  7110 ;; This function calls:
  7111 ;;		___lldiv
  7112 ;;		___llmod
  7113 ;;		___wmul
  7114 ;;		_fputc
  7115 ;;		_fputs
  7116 ;; This function is called by:
  7117 ;;		_escrita_sdcard
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text33
  7122  00165A                     __ptext33:
  7123                           	callstack 0
  7124  00165A                     _fprintf:
  7125                           	callstack 13
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;incstack = 0
  7132  00165A  0EDE               	movlw	low (?_fprintf+4)
  7133  00165C  0103               	movlb	3	; () banked
  7134  00165E  6F1C               	movwf	fprintf@arp& (0+255),b
  7135                           
  7136                           ; BSR set to: 3
  7137                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  7138  001660  0E00               	movlw	0
  7139  001662  6F11               	movwf	(fprintf@res+1)& (0+255),b
  7140  001664  0E00               	movlw	0
  7141  001666  6F10               	movwf	fprintf@res& (0+255),b
  7142  001668  C310  F31D         	movff	fprintf@res,fprintf@cc
  7143  00166C  C311  F31E         	movff	fprintf@res+1,fprintf@cc+1
  7144  001670                     l11067:
  7145                           
  7146                           ; BSR set to: 3
  7147  001670  291D               	incf	fprintf@cc& (0+255),w,b
  7148  001672  E103               	bnz	l11071
  7149  001674  291E               	incf	(fprintf@cc+1)& (0+255),w,b
  7150  001676  B4D8               	btfsc	status,2,c
  7151  001678  0012               	return	
  7152  00167A                     l11071:
  7153                           
  7154                           ; BSR set to: 3
  7155                           ;tff.c: 1832: c = *str++;
  7156  00167A  C0DC  FFF6         	movff	fprintf@str,tblptrl
  7157  00167E  C0DD  FFF7         	movff	fprintf@str+1,tblptrh
  7158  001682                     	if	0	;tblptru may be non-zero
  7159  001682                     	endif
  7160  001682                     	if	0	;tblptru may be non-zero
  7161  001682                     	endif
  7162  001682  0008               	tblrd		*
  7163  001684  CFF5 F321          	movff	tablat,fprintf@c
  7164                           
  7165                           ; BSR set to: 3
  7166  001688  0100               	movlb	0	; () banked
  7167  00168A  4BDC               	infsnz	fprintf@str& (0+255),f,b
  7168  00168C  2BDD               	incf	(fprintf@str+1)& (0+255),f,b
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;tff.c: 1833: if (c == 0) break;
  7172  00168E  0103               	movlb	3	; () banked
  7173  001690  5121               	movf	fprintf@c& (0+255),w,b
  7174  001692  B4D8               	btfsc	status,2,c
  7175  001694  0012               	return	
  7176                           
  7177                           ; BSR set to: 3
  7178                           ;tff.c: 1834: if (c != '%') {
  7179  001696  0E25               	movlw	37
  7180  001698  1921               	xorwf	fprintf@c& (0+255),w,b
  7181  00169A  B4D8               	btfsc	status,2,c
  7182  00169C  D019               	goto	l11087
  7183                           
  7184                           ; BSR set to: 3
  7185                           ;tff.c: 1835: cc = fputc(c, fil);
  7186  00169E  C321  F0CC         	movff	fprintf@c,fputc@chr
  7187  0016A2  0100               	movlb	0	; () banked
  7188  0016A4  6BCD               	clrf	(fputc@chr+1)& (0+255),b
  7189  0016A6  C0DA  F0CE         	movff	fprintf@fil,fputc@fil
  7190  0016AA  C0DB  F0CF         	movff	fprintf@fil+1,fputc@fil+1
  7191  0016AE  EC81  F027         	call	_fputc	;wreg free
  7192  0016B2  C0CC  F31D         	movff	?_fputc,fprintf@cc
  7193  0016B6  C0CD  F31E         	movff	?_fputc+1,fprintf@cc+1
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;tff.c: 1836: if (cc != -1) cc = 1;
  7197  0016BA  0103               	movlb	3	; () banked
  7198  0016BC  291D               	incf	fprintf@cc& (0+255),w,b
  7199  0016BE  E103               	bnz	u13730
  7200  0016C0  291E               	incf	(fprintf@cc+1)& (0+255),w,b
  7201  0016C2  B4D8               	btfsc	status,2,c
  7202  0016C4  D183               	goto	l11211
  7203  0016C6                     u13730:
  7204                           
  7205                           ; BSR set to: 3
  7206  0016C6  0E00               	movlw	0
  7207  0016C8  6F1E               	movwf	(fprintf@cc+1)& (0+255),b
  7208  0016CA  0E01               	movlw	1
  7209  0016CC  6F1D               	movwf	fprintf@cc& (0+255),b
  7210  0016CE  D17E               	goto	l11211
  7211  0016D0                     l11087:
  7212                           
  7213                           ; BSR set to: 3
  7214                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  7215  0016D0  0E00               	movlw	0
  7216  0016D2  6F16               	movwf	fprintf@f& (0+255),b
  7217  0016D4  C316  F314         	movff	fprintf@f,fprintf@w
  7218  0016D8  6B15               	clrf	(fprintf@w+1)& (0+255),b
  7219                           
  7220                           ; BSR set to: 3
  7221                           ;tff.c: 1840: c = *str++;
  7222  0016DA  C0DC  FFF6         	movff	fprintf@str,tblptrl
  7223  0016DE  C0DD  FFF7         	movff	fprintf@str+1,tblptrh
  7224  0016E2                     	if	0	;tblptru may be non-zero
  7225  0016E2                     	endif
  7226  0016E2                     	if	0	;tblptru may be non-zero
  7227  0016E2                     	endif
  7228  0016E2  0008               	tblrd		*
  7229  0016E4  CFF5 F321          	movff	tablat,fprintf@c
  7230                           
  7231                           ; BSR set to: 3
  7232  0016E8  0100               	movlb	0	; () banked
  7233  0016EA  4BDC               	infsnz	fprintf@str& (0+255),f,b
  7234  0016EC  2BDD               	incf	(fprintf@str+1)& (0+255),f,b
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;tff.c: 1841: if (c == '0') {
  7238  0016EE  0E30               	movlw	48
  7239  0016F0  0103               	movlb	3	; () banked
  7240  0016F2  1921               	xorwf	fprintf@c& (0+255),w,b
  7241  0016F4  A4D8               	btfss	status,2,c
  7242  0016F6  D023               	goto	l11107
  7243                           
  7244                           ; BSR set to: 3
  7245                           ;tff.c: 1842: f = 1; c = *str++;
  7246  0016F8  0E01               	movlw	1
  7247  0016FA  6F16               	movwf	fprintf@f& (0+255),b
  7248  0016FC                     l11097:
  7249                           
  7250                           ; BSR set to: 3
  7251  0016FC  C0DC  FFF6         	movff	fprintf@str,tblptrl
  7252  001700  C0DD  FFF7         	movff	fprintf@str+1,tblptrh
  7253  001704                     	if	0	;tblptru may be non-zero
  7254  001704                     	endif
  7255  001704                     	if	0	;tblptru may be non-zero
  7256  001704                     	endif
  7257  001704  0008               	tblrd		*
  7258  001706  CFF5 F321          	movff	tablat,fprintf@c
  7259                           
  7260                           ; BSR set to: 3
  7261  00170A  0100               	movlb	0	; () banked
  7262  00170C  4BDC               	infsnz	fprintf@str& (0+255),f,b
  7263  00170E  2BDD               	incf	(fprintf@str+1)& (0+255),f,b
  7264  001710  D016               	goto	l11107
  7265  001712                     l11101:
  7266                           
  7267                           ; BSR set to: 3
  7268                           ;tff.c: 1845: w = w * 10 + (c - '0');
  7269  001712  C314  F019         	movff	fprintf@w,___wmul@multiplier
  7270  001716  C315  F01A         	movff	fprintf@w+1,___wmul@multiplier+1
  7271  00171A  0E00               	movlw	0
  7272  00171C  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
  7273  00171E  0E0A               	movlw	10
  7274  001720  6E1B               	movwf	___wmul@multiplicand^0,c
  7275  001722  ECC3  F028         	call	___wmul	;wreg free
  7276  001726  0103               	movlb	3	; () banked
  7277  001728  5121               	movf	fprintf@c& (0+255),w,b
  7278  00172A  2619               	addwf	?___wmul^0,f,c
  7279  00172C  0E00               	movlw	0
  7280  00172E  221A               	addwfc	(?___wmul+1)^0,f,c
  7281  001730  0ED0               	movlw	208
  7282  001732  2419               	addwf	?___wmul^0,w,c
  7283  001734  6F14               	movwf	fprintf@w& (0+255),b
  7284  001736  0EFF               	movlw	255
  7285  001738  201A               	addwfc	(?___wmul+1)^0,w,c
  7286  00173A  6F15               	movwf	(fprintf@w+1)& (0+255),b
  7287  00173C  D7DF               	goto	l11097
  7288  00173E                     l11107:
  7289  00173E  0E2F               	movlw	47
  7290  001740  0103               	movlb	3	; () banked
  7291  001742  6521               	cpfsgt	fprintf@c& (0+255),b
  7292  001744  D003               	goto	u13760
  7293                           
  7294                           ; BSR set to: 3
  7295  001746  0E39               	movlw	57
  7296  001748  6521               	cpfsgt	fprintf@c& (0+255),b
  7297  00174A  D7E3               	goto	l11101
  7298  00174C                     u13760:
  7299                           
  7300                           ; BSR set to: 3
  7301                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  7302  00174C  0E6C               	movlw	108
  7303  00174E  1921               	xorwf	fprintf@c& (0+255),w,b
  7304  001750  A4D8               	btfss	status,2,c
  7305  001752  D00B               	goto	l11119
  7306                           
  7307                           ; BSR set to: 3
  7308                           ;tff.c: 1849: f |= 2; c = *str++;
  7309  001754  8316               	bsf	fprintf@f& (0+255),1,b
  7310                           
  7311                           ; BSR set to: 3
  7312  001756  C0DC  FFF6         	movff	fprintf@str,tblptrl
  7313  00175A  C0DD  FFF7         	movff	fprintf@str+1,tblptrh
  7314  00175E                     	if	0	;tblptru may be non-zero
  7315  00175E                     	endif
  7316  00175E                     	if	0	;tblptru may be non-zero
  7317  00175E                     	endif
  7318  00175E  0008               	tblrd		*
  7319  001760  CFF5 F321          	movff	tablat,fprintf@c
  7320                           
  7321                           ; BSR set to: 3
  7322  001764  0100               	movlb	0	; () banked
  7323  001766  4BDC               	infsnz	fprintf@str& (0+255),f,b
  7324  001768  2BDD               	incf	(fprintf@str+1)& (0+255),f,b
  7325  00176A                     l11119:
  7326                           
  7327                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  7328  00176A  0E73               	movlw	115
  7329  00176C  0103               	movlb	3	; () banked
  7330  00176E  1921               	xorwf	fprintf@c& (0+255),w,b
  7331  001770  A4D8               	btfss	status,2,c
  7332  001772  D015               	goto	l11125
  7333                           
  7334                           ; BSR set to: 3
  7335                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  7336  001774  511C               	movf	fprintf@arp& (0+255),w,b
  7337  001776  6ED9               	movwf	fsr2l,c
  7338  001778  6ADA               	clrf	fsr2h,c
  7339  00177A  CFDE F0D3          	movff	postinc2,fputs@str
  7340  00177E  CFDD F0D4          	movff	postdec2,fputs@str+1
  7341  001782  C0DA  F0D5         	movff	fprintf@fil,fputs@fil
  7342  001786  C0DB  F0D6         	movff	fprintf@fil+1,fputs@fil+1
  7343  00178A  EC17  F023         	call	_fputs	;wreg free
  7344  00178E  C0D3  F31D         	movff	?_fputs,fprintf@cc
  7345  001792  C0D4  F31E         	movff	?_fputs+1,fprintf@cc+1
  7346  001796  0E02               	movlw	2
  7347  001798  0103               	movlb	3	; () banked
  7348  00179A  271C               	addwf	fprintf@arp& (0+255),f,b
  7349                           
  7350                           ;tff.c: 1853: continue;
  7351  00179C  D117               	goto	l11211
  7352  00179E                     l11125:
  7353                           
  7354                           ; BSR set to: 3
  7355                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  7356  00179E  0E63               	movlw	99
  7357  0017A0  1921               	xorwf	fprintf@c& (0+255),w,b
  7358  0017A2  A4D8               	btfss	status,2,c
  7359  0017A4  D01D               	goto	l11135
  7360                           
  7361                           ; BSR set to: 3
  7362                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  7363  0017A6  511C               	movf	fprintf@arp& (0+255),w,b
  7364  0017A8  6ED9               	movwf	fsr2l,c
  7365  0017AA  6ADA               	clrf	fsr2h,c
  7366  0017AC  50DF               	movf	indf2,w,c
  7367  0017AE  0100               	movlb	0	; () banked
  7368  0017B0  6FEE               	movwf	??_fprintf& (0+255),b
  7369  0017B2  51EE               	movf	??_fprintf& (0+255),w,b
  7370  0017B4  6FCC               	movwf	fputc@chr& (0+255),b
  7371  0017B6  6BCD               	clrf	(fputc@chr+1)& (0+255),b
  7372  0017B8  C0DA  F0CE         	movff	fprintf@fil,fputc@fil
  7373  0017BC  C0DB  F0CF         	movff	fprintf@fil+1,fputc@fil+1
  7374  0017C0  EC81  F027         	call	_fputc	;wreg free
  7375  0017C4  C0CC  F31D         	movff	?_fputc,fprintf@cc
  7376  0017C8  C0CD  F31E         	movff	?_fputc+1,fprintf@cc+1
  7377                           
  7378                           ; BSR set to: 0
  7379  0017CC  0E02               	movlw	2
  7380  0017CE  0103               	movlb	3	; () banked
  7381  0017D0  271C               	addwf	fprintf@arp& (0+255),f,b
  7382                           
  7383                           ; BSR set to: 3
  7384                           ;tff.c: 1857: if (cc != -1) cc = 1;
  7385  0017D2  291D               	incf	fprintf@cc& (0+255),w,b
  7386  0017D4  E104               	bnz	u13800
  7387  0017D6  291E               	incf	(fprintf@cc+1)& (0+255),w,b
  7388  0017D8  A4D8               	btfss	status,2,c
  7389  0017DA  D775               	goto	u13730
  7390  0017DC  D0F7               	goto	l11211
  7391  0017DE                     u13800:
  7392  0017DE  D773               	goto	u13730
  7393  0017E0                     l11135:
  7394                           
  7395                           ; BSR set to: 3
  7396                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  7397  0017E0  0E00               	movlw	0
  7398  0017E2  6F17               	movwf	fprintf@r& (0+255),b
  7399                           
  7400                           ; BSR set to: 3
  7401                           ;tff.c: 1861: if (c == 'd') r = 10;
  7402  0017E4  0E64               	movlw	100
  7403  0017E6  1921               	xorwf	fprintf@c& (0+255),w,b
  7404  0017E8  A4D8               	btfss	status,2,c
  7405  0017EA  D002               	goto	l11141
  7406                           
  7407                           ; BSR set to: 3
  7408  0017EC  0E0A               	movlw	10
  7409  0017EE  6F17               	movwf	fprintf@r& (0+255),b
  7410  0017F0                     l11141:
  7411                           
  7412                           ; BSR set to: 3
  7413                           ;tff.c: 1862: if (c == 'u') r = 10;
  7414  0017F0  0E75               	movlw	117
  7415  0017F2  1921               	xorwf	fprintf@c& (0+255),w,b
  7416  0017F4  A4D8               	btfss	status,2,c
  7417  0017F6  D002               	goto	l11145
  7418                           
  7419                           ; BSR set to: 3
  7420  0017F8  0E0A               	movlw	10
  7421  0017FA  6F17               	movwf	fprintf@r& (0+255),b
  7422  0017FC                     l11145:
  7423                           
  7424                           ; BSR set to: 3
  7425                           ;tff.c: 1863: if (c == 'X') r = 16;
  7426  0017FC  0E58               	movlw	88
  7427  0017FE  1921               	xorwf	fprintf@c& (0+255),w,b
  7428  001800  A4D8               	btfss	status,2,c
  7429  001802  D002               	goto	l1133
  7430                           
  7431                           ; BSR set to: 3
  7432  001804  0E10               	movlw	16
  7433  001806  6F17               	movwf	fprintf@r& (0+255),b
  7434  001808                     l1133:
  7435                           
  7436                           ; BSR set to: 3
  7437                           ;tff.c: 1864: if (r == 0) break;
  7438  001808  5117               	movf	fprintf@r& (0+255),w,b
  7439  00180A  B4D8               	btfsc	status,2,c
  7440  00180C  0012               	return	
  7441                           
  7442                           ; BSR set to: 3
  7443                           ;tff.c: 1865: if (f & 2) {
  7444  00180E  A316               	btfss	fprintf@f& (0+255),1,b
  7445  001810  D00D               	goto	l11155
  7446                           
  7447                           ; BSR set to: 3
  7448                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  7449  001812  511C               	movf	fprintf@arp& (0+255),w,b
  7450  001814  6ED9               	movwf	fsr2l,c
  7451  001816  6ADA               	clrf	fsr2h,c
  7452  001818  CFDE F318          	movff	postinc2,fprintf@val
  7453  00181C  CFDE F319          	movff	postinc2,fprintf@val+1
  7454  001820  CFDE F31A          	movff	postinc2,fprintf@val+2
  7455  001824  CFDE F31B          	movff	postinc2,fprintf@val+3
  7456                           
  7457                           ; BSR set to: 3
  7458  001828  0E04               	movlw	4
  7459  00182A  D01F               	goto	L1
  7460  00182C                     l11155:
  7461                           
  7462                           ; BSR set to: 3
  7463                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  7464  00182C  0E64               	movlw	100
  7465  00182E  1921               	xorwf	fprintf@c& (0+255),w,b
  7466  001830  B4D8               	btfsc	status,2,c
  7467  001832  D00E               	goto	l11161
  7468                           
  7469                           ; BSR set to: 3
  7470  001834  511C               	movf	fprintf@arp& (0+255),w,b
  7471  001836  6ED9               	movwf	fsr2l,c
  7472  001838  6ADA               	clrf	fsr2h,c
  7473  00183A  CFDE F0EE          	movff	postinc2,??_fprintf
  7474  00183E  CFDD F0EF          	movff	postdec2,??_fprintf+1
  7475  001842  C0EE  F318         	movff	??_fprintf,fprintf@val
  7476  001846  C0EF  F319         	movff	??_fprintf+1,fprintf@val+1
  7477  00184A  6B1A               	clrf	(fprintf@val+2)& (0+255),b
  7478  00184C  6B1B               	clrf	(fprintf@val+3)& (0+255),b
  7479  00184E  D00C               	goto	l11163
  7480  001850                     l11161:
  7481                           
  7482                           ; BSR set to: 3
  7483  001850  511C               	movf	fprintf@arp& (0+255),w,b
  7484  001852  6ED9               	movwf	fsr2l,c
  7485  001854  6ADA               	clrf	fsr2h,c
  7486  001856  CFDE F318          	movff	postinc2,fprintf@val
  7487  00185A  CFDD F319          	movff	postdec2,fprintf@val+1
  7488  00185E  0E00               	movlw	0
  7489  001860  BF19               	btfsc	(fprintf@val+1)& (0+255),7,b
  7490  001862  0EFF               	movlw	-1
  7491  001864  6F1A               	movwf	(fprintf@val+2)& (0+255),b
  7492  001866  6F1B               	movwf	(fprintf@val+3)& (0+255),b
  7493  001868                     l11163:
  7494                           
  7495                           ; BSR set to: 3
  7496  001868  0E02               	movlw	2
  7497  00186A                     L1:
  7498  00186A  271C               	addwf	fprintf@arp& (0+255),f,b
  7499                           
  7500                           ; BSR set to: 3
  7501                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  7502  00186C  0E64               	movlw	100
  7503  00186E  1921               	xorwf	fprintf@c& (0+255),w,b
  7504  001870  A4D8               	btfss	status,2,c
  7505  001872  D00E               	goto	l11173
  7506                           
  7507                           ; BSR set to: 3
  7508                           ;tff.c: 1872: if (val >= 0x80000000) {
  7509  001874  0E80               	movlw	128
  7510  001876  5D1B               	subwf	(fprintf@val+3)& (0+255),w,b
  7511  001878  A0D8               	btfss	status,0,c
  7512  00187A  D00A               	goto	l11173
  7513                           
  7514                           ; BSR set to: 3
  7515                           ;tff.c: 1873: val = 0 - val;
  7516  00187C  6D18               	negf	fprintf@val& (0+255),b
  7517  00187E  1F19               	comf	(fprintf@val+1)& (0+255),f,b
  7518  001880  B0D8               	btfsc	status,0,c
  7519  001882  2B19               	incf	(fprintf@val+1)& (0+255),f,b
  7520  001884  1F1A               	comf	(fprintf@val+2)& (0+255),f,b
  7521  001886  B0D8               	btfsc	status,0,c
  7522  001888  2B1A               	incf	(fprintf@val+2)& (0+255),f,b
  7523  00188A  0E00               	movlw	0
  7524  00188C  571B               	subfwb	(fprintf@val+3)& (0+255),f,b
  7525                           
  7526                           ; BSR set to: 3
  7527                           ;tff.c: 1874: f |= 4;
  7528  00188E  8516               	bsf	fprintf@f& (0+255),2,b
  7529  001890                     l11173:
  7530                           
  7531                           ; BSR set to: 3
  7532                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  7533  001890  0E00               	movlw	0
  7534  001892  6F20               	movwf	(fprintf@i+1)& (0+255),b
  7535  001894  0E0F               	movlw	15
  7536  001896  6F1F               	movwf	fprintf@i& (0+255),b
  7537                           
  7538                           ; BSR set to: 3
  7539  001898  0E00               	movlw	0
  7540  00189A  6F0F               	movwf	(fprintf@s+15)& (0+255),b
  7541  00189C                     l11177:
  7542                           
  7543                           ; BSR set to: 3
  7544                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  7545  00189C  C318  F019         	movff	fprintf@val,___llmod@dividend
  7546  0018A0  C319  F01A         	movff	fprintf@val+1,___llmod@dividend+1
  7547  0018A4  C31A  F01B         	movff	fprintf@val+2,___llmod@dividend+2
  7548  0018A8  C31B  F01C         	movff	fprintf@val+3,___llmod@dividend+3
  7549  0018AC  5117               	movf	fprintf@r& (0+255),w,b
  7550  0018AE  6E1D               	movwf	___llmod@divisor^0,c
  7551  0018B0  6A1E               	clrf	(___llmod@divisor+1)^0,c
  7552  0018B2  6A1F               	clrf	(___llmod@divisor+2)^0,c
  7553  0018B4  6A20               	clrf	(___llmod@divisor+3)^0,c
  7554  0018B6  EC30  F025         	call	___llmod	;wreg free
  7555  0018BA  5019               	movf	?___llmod^0,w,c
  7556  0018BC  0F30               	addlw	48
  7557  0018BE  6F21               	movwf	fprintf@c& (0+255),b
  7558                           
  7559                           ; BSR set to: 3
  7560                           ;tff.c: 1880: if (c > '9') c += 7;
  7561  0018C0  0E39               	movlw	57
  7562  0018C2  6521               	cpfsgt	fprintf@c& (0+255),b
  7563  0018C4  D002               	goto	l11183
  7564                           
  7565                           ; BSR set to: 3
  7566  0018C6  0E07               	movlw	7
  7567  0018C8  2721               	addwf	fprintf@c& (0+255),f,b
  7568  0018CA                     l11183:
  7569                           
  7570                           ; BSR set to: 3
  7571                           ;tff.c: 1881: s[--i] = c;
  7572  0018CA  071F               	decf	fprintf@i& (0+255),f,b
  7573  0018CC  A0D8               	btfss	status,0,c
  7574  0018CE  0720               	decf	(fprintf@i+1)& (0+255),f,b
  7575  0018D0  0E00               	movlw	low fprintf@s
  7576  0018D2  251F               	addwf	fprintf@i& (0+255),w,b
  7577  0018D4  6ED9               	movwf	fsr2l,c
  7578  0018D6  0E03               	movlw	high fprintf@s
  7579  0018D8  2120               	addwfc	(fprintf@i+1)& (0+255),w,b
  7580  0018DA  6EDA               	movwf	fsr2h,c
  7581  0018DC  C321  FFDF         	movff	fprintf@c,indf2
  7582                           
  7583                           ; BSR set to: 3
  7584                           ;tff.c: 1882: val /= r;
  7585  0018E0  C318  F019         	movff	fprintf@val,___lldiv@dividend
  7586  0018E4  C319  F01A         	movff	fprintf@val+1,___lldiv@dividend+1
  7587  0018E8  C31A  F01B         	movff	fprintf@val+2,___lldiv@dividend+2
  7588  0018EC  C31B  F01C         	movff	fprintf@val+3,___lldiv@dividend+3
  7589  0018F0  5117               	movf	fprintf@r& (0+255),w,b
  7590  0018F2  6E1D               	movwf	___lldiv@divisor^0,c
  7591  0018F4  6A1E               	clrf	(___lldiv@divisor+1)^0,c
  7592  0018F6  6A1F               	clrf	(___lldiv@divisor+2)^0,c
  7593  0018F8  6A20               	clrf	(___lldiv@divisor+3)^0,c
  7594  0018FA  EC9D  F023         	call	___lldiv	;wreg free
  7595  0018FE  C019  F318         	movff	?___lldiv,fprintf@val
  7596  001902  C01A  F319         	movff	?___lldiv+1,fprintf@val+1
  7597  001906  C01B  F31A         	movff	?___lldiv+2,fprintf@val+2
  7598  00190A  C01C  F31B         	movff	?___lldiv+3,fprintf@val+3
  7599                           
  7600                           ;tff.c: 1883: } while (i && val);
  7601  00190E  0103               	movlb	3	; () banked
  7602  001910  511F               	movf	fprintf@i& (0+255),w,b
  7603  001912  1120               	iorwf	(fprintf@i+1)& (0+255),w,b
  7604  001914  B4D8               	btfsc	status,2,c
  7605  001916  D006               	goto	u13910
  7606                           
  7607                           ; BSR set to: 3
  7608  001918  5118               	movf	fprintf@val& (0+255),w,b
  7609  00191A  1119               	iorwf	(fprintf@val+1)& (0+255),w,b
  7610  00191C  111A               	iorwf	(fprintf@val+2)& (0+255),w,b
  7611  00191E  111B               	iorwf	(fprintf@val+3)& (0+255),w,b
  7612  001920  A4D8               	btfss	status,2,c
  7613  001922  D7BC               	goto	l11177
  7614  001924                     u13910:
  7615                           
  7616                           ; BSR set to: 3
  7617                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
  7618  001924  511F               	movf	fprintf@i& (0+255),w,b
  7619  001926  1120               	iorwf	(fprintf@i+1)& (0+255),w,b
  7620  001928  A4D8               	btfss	status,2,c
  7621                           
  7622                           ; BSR set to: 3
  7623  00192A  A516               	btfss	fprintf@f& (0+255),2,b
  7624  00192C  D00B               	goto	l11197
  7625                           
  7626                           ; BSR set to: 3
  7627  00192E  071F               	decf	fprintf@i& (0+255),f,b
  7628  001930  A0D8               	btfss	status,0,c
  7629  001932  0720               	decf	(fprintf@i+1)& (0+255),f,b
  7630  001934  0E00               	movlw	low fprintf@s
  7631  001936  251F               	addwf	fprintf@i& (0+255),w,b
  7632  001938  6ED9               	movwf	fsr2l,c
  7633  00193A  0E03               	movlw	high fprintf@s
  7634  00193C  2120               	addwfc	(fprintf@i+1)& (0+255),w,b
  7635  00193E  6EDA               	movwf	fsr2h,c
  7636  001940  0E2D               	movlw	45
  7637  001942  6EDF               	movwf	indf2,c
  7638  001944                     l11197:
  7639                           
  7640                           ; BSR set to: 3
  7641                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
  7642  001944  5114               	movf	fprintf@w& (0+255),w,b
  7643  001946  080F               	sublw	15
  7644  001948  6F14               	movwf	fprintf@w& (0+255),b
  7645  00194A  5115               	movf	(fprintf@w+1)& (0+255),w,b
  7646  00194C  A0D8               	btfss	status,0,c
  7647  00194E  2AE8               	incf	wreg,f,c
  7648  001950  0800               	sublw	0
  7649  001952  6F15               	movwf	(fprintf@w+1)& (0+255),b
  7650                           
  7651                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
  7652  001954  D016               	goto	l11205
  7653  001956                     l1150:
  7654                           
  7655                           ; BSR set to: 0
  7656  001956  0103               	movlb	3	; () banked
  7657  001958  B116               	btfsc	fprintf@f& (0+255),0,b
  7658  00195A  D004               	goto	l11201
  7659                           
  7660                           ; BSR set to: 3
  7661  00195C  0E00               	movlw	0
  7662  00195E  6F13               	movwf	(_fprintf$2131+1)& (0+255),b
  7663  001960  0E20               	movlw	32
  7664  001962  D003               	goto	L2
  7665  001964                     l11201:
  7666                           
  7667                           ; BSR set to: 3
  7668  001964  0E00               	movlw	0
  7669  001966  6F13               	movwf	(_fprintf$2131+1)& (0+255),b
  7670  001968  0E30               	movlw	48
  7671  00196A                     L2:
  7672  00196A  6F12               	movwf	_fprintf$2131& (0+255),b
  7673                           
  7674                           ; BSR set to: 3
  7675  00196C  071F               	decf	fprintf@i& (0+255),f,b
  7676  00196E  A0D8               	btfss	status,0,c
  7677  001970  0720               	decf	(fprintf@i+1)& (0+255),f,b
  7678  001972  0E00               	movlw	low fprintf@s
  7679  001974  251F               	addwf	fprintf@i& (0+255),w,b
  7680  001976  6ED9               	movwf	fsr2l,c
  7681  001978  0E03               	movlw	high fprintf@s
  7682  00197A  2120               	addwfc	(fprintf@i+1)& (0+255),w,b
  7683  00197C  6EDA               	movwf	fsr2h,c
  7684  00197E  C312  FFDF         	movff	_fprintf$2131,indf2
  7685  001982                     l11205:
  7686                           
  7687                           ; BSR set to: 3
  7688  001982  511F               	movf	fprintf@i& (0+255),w,b
  7689  001984  1120               	iorwf	(fprintf@i+1)& (0+255),w,b
  7690  001986  B4D8               	btfsc	status,2,c
  7691  001988  D00D               	goto	u13960
  7692                           
  7693                           ; BSR set to: 3
  7694  00198A  511F               	movf	fprintf@i& (0+255),w,b
  7695  00198C  5D14               	subwf	fprintf@w& (0+255),w,b
  7696  00198E  5115               	movf	(fprintf@w+1)& (0+255),w,b
  7697  001990  0A80               	xorlw	128
  7698  001992  0100               	movlb	0	; () banked
  7699  001994  6FEE               	movwf	??_fprintf& (0+255),b
  7700  001996  0103               	movlb	3	; () banked
  7701  001998  5120               	movf	(fprintf@i+1)& (0+255),w,b
  7702  00199A  0A80               	xorlw	128
  7703  00199C  0100               	movlb	0	; () banked
  7704  00199E  59EE               	subwfb	??_fprintf& (0+255),w,b
  7705  0019A0  A0D8               	btfss	status,0,c
  7706  0019A2  D7D9               	goto	l1150
  7707  0019A4                     u13960:
  7708                           
  7709                           ;tff.c: 1887: cc = fputs(&s[i], fil);
  7710  0019A4  0E00               	movlw	low fprintf@s
  7711  0019A6  0103               	movlb	3	; () banked
  7712  0019A8  251F               	addwf	fprintf@i& (0+255),w,b
  7713  0019AA  0100               	movlb	0	; () banked
  7714  0019AC  6FD3               	movwf	fputs@str& (0+255),b
  7715  0019AE  0E03               	movlw	high fprintf@s
  7716  0019B0  0103               	movlb	3	; () banked
  7717  0019B2  2120               	addwfc	(fprintf@i+1)& (0+255),w,b
  7718  0019B4  0100               	movlb	0	; () banked
  7719  0019B6  6FD4               	movwf	(fputs@str+1)& (0+255),b
  7720  0019B8  C0DA  F0D5         	movff	fprintf@fil,fputs@fil
  7721  0019BC  C0DB  F0D6         	movff	fprintf@fil+1,fputs@fil+1
  7722  0019C0  EC17  F023         	call	_fputs	;wreg free
  7723  0019C4  C0D3  F31D         	movff	?_fputs,fprintf@cc
  7724  0019C8  C0D4  F31E         	movff	?_fputs+1,fprintf@cc+1
  7725  0019CC                     l11211:
  7726  0019CC  0103               	movlb	3	; () banked
  7727  0019CE  511D               	movf	fprintf@cc& (0+255),w,b
  7728  0019D0  2710               	addwf	fprintf@res& (0+255),f,b
  7729  0019D2  511E               	movf	(fprintf@cc+1)& (0+255),w,b
  7730  0019D4  2311               	addwfc	(fprintf@res+1)& (0+255),f,b
  7731  0019D6  D64C               	goto	l11067
  7732  0019D8                     __end_of_fprintf:
  7733                           	callstack 0
  7734                           
  7735 ;; *************** function _fputs *****************
  7736 ;; Defined at:
  7737 ;;		line 1796 in file "bibliotecas/tff.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  str             2  115[BANK0 ] PTR const unsigned char 
  7740 ;;		 -> fprintf@s(16), ?_fprintf(2), STR_19(16), STR_18(27), 
  7741 ;;		 -> STR_17(17), STR_16(16), STR_15(16), string_dado(59), 
  7742 ;;  fil             2  117[BANK0 ] PTR struct _FIL
  7743 ;;		 -> fil(28), 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  n               2  120[BANK0 ] int 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  2  115[BANK0 ] int 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 3C/3
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7755 ;;      Params:         0       4       0       0       0       0       0       0       0
  7756 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7757 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7758 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7759 ;;Total ram usage:        7 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:   13
  7762 ;; This function calls:
  7763 ;;		_fputc
  7764 ;; This function is called by:
  7765 ;;		_fprintf
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text34
  7770  00462E                     __ptext34:
  7771                           	callstack 0
  7772  00462E                     _fputs:
  7773                           	callstack 13
  7774                           
  7775                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
  7776                           
  7777                           ; BSR set to: 3
  7778                           ;incstack = 0
  7779  00462E  0E00               	movlw	0
  7780  004630  0100               	movlb	0	; () banked
  7781  004632  6FD9               	movwf	(fputs@n+1)& (0+255),b
  7782  004634  0E00               	movlw	0
  7783  004636  6FD8               	movwf	fputs@n& (0+255),b
  7784  004638  D027               	goto	l10775
  7785  00463A                     l10769:
  7786                           
  7787                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
  7788  00463A  C0D3  FFF6         	movff	fputs@str,tblptrl
  7789  00463E  C0D4  FFF7         	movff	fputs@str+1,tblptrh
  7790  004642  6AF8               	clrf	tblptru,c
  7791  004644  0E07               	movlw	(high __ramtop+-1)
  7792  004646  64F7               	cpfsgt	tblptrh,c
  7793  004648  D003               	bra	u13137
  7794  00464A  0008               	tblrd		*
  7795  00464C  50F5               	movf	tablat,w,c
  7796  00464E  D005               	bra	u13130
  7797  004650                     u13137:
  7798  004650  CFF6 FFE1          	movff	tblptrl,fsr1l
  7799  004654  CFF7 FFE2          	movff	tblptrh,fsr1h
  7800  004658  50E7               	movf	indf1,w,c
  7801  00465A                     u13130:
  7802  00465A  0100               	movlb	0	; () banked
  7803  00465C  6FD7               	movwf	??_fputs& (0+255),b
  7804  00465E  51D7               	movf	??_fputs& (0+255),w,b
  7805  004660  6FCC               	movwf	fputc@chr& (0+255),b
  7806  004662  6BCD               	clrf	(fputc@chr+1)& (0+255),b
  7807  004664  C0D5  F0CE         	movff	fputs@fil,fputc@fil
  7808  004668  C0D6  F0CF         	movff	fputs@fil+1,fputc@fil+1
  7809  00466C  EC81  F027         	call	_fputc	;wreg free
  7810  004670  29CC               	incf	?_fputc& (0+255),w,b
  7811  004672  E106               	bnz	l10773
  7812  004674  29CD               	incf	(?_fputc+1)& (0+255),w,b
  7813  004676  A4D8               	btfss	status,2,c
  7814  004678  D003               	goto	l10773
  7815                           
  7816                           ; BSR set to: 0
  7817  00467A  69D3               	setf	?_fputs& (0+255),b
  7818  00467C  69D4               	setf	(?_fputs+1)& (0+255),b
  7819  00467E  0012               	return	
  7820  004680                     l10773:
  7821                           
  7822                           ; BSR set to: 0
  7823  004680  4BD3               	infsnz	fputs@str& (0+255),f,b
  7824  004682  2BD4               	incf	(fputs@str+1)& (0+255),f,b
  7825  004684  4BD8               	infsnz	fputs@n& (0+255),f,b
  7826  004686  2BD9               	incf	(fputs@n+1)& (0+255),f,b
  7827  004688                     l10775:
  7828                           
  7829                           ; BSR set to: 0
  7830  004688  C0D3  FFF6         	movff	fputs@str,tblptrl
  7831  00468C  C0D4  FFF7         	movff	fputs@str+1,tblptrh
  7832  004690  6AF8               	clrf	tblptru,c
  7833  004692  0E07               	movlw	(high __ramtop+-1)
  7834  004694  64F7               	cpfsgt	tblptrh,c
  7835  004696  D003               	bra	u13157
  7836  004698  0008               	tblrd		*
  7837  00469A  50F5               	movf	tablat,w,c
  7838  00469C  D005               	bra	u13150
  7839  00469E                     u13157:
  7840  00469E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7841  0046A2  CFF7 FFE2          	movff	tblptrh,fsr1h
  7842  0046A6  50E7               	movf	indf1,w,c
  7843  0046A8                     u13150:
  7844  0046A8  0900               	iorlw	0
  7845  0046AA  A4D8               	btfss	status,2,c
  7846  0046AC  D7C6               	goto	l10769
  7847                           
  7848                           ;tff.c: 1806: };tff.c: 1807: return n;
  7849  0046AE  C0D8  F0D3         	movff	fputs@n,?_fputs
  7850  0046B2  C0D9  F0D4         	movff	fputs@n+1,?_fputs+1
  7851  0046B6  0012               	return		;funcret
  7852  0046B8                     __end_of_fputs:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function _fputc *****************
  7856 ;; Defined at:
  7857 ;;		line 1769 in file "bibliotecas/tff.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  chr             2  108[BANK0 ] int 
  7860 ;;  fil             2  110[BANK0 ] PTR struct _FIL
  7861 ;;		 -> fil(28), 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  bw              2  113[BANK0 ] unsigned int 
  7864 ;;  c               1  112[BANK0 ] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  2  108[BANK0 ] int 
  7867 ;; Registers used:
  7868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 3F/0
  7871 ;;		On exit  : 3F/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7874 ;;      Params:         0       4       0       0       0       0       0       0       0
  7875 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7877 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7878 ;;Total ram usage:        7 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:   12
  7881 ;; This function calls:
  7882 ;;		_f_write
  7883 ;; This function is called by:
  7884 ;;		_fputs
  7885 ;;		_fprintf
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text35
  7890  004F02                     __ptext35:
  7891                           	callstack 0
  7892  004F02                     _fputc:
  7893                           	callstack 13
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
  7897                           
  7898                           ;incstack = 0
  7899  004F02  51CE               	movf	fputc@fil& (0+255),w,b
  7900  004F04  11CF               	iorwf	(fputc@fil+1)& (0+255),w,b
  7901  004F06  A4D8               	btfss	status,2,c
  7902  004F08  D005               	goto	l1100
  7903  004F0A                     u12400:
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;tff.c: 1783: return chr;
  7907  004F0A  C0CC  F0CC         	movff	fputc@chr,?_fputc
  7908  004F0E  C0CD  F0CD         	movff	fputc@chr+1,?_fputc+1
  7909  004F12  0012               	return	
  7910  004F14                     l1100:
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
  7914  004F14  C0CC  F0D0         	movff	fputc@chr,fputc@c
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
  7918  004F18  C0CE  F0AE         	movff	fputc@fil,f_write@fp
  7919  004F1C  C0CF  F0AF         	movff	fputc@fil+1,f_write@fp+1
  7920  004F20  0ED0               	movlw	low fputc@c
  7921  004F22  6FB0               	movwf	f_write@buff& (0+255),b
  7922  004F24  0E00               	movlw	0
  7923  004F26  6FB2               	movwf	(f_write@btw+1)& (0+255),b
  7924  004F28  0E01               	movlw	1
  7925  004F2A  6FB1               	movwf	f_write@btw& (0+255),b
  7926  004F2C  0ED1               	movlw	low fputc@bw
  7927  004F2E  6FB3               	movwf	f_write@bw& (0+255),b
  7928  004F30  EC7F  F003         	call	_f_write	;wreg free
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;tff.c: 1787: return bw ? chr : -1;
  7932  004F34  51D1               	movf	fputc@bw& (0+255),w,b
  7933  004F36  11D2               	iorwf	(fputc@bw+1)& (0+255),w,b
  7934  004F38  A4D8               	btfss	status,2,c
  7935  004F3A  D7E7               	goto	u12400
  7936                           
  7937                           ; BSR set to: 0
  7938  004F3C  69CC               	setf	?_fputc& (0+255),b
  7939  004F3E  69CD               	setf	(?_fputc+1)& (0+255),b
  7940                           
  7941                           ; BSR set to: 0
  7942  004F40  0012               	return		;funcret
  7943  004F42                     __end_of_fputc:
  7944                           	callstack 0
  7945                           
  7946 ;; *************** function _f_write *****************
  7947 ;; Defined at:
  7948 ;;		line 999 in file "bibliotecas/tff.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  fp              2   78[BANK0 ] PTR struct _FIL
  7951 ;;		 -> fil(28), 
  7952 ;;  buff            1   80[BANK0 ] PTR const void 
  7953 ;;		 -> fputc@c(1), 
  7954 ;;  btw             2   81[BANK0 ] unsigned int 
  7955 ;;  bw              1   83[BANK0 ] PTR unsigned int 
  7956 ;;		 -> fputc@bw(2), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  sect            4   98[BANK0 ] unsigned long 
  7959 ;;  wcnt            2  106[BANK0 ] unsigned int 
  7960 ;;  clust           2  104[BANK0 ] unsigned short 
  7961 ;;  cc              2  102[BANK0 ] unsigned int 
  7962 ;;  wbuff           1   97[BANK0 ] PTR const unsigned char 
  7963 ;;		 -> fputc@c(1), 
  7964 ;;  res             1   96[BANK0 ] enum E155
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      enum E155
  7967 ;; Registers used:
  7968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7969 ;; Tracked objects:
  7970 ;;		On entry : 3F/0
  7971 ;;		On exit  : 3F/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7974 ;;      Params:         0       6       0       0       0       0       0       0       0
  7975 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7976 ;;      Temps:          0      12       0       0       0       0       0       0       0
  7977 ;;      Totals:         0      30       0       0       0       0       0       0       0
  7978 ;;Total ram usage:       30 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:   11
  7981 ;; This function calls:
  7982 ;;		_clust2sect
  7983 ;;		_create_chain
  7984 ;;		_disk_write
  7985 ;;		_memcpy
  7986 ;;		_move_window
  7987 ;;		_validate
  7988 ;; This function is called by:
  7989 ;;		_fputc
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text36
  7994  0006FE                     __ptext36:
  7995                           	callstack 0
  7996  0006FE                     _f_write:
  7997                           	callstack 13
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;incstack = 0
  8004  0006FE  C0B0  F0C1         	movff	f_write@buff,f_write@wbuff
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;tff.c: 1013: *bw = 0;
  8008  000702  51B3               	movf	f_write@bw& (0+255),w,b
  8009  000704  6ED9               	movwf	fsr2l,c
  8010  000706  6ADA               	clrf	fsr2h,c
  8011  000708  0E00               	movlw	0
  8012  00070A  6EDE               	movwf	postinc2,c
  8013  00070C  0E00               	movlw	0
  8014  00070E  6EDD               	movwf	postdec2,c
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
  8018  000710  EE20 F004          	lfsr	2,4
  8019  000714  51AE               	movf	f_write@fp& (0+255),w,b
  8020  000716  26D9               	addwf	fsr2l,f,c
  8021  000718  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8022  00071A  22DA               	addwfc	fsr2h,f,c
  8023  00071C  CFDE F01F          	movff	postinc2,validate@fs
  8024  000720  CFDD F020          	movff	postdec2,validate@fs+1
  8025  000724  C0AE  FFD9         	movff	f_write@fp,fsr2l
  8026  000728  C0AF  FFDA         	movff	f_write@fp+1,fsr2h
  8027  00072C  CFDE F021          	movff	postinc2,validate@id
  8028  000730  CFDD F022          	movff	postdec2,validate@id+1
  8029  000734  ECD5  F026         	call	_validate	;wreg free
  8030  000738  0100               	movlb	0	; () banked
  8031  00073A  6FC0               	movwf	f_write@res& (0+255),b
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;tff.c: 1015: if (res != FR_OK) return res;
  8035  00073C  51C0               	movf	f_write@res& (0+255),w,b
  8036  00073E  A4D8               	btfss	status,2,c
  8037  000740  0012               	return	
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
  8041  000742  EE20 F002          	lfsr	2,2
  8042  000746  51AE               	movf	f_write@fp& (0+255),w,b
  8043  000748  26D9               	addwf	fsr2l,f,c
  8044  00074A  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8045  00074C  22DA               	addwfc	fsr2h,f,c
  8046  00074E  BEDF               	btfsc	indf2,7,c
  8047  000750  0012               	return	
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
  8051  000752  EE20 F002          	lfsr	2,2
  8052  000756  51AE               	movf	f_write@fp& (0+255),w,b
  8053  000758  26D9               	addwf	fsr2l,f,c
  8054  00075A  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8055  00075C  22DA               	addwfc	fsr2h,f,c
  8056  00075E  A2DF               	btfss	indf2,1,c
  8057  000760  0012               	return	
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
  8061  000762  EE20 F00A          	lfsr	2,10
  8062  000766  51AE               	movf	f_write@fp& (0+255),w,b
  8063  000768  26D9               	addwf	fsr2l,f,c
  8064  00076A  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8065  00076C  22DA               	addwfc	fsr2h,f,c
  8066  00076E  EE10 F00A          	lfsr	1,10
  8067  000772  51AE               	movf	f_write@fp& (0+255),w,b
  8068  000774  26E1               	addwf	fsr1l,f,c
  8069  000776  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8070  000778  22E2               	addwfc	fsr1h,f,c
  8071  00077A  CFE6 F0B8          	movff	postinc1,??_f_write+4
  8072  00077E  CFE6 F0B9          	movff	postinc1,??_f_write+5
  8073  000782  CFE6 F0BA          	movff	postinc1,??_f_write+6
  8074  000786  CFE6 F0BB          	movff	postinc1,??_f_write+7
  8075  00078A  51B1               	movf	f_write@btw& (0+255),w,b
  8076  00078C  25B8               	addwf	(??_f_write+4)& (0+255),w,b
  8077  00078E  6FBC               	movwf	(??_f_write+8)& (0+255),b
  8078  000790  51B2               	movf	(f_write@btw+1)& (0+255),w,b
  8079  000792  21B9               	addwfc	(??_f_write+5)& (0+255),w,b
  8080  000794  6FBD               	movwf	(??_f_write+9)& (0+255),b
  8081  000796  0E00               	movlw	0
  8082  000798  21BA               	addwfc	(??_f_write+6)& (0+255),w,b
  8083  00079A  6FBE               	movwf	(??_f_write+10)& (0+255),b
  8084  00079C  0E00               	movlw	0
  8085  00079E  21BB               	addwfc	(??_f_write+7)& (0+255),w,b
  8086  0007A0  6FBF               	movwf	(??_f_write+11)& (0+255),b
  8087  0007A2  50DE               	movf	postinc2,w,c
  8088  0007A4  5DBC               	subwf	(??_f_write+8)& (0+255),w,b
  8089  0007A6  50DE               	movf	postinc2,w,c
  8090  0007A8  59BD               	subwfb	(??_f_write+9)& (0+255),w,b
  8091  0007AA  50DE               	movf	postinc2,w,c
  8092  0007AC  59BE               	subwfb	(??_f_write+10)& (0+255),w,b
  8093  0007AE  50DE               	movf	postinc2,w,c
  8094  0007B0  59BF               	subwfb	(??_f_write+11)& (0+255),w,b
  8095  0007B2  A0D8               	btfss	status,0,c
  8096  0007B4  0012               	return	
  8097  0007B6  D228               	goto	l10195
  8098  0007B8                     l10119:
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
  8102  0007B8  EE20 F006          	lfsr	2,6
  8103  0007BC  51AE               	movf	f_write@fp& (0+255),w,b
  8104  0007BE  26D9               	addwf	fsr2l,f,c
  8105  0007C0  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8106  0007C2  22DA               	addwfc	fsr2h,f,c
  8107  0007C4  0EFF               	movlw	255
  8108  0007C6  14DE               	andwf	postinc2,w,c
  8109  0007C8  6FB4               	movwf	??_f_write& (0+255),b
  8110  0007CA  0E01               	movlw	1
  8111  0007CC  14DE               	andwf	postinc2,w,c
  8112  0007CE  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8113  0007D0  0E00               	movlw	0
  8114  0007D2  14DE               	andwf	postinc2,w,c
  8115  0007D4  6FB6               	movwf	(??_f_write+2)& (0+255),b
  8116  0007D6  0E00               	movlw	0
  8117  0007D8  14DE               	andwf	postinc2,w,c
  8118  0007DA  6FB7               	movwf	(??_f_write+3)& (0+255),b
  8119  0007DC  51B4               	movf	??_f_write& (0+255),w,b
  8120  0007DE  11B5               	iorwf	(??_f_write+1)& (0+255),w,b
  8121  0007E0  11B6               	iorwf	(??_f_write+2)& (0+255),w,b
  8122  0007E2  11B7               	iorwf	(??_f_write+3)& (0+255),w,b
  8123  0007E4  A4D8               	btfss	status,2,c
  8124  0007E6  D15B               	goto	l10171
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
  8128  0007E8  EE20 F004          	lfsr	2,4
  8129  0007EC  51AE               	movf	f_write@fp& (0+255),w,b
  8130  0007EE  26D9               	addwf	fsr2l,f,c
  8131  0007F0  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8132  0007F2  22DA               	addwfc	fsr2h,f,c
  8133  0007F4  EE10 F01D          	lfsr	1,29
  8134  0007F8  50DE               	movf	postinc2,w,c
  8135  0007FA  26E1               	addwf	fsr1l,f,c
  8136  0007FC  50DD               	movf	postdec2,w,c
  8137  0007FE  22E2               	addwfc	fsr1h,f,c
  8138  000800  EE20 F003          	lfsr	2,3
  8139  000804  51AE               	movf	f_write@fp& (0+255),w,b
  8140  000806  26D9               	addwf	fsr2l,f,c
  8141  000808  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8142  00080A  22DA               	addwfc	fsr2h,f,c
  8143  00080C  50E6               	movf	postinc1,w,c
  8144  00080E  5CDE               	subwf	postinc2,w,c
  8145  000810  A0D8               	btfss	status,0,c
  8146  000812  D06B               	goto	l10143
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;tff.c: 1024: if (fp->fptr == 0) {
  8150  000814  EE20 F006          	lfsr	2,6
  8151  000818  51AE               	movf	f_write@fp& (0+255),w,b
  8152  00081A  26D9               	addwf	fsr2l,f,c
  8153  00081C  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8154  00081E  22DA               	addwfc	fsr2h,f,c
  8155  000820  50DE               	movf	postinc2,w,c
  8156  000822  10DE               	iorwf	postinc2,w,c
  8157  000824  10DE               	iorwf	postinc2,w,c
  8158  000826  10DE               	iorwf	postinc2,w,c
  8159  000828  A4D8               	btfss	status,2,c
  8160  00082A  D023               	goto	l10131
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;tff.c: 1025: clust = fp->org_clust;
  8164  00082C  EE20 F00E          	lfsr	2,14
  8165  000830  51AE               	movf	f_write@fp& (0+255),w,b
  8166  000832  26D9               	addwf	fsr2l,f,c
  8167  000834  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8168  000836  22DA               	addwfc	fsr2h,f,c
  8169  000838  CFDE F0C8          	movff	postinc2,f_write@clust
  8170  00083C  CFDD F0C9          	movff	postdec2,f_write@clust+1
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;tff.c: 1026: if (clust == 0)
  8174  000840  51C8               	movf	f_write@clust& (0+255),w,b
  8175  000842  11C9               	iorwf	(f_write@clust+1)& (0+255),w,b
  8176  000844  A4D8               	btfss	status,2,c
  8177  000846  D025               	goto	l10133
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
  8181  000848  0E00               	movlw	0
  8182  00084A  6FA1               	movwf	(create_chain@clust+1)& (0+255),b
  8183  00084C  0E00               	movlw	0
  8184  00084E  6FA0               	movwf	create_chain@clust& (0+255),b
  8185  000850  EC6C  F019         	call	_create_chain	;wreg free
  8186  000854  C0A0  F0C8         	movff	?_create_chain,f_write@clust
  8187  000858  C0A1  F0C9         	movff	?_create_chain+1,f_write@clust+1
  8188  00085C  EE20 F00E          	lfsr	2,14
  8189  000860  51AE               	movf	f_write@fp& (0+255),w,b
  8190  000862  26D9               	addwf	fsr2l,f,c
  8191  000864  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8192  000866  22DA               	addwfc	fsr2h,f,c
  8193  000868  C0C8  FFDE         	movff	f_write@clust,postinc2
  8194  00086C  C0C9  FFDD         	movff	f_write@clust+1,postdec2
  8195  000870  D010               	goto	l10133
  8196  000872                     l10131:
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
  8200  000872  EE20 F010          	lfsr	2,16
  8201  000876  51AE               	movf	f_write@fp& (0+255),w,b
  8202  000878  26D9               	addwf	fsr2l,f,c
  8203  00087A  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8204  00087C  22DA               	addwfc	fsr2h,f,c
  8205  00087E  CFDE F0A0          	movff	postinc2,create_chain@clust
  8206  000882  CFDD F0A1          	movff	postdec2,create_chain@clust+1
  8207  000886  EC6C  F019         	call	_create_chain	;wreg free
  8208  00088A  C0A0  F0C8         	movff	?_create_chain,f_write@clust
  8209  00088E  C0A1  F0C9         	movff	?_create_chain+1,f_write@clust+1
  8210  000892                     l10133:
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
  8214  000892  51C8               	movf	f_write@clust& (0+255),w,b
  8215  000894  11C9               	iorwf	(f_write@clust+1)& (0+255),w,b
  8216  000896  B4D8               	btfsc	status,2,c
  8217  000898  D1BB               	goto	u12220
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
  8221  00089A  05C8               	decf	f_write@clust& (0+255),w,b
  8222  00089C  11C9               	iorwf	(f_write@clust+1)& (0+255),w,b
  8223  00089E  B4D8               	btfsc	status,2,c
  8224  0008A0  D1EA               	goto	l10205
  8225                           
  8226                           ; BSR set to: 0
  8227  0008A2  EE20 F004          	lfsr	2,4
  8228  0008A6  51AE               	movf	f_write@fp& (0+255),w,b
  8229  0008A8  26D9               	addwf	fsr2l,f,c
  8230  0008AA  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8231  0008AC  22DA               	addwfc	fsr2h,f,c
  8232  0008AE  EE10 F016          	lfsr	1,22
  8233  0008B2  50DE               	movf	postinc2,w,c
  8234  0008B4  26E1               	addwf	fsr1l,f,c
  8235  0008B6  50DD               	movf	postdec2,w,c
  8236  0008B8  22E2               	addwfc	fsr1h,f,c
  8237  0008BA  50E6               	movf	postinc1,w,c
  8238  0008BC  5DC8               	subwf	f_write@clust& (0+255),w,b
  8239  0008BE  50E6               	movf	postinc1,w,c
  8240  0008C0  59C9               	subwfb	(f_write@clust+1)& (0+255),w,b
  8241  0008C2  B0D8               	btfsc	status,0,c
  8242  0008C4  D1D8               	goto	l10205
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;tff.c: 1033: fp->curr_clust = clust;
  8246  0008C6  EE20 F010          	lfsr	2,16
  8247  0008CA  51AE               	movf	f_write@fp& (0+255),w,b
  8248  0008CC  26D9               	addwf	fsr2l,f,c
  8249  0008CE  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8250  0008D0  22DA               	addwfc	fsr2h,f,c
  8251  0008D2  C0C8  FFDE         	movff	f_write@clust,postinc2
  8252  0008D6  C0C9  FFDD         	movff	f_write@clust+1,postdec2
  8253                           
  8254                           ;tff.c: 1034: fp->csect = 0;
  8255  0008DA  EE20 F003          	lfsr	2,3
  8256  0008DE  51AE               	movf	f_write@fp& (0+255),w,b
  8257  0008E0  26D9               	addwf	fsr2l,f,c
  8258  0008E2  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8259  0008E4  22DA               	addwfc	fsr2h,f,c
  8260  0008E6  0E00               	movlw	0
  8261  0008E8  6EDF               	movwf	indf2,c
  8262  0008EA                     l10143:
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
  8266  0008EA  EE20 F010          	lfsr	2,16
  8267  0008EE  51AE               	movf	f_write@fp& (0+255),w,b
  8268  0008F0  26D9               	addwf	fsr2l,f,c
  8269  0008F2  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8270  0008F4  22DA               	addwfc	fsr2h,f,c
  8271  0008F6  CFDE F025          	movff	postinc2,clust2sect@clust
  8272  0008FA  CFDD F026          	movff	postdec2,clust2sect@clust+1
  8273  0008FE  EC5B  F020         	call	_clust2sect	;wreg free
  8274  000902  EE20 F003          	lfsr	2,3
  8275  000906  51AE               	movf	f_write@fp& (0+255),w,b
  8276  000908  26D9               	addwf	fsr2l,f,c
  8277  00090A  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8278  00090C  22DA               	addwfc	fsr2h,f,c
  8279  00090E  50DF               	movf	indf2,w,c
  8280  000910  6FB4               	movwf	??_f_write& (0+255),b
  8281  000912  51B4               	movf	??_f_write& (0+255),w,b
  8282  000914  2425               	addwf	?_clust2sect^0,w,c
  8283  000916  6FC2               	movwf	f_write@sect& (0+255),b
  8284  000918  0E00               	movlw	0
  8285  00091A  2026               	addwfc	(?_clust2sect+1)^0,w,c
  8286  00091C  6FC3               	movwf	(f_write@sect+1)& (0+255),b
  8287  00091E  0E00               	movlw	0
  8288  000920  2027               	addwfc	(?_clust2sect+2)^0,w,c
  8289  000922  6FC4               	movwf	(f_write@sect+2)& (0+255),b
  8290  000924  0E00               	movlw	0
  8291  000926  2028               	addwfc	(?_clust2sect+3)^0,w,c
  8292  000928  6FC5               	movwf	(f_write@sect+3)& (0+255),b
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;tff.c: 1037: cc = btw / 512U;
  8296  00092A  C0B1  F0B4         	movff	f_write@btw,??_f_write
  8297  00092E  C0B2  F0B5         	movff	f_write@btw+1,??_f_write+1
  8298  000932  0E09               	movlw	9
  8299  000934  6FB6               	movwf	(??_f_write+2)& (0+255),b
  8300  000936                     u12135:
  8301  000936  90D8               	bcf	status,0,c
  8302  000938  33B5               	rrcf	(??_f_write+1)& (0+255),f,b
  8303  00093A  33B4               	rrcf	??_f_write& (0+255),f,b
  8304  00093C  2FB6               	decfsz	(??_f_write+2)& (0+255),f,b
  8305  00093E  D7FB               	goto	u12135
  8306  000940  C0B4  F0C6         	movff	??_f_write,f_write@cc
  8307  000944  C0B5  F0C7         	movff	??_f_write+1,f_write@cc+1
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;tff.c: 1038: if (cc) {
  8311  000948  51C6               	movf	f_write@cc& (0+255),w,b
  8312  00094A  11C7               	iorwf	(f_write@cc+1)& (0+255),w,b
  8313  00094C  B4D8               	btfsc	status,2,c
  8314  00094E  D069               	goto	l10161
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
  8318  000950  EE20 F003          	lfsr	2,3
  8319  000954  51AE               	movf	f_write@fp& (0+255),w,b
  8320  000956  26D9               	addwf	fsr2l,f,c
  8321  000958  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8322  00095A  22DA               	addwfc	fsr2h,f,c
  8323  00095C  50DF               	movf	indf2,w,c
  8324  00095E  6FB4               	movwf	??_f_write& (0+255),b
  8325  000960  51B4               	movf	??_f_write& (0+255),w,b
  8326  000962  25C6               	addwf	f_write@cc& (0+255),w,b
  8327  000964  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8328  000966  0E00               	movlw	0
  8329  000968  21C7               	addwfc	(f_write@cc+1)& (0+255),w,b
  8330  00096A  6FB6               	movwf	(??_f_write+2)& (0+255),b
  8331  00096C  EE20 F004          	lfsr	2,4
  8332  000970  51AE               	movf	f_write@fp& (0+255),w,b
  8333  000972  26D9               	addwf	fsr2l,f,c
  8334  000974  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8335  000976  22DA               	addwfc	fsr2h,f,c
  8336  000978  EE10 F01D          	lfsr	1,29
  8337  00097C  50DE               	movf	postinc2,w,c
  8338  00097E  26E1               	addwf	fsr1l,f,c
  8339  000980  50DD               	movf	postdec2,w,c
  8340  000982  22E2               	addwfc	fsr1h,f,c
  8341  000984  50E7               	movf	indf1,w,c
  8342  000986  6FB7               	movwf	(??_f_write+3)& (0+255),b
  8343  000988  6BB8               	clrf	(??_f_write+4)& (0+255),b
  8344  00098A  51B5               	movf	(??_f_write+1)& (0+255),w,b
  8345  00098C  5DB7               	subwf	(??_f_write+3)& (0+255),w,b
  8346  00098E  51B6               	movf	(??_f_write+2)& (0+255),w,b
  8347  000990  59B8               	subwfb	(??_f_write+4)& (0+255),w,b
  8348  000992  B0D8               	btfsc	status,0,c
  8349  000994  D01C               	goto	l10153
  8350                           
  8351                           ; BSR set to: 0
  8352                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
  8353  000996  EE20 F004          	lfsr	2,4
  8354  00099A  51AE               	movf	f_write@fp& (0+255),w,b
  8355  00099C  26D9               	addwf	fsr2l,f,c
  8356  00099E  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8357  0009A0  22DA               	addwfc	fsr2h,f,c
  8358  0009A2  EE10 F01D          	lfsr	1,29
  8359  0009A6  50DE               	movf	postinc2,w,c
  8360  0009A8  26E1               	addwf	fsr1l,f,c
  8361  0009AA  50DD               	movf	postdec2,w,c
  8362  0009AC  22E2               	addwfc	fsr1h,f,c
  8363  0009AE  50E7               	movf	indf1,w,c
  8364  0009B0  6FB4               	movwf	??_f_write& (0+255),b
  8365  0009B2  EE20 F003          	lfsr	2,3
  8366  0009B6  51AE               	movf	f_write@fp& (0+255),w,b
  8367  0009B8  26D9               	addwf	fsr2l,f,c
  8368  0009BA  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8369  0009BC  22DA               	addwfc	fsr2h,f,c
  8370  0009BE  50DF               	movf	indf2,w,c
  8371  0009C0  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8372  0009C2  51B5               	movf	(??_f_write+1)& (0+255),w,b
  8373  0009C4  5DB4               	subwf	??_f_write& (0+255),w,b
  8374  0009C6  6FC6               	movwf	f_write@cc& (0+255),b
  8375  0009C8  6BC7               	clrf	(f_write@cc+1)& (0+255),b
  8376  0009CA  A0D8               	btfss	status,0,c
  8377  0009CC  07C7               	decf	(f_write@cc+1)& (0+255),f,b
  8378  0009CE                     l10153:
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
  8382  0009CE  C0C1  F068         	movff	f_write@wbuff,disk_write@buff
  8383  0009D2  6B69               	clrf	(disk_write@buff+1)& (0+255),b
  8384  0009D4  C0C2  F06A         	movff	f_write@sect,disk_write@sector
  8385  0009D8  C0C3  F06B         	movff	f_write@sect+1,disk_write@sector+1
  8386  0009DC  C0C4  F06C         	movff	f_write@sect+2,disk_write@sector+2
  8387  0009E0  C0C5  F06D         	movff	f_write@sect+3,disk_write@sector+3
  8388  0009E4  C0C6  F06E         	movff	f_write@cc,disk_write@count
  8389  0009E8  0E00               	movlw	0
  8390  0009EA  EC65  F026         	call	_disk_write
  8391  0009EE  0900               	iorlw	0
  8392  0009F0  A4D8               	btfss	status,2,c
  8393  0009F2  D141               	goto	l10205
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;tff.c: 1043: fp->csect += (BYTE)cc;
  8397  0009F4  EE20 F003          	lfsr	2,3
  8398  0009F8  51AE               	movf	f_write@fp& (0+255),w,b
  8399  0009FA  26D9               	addwf	fsr2l,f,c
  8400  0009FC  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8401  0009FE  22DA               	addwfc	fsr2h,f,c
  8402  000A00  51C6               	movf	f_write@cc& (0+255),w,b
  8403  000A02  26DF               	addwf	indf2,f,c
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;tff.c: 1044: wcnt = 512U * cc;
  8407  000A04  C0C6  F0B4         	movff	f_write@cc,??_f_write
  8408  000A08  C0C7  F0B5         	movff	f_write@cc+1,??_f_write+1
  8409  000A0C  0E09               	movlw	9
  8410  000A0E                     u12175:
  8411  000A0E  90D8               	bcf	status,0,c
  8412  000A10  37B4               	rlcf	??_f_write& (0+255),f,b
  8413  000A12  37B5               	rlcf	(??_f_write+1)& (0+255),f,b
  8414  000A14  2EE8               	decfsz	wreg,f,c
  8415  000A16  D7FB               	goto	u12175
  8416  000A18  C0B4  F0CA         	movff	??_f_write,f_write@wcnt
  8417  000A1C  C0B5  F0CB         	movff	??_f_write+1,f_write@wcnt+1
  8418                           
  8419                           ;tff.c: 1045: continue;
  8420  000A20  D0D9               	goto	l10187
  8421  000A22                     l10161:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
  8425  000A22  EE20 F00A          	lfsr	2,10
  8426  000A26  51AE               	movf	f_write@fp& (0+255),w,b
  8427  000A28  26D9               	addwf	fsr2l,f,c
  8428  000A2A  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8429  000A2C  22DA               	addwfc	fsr2h,f,c
  8430  000A2E  EE10 F006          	lfsr	1,6
  8431  000A32  51AE               	movf	f_write@fp& (0+255),w,b
  8432  000A34  26E1               	addwf	fsr1l,f,c
  8433  000A36  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8434  000A38  22E2               	addwfc	fsr1h,f,c
  8435  000A3A  50DE               	movf	postinc2,w,c
  8436  000A3C  5CE6               	subwf	postinc1,w,c
  8437  000A3E  50DE               	movf	postinc2,w,c
  8438  000A40  58E6               	subwfb	postinc1,w,c
  8439  000A42  50DE               	movf	postinc2,w,c
  8440  000A44  58E6               	subwfb	postinc1,w,c
  8441  000A46  50DE               	movf	postinc2,w,c
  8442  000A48  58E6               	subwfb	postinc1,w,c
  8443  000A4A  A0D8               	btfss	status,0,c
  8444  000A4C  D021               	goto	l10169
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
  8448  000A4E  0E00               	movlw	0
  8449  000A50  6F73               	movwf	move_window@sector& (0+255),b
  8450  000A52  0E00               	movlw	0
  8451  000A54  6F74               	movwf	(move_window@sector+1)& (0+255),b
  8452  000A56  0E00               	movlw	0
  8453  000A58  6F75               	movwf	(move_window@sector+2)& (0+255),b
  8454  000A5A  0E00               	movlw	0
  8455  000A5C  6F76               	movwf	(move_window@sector+3)& (0+255),b
  8456  000A5E  EC97  F018         	call	_move_window	;wreg free
  8457  000A62  0900               	iorlw	0
  8458  000A64  B4D8               	btfsc	status,2,c
  8459  000A66  D107               	goto	l10205
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;tff.c: 1049: fp->fs->winsect = sect;
  8463  000A68  EE20 F004          	lfsr	2,4
  8464  000A6C  51AE               	movf	f_write@fp& (0+255),w,b
  8465  000A6E  26D9               	addwf	fsr2l,f,c
  8466  000A70  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8467  000A72  22DA               	addwfc	fsr2h,f,c
  8468  000A74  EE10 F004          	lfsr	1,4
  8469  000A78  50DE               	movf	postinc2,w,c
  8470  000A7A  26E1               	addwf	fsr1l,f,c
  8471  000A7C  50DD               	movf	postdec2,w,c
  8472  000A7E  22E2               	addwfc	fsr1h,f,c
  8473  000A80  C0C2  FFE6         	movff	f_write@sect,postinc1
  8474  000A84  C0C3  FFE6         	movff	f_write@sect+1,postinc1
  8475  000A88  C0C4  FFE6         	movff	f_write@sect+2,postinc1
  8476  000A8C  C0C5  FFE6         	movff	f_write@sect+3,postinc1
  8477  000A90                     l10169:
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
  8481  000A90  EE20 F003          	lfsr	2,3
  8482  000A94  51AE               	movf	f_write@fp& (0+255),w,b
  8483  000A96  26D9               	addwf	fsr2l,f,c
  8484  000A98  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8485  000A9A  22DA               	addwfc	fsr2h,f,c
  8486  000A9C  2ADF               	incf	indf2,f,c
  8487  000A9E                     l10171:
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
  8491  000A9E  EE20 F010          	lfsr	2,16
  8492  000AA2  51AE               	movf	f_write@fp& (0+255),w,b
  8493  000AA4  26D9               	addwf	fsr2l,f,c
  8494  000AA6  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8495  000AA8  22DA               	addwfc	fsr2h,f,c
  8496  000AAA  CFDE F025          	movff	postinc2,clust2sect@clust
  8497  000AAE  CFDD F026          	movff	postdec2,clust2sect@clust+1
  8498  000AB2  EC5B  F020         	call	_clust2sect	;wreg free
  8499  000AB6  EE20 F003          	lfsr	2,3
  8500  000ABA  51AE               	movf	f_write@fp& (0+255),w,b
  8501  000ABC  26D9               	addwf	fsr2l,f,c
  8502  000ABE  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8503  000AC0  22DA               	addwfc	fsr2h,f,c
  8504  000AC2  50DF               	movf	indf2,w,c
  8505  000AC4  6FB4               	movwf	??_f_write& (0+255),b
  8506  000AC6  51B4               	movf	??_f_write& (0+255),w,b
  8507  000AC8  2425               	addwf	?_clust2sect^0,w,c
  8508  000ACA  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8509  000ACC  0E00               	movlw	0
  8510  000ACE  2026               	addwfc	(?_clust2sect+1)^0,w,c
  8511  000AD0  6FB6               	movwf	(??_f_write+2)& (0+255),b
  8512  000AD2  0E00               	movlw	0
  8513  000AD4  2027               	addwfc	(?_clust2sect+2)^0,w,c
  8514  000AD6  6FB7               	movwf	(??_f_write+3)& (0+255),b
  8515  000AD8  0E00               	movlw	0
  8516  000ADA  2028               	addwfc	(?_clust2sect+3)^0,w,c
  8517  000ADC  6FB8               	movwf	(??_f_write+4)& (0+255),b
  8518  000ADE  0EFF               	movlw	255
  8519  000AE0  25B5               	addwf	(??_f_write+1)& (0+255),w,b
  8520  000AE2  6FC2               	movwf	f_write@sect& (0+255),b
  8521  000AE4  0EFF               	movlw	255
  8522  000AE6  21B6               	addwfc	(??_f_write+2)& (0+255),w,b
  8523  000AE8  6FC3               	movwf	(f_write@sect+1)& (0+255),b
  8524  000AEA  0EFF               	movlw	255
  8525  000AEC  21B7               	addwfc	(??_f_write+3)& (0+255),w,b
  8526  000AEE  6FC4               	movwf	(f_write@sect+2)& (0+255),b
  8527  000AF0  0EFF               	movlw	255
  8528  000AF2  21B8               	addwfc	(??_f_write+4)& (0+255),w,b
  8529  000AF4  6FC5               	movwf	(f_write@sect+3)& (0+255),b
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
  8533  000AF6  C0C2  F073         	movff	f_write@sect,move_window@sector
  8534  000AFA  C0C3  F074         	movff	f_write@sect+1,move_window@sector+1
  8535  000AFE  C0C4  F075         	movff	f_write@sect+2,move_window@sector+2
  8536  000B02  C0C5  F076         	movff	f_write@sect+3,move_window@sector+3
  8537  000B06  EC97  F018         	call	_move_window	;wreg free
  8538  000B0A  0900               	iorlw	0
  8539  000B0C  B4D8               	btfsc	status,2,c
  8540  000B0E  D0B3               	goto	l10205
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
  8544  000B10  0EFF               	movlw	255
  8545  000B12  6FB4               	movwf	??_f_write& (0+255),b
  8546  000B14  0E01               	movlw	1
  8547  000B16  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8548  000B18  EE20 F006          	lfsr	2,6
  8549  000B1C  51AE               	movf	f_write@fp& (0+255),w,b
  8550  000B1E  26D9               	addwf	fsr2l,f,c
  8551  000B20  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8552  000B22  22DA               	addwfc	fsr2h,f,c
  8553  000B24  CFDE F0B6          	movff	postinc2,??_f_write+2
  8554  000B28  CFDD F0B7          	movff	postdec2,??_f_write+3
  8555  000B2C  51B4               	movf	??_f_write& (0+255),w,b
  8556  000B2E  17B6               	andwf	(??_f_write+2)& (0+255),f,b
  8557  000B30  51B5               	movf	(??_f_write+1)& (0+255),w,b
  8558  000B32  17B7               	andwf	(??_f_write+3)& (0+255),f,b
  8559  000B34  51B6               	movf	(??_f_write+2)& (0+255),w,b
  8560  000B36  0800               	sublw	0
  8561  000B38  6FCA               	movwf	f_write@wcnt& (0+255),b
  8562  000B3A  51B7               	movf	(??_f_write+3)& (0+255),w,b
  8563  000B3C  A0D8               	btfss	status,0,c
  8564  000B3E  2AE8               	incf	wreg,f,c
  8565  000B40  0802               	sublw	2
  8566  000B42  6FCB               	movwf	(f_write@wcnt+1)& (0+255),b
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
  8570  000B44  51CA               	movf	f_write@wcnt& (0+255),w,b
  8571  000B46  5DB1               	subwf	f_write@btw& (0+255),w,b
  8572  000B48  51CB               	movf	(f_write@wcnt+1)& (0+255),w,b
  8573  000B4A  59B2               	subwfb	(f_write@btw+1)& (0+255),w,b
  8574  000B4C  B0D8               	btfsc	status,0,c
  8575  000B4E  D004               	goto	l10183
  8576                           
  8577                           ; BSR set to: 0
  8578  000B50  C0B1  F0CA         	movff	f_write@btw,f_write@wcnt
  8579  000B54  C0B2  F0CB         	movff	f_write@btw+1,f_write@wcnt+1
  8580  000B58                     l10183:
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
  8584  000B58  0EFF               	movlw	255
  8585  000B5A  6FB4               	movwf	??_f_write& (0+255),b
  8586  000B5C  0E01               	movlw	1
  8587  000B5E  6FB5               	movwf	(??_f_write+1)& (0+255),b
  8588  000B60  EE20 F006          	lfsr	2,6
  8589  000B64  51AE               	movf	f_write@fp& (0+255),w,b
  8590  000B66  26D9               	addwf	fsr2l,f,c
  8591  000B68  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8592  000B6A  22DA               	addwfc	fsr2h,f,c
  8593  000B6C  CFDE F0B6          	movff	postinc2,??_f_write+2
  8594  000B70  CFDD F0B7          	movff	postdec2,??_f_write+3
  8595  000B74  51B4               	movf	??_f_write& (0+255),w,b
  8596  000B76  17B6               	andwf	(??_f_write+2)& (0+255),f,b
  8597  000B78  51B5               	movf	(??_f_write+1)& (0+255),w,b
  8598  000B7A  17B7               	andwf	(??_f_write+3)& (0+255),f,b
  8599  000B7C  EE20 F004          	lfsr	2,4
  8600  000B80  51AE               	movf	f_write@fp& (0+255),w,b
  8601  000B82  26D9               	addwf	fsr2l,f,c
  8602  000B84  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8603  000B86  22DA               	addwfc	fsr2h,f,c
  8604  000B88  CFDE F0B8          	movff	postinc2,??_f_write+4
  8605  000B8C  CFDD F0B9          	movff	postdec2,??_f_write+5
  8606  000B90  51B6               	movf	(??_f_write+2)& (0+255),w,b
  8607  000B92  27B8               	addwf	(??_f_write+4)& (0+255),f,b
  8608  000B94  51B7               	movf	(??_f_write+3)& (0+255),w,b
  8609  000B96  23B9               	addwfc	(??_f_write+5)& (0+255),f,b
  8610  000B98  0E20               	movlw	32
  8611  000B9A  25B8               	addwf	(??_f_write+4)& (0+255),w,b
  8612  000B9C  6E19               	movwf	memcpy@d1^0,c
  8613  000B9E  0E00               	movlw	0
  8614  000BA0  21B9               	addwfc	(??_f_write+5)& (0+255),w,b
  8615  000BA2  6E1A               	movwf	(memcpy@d1+1)^0,c
  8616  000BA4  C0C1  F01B         	movff	f_write@wbuff,memcpy@s1
  8617  000BA8  6A1C               	clrf	(memcpy@s1+1)^0,c
  8618  000BAA  C0CA  F01D         	movff	f_write@wcnt,memcpy@n
  8619  000BAE  C0CB  F01E         	movff	f_write@wcnt+1,memcpy@n+1
  8620  000BB2  EC3E  F027         	call	_memcpy	;wreg free
  8621                           
  8622                           ;tff.c: 1058: fp->fs->winflag = 1;
  8623  000BB6  0100               	movlb	0	; () banked
  8624  000BB8  EE20 F004          	lfsr	2,4
  8625  000BBC  51AE               	movf	f_write@fp& (0+255),w,b
  8626  000BBE  26D9               	addwf	fsr2l,f,c
  8627  000BC0  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8628  000BC2  22DA               	addwfc	fsr2h,f,c
  8629  000BC4  EE10 F01F          	lfsr	1,31
  8630  000BC8  50DE               	movf	postinc2,w,c
  8631  000BCA  26E1               	addwf	fsr1l,f,c
  8632  000BCC  50DD               	movf	postdec2,w,c
  8633  000BCE  22E2               	addwfc	fsr1h,f,c
  8634  000BD0  0E01               	movlw	1
  8635  000BD2  6EE7               	movwf	indf1,c
  8636  000BD4                     l10187:
  8637                           
  8638                           ; BSR set to: 0
  8639  000BD4  51CA               	movf	f_write@wcnt& (0+255),w,b
  8640  000BD6  27C1               	addwf	f_write@wbuff& (0+255),f,b
  8641                           
  8642                           ; BSR set to: 0
  8643  000BD8  EE20 F006          	lfsr	2,6
  8644  000BDC  51AE               	movf	f_write@fp& (0+255),w,b
  8645  000BDE  26D9               	addwf	fsr2l,f,c
  8646  000BE0  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8647  000BE2  22DA               	addwfc	fsr2h,f,c
  8648  000BE4  51CA               	movf	f_write@wcnt& (0+255),w,b
  8649  000BE6  26DE               	addwf	postinc2,f,c
  8650  000BE8  51CB               	movf	(f_write@wcnt+1)& (0+255),w,b
  8651  000BEA  22DE               	addwfc	postinc2,f,c
  8652  000BEC  0E00               	movlw	0
  8653  000BEE  22DE               	addwfc	postinc2,f,c
  8654  000BF0  22DE               	addwfc	postinc2,f,c
  8655                           
  8656                           ; BSR set to: 0
  8657  000BF2  51B3               	movf	f_write@bw& (0+255),w,b
  8658  000BF4  6ED9               	movwf	fsr2l,c
  8659  000BF6  6ADA               	clrf	fsr2h,c
  8660  000BF8  51CA               	movf	f_write@wcnt& (0+255),w,b
  8661  000BFA  26DE               	addwf	postinc2,f,c
  8662  000BFC  51CB               	movf	(f_write@wcnt+1)& (0+255),w,b
  8663  000BFE  22DD               	addwfc	postdec2,f,c
  8664                           
  8665                           ; BSR set to: 0
  8666  000C00  51CA               	movf	f_write@wcnt& (0+255),w,b
  8667  000C02  5FB1               	subwf	f_write@btw& (0+255),f,b
  8668  000C04  51CB               	movf	(f_write@wcnt+1)& (0+255),w,b
  8669  000C06  5BB2               	subwfb	(f_write@btw+1)& (0+255),f,b
  8670  000C08                     l10195:
  8671                           
  8672                           ; BSR set to: 0
  8673  000C08  51B1               	movf	f_write@btw& (0+255),w,b
  8674  000C0A  11B2               	iorwf	(f_write@btw+1)& (0+255),w,b
  8675  000C0C  A4D8               	btfss	status,2,c
  8676  000C0E  D5D4               	goto	l10119
  8677  000C10                     u12220:
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
  8681  000C10  EE20 F006          	lfsr	2,6
  8682  000C14  51AE               	movf	f_write@fp& (0+255),w,b
  8683  000C16  26D9               	addwf	fsr2l,f,c
  8684  000C18  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8685  000C1A  22DA               	addwfc	fsr2h,f,c
  8686  000C1C  EE10 F00A          	lfsr	1,10
  8687  000C20  51AE               	movf	f_write@fp& (0+255),w,b
  8688  000C22  26E1               	addwf	fsr1l,f,c
  8689  000C24  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8690  000C26  22E2               	addwfc	fsr1h,f,c
  8691  000C28  50DE               	movf	postinc2,w,c
  8692  000C2A  5CE6               	subwf	postinc1,w,c
  8693  000C2C  50DE               	movf	postinc2,w,c
  8694  000C2E  58E6               	subwfb	postinc1,w,c
  8695  000C30  50DE               	movf	postinc2,w,c
  8696  000C32  58E6               	subwfb	postinc1,w,c
  8697  000C34  50DE               	movf	postinc2,w,c
  8698  000C36  58E6               	subwfb	postinc1,w,c
  8699  000C38  B0D8               	btfsc	status,0,c
  8700  000C3A  D014               	goto	l10201
  8701                           
  8702                           ; BSR set to: 0
  8703  000C3C  EE20 F006          	lfsr	2,6
  8704  000C40  51AE               	movf	f_write@fp& (0+255),w,b
  8705  000C42  26D9               	addwf	fsr2l,f,c
  8706  000C44  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8707  000C46  22DA               	addwfc	fsr2h,f,c
  8708  000C48  EE10 F00A          	lfsr	1,10
  8709  000C4C  51AE               	movf	f_write@fp& (0+255),w,b
  8710  000C4E  26E1               	addwf	fsr1l,f,c
  8711  000C50  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8712  000C52  22E2               	addwfc	fsr1h,f,c
  8713  000C54  CFDE FFE6          	movff	postinc2,postinc1
  8714  000C58  CFDE FFE6          	movff	postinc2,postinc1
  8715  000C5C  CFDE FFE6          	movff	postinc2,postinc1
  8716  000C60  CFDE FFE6          	movff	postinc2,postinc1
  8717  000C64                     l10201:
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;tff.c: 1062: fp->flag |= 0x20;
  8721  000C64  EE20 F002          	lfsr	2,2
  8722  000C68  51AE               	movf	f_write@fp& (0+255),w,b
  8723  000C6A  26D9               	addwf	fsr2l,f,c
  8724  000C6C  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8725  000C6E  22DA               	addwfc	fsr2h,f,c
  8726  000C70  0E00               	movlw	0
  8727  000C72  8ADB               	bsf	plusw2,5,c
  8728  000C74  0012               	return	
  8729  000C76                     l10205:
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;tff.c: 1066: fp->flag |= 0x80;
  8733  000C76  EE20 F002          	lfsr	2,2
  8734  000C7A  51AE               	movf	f_write@fp& (0+255),w,b
  8735  000C7C  26D9               	addwf	fsr2l,f,c
  8736  000C7E  51AF               	movf	(f_write@fp+1)& (0+255),w,b
  8737  000C80  22DA               	addwfc	fsr2h,f,c
  8738  000C82  0E00               	movlw	0
  8739  000C84  8EDB               	bsf	plusw2,7,c
  8740                           
  8741                           ; BSR set to: 0
  8742  000C86  0012               	return		;funcret
  8743  000C88                     __end_of_f_write:
  8744                           	callstack 0
  8745                           
  8746 ;; *************** function ___llmod *****************
  8747 ;; Defined at:
  8748 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;  dividend        4   24[COMRAM] unsigned long 
  8751 ;;  divisor         4   28[COMRAM] unsigned long 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;  counter         1   32[COMRAM] unsigned char 
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  4   24[COMRAM] unsigned long 
  8756 ;; Registers used:
  8757 ;;		wreg, status,2, status,0
  8758 ;; Tracked objects:
  8759 ;;		On entry : 3F/3
  8760 ;;		On exit  : 3F/3
  8761 ;;		Unchanged: 3E/0
  8762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8763 ;;      Params:         8       0       0       0       0       0       0       0       0
  8764 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8766 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8767 ;;Total ram usage:        9 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:    3
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_fprintf
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text37
  8778  004A60                     __ptext37:
  8779                           	callstack 0
  8780  004A60                     ___llmod:
  8781                           	callstack 23
  8782                           
  8783                           ; BSR set to: 3
  8784                           
  8785                           ; BSR set to: 0
  8786                           ;incstack = 0
  8787  004A60  501D               	movf	___llmod@divisor^0,w,c
  8788  004A62  101E               	iorwf	(___llmod@divisor+1)^0,w,c
  8789  004A64  101F               	iorwf	(___llmod@divisor+2)^0,w,c
  8790  004A66  1020               	iorwf	(___llmod@divisor+3)^0,w,c
  8791  004A68  B4D8               	btfsc	status,2,c
  8792  004A6A  D024               	goto	l1936
  8793                           
  8794                           ; BSR set to: 3
  8795  004A6C  0E01               	movlw	1
  8796  004A6E  6E21               	movwf	___llmod@counter^0,c
  8797  004A70  D006               	goto	l10795
  8798  004A72                     l10793:
  8799                           
  8800                           ; BSR set to: 3
  8801  004A72  90D8               	bcf	status,0,c
  8802  004A74  361D               	rlcf	___llmod@divisor^0,f,c
  8803  004A76  361E               	rlcf	(___llmod@divisor+1)^0,f,c
  8804  004A78  361F               	rlcf	(___llmod@divisor+2)^0,f,c
  8805  004A7A  3620               	rlcf	(___llmod@divisor+3)^0,f,c
  8806  004A7C  2A21               	incf	___llmod@counter^0,f,c
  8807  004A7E                     l10795:
  8808                           
  8809                           ; BSR set to: 3
  8810  004A7E  AE20               	btfss	(___llmod@divisor+3)^0,7,c
  8811  004A80  D7F8               	goto	l10793
  8812  004A82                     u13240:
  8813                           
  8814                           ; BSR set to: 3
  8815  004A82  501D               	movf	___llmod@divisor^0,w,c
  8816  004A84  5C19               	subwf	___llmod@dividend^0,w,c
  8817  004A86  501E               	movf	(___llmod@divisor+1)^0,w,c
  8818  004A88  581A               	subwfb	(___llmod@dividend+1)^0,w,c
  8819  004A8A  501F               	movf	(___llmod@divisor+2)^0,w,c
  8820  004A8C  581B               	subwfb	(___llmod@dividend+2)^0,w,c
  8821  004A8E  5020               	movf	(___llmod@divisor+3)^0,w,c
  8822  004A90  581C               	subwfb	(___llmod@dividend+3)^0,w,c
  8823  004A92  A0D8               	btfss	status,0,c
  8824  004A94  D008               	goto	l10801
  8825                           
  8826                           ; BSR set to: 3
  8827  004A96  501D               	movf	___llmod@divisor^0,w,c
  8828  004A98  5E19               	subwf	___llmod@dividend^0,f,c
  8829  004A9A  501E               	movf	(___llmod@divisor+1)^0,w,c
  8830  004A9C  5A1A               	subwfb	(___llmod@dividend+1)^0,f,c
  8831  004A9E  501F               	movf	(___llmod@divisor+2)^0,w,c
  8832  004AA0  5A1B               	subwfb	(___llmod@dividend+2)^0,f,c
  8833  004AA2  5020               	movf	(___llmod@divisor+3)^0,w,c
  8834  004AA4  5A1C               	subwfb	(___llmod@dividend+3)^0,f,c
  8835  004AA6                     l10801:
  8836                           
  8837                           ; BSR set to: 3
  8838  004AA6  90D8               	bcf	status,0,c
  8839  004AA8  3220               	rrcf	(___llmod@divisor+3)^0,f,c
  8840  004AAA  321F               	rrcf	(___llmod@divisor+2)^0,f,c
  8841  004AAC  321E               	rrcf	(___llmod@divisor+1)^0,f,c
  8842  004AAE  321D               	rrcf	___llmod@divisor^0,f,c
  8843                           
  8844                           ; BSR set to: 3
  8845  004AB0  2E21               	decfsz	___llmod@counter^0,f,c
  8846  004AB2  D7E7               	goto	u13240
  8847  004AB4                     l1936:
  8848                           
  8849                           ; BSR set to: 3
  8850  004AB4  C019  F019         	movff	___llmod@dividend,?___llmod
  8851  004AB8  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  8852  004ABC  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  8853  004AC0  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  8854                           
  8855                           ; BSR set to: 3
  8856  004AC4  0012               	return		;funcret
  8857  004AC6                     __end_of___llmod:
  8858                           	callstack 0
  8859                           
  8860 ;; *************** function _fix *****************
  8861 ;; Defined at:
  8862 ;;		line 183 in file "bibliotecas/GPS.c"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;		None
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  2   24[COMRAM] PTR unsigned char 
  8869 ;; Registers used:
  8870 ;;		wreg, status,2, status,0
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8876 ;;      Params:         2       0       0       0       0       0       0       0       0
  8877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8879 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8880 ;;Total ram usage:        2 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:    3
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_escrita_sdcard
  8887 ;;		_troca_de_tela
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text38
  8892  005428                     __ptext38:
  8893                           	callstack 0
  8894  005428                     _fix:
  8895                           	callstack 25
  8896                           
  8897                           ;GPS.c: 185: return rawFix;
  8898                           
  8899                           ; BSR set to: 3
  8900                           ;incstack = 0
  8901  005428  0EF2               	movlw	low _rawFix
  8902  00542A  6E19               	movwf	?_fix^0,c
  8903  00542C  0E01               	movlw	high _rawFix
  8904  00542E  6E1A               	movwf	(?_fix+1)^0,c
  8905  005430  0012               	return		;funcret
  8906  005432                     __end_of_fix:
  8907                           	callstack 0
  8908                           
  8909 ;; *************** function _f_open *****************
  8910 ;; Defined at:
  8911 ;;		line 833 in file "bibliotecas/tff.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  fp              2   96[BANK0 ] PTR struct _FIL
  8914 ;;		 -> fil(28), 
  8915 ;;  path            2   98[BANK0 ] PTR const unsigned char 
  8916 ;;		 -> STR_20(13), filename(15), 
  8917 ;;  mode            1  100[BANK0 ] unsigned char 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  dw              4  119[BANK0 ] unsigned long 
  8920 ;;  rs              2  117[BANK0 ] unsigned short 
  8921 ;;  dj             14  126[BANK0 ] struct _DIR_E
  8922 ;;  fn             12  105[BANK0 ] unsigned char [12]
  8923 ;;  dir             2  124[BANK0 ] PTR unsigned char 
  8924 ;;		 -> NULL(0), fs(544), 
  8925 ;;  res             1  123[BANK0 ] enum E155
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      enum E3236
  8928 ;; Registers used:
  8929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 3F/0
  8932 ;;		On exit  : 3F/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8935 ;;      Params:         0       5       0       0       0       0       0       0       0
  8936 ;;      Locals:         0      35       0       0       0       0       0       0       0
  8937 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8938 ;;      Totals:         0      44       0       0       0       0       0       0       0
  8939 ;;Total ram usage:       44 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:   12
  8942 ;; This function calls:
  8943 ;;		_auto_mount
  8944 ;;		_get_fattime
  8945 ;;		_memcpy
  8946 ;;		_memset
  8947 ;;		_move_window
  8948 ;;		_remove_chain
  8949 ;;		_reserve_direntry
  8950 ;;		_trace_path
  8951 ;; This function is called by:
  8952 ;;		_escrita_sdcard
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text39
  8957  001D14                     __ptext39:
  8958                           	callstack 0
  8959  001D14                     _f_open:
  8960                           	callstack 15
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
  8964                           
  8965                           ;incstack = 0
  8966  001D14  EE20 F004          	lfsr	2,4
  8967  001D18  51C0               	movf	f_open@fp& (0+255),w,b
  8968  001D1A  26D9               	addwf	fsr2l,f,c
  8969  001D1C  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  8970  001D1E  22DA               	addwfc	fsr2h,f,c
  8971  001D20  0E00               	movlw	0
  8972  001D22  6EDE               	movwf	postinc2,c
  8973  001D24  0E00               	movlw	0
  8974  001D26  6EDD               	movwf	postdec2,c
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
  8978  001D28  0E1F               	movlw	31
  8979  001D2A  17C4               	andwf	f_open@mode& (0+255),f,b
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
  8983  001D2C  0EC2               	movlw	low f_open@path
  8984  001D2E  6F79               	movwf	auto_mount@path& (0+255),b
  8985  001D30  51C4               	movf	f_open@mode& (0+255),w,b
  8986  001D32  0B1E               	andlw	30
  8987  001D34  6F7A               	movwf	auto_mount@chk_wp& (0+255),b
  8988  001D36  EC44  F006         	call	_auto_mount	;wreg free
  8989  001D3A  0100               	movlb	0	; () banked
  8990  001D3C  6FDB               	movwf	f_open@res& (0+255),b
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;tff.c: 853: if (res != FR_OK) return res;
  8994  001D3E  51DB               	movf	f_open@res& (0+255),w,b
  8995  001D40  B4D8               	btfsc	status,2,c
  8996  001D42  D002               	goto	l10859
  8997  001D44                     u13300:
  8998                           
  8999                           ; BSR set to: 0
  9000  001D44  51DB               	movf	f_open@res& (0+255),w,b
  9001  001D46  0012               	return	
  9002  001D48                     l10859:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
  9006  001D48  0EDE               	movlw	low f_open@dj
  9007  001D4A  6FA7               	movwf	trace_path@dj& (0+255),b
  9008  001D4C  0EC9               	movlw	low f_open@fn
  9009  001D4E  6FA8               	movwf	trace_path@fn& (0+255),b
  9010  001D50  C0C2  F0A9         	movff	f_open@path,trace_path@path
  9011  001D54  C0C3  F0AA         	movff	f_open@path+1,trace_path@path+1
  9012  001D58  0EDC               	movlw	low f_open@dir
  9013  001D5A  6FAB               	movwf	trace_path@dir& (0+255),b
  9014  001D5C  EC05  F013         	call	_trace_path	;wreg free
  9015  001D60  6FDB               	movwf	f_open@res& (0+255),b
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
  9019  001D62  C0C4  F0C5         	movff	f_open@mode,??_f_open
  9020  001D66  0E1C               	movlw	28
  9021  001D68  17C5               	andwf	??_f_open& (0+255),f,b
  9022  001D6A  B4D8               	btfsc	status,2,c
  9023  001D6C  D0DD               	goto	l10921
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
  9027  001D6E  51DB               	movf	f_open@res& (0+255),w,b
  9028  001D70  B4D8               	btfsc	status,2,c
  9029  001D72  D034               	goto	l958
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
  9033  001D74  0E02               	movlw	2
  9034  001D76  19DB               	xorwf	f_open@res& (0+255),w,b
  9035  001D78  A4D8               	btfss	status,2,c
  9036  001D7A  D7E4               	goto	u13300
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
  9040  001D7C  0EDE               	movlw	low f_open@dj
  9041  001D7E  6FAE               	movwf	reserve_direntry@dj& (0+255),b
  9042  001D80  0EDC               	movlw	low f_open@dir
  9043  001D82  6FAF               	movwf	reserve_direntry@dir& (0+255),b
  9044  001D84  EC41  F014         	call	_reserve_direntry	;wreg free
  9045  001D88  6FDB               	movwf	f_open@res& (0+255),b
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;tff.c: 864: if (res != FR_OK) return res;
  9049  001D8A  51DB               	movf	f_open@res& (0+255),w,b
  9050  001D8C  A4D8               	btfss	status,2,c
  9051  001D8E  D7DA               	goto	u13300
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;tff.c: 865: memset(dir, 0, 32);
  9055  001D90  C0DC  F019         	movff	f_open@dir,memset@p1
  9056  001D94  C0DD  F01A         	movff	f_open@dir+1,memset@p1+1
  9057  001D98  0E00               	movlw	0
  9058  001D9A  6E1C               	movwf	(memset@c+1)^0,c
  9059  001D9C  0E00               	movlw	0
  9060  001D9E  6E1B               	movwf	memset@c^0,c
  9061  001DA0  0E00               	movlw	0
  9062  001DA2  6E1E               	movwf	(memset@n+1)^0,c
  9063  001DA4  0E20               	movlw	32
  9064  001DA6  6E1D               	movwf	memset@n^0,c
  9065  001DA8  EC70  F028         	call	_memset	;wreg free
  9066                           
  9067                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
  9068  001DAC  C0DC  F019         	movff	f_open@dir,memcpy@d1
  9069  001DB0  C0DD  F01A         	movff	f_open@dir+1,memcpy@d1+1
  9070  001DB4  0EC9               	movlw	low f_open@fn
  9071  001DB6  6E1B               	movwf	memcpy@s1^0,c
  9072  001DB8  6A1C               	clrf	(memcpy@s1+1)^0,c
  9073  001DBA  0E00               	movlw	0
  9074  001DBC  6E1E               	movwf	(memcpy@n+1)^0,c
  9075  001DBE  0E0B               	movlw	11
  9076  001DC0  6E1D               	movwf	memcpy@n^0,c
  9077  001DC2  EC3E  F027         	call	_memcpy	;wreg free
  9078                           
  9079                           ;tff.c: 867: dir[12] = fn[11];
  9080  001DC6  0100               	movlb	0	; () banked
  9081  001DC8  EE20 F00C          	lfsr	2,12
  9082  001DCC  51DC               	movf	f_open@dir& (0+255),w,b
  9083  001DCE  26D9               	addwf	fsr2l,f,c
  9084  001DD0  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9085  001DD2  22DA               	addwfc	fsr2h,f,c
  9086  001DD4  C0D4  FFDF         	movff	f_open@fn+11,indf2
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;tff.c: 868: mode |= 0x08;
  9090  001DD8  87C4               	bsf	f_open@mode& (0+255),3,b
  9091                           
  9092                           ;tff.c: 869: }
  9093  001DDA  D07A               	goto	l10909
  9094  001DDC                     l958:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
  9098  001DDC  A5C4               	btfss	f_open@mode& (0+255),2,b
  9099  001DDE  D002               	goto	l10889
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;tff.c: 872: return FR_EXIST;
  9103  001DE0  0E07               	movlw	7
  9104  001DE2  0012               	return	
  9105  001DE4                     l10889:
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
  9109  001DE4  51DC               	movf	f_open@dir& (0+255),w,b
  9110  001DE6  11DD               	iorwf	(f_open@dir+1)& (0+255),w,b
  9111  001DE8  B4D8               	btfsc	status,2,c
  9112  001DEA  D00C               	goto	u13370
  9113                           
  9114                           ; BSR set to: 0
  9115  001DEC  EE20 F00B          	lfsr	2,11
  9116  001DF0  51DC               	movf	f_open@dir& (0+255),w,b
  9117  001DF2  26D9               	addwf	fsr2l,f,c
  9118  001DF4  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9119  001DF6  22DA               	addwfc	fsr2h,f,c
  9120  001DF8  50DF               	movf	indf2,w,c
  9121  001DFA  6FC5               	movwf	??_f_open& (0+255),b
  9122  001DFC  0E11               	movlw	17
  9123  001DFE  17C5               	andwf	??_f_open& (0+255),f,b
  9124  001E00  B4D8               	btfsc	status,2,c
  9125  001E02  D002               	goto	l963
  9126  001E04                     u13370:
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;tff.c: 874: return FR_DENIED;
  9130  001E04  0E06               	movlw	6
  9131  001E06  0012               	return	
  9132  001E08                     l963:
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;tff.c: 875: if (mode & 0x08) {
  9136  001E08  A7C4               	btfss	f_open@mode& (0+255),3,b
  9137  001E0A  D062               	goto	l10909
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
  9141  001E0C  EE20 F01A          	lfsr	2,26
  9142  001E10  51DC               	movf	f_open@dir& (0+255),w,b
  9143  001E12  26D9               	addwf	fsr2l,f,c
  9144  001E14  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9145  001E16  22DA               	addwfc	fsr2h,f,c
  9146  001E18  CFDE F0D5          	movff	postinc2,f_open@rs
  9147  001E1C  CFDD F0D6          	movff	postdec2,f_open@rs+1
  9148                           
  9149                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
  9150  001E20  EE20 F01A          	lfsr	2,26
  9151  001E24  51DC               	movf	f_open@dir& (0+255),w,b
  9152  001E26  26D9               	addwf	fsr2l,f,c
  9153  001E28  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9154  001E2A  22DA               	addwfc	fsr2h,f,c
  9155  001E2C  0E00               	movlw	0
  9156  001E2E  6EDE               	movwf	postinc2,c
  9157  001E30  0E00               	movlw	0
  9158  001E32  6EDD               	movwf	postdec2,c
  9159                           
  9160                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
  9161  001E34  EE20 F01C          	lfsr	2,28
  9162  001E38  51DC               	movf	f_open@dir& (0+255),w,b
  9163  001E3A  26D9               	addwf	fsr2l,f,c
  9164  001E3C  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9165  001E3E  22DA               	addwfc	fsr2h,f,c
  9166  001E40  6ADE               	clrf	postinc2,c
  9167  001E42  6ADE               	clrf	postinc2,c
  9168  001E44  6ADE               	clrf	postinc2,c
  9169  001E46  6ADD               	clrf	postdec2,c
  9170                           
  9171                           ;tff.c: 884: dj.fs->winflag = 1;
  9172  001E48  EE20 F01F          	lfsr	2,31
  9173  001E4C  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9174  001E4E  26D9               	addwf	fsr2l,f,c
  9175  001E50  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9176  001E52  22DA               	addwfc	fsr2h,f,c
  9177  001E54  0E01               	movlw	1
  9178  001E56  6EDF               	movwf	indf2,c
  9179                           
  9180                           ;tff.c: 885: dw = dj.fs->winsect;
  9181  001E58  EE20 F004          	lfsr	2,4
  9182  001E5C  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9183  001E5E  26D9               	addwf	fsr2l,f,c
  9184  001E60  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9185  001E62  22DA               	addwfc	fsr2h,f,c
  9186  001E64  CFDE F0D7          	movff	postinc2,f_open@dw
  9187  001E68  CFDE F0D8          	movff	postinc2,f_open@dw+1
  9188  001E6C  CFDE F0D9          	movff	postinc2,f_open@dw+2
  9189  001E70  CFDE F0DA          	movff	postinc2,f_open@dw+3
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
  9193  001E74  C0D5  F0A0         	movff	f_open@rs,remove_chain@clust
  9194  001E78  C0D6  F0A1         	movff	f_open@rs+1,remove_chain@clust+1
  9195  001E7C  ECA8  F021         	call	_remove_chain	;wreg free
  9196  001E80  0900               	iorlw	0
  9197  001E82  B4D8               	btfsc	status,2,c
  9198  001E84  D00D               	goto	u13400
  9199                           
  9200                           ; BSR set to: 0
  9201  001E86  C0D7  F073         	movff	f_open@dw,move_window@sector
  9202  001E8A  C0D8  F074         	movff	f_open@dw+1,move_window@sector+1
  9203  001E8E  C0D9  F075         	movff	f_open@dw+2,move_window@sector+2
  9204  001E92  C0DA  F076         	movff	f_open@dw+3,move_window@sector+3
  9205  001E96  EC97  F018         	call	_move_window	;wreg free
  9206  001E9A  0900               	iorlw	0
  9207  001E9C  A4D8               	btfss	status,2,c
  9208  001E9E  D002               	goto	l10907
  9209  001EA0                     u13400:
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;tff.c: 887: return FR_RW_ERROR;
  9213  001EA0  0E08               	movlw	8
  9214  001EA2  0012               	return	
  9215  001EA4                     l10907:
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
  9219  001EA4  0EFF               	movlw	255
  9220  001EA6  6FC5               	movwf	??_f_open& (0+255),b
  9221  001EA8  0EFF               	movlw	255
  9222  001EAA  6FC6               	movwf	(??_f_open+1)& (0+255),b
  9223  001EAC  C0D5  F0C7         	movff	f_open@rs,??_f_open+2
  9224  001EB0  C0D6  F0C8         	movff	f_open@rs+1,??_f_open+3
  9225  001EB4  51C5               	movf	??_f_open& (0+255),w,b
  9226  001EB6  27C7               	addwf	(??_f_open+2)& (0+255),f,b
  9227  001EB8  51C6               	movf	(??_f_open+1)& (0+255),w,b
  9228  001EBA  23C8               	addwfc	(??_f_open+3)& (0+255),f,b
  9229  001EBC  EE20 F018          	lfsr	2,24
  9230  001EC0  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9231  001EC2  26D9               	addwf	fsr2l,f,c
  9232  001EC4  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9233  001EC6  22DA               	addwfc	fsr2h,f,c
  9234  001EC8  C0C7  FFDE         	movff	??_f_open+2,postinc2
  9235  001ECC  C0C8  FFDD         	movff	??_f_open+3,postdec2
  9236  001ED0                     l10909:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
  9240  001ED0  A7C4               	btfss	f_open@mode& (0+255),3,b
  9241  001ED2  D045               	goto	l10941
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;tff.c: 892: dir[11] = 0;
  9245  001ED4  EE20 F00B          	lfsr	2,11
  9246  001ED8  51DC               	movf	f_open@dir& (0+255),w,b
  9247  001EDA  26D9               	addwf	fsr2l,f,c
  9248  001EDC  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9249  001EDE  22DA               	addwfc	fsr2h,f,c
  9250  001EE0  0E00               	movlw	0
  9251  001EE2  6EDF               	movwf	indf2,c
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;tff.c: 893: dw = get_fattime();
  9255  001EE4  EC91  F01B         	call	_get_fattime	;wreg free
  9256  001EE8  C01D  F0D7         	movff	?_get_fattime,f_open@dw
  9257  001EEC  C01E  F0D8         	movff	?_get_fattime+1,f_open@dw+1
  9258  001EF0  C01F  F0D9         	movff	?_get_fattime+2,f_open@dw+2
  9259  001EF4  C020  F0DA         	movff	?_get_fattime+3,f_open@dw+3
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
  9263  001EF8  EE20 F00E          	lfsr	2,14
  9264  001EFC  51DC               	movf	f_open@dir& (0+255),w,b
  9265  001EFE  26D9               	addwf	fsr2l,f,c
  9266  001F00  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9267  001F02  22DA               	addwfc	fsr2h,f,c
  9268  001F04  C0D7  FFDE         	movff	f_open@dw,postinc2
  9269  001F08  C0D8  FFDE         	movff	f_open@dw+1,postinc2
  9270  001F0C  C0D9  FFDE         	movff	f_open@dw+2,postinc2
  9271  001F10  C0DA  FFDE         	movff	f_open@dw+3,postinc2
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;tff.c: 895: dj.fs->winflag = 1;
  9275  001F14  EE20 F01F          	lfsr	2,31
  9276  001F18  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9277  001F1A  26D9               	addwf	fsr2l,f,c
  9278  001F1C  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9279  001F1E  22DA               	addwfc	fsr2h,f,c
  9280  001F20  0E01               	movlw	1
  9281  001F22  6EDF               	movwf	indf2,c
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;tff.c: 896: mode |= 0x20;
  9285  001F24  8BC4               	bsf	f_open@mode& (0+255),5,b
  9286  001F26  D01B               	goto	l10941
  9287  001F28                     l10921:
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
  9291  001F28  51DB               	movf	f_open@res& (0+255),w,b
  9292  001F2A  A4D8               	btfss	status,2,c
  9293  001F2C  D70B               	goto	u13300
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
  9297  001F2E  51DC               	movf	f_open@dir& (0+255),w,b
  9298  001F30  11DD               	iorwf	(f_open@dir+1)& (0+255),w,b
  9299  001F32  B4D8               	btfsc	status,2,c
  9300  001F34  D008               	goto	u13440
  9301                           
  9302                           ; BSR set to: 0
  9303  001F36  EE20 F00B          	lfsr	2,11
  9304  001F3A  51DC               	movf	f_open@dir& (0+255),w,b
  9305  001F3C  26D9               	addwf	fsr2l,f,c
  9306  001F3E  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9307  001F40  22DA               	addwfc	fsr2h,f,c
  9308  001F42  A8DF               	btfss	indf2,4,c
  9309  001F44  D002               	goto	l973
  9310  001F46                     u13440:
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;tff.c: 904: return FR_NO_FILE;
  9314  001F46  0E02               	movlw	2
  9315  001F48  0012               	return	
  9316  001F4A                     l973:
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
  9320  001F4A  A3C4               	btfss	f_open@mode& (0+255),1,b
  9321  001F4C  D008               	goto	l10941
  9322                           
  9323                           ; BSR set to: 0
  9324  001F4E  EE20 F00B          	lfsr	2,11
  9325  001F52  51DC               	movf	f_open@dir& (0+255),w,b
  9326  001F54  26D9               	addwf	fsr2l,f,c
  9327  001F56  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9328  001F58  22DA               	addwfc	fsr2h,f,c
  9329  001F5A  B0DF               	btfsc	indf2,0,c
  9330  001F5C  D753               	goto	u13370
  9331  001F5E                     l10941:
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
  9335  001F5E  EE20 F004          	lfsr	2,4
  9336  001F62  51E2               	movf	(f_open@dj+4)& (0+255),w,b
  9337  001F64  26D9               	addwf	fsr2l,f,c
  9338  001F66  51E3               	movf	(f_open@dj+5)& (0+255),w,b
  9339  001F68  22DA               	addwfc	fsr2h,f,c
  9340  001F6A  EE10 F016          	lfsr	1,22
  9341  001F6E  51C0               	movf	f_open@fp& (0+255),w,b
  9342  001F70  26E1               	addwf	fsr1l,f,c
  9343  001F72  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9344  001F74  22E2               	addwfc	fsr1h,f,c
  9345  001F76  CFDE FFE6          	movff	postinc2,postinc1
  9346  001F7A  CFDE FFE6          	movff	postinc2,postinc1
  9347  001F7E  CFDE FFE6          	movff	postinc2,postinc1
  9348  001F82  CFDE FFE6          	movff	postinc2,postinc1
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;tff.c: 910: fp->dir_ptr = dir;
  9352  001F86  EE20 F01A          	lfsr	2,26
  9353  001F8A  51C0               	movf	f_open@fp& (0+255),w,b
  9354  001F8C  26D9               	addwf	fsr2l,f,c
  9355  001F8E  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9356  001F90  22DA               	addwfc	fsr2h,f,c
  9357  001F92  C0DC  FFDE         	movff	f_open@dir,postinc2
  9358  001F96  C0DD  FFDD         	movff	f_open@dir+1,postdec2
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;tff.c: 912: fp->flag = mode;
  9362  001F9A  EE20 F002          	lfsr	2,2
  9363  001F9E  51C0               	movf	f_open@fp& (0+255),w,b
  9364  001FA0  26D9               	addwf	fsr2l,f,c
  9365  001FA2  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9366  001FA4  22DA               	addwfc	fsr2h,f,c
  9367  001FA6  C0C4  FFDF         	movff	f_open@mode,indf2
  9368                           
  9369                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
  9370  001FAA  EE20 F01A          	lfsr	2,26
  9371  001FAE  51DC               	movf	f_open@dir& (0+255),w,b
  9372  001FB0  26D9               	addwf	fsr2l,f,c
  9373  001FB2  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9374  001FB4  22DA               	addwfc	fsr2h,f,c
  9375  001FB6  EE10 F00E          	lfsr	1,14
  9376  001FBA  51C0               	movf	f_open@fp& (0+255),w,b
  9377  001FBC  26E1               	addwf	fsr1l,f,c
  9378  001FBE  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9379  001FC0  22E2               	addwfc	fsr1h,f,c
  9380  001FC2  CFDE FFE6          	movff	postinc2,postinc1
  9381  001FC6  CFDD FFE5          	movff	postdec2,postdec1
  9382                           
  9383                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
  9384  001FCA  EE20 F01C          	lfsr	2,28
  9385  001FCE  51DC               	movf	f_open@dir& (0+255),w,b
  9386  001FD0  26D9               	addwf	fsr2l,f,c
  9387  001FD2  51DD               	movf	(f_open@dir+1)& (0+255),w,b
  9388  001FD4  22DA               	addwfc	fsr2h,f,c
  9389  001FD6  EE10 F00A          	lfsr	1,10
  9390  001FDA  51C0               	movf	f_open@fp& (0+255),w,b
  9391  001FDC  26E1               	addwf	fsr1l,f,c
  9392  001FDE  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9393  001FE0  22E2               	addwfc	fsr1h,f,c
  9394  001FE2  CFDE FFE6          	movff	postinc2,postinc1
  9395  001FE6  CFDE FFE6          	movff	postinc2,postinc1
  9396  001FEA  CFDE FFE6          	movff	postinc2,postinc1
  9397  001FEE  CFDE FFE6          	movff	postinc2,postinc1
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
  9401  001FF2  EE20 F006          	lfsr	2,6
  9402  001FF6  51C0               	movf	f_open@fp& (0+255),w,b
  9403  001FF8  26D9               	addwf	fsr2l,f,c
  9404  001FFA  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9405  001FFC  22DA               	addwfc	fsr2h,f,c
  9406  001FFE  6ADE               	clrf	postinc2,c
  9407  002000  6ADE               	clrf	postinc2,c
  9408  002002  6ADE               	clrf	postinc2,c
  9409  002004  6ADD               	clrf	postdec2,c
  9410                           
  9411                           ; BSR set to: 0
  9412  002006  EE20 F003          	lfsr	2,3
  9413  00200A  51C0               	movf	f_open@fp& (0+255),w,b
  9414  00200C  26D9               	addwf	fsr2l,f,c
  9415  00200E  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9416  002010  22DA               	addwfc	fsr2h,f,c
  9417  002012  0EFF               	movlw	255
  9418  002014  6EDF               	movwf	indf2,c
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
  9422  002016  EE20 F004          	lfsr	2,4
  9423  00201A  51C0               	movf	f_open@fp& (0+255),w,b
  9424  00201C  26D9               	addwf	fsr2l,f,c
  9425  00201E  51C1               	movf	(f_open@fp+1)& (0+255),w,b
  9426  002020  22DA               	addwfc	fsr2h,f,c
  9427  002022  C0E2  FFDE         	movff	f_open@dj+4,postinc2
  9428  002026  C0E3  FFDD         	movff	f_open@dj+5,postdec2
  9429                           
  9430                           ; BSR set to: 0
  9431  00202A  C0E2  FFD9         	movff	f_open@dj+4,fsr2l
  9432  00202E  C0E3  FFDA         	movff	f_open@dj+5,fsr2h
  9433  002032  C0C0  FFE1         	movff	f_open@fp,fsr1l
  9434  002036  C0C1  FFE2         	movff	f_open@fp+1,fsr1h
  9435  00203A  CFDE FFE6          	movff	postinc2,postinc1
  9436  00203E  CFDD FFE5          	movff	postdec2,postdec1
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;tff.c: 922: return FR_OK;
  9440  002042  0E00               	movlw	0
  9441                           
  9442                           ; BSR set to: 0
  9443  002044  0012               	return		;funcret
  9444  002046                     __end_of_f_open:
  9445                           	callstack 0
  9446                           
  9447 ;; *************** function _trace_path *****************
  9448 ;; Defined at:
  9449 ;;		line 502 in file "bibliotecas/tff.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  dj              1   71[BANK0 ] PTR struct _DIR_E
  9452 ;;		 -> f_open@dj(14), 
  9453 ;;  fn              1   72[BANK0 ] PTR unsigned char 
  9454 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
  9455 ;;  path            2   73[BANK0 ] PTR const unsigned char 
  9456 ;;		 -> STR_20(13), filename(15), 
  9457 ;;  dir             1   75[BANK0 ] PTR PTR unsigned char 
  9458 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;  dptr            2   89[BANK0 ] PTR unsigned char 
  9461 ;;		 -> fs.win(512), NULL(0), fs(544), 
  9462 ;;  clust           2   86[BANK0 ] unsigned short 
  9463 ;;  fs              2   84[BANK0 ] PTR struct _FATFS
  9464 ;;		 -> NULL(0), fs(544), 
  9465 ;;  ds              1   88[BANK0 ] unsigned char 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      enum E155
  9468 ;; Registers used:
  9469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 3F/0
  9472 ;;		On exit  : 3F/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9475 ;;      Params:         0       5       0       0       0       0       0       0       0
  9476 ;;      Locals:         0      11       0       0       0       0       0       0       0
  9477 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9478 ;;      Totals:         0      20       0       0       0       0       0       0       0
  9479 ;;Total ram usage:       20 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:   11
  9482 ;; This function calls:
  9483 ;;		_clust2sect
  9484 ;;		_make_dirfile
  9485 ;;		_memcmp
  9486 ;;		_move_window
  9487 ;;		_next_dir_entry
  9488 ;; This function is called by:
  9489 ;;		_f_open
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text40
  9494  00260A                     __ptext40:
  9495                           	callstack 0
  9496  00260A                     _trace_path:
  9497                           	callstack 15
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;tff.c: 512: FATFS *fs = FatFs;
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;incstack = 0
  9504  00260A  C039  F0B4         	movff	_FatFs,trace_path@fs
  9505  00260E  C03A  F0B5         	movff	_FatFs+1,trace_path@fs+1
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;tff.c: 515: dj->fs = fs;
  9509  002612  51A7               	movf	trace_path@dj& (0+255),w,b
  9510  002614  6ED9               	movwf	fsr2l,c
  9511  002616  6ADA               	clrf	fsr2h,c
  9512  002618  0E04               	movlw	4
  9513  00261A  26D9               	addwf	fsr2l,f,c
  9514  00261C  C0B4  FFDE         	movff	trace_path@fs,postinc2
  9515  002620  C0B5  FFDD         	movff	trace_path@fs+1,postdec2
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;tff.c: 516: clust = fs->dirbase;
  9519  002624  EE20 F00C          	lfsr	2,12
  9520  002628  51B4               	movf	trace_path@fs& (0+255),w,b
  9521  00262A  26D9               	addwf	fsr2l,f,c
  9522  00262C  51B5               	movf	(trace_path@fs+1)& (0+255),w,b
  9523  00262E  22DA               	addwfc	fsr2h,f,c
  9524  002630  CFDE F0B6          	movff	postinc2,trace_path@clust
  9525  002634  CFDD F0B7          	movff	postdec2,trace_path@clust+1
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
  9529  002638  51A7               	movf	trace_path@dj& (0+255),w,b
  9530  00263A  6ED9               	movwf	fsr2l,c
  9531  00263C  6ADA               	clrf	fsr2h,c
  9532  00263E  0E06               	movlw	6
  9533  002640  26D9               	addwf	fsr2l,f,c
  9534  002642  0E00               	movlw	0
  9535  002644  6EDE               	movwf	postinc2,c
  9536  002646  0E00               	movlw	0
  9537  002648  6EDD               	movwf	postdec2,c
  9538  00264A  51A7               	movf	trace_path@dj& (0+255),w,b
  9539  00264C  6EE1               	movwf	fsr1l,c
  9540  00264E  6AE2               	clrf	fsr1h,c
  9541  002650  0E08               	movlw	8
  9542  002652  26E1               	addwf	fsr1l,f,c
  9543  002654  CFDE FFE6          	movff	postinc2,postinc1
  9544  002658  CFDD FFE5          	movff	postdec2,postdec1
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;tff.c: 525: dj->sect = clust;
  9548  00265C  51B6               	movf	trace_path@clust& (0+255),w,b
  9549  00265E  6FAC               	movwf	??_trace_path& (0+255),b
  9550  002660  51B7               	movf	(trace_path@clust+1)& (0+255),w,b
  9551  002662  6FAD               	movwf	(??_trace_path+1)& (0+255),b
  9552  002664  6BAE               	clrf	(??_trace_path+2)& (0+255),b
  9553  002666  6BAF               	clrf	(??_trace_path+3)& (0+255),b
  9554  002668  51A7               	movf	trace_path@dj& (0+255),w,b
  9555  00266A  6ED9               	movwf	fsr2l,c
  9556  00266C  6ADA               	clrf	fsr2h,c
  9557  00266E  0E0A               	movlw	10
  9558  002670  26D9               	addwf	fsr2l,f,c
  9559  002672  C0AC  FFDE         	movff	??_trace_path,postinc2
  9560  002676  C0AD  FFDE         	movff	??_trace_path+1,postinc2
  9561  00267A  C0AE  FFDE         	movff	??_trace_path+2,postinc2
  9562  00267E  C0AF  FFDE         	movff	??_trace_path+3,postinc2
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
  9566  002682  51A7               	movf	trace_path@dj& (0+255),w,b
  9567  002684  6ED9               	movwf	fsr2l,c
  9568  002686  6ADA               	clrf	fsr2h,c
  9569  002688  0E02               	movlw	2
  9570  00268A  26D9               	addwf	fsr2l,f,c
  9571  00268C  0E00               	movlw	0
  9572  00268E  6EDE               	movwf	postinc2,c
  9573  002690  0E00               	movlw	0
  9574  002692  6EDD               	movwf	postdec2,c
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;tff.c: 529: if (*path == '\0') {
  9578  002694  C0A9  FFF6         	movff	trace_path@path,tblptrl
  9579  002698  C0AA  FFF7         	movff	trace_path@path+1,tblptrh
  9580  00269C  6AF8               	clrf	tblptru,c
  9581  00269E  0E07               	movlw	(high __ramtop+-1)
  9582  0026A0  64F7               	cpfsgt	tblptrh,c
  9583  0026A2  D003               	bra	u12627
  9584  0026A4  0008               	tblrd		*
  9585  0026A6  50F5               	movf	tablat,w,c
  9586  0026A8  D005               	bra	u12620
  9587  0026AA                     u12627:
  9588  0026AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9589  0026AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9590  0026B2  50E7               	movf	indf1,w,c
  9591  0026B4                     u12620:
  9592  0026B4  0900               	iorlw	0
  9593  0026B6  A4D8               	btfss	status,2,c
  9594  0026B8  D00A               	goto	l10483
  9595                           
  9596                           ;tff.c: 530: *dir = (0); return FR_OK;
  9597  0026BA  0100               	movlb	0	; () banked
  9598  0026BC  51AB               	movf	trace_path@dir& (0+255),w,b
  9599  0026BE  6ED9               	movwf	fsr2l,c
  9600  0026C0  6ADA               	clrf	fsr2h,c
  9601  0026C2  0E00               	movlw	0
  9602  0026C4  6EDE               	movwf	postinc2,c
  9603  0026C6  0E00               	movlw	0
  9604  0026C8  6EDD               	movwf	postdec2,c
  9605  0026CA                     l10479:
  9606                           
  9607                           ; BSR set to: 0
  9608  0026CA  0E00               	movlw	0
  9609  0026CC  0012               	return	
  9610  0026CE                     l10483:
  9611                           
  9612                           ;tff.c: 534: ds = make_dirfile(&path, fn);
  9613  0026CE  0EA9               	movlw	low trace_path@path
  9614  0026D0  6E21               	movwf	make_dirfile@path^0,c
  9615  0026D2  C0A8  F022         	movff	trace_path@fn,make_dirfile@dirname
  9616  0026D6  ECE4  F01A         	call	_make_dirfile	;wreg free
  9617  0026DA  0100               	movlb	0	; () banked
  9618  0026DC  6FB8               	movwf	trace_path@ds& (0+255),b
  9619                           
  9620                           ; BSR set to: 0
  9621                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
  9622  0026DE  05B8               	decf	trace_path@ds& (0+255),w,b
  9623  0026E0  A4D8               	btfss	status,2,c
  9624  0026E2  D002               	goto	l10491
  9625                           
  9626                           ; BSR set to: 0
  9627  0026E4  0E04               	movlw	4
  9628  0026E6  0012               	return	
  9629  0026E8                     l10491:
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
  9633  0026E8  51A7               	movf	trace_path@dj& (0+255),w,b
  9634  0026EA  6ED9               	movwf	fsr2l,c
  9635  0026EC  6ADA               	clrf	fsr2h,c
  9636  0026EE  0E0A               	movlw	10
  9637  0026F0  26D9               	addwf	fsr2l,f,c
  9638  0026F2  CFDE F073          	movff	postinc2,move_window@sector
  9639  0026F6  CFDE F074          	movff	postinc2,move_window@sector+1
  9640  0026FA  CFDE F075          	movff	postinc2,move_window@sector+2
  9641  0026FE  CFDE F076          	movff	postinc2,move_window@sector+3
  9642  002702  EC97  F018         	call	_move_window	;wreg free
  9643  002706  0900               	iorlw	0
  9644  002708  A4D8               	btfss	status,2,c
  9645  00270A  D002               	goto	l10497
  9646                           
  9647                           ; BSR set to: 0
  9648  00270C  0E08               	movlw	8
  9649  00270E  0012               	return	
  9650  002710                     l10497:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
  9654  002710  51A7               	movf	trace_path@dj& (0+255),w,b
  9655  002712  6ED9               	movwf	fsr2l,c
  9656  002714  6ADA               	clrf	fsr2h,c
  9657  002716  0E02               	movlw	2
  9658  002718  26D9               	addwf	fsr2l,f,c
  9659  00271A  CFDE F0AC          	movff	postinc2,??_trace_path
  9660  00271E  CFDD F0AD          	movff	postdec2,??_trace_path+1
  9661  002722  0E0F               	movlw	15
  9662  002724  17AC               	andwf	??_trace_path& (0+255),f,b
  9663  002726  0E00               	movlw	0
  9664  002728  17AD               	andwf	(??_trace_path+1)& (0+255),f,b
  9665  00272A  0E05               	movlw	5
  9666  00272C                     u12665:
  9667  00272C  90D8               	bcf	status,0,c
  9668  00272E  37AC               	rlcf	??_trace_path& (0+255),f,b
  9669  002730  37AD               	rlcf	(??_trace_path+1)& (0+255),f,b
  9670  002732  2EE8               	decfsz	wreg,f,c
  9671  002734  D7FB               	goto	u12665
  9672  002736  C0B4  F0AE         	movff	trace_path@fs,??_trace_path+2
  9673  00273A  C0B5  F0AF         	movff	trace_path@fs+1,??_trace_path+3
  9674  00273E  51AC               	movf	??_trace_path& (0+255),w,b
  9675  002740  27AE               	addwf	(??_trace_path+2)& (0+255),f,b
  9676  002742  51AD               	movf	(??_trace_path+1)& (0+255),w,b
  9677  002744  23AF               	addwfc	(??_trace_path+3)& (0+255),f,b
  9678  002746  0E20               	movlw	32
  9679  002748  25AE               	addwf	(??_trace_path+2)& (0+255),w,b
  9680  00274A  6FB9               	movwf	trace_path@dptr& (0+255),b
  9681  00274C  0E00               	movlw	0
  9682  00274E  21AF               	addwfc	(??_trace_path+3)& (0+255),w,b
  9683  002750  6FBA               	movwf	(trace_path@dptr+1)& (0+255),b
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;tff.c: 539: if (dptr[0] == 0)
  9687  002752  C0B9  FFD9         	movff	trace_path@dptr,fsr2l
  9688  002756  C0BA  FFDA         	movff	trace_path@dptr+1,fsr2h
  9689  00275A  50DF               	movf	indf2,w,c
  9690  00275C  A4D8               	btfss	status,2,c
  9691  00275E  D00D               	goto	l10509
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
  9695  002760  51B8               	movf	trace_path@ds& (0+255),w,b
  9696  002762  B4D8               	btfsc	status,2,c
  9697  002764  D004               	goto	l10505
  9698                           
  9699                           ; BSR set to: 0
  9700  002766  0E00               	movlw	0
  9701  002768  6FB1               	movwf	(_trace_path$1685+1)& (0+255),b
  9702  00276A  0E03               	movlw	3
  9703  00276C  D003               	goto	L3
  9704  00276E                     l10505:
  9705                           
  9706                           ; BSR set to: 0
  9707  00276E  0E00               	movlw	0
  9708  002770  6FB1               	movwf	(_trace_path$1685+1)& (0+255),b
  9709  002772  0E02               	movlw	2
  9710  002774                     L3:
  9711  002774  6FB0               	movwf	_trace_path$1685& (0+255),b
  9712                           
  9713                           ; BSR set to: 0
  9714  002776  51B0               	movf	_trace_path$1685& (0+255),w,b
  9715  002778  0012               	return	
  9716  00277A                     l10509:
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
  9720  00277A  C0B9  FFD9         	movff	trace_path@dptr,fsr2l
  9721  00277E  C0BA  FFDA         	movff	trace_path@dptr+1,fsr2h
  9722  002782  0EE5               	movlw	229
  9723  002784  18DE               	xorwf	postinc2,w,c
  9724  002786  B4D8               	btfsc	status,2,c
  9725  002788  D019               	goto	l10517
  9726                           
  9727                           ; BSR set to: 0
  9728  00278A  EE20 F00B          	lfsr	2,11
  9729  00278E  51B9               	movf	trace_path@dptr& (0+255),w,b
  9730  002790  26D9               	addwf	fsr2l,f,c
  9731  002792  51BA               	movf	(trace_path@dptr+1)& (0+255),w,b
  9732  002794  22DA               	addwfc	fsr2h,f,c
  9733  002796  B6DF               	btfsc	indf2,3,c
  9734  002798  D011               	goto	l10517
  9735                           
  9736                           ; BSR set to: 0
  9737  00279A  C0B9  F019         	movff	trace_path@dptr,memcmp@s1
  9738  00279E  C0BA  F01A         	movff	trace_path@dptr+1,memcmp@s1+1
  9739  0027A2  C0A8  F01B         	movff	trace_path@fn,memcmp@s2
  9740  0027A6  6A1C               	clrf	(memcmp@s2+1)^0,c
  9741  0027A8  0E00               	movlw	0
  9742  0027AA  6E1E               	movwf	(memcmp@n+1)^0,c
  9743  0027AC  0E0B               	movlw	11
  9744  0027AE  6E1D               	movwf	memcmp@n^0,c
  9745  0027B0  EC40  F022         	call	_memcmp	;wreg free
  9746  0027B4  5019               	movf	?_memcmp^0,w,c
  9747  0027B6  101A               	iorwf	(?_memcmp+1)^0,w,c
  9748  0027B8  B4D8               	btfsc	status,2,c
  9749  0027BA  D014               	goto	l10527
  9750  0027BC                     l10517:
  9751                           
  9752                           ;tff.c: 544: if (!next_dir_entry(dj))
  9753  0027BC  C0A7  F09B         	movff	trace_path@dj,next_dir_entry@dj
  9754  0027C0  EC32  F01A         	call	_next_dir_entry	;wreg free
  9755  0027C4  0900               	iorlw	0
  9756  0027C6  A4D8               	btfss	status,2,c
  9757  0027C8  D78F               	goto	l10491
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
  9761  0027CA  51B8               	movf	trace_path@ds& (0+255),w,b
  9762  0027CC  B4D8               	btfsc	status,2,c
  9763  0027CE  D004               	goto	l10523
  9764                           
  9765                           ; BSR set to: 0
  9766  0027D0  0E00               	movlw	0
  9767  0027D2  6FB3               	movwf	(_trace_path$1687+1)& (0+255),b
  9768  0027D4  0E03               	movlw	3
  9769  0027D6  D003               	goto	L4
  9770  0027D8                     l10523:
  9771                           
  9772                           ; BSR set to: 0
  9773  0027D8  0E00               	movlw	0
  9774  0027DA  6FB3               	movwf	(_trace_path$1687+1)& (0+255),b
  9775  0027DC  0E02               	movlw	2
  9776  0027DE                     L4:
  9777  0027DE  6FB2               	movwf	_trace_path$1687& (0+255),b
  9778                           
  9779                           ; BSR set to: 0
  9780  0027E0  51B2               	movf	_trace_path$1687& (0+255),w,b
  9781  0027E2  0012               	return	
  9782  0027E4                     l10527:
  9783                           
  9784                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
  9785  0027E4  0100               	movlb	0	; () banked
  9786  0027E6  51B8               	movf	trace_path@ds& (0+255),w,b
  9787  0027E8  A4D8               	btfss	status,2,c
  9788  0027EA  D008               	goto	l10535
  9789                           
  9790                           ; BSR set to: 0
  9791  0027EC  51AB               	movf	trace_path@dir& (0+255),w,b
  9792  0027EE  6ED9               	movwf	fsr2l,c
  9793  0027F0  6ADA               	clrf	fsr2h,c
  9794  0027F2  C0B9  FFDE         	movff	trace_path@dptr,postinc2
  9795  0027F6  C0BA  FFDD         	movff	trace_path@dptr+1,postdec2
  9796  0027FA  D767               	goto	l10479
  9797  0027FC                     l10535:
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
  9801  0027FC  EE20 F00B          	lfsr	2,11
  9802  002800  51B9               	movf	trace_path@dptr& (0+255),w,b
  9803  002802  26D9               	addwf	fsr2l,f,c
  9804  002804  51BA               	movf	(trace_path@dptr+1)& (0+255),w,b
  9805  002806  22DA               	addwfc	fsr2h,f,c
  9806  002808  B8DF               	btfsc	indf2,4,c
  9807  00280A  D002               	goto	l10541
  9808                           
  9809                           ; BSR set to: 0
  9810  00280C  0E03               	movlw	3
  9811  00280E  0012               	return	
  9812  002810                     l10541:
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
  9816  002810  EE20 F01A          	lfsr	2,26
  9817  002814  51B9               	movf	trace_path@dptr& (0+255),w,b
  9818  002816  26D9               	addwf	fsr2l,f,c
  9819  002818  51BA               	movf	(trace_path@dptr+1)& (0+255),w,b
  9820  00281A  22DA               	addwfc	fsr2h,f,c
  9821  00281C  CFDE F0B6          	movff	postinc2,trace_path@clust
  9822  002820  CFDD F0B7          	movff	postdec2,trace_path@clust+1
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;tff.c: 554: dj->clust = dj->sclust = clust;
  9826  002824  51A7               	movf	trace_path@dj& (0+255),w,b
  9827  002826  6ED9               	movwf	fsr2l,c
  9828  002828  6ADA               	clrf	fsr2h,c
  9829  00282A  0E06               	movlw	6
  9830  00282C  26D9               	addwf	fsr2l,f,c
  9831  00282E  C0B6  FFDE         	movff	trace_path@clust,postinc2
  9832  002832  C0B7  FFDD         	movff	trace_path@clust+1,postdec2
  9833  002836  51A7               	movf	trace_path@dj& (0+255),w,b
  9834  002838  6EE1               	movwf	fsr1l,c
  9835  00283A  6AE2               	clrf	fsr1h,c
  9836  00283C  0E08               	movlw	8
  9837  00283E  26E1               	addwf	fsr1l,f,c
  9838  002840  CFDE FFE6          	movff	postinc2,postinc1
  9839  002844  CFDD FFE5          	movff	postdec2,postdec1
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;tff.c: 555: dj->sect = clust2sect(clust);
  9843  002848  C0B6  F025         	movff	trace_path@clust,clust2sect@clust
  9844  00284C  C0B7  F026         	movff	trace_path@clust+1,clust2sect@clust+1
  9845  002850  EC5B  F020         	call	_clust2sect	;wreg free
  9846  002854  51A7               	movf	trace_path@dj& (0+255),w,b
  9847  002856  6ED9               	movwf	fsr2l,c
  9848  002858  6ADA               	clrf	fsr2h,c
  9849  00285A  0E0A               	movlw	10
  9850  00285C  26D9               	addwf	fsr2l,f,c
  9851  00285E  C025  FFDE         	movff	?_clust2sect,postinc2
  9852  002862  C026  FFDE         	movff	?_clust2sect+1,postinc2
  9853  002866  C027  FFDE         	movff	?_clust2sect+2,postinc2
  9854  00286A  C028  FFDE         	movff	?_clust2sect+3,postinc2
  9855                           
  9856                           ; BSR set to: 0
  9857                           ;tff.c: 556: dj->index = 2;
  9858  00286E  51A7               	movf	trace_path@dj& (0+255),w,b
  9859  002870  6ED9               	movwf	fsr2l,c
  9860  002872  6ADA               	clrf	fsr2h,c
  9861  002874  0E02               	movlw	2
  9862  002876  26D9               	addwf	fsr2l,f,c
  9863  002878  0E02               	movlw	2
  9864  00287A  6EDE               	movwf	postinc2,c
  9865  00287C  0E00               	movlw	0
  9866  00287E  6EDD               	movwf	postdec2,c
  9867                           
  9868                           ;tff.c: 557: }
  9869  002880  D726               	goto	l10483
  9870  002882                     __end_of_trace_path:
  9871                           	callstack 0
  9872                           
  9873 ;; *************** function _make_dirfile *****************
  9874 ;; Defined at:
  9875 ;;		line 439 in file "bibliotecas/tff.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  path            1   32[COMRAM] PTR PTR const unsigned c
  9878 ;;		 -> trace_path@path(2), 
  9879 ;;  dirname         1   33[COMRAM] PTR unsigned char 
  9880 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  c               1   42[COMRAM] unsigned char 
  9883 ;;  n               1   41[COMRAM] unsigned char 
  9884 ;;  a               1   40[COMRAM] unsigned char 
  9885 ;;  t               1   39[COMRAM] unsigned char 
  9886 ;;  b               1   38[COMRAM] unsigned char 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      unsigned char 
  9889 ;; Registers used:
  9890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9896 ;;      Params:         2       0       0       0       0       0       0       0       0
  9897 ;;      Locals:         7       0       0       0       0       0       0       0       0
  9898 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9899 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9900 ;;Total ram usage:       11 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    4
  9903 ;; This function calls:
  9904 ;;		_memset
  9905 ;; This function is called by:
  9906 ;;		_trace_path
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text41
  9911  0035C8                     __ptext41:
  9912                           	callstack 0
  9913  0035C8                     _make_dirfile:
  9914                           	callstack 21
  9915                           
  9916                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;incstack = 0
  9920  0035C8  C022  F019         	movff	make_dirfile@dirname,memset@p1
  9921  0035CC  6A1A               	clrf	(memset@p1+1)^0,c
  9922  0035CE  0E00               	movlw	0
  9923  0035D0  6E1C               	movwf	(memset@c+1)^0,c
  9924  0035D2  0E20               	movlw	32
  9925  0035D4  6E1B               	movwf	memset@c^0,c
  9926  0035D6  0E00               	movlw	0
  9927  0035D8  6E1E               	movwf	(memset@n+1)^0,c
  9928  0035DA  0E0B               	movlw	11
  9929  0035DC  6E1D               	movwf	memset@n^0,c
  9930  0035DE  EC70  F028         	call	_memset	;wreg free
  9931                           
  9932                           ;tff.c: 448: a = 0; b = 0x18;
  9933  0035E2  0E00               	movlw	0
  9934  0035E4  6E29               	movwf	make_dirfile@a^0,c
  9935  0035E6  0E18               	movlw	24
  9936  0035E8  6E27               	movwf	make_dirfile@b^0,c
  9937                           
  9938                           ;tff.c: 449: n = 0; t = 8;
  9939  0035EA  0E00               	movlw	0
  9940  0035EC  6E2A               	movwf	make_dirfile@n^0,c
  9941  0035EE  0E08               	movlw	8
  9942  0035F0  6E28               	movwf	make_dirfile@t^0,c
  9943  0035F2                     l6889:
  9944                           
  9945                           ;tff.c: 451: c = *(*path)++;
  9946  0035F2  5021               	movf	make_dirfile@path^0,w,c
  9947  0035F4  6ED9               	movwf	fsr2l,c
  9948  0035F6  6ADA               	clrf	fsr2h,c
  9949  0035F8  CFDF F023          	movff	indf2,??_make_dirfile
  9950  0035FC  0E01               	movlw	1
  9951  0035FE  26DE               	addwf	postinc2,f,c
  9952  003600  CFDF F024          	movff	indf2,??_make_dirfile+1
  9953  003604  0E00               	movlw	0
  9954  003606  22DD               	addwfc	postdec2,f,c
  9955  003608  C023  FFF6         	movff	??_make_dirfile,tblptrl
  9956  00360C  C024  FFF7         	movff	??_make_dirfile+1,tblptrh
  9957  003610  6AF8               	clrf	tblptru,c
  9958  003612  0E07               	movlw	(high __ramtop+-1)
  9959  003614  64F7               	cpfsgt	tblptrh,c
  9960  003616  D003               	bra	u6867
  9961  003618  0008               	tblrd		*
  9962  00361A  50F5               	movf	tablat,w,c
  9963  00361C  D005               	bra	u6860
  9964  00361E                     u6867:
  9965  00361E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9966  003622  CFF7 FFE2          	movff	tblptrh,fsr1h
  9967  003626  50E7               	movf	indf1,w,c
  9968  003628                     u6860:
  9969  003628  6E2B               	movwf	make_dirfile@c^0,c
  9970                           
  9971                           ;tff.c: 452: if (c == '\0' || c == '/') {
  9972  00362A  502B               	movf	make_dirfile@c^0,w,c
  9973  00362C  B4D8               	btfsc	status,2,c
  9974  00362E  D004               	goto	u6880
  9975  003630  0E2F               	movlw	47
  9976  003632  182B               	xorwf	make_dirfile@c^0,w,c
  9977  003634  A4D8               	btfss	status,2,c
  9978  003636  D012               	goto	l6909
  9979  003638                     u6880:
  9980                           
  9981                           ;tff.c: 453: if (n == 0) break;
  9982  003638  502A               	movf	make_dirfile@n^0,w,c
  9983  00363A  B4D8               	btfsc	status,2,c
  9984  00363C  D070               	goto	l6997
  9985  00363E  5029               	movf	make_dirfile@a^0,w,c
  9986  003640  1427               	andwf	make_dirfile@b^0,w,c
  9987  003642  6E23               	movwf	??_make_dirfile^0,c
  9988  003644  5023               	movf	??_make_dirfile^0,w,c
  9989  003646  6E25               	movwf	_make_dirfile$1638^0,c
  9990  003648  6A26               	clrf	(_make_dirfile$1638+1)^0,c
  9991  00364A  5022               	movf	make_dirfile@dirname^0,w,c
  9992  00364C  6ED9               	movwf	fsr2l,c
  9993  00364E  6ADA               	clrf	fsr2h,c
  9994  003650  0E0B               	movlw	11
  9995  003652  26D9               	addwf	fsr2l,f,c
  9996  003654  C025  FFDF         	movff	_make_dirfile$1638,indf2
  9997                           
  9998                           ;tff.c: 455: return c;
  9999  003658  502B               	movf	make_dirfile@c^0,w,c
 10000  00365A  0012               	return	
 10001  00365C                     l6909:
 10002                           
 10003                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 10004  00365C  0E20               	movlw	32
 10005  00365E  642B               	cpfsgt	make_dirfile@c^0,c
 10006  003660  D05E               	goto	l6997
 10007  003662  0E7F               	movlw	127
 10008  003664  182B               	xorwf	make_dirfile@c^0,w,c
 10009  003666  B4D8               	btfsc	status,2,c
 10010  003668  D05A               	goto	l6997
 10011                           
 10012                           ;tff.c: 458: if (c == '.') {
 10013  00366A  0E2E               	movlw	46
 10014  00366C  182B               	xorwf	make_dirfile@c^0,w,c
 10015  00366E  A4D8               	btfss	status,2,c
 10016  003670  D00C               	goto	l6939
 10017                           
 10018                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 10019  003672  B029               	btfsc	make_dirfile@a^0,0,c
 10020  003674  D054               	goto	l6997
 10021  003676  502A               	movf	make_dirfile@n^0,w,c
 10022  003678  B4D8               	btfsc	status,2,c
 10023  00367A  D051               	goto	l6997
 10024  00367C  0E09               	movlw	9
 10025  00367E  602A               	cpfslt	make_dirfile@n^0,c
 10026  003680  D04E               	goto	l6997
 10027                           
 10028                           ;tff.c: 460: n = 8; t = 11; continue;
 10029  003682  0E08               	movlw	8
 10030  003684  6E2A               	movwf	make_dirfile@n^0,c
 10031  003686  0E0B               	movlw	11
 10032  003688  D7B3               	goto	L5
 10033  00368A                     l6939:
 10034                           
 10035                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 10036  00368A  0E22               	movlw	34
 10037  00368C  182B               	xorwf	make_dirfile@c^0,w,c
 10038  00368E  B4D8               	btfsc	status,2,c
 10039  003690  D046               	goto	l6997
 10040                           
 10041                           ;tff.c: 472: if (c <= ')') goto md_l1;
 10042  003692  0E2A               	movlw	42
 10043  003694  602B               	cpfslt	make_dirfile@c^0,c
 10044  003696  D001               	goto	l6947
 10045  003698  D035               	goto	l846
 10046  00369A                     l6947:
 10047                           
 10048                           ;tff.c: 473: if (c <= ',') break;
 10049  00369A  0E2D               	movlw	45
 10050  00369C  602B               	cpfslt	make_dirfile@c^0,c
 10051  00369E  D001               	goto	l6951
 10052  0036A0  D03E               	goto	l6997
 10053  0036A2                     l6951:
 10054                           
 10055                           ;tff.c: 474: if (c <= '9') goto md_l1;
 10056  0036A2  0E3A               	movlw	58
 10057  0036A4  602B               	cpfslt	make_dirfile@c^0,c
 10058  0036A6  D001               	goto	l6955
 10059  0036A8  D02D               	goto	l846
 10060  0036AA                     l6955:
 10061                           
 10062                           ;tff.c: 475: if (c <= '?') break;
 10063  0036AA  0E40               	movlw	64
 10064  0036AC  602B               	cpfslt	make_dirfile@c^0,c
 10065  0036AE  D001               	goto	l849
 10066  0036B0  D036               	goto	l6997
 10067  0036B2                     l849:
 10068                           
 10069                           ;tff.c: 476: if (!(a & 1)) {
 10070  0036B2  B029               	btfsc	make_dirfile@a^0,0,c
 10071  0036B4  D027               	goto	l846
 10072                           
 10073                           ;tff.c: 477: if (c == '|') break;
 10074  0036B6  0E7C               	movlw	124
 10075  0036B8  182B               	xorwf	make_dirfile@c^0,w,c
 10076  0036BA  B4D8               	btfsc	status,2,c
 10077  0036BC  D030               	goto	l6997
 10078                           
 10079                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 10080  0036BE  0E5A               	movlw	90
 10081  0036C0  642B               	cpfsgt	make_dirfile@c^0,c
 10082  0036C2  D004               	goto	l6969
 10083  0036C4  0E5E               	movlw	94
 10084  0036C6  602B               	cpfslt	make_dirfile@c^0,c
 10085  0036C8  D001               	goto	l6969
 10086  0036CA  D029               	goto	l6997
 10087  0036CC                     l6969:
 10088  0036CC  0E40               	movlw	64
 10089  0036CE  642B               	cpfsgt	make_dirfile@c^0,c
 10090  0036D0  D00A               	goto	l6979
 10091  0036D2  0E5B               	movlw	91
 10092  0036D4  602B               	cpfslt	make_dirfile@c^0,c
 10093  0036D6  D007               	goto	l6979
 10094                           
 10095                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 10096  0036D8  0E08               	movlw	8
 10097  0036DA  1828               	xorwf	make_dirfile@t^0,w,c
 10098  0036DC  A4D8               	btfss	status,2,c
 10099  0036DE  D002               	goto	l6977
 10100  0036E0  9627               	bcf	make_dirfile@b^0,3,c
 10101  0036E2  D001               	goto	l6979
 10102  0036E4                     l6977:
 10103  0036E4  9827               	bcf	make_dirfile@b^0,4,c
 10104  0036E6                     l6979:
 10105                           
 10106                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 10107  0036E6  0E60               	movlw	96
 10108  0036E8  642B               	cpfsgt	make_dirfile@c^0,c
 10109  0036EA  D00C               	goto	l846
 10110  0036EC  0E7B               	movlw	123
 10111  0036EE  602B               	cpfslt	make_dirfile@c^0,c
 10112  0036F0  D009               	goto	l846
 10113                           
 10114                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 10115  0036F2  0E20               	movlw	32
 10116  0036F4  5E2B               	subwf	make_dirfile@c^0,f,c
 10117  0036F6  0E08               	movlw	8
 10118  0036F8  1828               	xorwf	make_dirfile@t^0,w,c
 10119  0036FA  A4D8               	btfss	status,2,c
 10120  0036FC  D002               	goto	l6987
 10121  0036FE  8629               	bsf	make_dirfile@a^0,3,c
 10122  003700  D001               	goto	l846
 10123  003702                     l6987:
 10124  003702  8829               	bsf	make_dirfile@a^0,4,c
 10125  003704                     l846:
 10126                           
 10127                           ;tff.c: 487: a &= 0xFE;
 10128  003704  9029               	bcf	make_dirfile@a^0,0,c
 10129                           
 10130                           ;tff.c: 489: if (n >= t) break;
 10131  003706  5028               	movf	make_dirfile@t^0,w,c
 10132  003708  5C2A               	subwf	make_dirfile@n^0,w,c
 10133  00370A  B0D8               	btfsc	status,0,c
 10134  00370C  D008               	goto	l6997
 10135                           
 10136                           ;tff.c: 490: dirname[n++] = c;
 10137  00370E  5022               	movf	make_dirfile@dirname^0,w,c
 10138  003710  242A               	addwf	make_dirfile@n^0,w,c
 10139  003712  6ED9               	movwf	fsr2l,c
 10140  003714  6ADA               	clrf	fsr2h,c
 10141  003716  C02B  FFDF         	movff	make_dirfile@c,indf2
 10142  00371A  2A2A               	incf	make_dirfile@n^0,f,c
 10143  00371C  D76A               	goto	l6889
 10144  00371E                     l6997:
 10145                           
 10146                           ;tff.c: 492: return 1;
 10147  00371E  0E01               	movlw	1
 10148  003720  0012               	return		;funcret
 10149  003722                     __end_of_make_dirfile:
 10150                           	callstack 0
 10151                           
 10152 ;; *************** function _reserve_direntry *****************
 10153 ;; Defined at:
 10154 ;;		line 568 in file "bibliotecas/tff.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;  dj              1   78[BANK0 ] PTR struct _DIR_E
 10157 ;;		 -> f_open@dj(14), 
 10158 ;;  dir             1   79[BANK0 ] PTR PTR unsigned char 
 10159 ;;		 -> f_open@dir(2), 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  sector          4   84[BANK0 ] unsigned long 
 10162 ;;  fs              2   94[BANK0 ] PTR struct _FATFS
 10163 ;;		 -> NULL(0), fs(544), 
 10164 ;;  clust           2   92[BANK0 ] unsigned short 
 10165 ;;  dptr            2   89[BANK0 ] PTR unsigned char 
 10166 ;;		 -> fs.win(512), NULL(0), fs(544), 
 10167 ;;  c               1   91[BANK0 ] unsigned char 
 10168 ;;  n               1   88[BANK0 ] unsigned char 
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      enum E155
 10171 ;; Registers used:
 10172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10173 ;; Tracked objects:
 10174 ;;		On entry : 3F/0
 10175 ;;		On exit  : 3F/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10178 ;;      Params:         0       2       0       0       0       0       0       0       0
 10179 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10180 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10181 ;;      Totals:         0      18       0       0       0       0       0       0       0
 10182 ;;Total ram usage:       18 bytes
 10183 ;; Hardware stack levels used:    1
 10184 ;; Hardware stack levels required when called:   11
 10185 ;; This function calls:
 10186 ;;		_clust2sect
 10187 ;;		_create_chain
 10188 ;;		_disk_write
 10189 ;;		_memset
 10190 ;;		_move_window
 10191 ;;		_next_dir_entry
 10192 ;; This function is called by:
 10193 ;;		_f_open
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text42
 10198  002882                     __ptext42:
 10199                           	callstack 0
 10200  002882                     _reserve_direntry:
 10201                           	callstack 15
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 10205                           
 10206                           ;incstack = 0
 10207  002882  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10208  002884  6ED9               	movwf	fsr2l,c
 10209  002886  6ADA               	clrf	fsr2h,c
 10210  002888  0E04               	movlw	4
 10211  00288A  26D9               	addwf	fsr2l,f,c
 10212  00288C  CFDE F0BE          	movff	postinc2,reserve_direntry@fs
 10213  002890  CFDD F0BF          	movff	postdec2,reserve_direntry@fs+1
 10214                           
 10215                           ;tff.c: 580: clust = dj->sclust;
 10216  002894  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10217  002896  6ED9               	movwf	fsr2l,c
 10218  002898  6ADA               	clrf	fsr2h,c
 10219  00289A  0E06               	movlw	6
 10220  00289C  26D9               	addwf	fsr2l,f,c
 10221  00289E  CFDE F0BC          	movff	postinc2,reserve_direntry@clust
 10222  0028A2  CFDD F0BD          	movff	postdec2,reserve_direntry@clust+1
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;tff.c: 581: if (clust != 0) {
 10226  0028A6  51BC               	movf	reserve_direntry@clust& (0+255),w,b
 10227  0028A8  11BD               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10228  0028AA  B4D8               	btfsc	status,2,c
 10229  0028AC  D01D               	goto	l10557
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;tff.c: 582: dj->clust = clust;
 10233  0028AE  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10234  0028B0  6ED9               	movwf	fsr2l,c
 10235  0028B2  6ADA               	clrf	fsr2h,c
 10236  0028B4  0E08               	movlw	8
 10237  0028B6  26D9               	addwf	fsr2l,f,c
 10238  0028B8  C0BC  FFDE         	movff	reserve_direntry@clust,postinc2
 10239  0028BC  C0BD  FFDD         	movff	reserve_direntry@clust+1,postdec2
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;tff.c: 583: dj->sect = clust2sect(clust);
 10243  0028C0  C0BC  F025         	movff	reserve_direntry@clust,clust2sect@clust
 10244  0028C4  C0BD  F026         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 10245  0028C8  EC5B  F020         	call	_clust2sect	;wreg free
 10246  0028CC  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10247  0028CE  6ED9               	movwf	fsr2l,c
 10248  0028D0  6ADA               	clrf	fsr2h,c
 10249  0028D2  0E0A               	movlw	10
 10250  0028D4  26D9               	addwf	fsr2l,f,c
 10251  0028D6  C025  FFDE         	movff	?_clust2sect,postinc2
 10252  0028DA  C026  FFDE         	movff	?_clust2sect+1,postinc2
 10253  0028DE  C027  FFDE         	movff	?_clust2sect+2,postinc2
 10254  0028E2  C028  FFDE         	movff	?_clust2sect+3,postinc2
 10255                           
 10256                           ;tff.c: 584: } else {
 10257  0028E6  D013               	goto	l10559
 10258  0028E8                     l10557:
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;tff.c: 585: dj->sect = fs->dirbase;
 10262  0028E8  EE20 F00C          	lfsr	2,12
 10263  0028EC  51BE               	movf	reserve_direntry@fs& (0+255),w,b
 10264  0028EE  26D9               	addwf	fsr2l,f,c
 10265  0028F0  51BF               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10266  0028F2  22DA               	addwfc	fsr2h,f,c
 10267  0028F4  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10268  0028F6  6EE1               	movwf	fsr1l,c
 10269  0028F8  6AE2               	clrf	fsr1h,c
 10270  0028FA  0E0A               	movlw	10
 10271  0028FC  26E1               	addwf	fsr1l,f,c
 10272  0028FE  CFDE FFE6          	movff	postinc2,postinc1
 10273  002902  CFDE FFE6          	movff	postinc2,postinc1
 10274  002906  CFDE FFE6          	movff	postinc2,postinc1
 10275  00290A  CFDE FFE6          	movff	postinc2,postinc1
 10276  00290E                     l10559:
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 10280  00290E  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10281  002910  6ED9               	movwf	fsr2l,c
 10282  002912  6ADA               	clrf	fsr2h,c
 10283  002914  0E02               	movlw	2
 10284  002916  26D9               	addwf	fsr2l,f,c
 10285  002918  0E00               	movlw	0
 10286  00291A  6EDE               	movwf	postinc2,c
 10287  00291C  0E00               	movlw	0
 10288  00291E  6EDD               	movwf	postdec2,c
 10289  002920                     l10561:
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 10293  002920  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10294  002922  6ED9               	movwf	fsr2l,c
 10295  002924  6ADA               	clrf	fsr2h,c
 10296  002926  0E0A               	movlw	10
 10297  002928  26D9               	addwf	fsr2l,f,c
 10298  00292A  CFDE F073          	movff	postinc2,move_window@sector
 10299  00292E  CFDE F074          	movff	postinc2,move_window@sector+1
 10300  002932  CFDE F075          	movff	postinc2,move_window@sector+2
 10301  002936  CFDE F076          	movff	postinc2,move_window@sector+3
 10302  00293A  EC97  F018         	call	_move_window	;wreg free
 10303  00293E  0900               	iorlw	0
 10304  002940  A4D8               	btfss	status,2,c
 10305  002942  D002               	goto	l10567
 10306  002944                     u12770:
 10307                           
 10308                           ; BSR set to: 0
 10309  002944  0E08               	movlw	8
 10310  002946  0012               	return	
 10311  002948                     l10567:
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 10315  002948  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10316  00294A  6ED9               	movwf	fsr2l,c
 10317  00294C  6ADA               	clrf	fsr2h,c
 10318  00294E  0E02               	movlw	2
 10319  002950  26D9               	addwf	fsr2l,f,c
 10320  002952  CFDE F0B0          	movff	postinc2,??_reserve_direntry
 10321  002956  CFDD F0B1          	movff	postdec2,??_reserve_direntry+1
 10322  00295A  0E0F               	movlw	15
 10323  00295C  17B0               	andwf	??_reserve_direntry& (0+255),f,b
 10324  00295E  0E00               	movlw	0
 10325  002960  17B1               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 10326  002962  0E05               	movlw	5
 10327  002964                     u12785:
 10328  002964  90D8               	bcf	status,0,c
 10329  002966  37B0               	rlcf	??_reserve_direntry& (0+255),f,b
 10330  002968  37B1               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 10331  00296A  2EE8               	decfsz	wreg,f,c
 10332  00296C  D7FB               	goto	u12785
 10333  00296E  C0BE  F0B2         	movff	reserve_direntry@fs,??_reserve_direntry+2
 10334  002972  C0BF  F0B3         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 10335  002976  51B0               	movf	??_reserve_direntry& (0+255),w,b
 10336  002978  27B2               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 10337  00297A  51B1               	movf	(??_reserve_direntry+1)& (0+255),w,b
 10338  00297C  23B3               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 10339  00297E  0E20               	movlw	32
 10340  002980  25B2               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 10341  002982  6FB9               	movwf	reserve_direntry@dptr& (0+255),b
 10342  002984  0E00               	movlw	0
 10343  002986  21B3               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 10344  002988  6FBA               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;tff.c: 592: c = dptr[0];
 10348  00298A  C0B9  FFD9         	movff	reserve_direntry@dptr,fsr2l
 10349  00298E  C0BA  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 10350  002992  50DF               	movf	indf2,w,c
 10351  002994  6FBB               	movwf	reserve_direntry@c& (0+255),b
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 10355  002996  51BB               	movf	reserve_direntry@c& (0+255),w,b
 10356  002998  B4D8               	btfsc	status,2,c
 10357  00299A  D004               	goto	u12800
 10358                           
 10359                           ; BSR set to: 0
 10360  00299C  0EE5               	movlw	229
 10361  00299E  19BB               	xorwf	reserve_direntry@c& (0+255),w,b
 10362  0029A0  A4D8               	btfss	status,2,c
 10363  0029A2  D009               	goto	l10581
 10364  0029A4                     u12800:
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;tff.c: 594: *dir = dptr; return FR_OK;
 10368  0029A4  51AF               	movf	reserve_direntry@dir& (0+255),w,b
 10369  0029A6  6ED9               	movwf	fsr2l,c
 10370  0029A8  6ADA               	clrf	fsr2h,c
 10371  0029AA  C0B9  FFDE         	movff	reserve_direntry@dptr,postinc2
 10372  0029AE  C0BA  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 10373  0029B2                     l10577:
 10374                           
 10375                           ; BSR set to: 0
 10376  0029B2  0E00               	movlw	0
 10377  0029B4  0012               	return	
 10378  0029B6                     l10581:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 10382  0029B6  C0AE  F09B         	movff	reserve_direntry@dj,next_dir_entry@dj
 10383  0029BA  EC32  F01A         	call	_next_dir_entry	;wreg free
 10384  0029BE  0900               	iorlw	0
 10385  0029C0  A4D8               	btfss	status,2,c
 10386  0029C2  D7AE               	goto	l10561
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 10390  0029C4  51BC               	movf	reserve_direntry@clust& (0+255),w,b
 10391  0029C6  11BD               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10392  0029C8  B4D8               	btfsc	status,2,c
 10393  0029CA  D013               	goto	u12830
 10394                           
 10395                           ; BSR set to: 0
 10396  0029CC  51AE               	movf	reserve_direntry@dj& (0+255),w,b
 10397  0029CE  6ED9               	movwf	fsr2l,c
 10398  0029D0  6ADA               	clrf	fsr2h,c
 10399  0029D2  0E08               	movlw	8
 10400  0029D4  26D9               	addwf	fsr2l,f,c
 10401  0029D6  CFDE F0A0          	movff	postinc2,create_chain@clust
 10402  0029DA  CFDD F0A1          	movff	postdec2,create_chain@clust+1
 10403  0029DE  EC6C  F019         	call	_create_chain	;wreg free
 10404  0029E2  C0A0  F0BC         	movff	?_create_chain,reserve_direntry@clust
 10405  0029E6  C0A1  F0BD         	movff	?_create_chain+1,reserve_direntry@clust+1
 10406  0029EA  51BC               	movf	reserve_direntry@clust& (0+255),w,b
 10407  0029EC  11BD               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10408  0029EE  A4D8               	btfss	status,2,c
 10409  0029F0  D002               	goto	l10591
 10410  0029F2                     u12830:
 10411                           
 10412                           ; BSR set to: 0
 10413  0029F2  0E06               	movlw	6
 10414  0029F4  0012               	return	
 10415  0029F6                     l10591:
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 10419  0029F6  05BC               	decf	reserve_direntry@clust& (0+255),w,b
 10420  0029F8  11BD               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 10421  0029FA  B4D8               	btfsc	status,2,c
 10422  0029FC  D7A3               	goto	u12770
 10423                           
 10424                           ; BSR set to: 0
 10425  0029FE  0E00               	movlw	0
 10426  002A00  6F73               	movwf	move_window@sector& (0+255),b
 10427  002A02  0E00               	movlw	0
 10428  002A04  6F74               	movwf	(move_window@sector+1)& (0+255),b
 10429  002A06  0E00               	movlw	0
 10430  002A08  6F75               	movwf	(move_window@sector+2)& (0+255),b
 10431  002A0A  0E00               	movlw	0
 10432  002A0C  6F76               	movwf	(move_window@sector+3)& (0+255),b
 10433  002A0E  EC97  F018         	call	_move_window	;wreg free
 10434  002A12  0900               	iorlw	0
 10435  002A14  B4D8               	btfsc	status,2,c
 10436  002A16  D796               	goto	u12770
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 10440  002A18  C0BC  F025         	movff	reserve_direntry@clust,clust2sect@clust
 10441  002A1C  C0BD  F026         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 10442  002A20  EC5B  F020         	call	_clust2sect	;wreg free
 10443  002A24  C025  F0B4         	movff	?_clust2sect,reserve_direntry@sector
 10444  002A28  C026  F0B5         	movff	?_clust2sect+1,reserve_direntry@sector+1
 10445  002A2C  C027  F0B6         	movff	?_clust2sect+2,reserve_direntry@sector+2
 10446  002A30  C028  F0B7         	movff	?_clust2sect+3,reserve_direntry@sector+3
 10447  002A34  EE20 F004          	lfsr	2,4
 10448  002A38  51BE               	movf	reserve_direntry@fs& (0+255),w,b
 10449  002A3A  26D9               	addwf	fsr2l,f,c
 10450  002A3C  51BF               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10451  002A3E  22DA               	addwfc	fsr2h,f,c
 10452  002A40  C0B4  FFDE         	movff	reserve_direntry@sector,postinc2
 10453  002A44  C0B5  FFDE         	movff	reserve_direntry@sector+1,postinc2
 10454  002A48  C0B6  FFDE         	movff	reserve_direntry@sector+2,postinc2
 10455  002A4C  C0B7  FFDE         	movff	reserve_direntry@sector+3,postinc2
 10456                           
 10457                           ;tff.c: 604: memset(fs->win, 0, 512U);
 10458  002A50  0E20               	movlw	32
 10459  002A52  25BE               	addwf	reserve_direntry@fs& (0+255),w,b
 10460  002A54  6E19               	movwf	memset@p1^0,c
 10461  002A56  0E00               	movlw	0
 10462  002A58  21BF               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 10463  002A5A  6E1A               	movwf	(memset@p1+1)^0,c
 10464  002A5C  0E00               	movlw	0
 10465  002A5E  6E1C               	movwf	(memset@c+1)^0,c
 10466  002A60  0E00               	movlw	0
 10467  002A62  6E1B               	movwf	memset@c^0,c
 10468  002A64  0E02               	movlw	2
 10469  002A66  6E1E               	movwf	(memset@n+1)^0,c
 10470  002A68  0E00               	movlw	0
 10471  002A6A  6E1D               	movwf	memset@n^0,c
 10472  002A6C  EC70  F028         	call	_memset	;wreg free
 10473                           
 10474                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 10475  002A70  0100               	movlb	0	; () banked
 10476  002A72  EE20 F01D          	lfsr	2,29
 10477  002A76  51BE               	movf	reserve_direntry@fs& (0+255),w,b
 10478  002A78  26D9               	addwf	fsr2l,f,c
 10479  002A7A  51BF               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10480  002A7C  22DA               	addwfc	fsr2h,f,c
 10481  002A7E  50DF               	movf	indf2,w,c
 10482  002A80  6FB8               	movwf	reserve_direntry@n& (0+255),b
 10483  002A82  D01D               	goto	l10613
 10484  002A84                     l10603:
 10485                           
 10486                           ; BSR set to: 0
 10487                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 10488  002A84  0E20               	movlw	32
 10489  002A86  25BE               	addwf	reserve_direntry@fs& (0+255),w,b
 10490  002A88  6F68               	movwf	disk_write@buff& (0+255),b
 10491  002A8A  0E00               	movlw	0
 10492  002A8C  21BF               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 10493  002A8E  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 10494  002A90  C0B4  F06A         	movff	reserve_direntry@sector,disk_write@sector
 10495  002A94  C0B5  F06B         	movff	reserve_direntry@sector+1,disk_write@sector+1
 10496  002A98  C0B6  F06C         	movff	reserve_direntry@sector+2,disk_write@sector+2
 10497  002A9C  C0B7  F06D         	movff	reserve_direntry@sector+3,disk_write@sector+3
 10498  002AA0  0E01               	movlw	1
 10499  002AA2  6F6E               	movwf	disk_write@count& (0+255),b
 10500  002AA4  0E00               	movlw	0
 10501  002AA6  EC65  F026         	call	_disk_write
 10502  002AAA  0900               	iorlw	0
 10503  002AAC  A4D8               	btfss	status,2,c
 10504  002AAE  D74A               	goto	u12770
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;tff.c: 608: sector++;
 10508  002AB0  0E01               	movlw	1
 10509  002AB2  27B4               	addwf	reserve_direntry@sector& (0+255),f,b
 10510  002AB4  0E00               	movlw	0
 10511  002AB6  23B5               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 10512  002AB8  23B6               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 10513  002ABA  23B7               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 10514                           
 10515                           ; BSR set to: 0
 10516  002ABC  07B8               	decf	reserve_direntry@n& (0+255),f,b
 10517  002ABE                     l10613:
 10518                           
 10519                           ; BSR set to: 0
 10520  002ABE  51B8               	movf	reserve_direntry@n& (0+255),w,b
 10521  002AC0  A4D8               	btfss	status,2,c
 10522  002AC2  D7E0               	goto	l10603
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 10526  002AC4  EE20 F01F          	lfsr	2,31
 10527  002AC8  51BE               	movf	reserve_direntry@fs& (0+255),w,b
 10528  002ACA  26D9               	addwf	fsr2l,f,c
 10529  002ACC  51BF               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 10530  002ACE  22DA               	addwfc	fsr2h,f,c
 10531  002AD0  0E01               	movlw	1
 10532  002AD2  6EDF               	movwf	indf2,c
 10533                           
 10534                           ;tff.c: 611: *dir = fs->win;
 10535  002AD4  0E20               	movlw	32
 10536  002AD6  25BE               	addwf	reserve_direntry@fs& (0+255),w,b
 10537  002AD8  6FB0               	movwf	??_reserve_direntry& (0+255),b
 10538  002ADA  0E00               	movlw	0
 10539  002ADC  21BF               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 10540  002ADE  6FB1               	movwf	(??_reserve_direntry+1)& (0+255),b
 10541  002AE0  51AF               	movf	reserve_direntry@dir& (0+255),w,b
 10542  002AE2  6ED9               	movwf	fsr2l,c
 10543  002AE4  6ADA               	clrf	fsr2h,c
 10544  002AE6  C0B0  FFDE         	movff	??_reserve_direntry,postinc2
 10545  002AEA  C0B1  FFDD         	movff	??_reserve_direntry+1,postdec2
 10546  002AEE  D761               	goto	l10577
 10547  002AF0                     __end_of_reserve_direntry:
 10548                           	callstack 0
 10549                           
 10550 ;; *************** function _next_dir_entry *****************
 10551 ;; Defined at:
 10552 ;;		line 359 in file "bibliotecas/tff.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;  dj              1   59[BANK0 ] PTR struct _DIR_E
 10555 ;;		 -> f_open@dj(14), 
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;  idx             2   69[BANK0 ] unsigned short 
 10558 ;;  clust           2   67[BANK0 ] unsigned short 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      enum E105
 10561 ;; Registers used:
 10562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 3F/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10568 ;;      Params:         0       1       0       0       0       0       0       0       0
 10569 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10570 ;;      Temps:          0       7       0       0       0       0       0       0       0
 10571 ;;      Totals:         0      12       0       0       0       0       0       0       0
 10572 ;;Total ram usage:       12 bytes
 10573 ;; Hardware stack levels used:    1
 10574 ;; Hardware stack levels required when called:   10
 10575 ;; This function calls:
 10576 ;;		_clust2sect
 10577 ;;		_get_cluster
 10578 ;; This function is called by:
 10579 ;;		_trace_path
 10580 ;;		_reserve_direntry
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           	psect	text43
 10585  003464                     __ptext43:
 10586                           	callstack 0
 10587  003464                     _next_dir_entry:
 10588                           	callstack 15
 10589                           
 10590                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;incstack = 0
 10594  003464  0100               	movlb	0	; () banked
 10595  003466  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10596  003468  6ED9               	movwf	fsr2l,c
 10597  00346A  6ADA               	clrf	fsr2h,c
 10598  00346C  0E02               	movlw	2
 10599  00346E  26D9               	addwf	fsr2l,f,c
 10600  003470  CFDE F09C          	movff	postinc2,??_next_dir_entry
 10601  003474  CFDD F09D          	movff	postdec2,??_next_dir_entry+1
 10602  003478  0E01               	movlw	1
 10603  00347A  259C               	addwf	??_next_dir_entry& (0+255),w,b
 10604  00347C  6FA5               	movwf	next_dir_entry@idx& (0+255),b
 10605  00347E  0E00               	movlw	0
 10606  003480  219D               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 10607  003482  6FA6               	movwf	(next_dir_entry@idx+1)& (0+255),b
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;tff.c: 368: if ((idx & 15) == 0) {
 10611  003484  C0A5  F09C         	movff	next_dir_entry@idx,??_next_dir_entry
 10612  003488  0E0F               	movlw	15
 10613  00348A  179C               	andwf	??_next_dir_entry& (0+255),f,b
 10614  00348C  A4D8               	btfss	status,2,c
 10615  00348E  D091               	goto	l10283
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;tff.c: 369: dj->sect++;
 10619  003490  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10620  003492  6ED9               	movwf	fsr2l,c
 10621  003494  6ADA               	clrf	fsr2h,c
 10622  003496  0E0A               	movlw	10
 10623  003498  26D9               	addwf	fsr2l,f,c
 10624  00349A  2ADE               	incf	postinc2,f,c
 10625  00349C  0E00               	movlw	0
 10626  00349E  22DE               	addwfc	postinc2,f,c
 10627  0034A0  22DE               	addwfc	postinc2,f,c
 10628  0034A2  22DE               	addwfc	postinc2,f,c
 10629                           
 10630                           ;tff.c: 370: if (dj->clust == 0) {
 10631  0034A4  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10632  0034A6  6ED9               	movwf	fsr2l,c
 10633  0034A8  6ADA               	clrf	fsr2h,c
 10634  0034AA  0E08               	movlw	8
 10635  0034AC  26D9               	addwf	fsr2l,f,c
 10636  0034AE  50DE               	movf	postinc2,w,c
 10637  0034B0  10DE               	iorwf	postinc2,w,c
 10638  0034B2  A4D8               	btfss	status,2,c
 10639  0034B4  D013               	goto	l10267
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 10643  0034B6  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10644  0034B8  6ED9               	movwf	fsr2l,c
 10645  0034BA  6ADA               	clrf	fsr2h,c
 10646  0034BC  0E04               	movlw	4
 10647  0034BE  26D9               	addwf	fsr2l,f,c
 10648  0034C0  EE10 F002          	lfsr	1,2
 10649  0034C4  50DE               	movf	postinc2,w,c
 10650  0034C6  26E1               	addwf	fsr1l,f,c
 10651  0034C8  50DD               	movf	postdec2,w,c
 10652  0034CA  22E2               	addwfc	fsr1h,f,c
 10653  0034CC  50E6               	movf	postinc1,w,c
 10654  0034CE  5DA5               	subwf	next_dir_entry@idx& (0+255),w,b
 10655  0034D0  50E6               	movf	postinc1,w,c
 10656  0034D2  59A6               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 10657  0034D4  A0D8               	btfss	status,0,c
 10658  0034D6  D06D               	goto	l10283
 10659  0034D8                     u12280:
 10660                           
 10661                           ; BSR set to: 0
 10662  0034D8  0E00               	movlw	0
 10663  0034DA  0012               	return	
 10664  0034DC                     l10267:
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 10668  0034DC  C0A5  F09C         	movff	next_dir_entry@idx,??_next_dir_entry
 10669  0034E0  C0A6  F09D         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 10670  0034E4  0E04               	movlw	4
 10671  0034E6  6F9E               	movwf	(??_next_dir_entry+2)& (0+255),b
 10672  0034E8                     u12295:
 10673  0034E8  90D8               	bcf	status,0,c
 10674  0034EA  339D               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 10675  0034EC  339C               	rrcf	??_next_dir_entry& (0+255),f,b
 10676  0034EE  2F9E               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 10677  0034F0  D7FB               	goto	u12295
 10678  0034F2  0EFF               	movlw	255
 10679  0034F4  6F9F               	movwf	(??_next_dir_entry+3)& (0+255),b
 10680  0034F6  0EFF               	movlw	255
 10681  0034F8  6FA0               	movwf	(??_next_dir_entry+4)& (0+255),b
 10682  0034FA  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10683  0034FC  6ED9               	movwf	fsr2l,c
 10684  0034FE  6ADA               	clrf	fsr2h,c
 10685  003500  0E04               	movlw	4
 10686  003502  26D9               	addwf	fsr2l,f,c
 10687  003504  EE10 F01D          	lfsr	1,29
 10688  003508  50DE               	movf	postinc2,w,c
 10689  00350A  26E1               	addwf	fsr1l,f,c
 10690  00350C  50DD               	movf	postdec2,w,c
 10691  00350E  22E2               	addwfc	fsr1h,f,c
 10692  003510  50E7               	movf	indf1,w,c
 10693  003512  6FA1               	movwf	(??_next_dir_entry+5)& (0+255),b
 10694  003514  6BA2               	clrf	(??_next_dir_entry+6)& (0+255),b
 10695  003516  519F               	movf	(??_next_dir_entry+3)& (0+255),w,b
 10696  003518  27A1               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 10697  00351A  51A0               	movf	(??_next_dir_entry+4)& (0+255),w,b
 10698  00351C  23A2               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 10699  00351E  519C               	movf	??_next_dir_entry& (0+255),w,b
 10700  003520  17A1               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 10701  003522  519D               	movf	(??_next_dir_entry+1)& (0+255),w,b
 10702  003524  17A2               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 10703  003526  51A1               	movf	(??_next_dir_entry+5)& (0+255),w,b
 10704  003528  11A2               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 10705  00352A  A4D8               	btfss	status,2,c
 10706  00352C  D042               	goto	l10283
 10707                           
 10708                           ; BSR set to: 0
 10709                           ;tff.c: 374: clust = get_cluster(dj->clust);
 10710  00352E  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10711  003530  6ED9               	movwf	fsr2l,c
 10712  003532  6ADA               	clrf	fsr2h,c
 10713  003534  0E08               	movlw	8
 10714  003536  26D9               	addwf	fsr2l,f,c
 10715  003538  CFDE F031          	movff	postinc2,get_cluster@clust
 10716  00353C  CFDD F032          	movff	postdec2,get_cluster@clust+1
 10717  003540  ECAB  F016         	call	_get_cluster	;wreg free
 10718  003544  C031  F0A3         	movff	?_get_cluster,next_dir_entry@clust
 10719  003548  C032  F0A4         	movff	?_get_cluster+1,next_dir_entry@clust+1
 10720                           
 10721                           ; BSR set to: 0
 10722                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 10723  00354C  51A4               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 10724  00354E  E104               	bnz	u12310
 10725  003550  0E02               	movlw	2
 10726  003552  5DA3               	subwf	next_dir_entry@clust& (0+255),w,b
 10727  003554  A0D8               	btfss	status,0,c
 10728  003556  D7C0               	goto	u12280
 10729  003558                     u12310:
 10730                           
 10731                           ; BSR set to: 0
 10732  003558  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10733  00355A  6ED9               	movwf	fsr2l,c
 10734  00355C  6ADA               	clrf	fsr2h,c
 10735  00355E  0E04               	movlw	4
 10736  003560  26D9               	addwf	fsr2l,f,c
 10737  003562  EE10 F016          	lfsr	1,22
 10738  003566  50DE               	movf	postinc2,w,c
 10739  003568  26E1               	addwf	fsr1l,f,c
 10740  00356A  50DD               	movf	postdec2,w,c
 10741  00356C  22E2               	addwfc	fsr1h,f,c
 10742  00356E  50E6               	movf	postinc1,w,c
 10743  003570  5DA3               	subwf	next_dir_entry@clust& (0+255),w,b
 10744  003572  50E6               	movf	postinc1,w,c
 10745  003574  59A4               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 10746  003576  B0D8               	btfsc	status,0,c
 10747  003578  D7AF               	goto	u12280
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;tff.c: 377: dj->clust = clust;
 10751  00357A  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10752  00357C  6ED9               	movwf	fsr2l,c
 10753  00357E  6ADA               	clrf	fsr2h,c
 10754  003580  0E08               	movlw	8
 10755  003582  26D9               	addwf	fsr2l,f,c
 10756  003584  C0A3  FFDE         	movff	next_dir_entry@clust,postinc2
 10757  003588  C0A4  FFDD         	movff	next_dir_entry@clust+1,postdec2
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;tff.c: 378: dj->sect = clust2sect(clust);
 10761  00358C  C0A3  F025         	movff	next_dir_entry@clust,clust2sect@clust
 10762  003590  C0A4  F026         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 10763  003594  EC5B  F020         	call	_clust2sect	;wreg free
 10764  003598  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10765  00359A  6ED9               	movwf	fsr2l,c
 10766  00359C  6ADA               	clrf	fsr2h,c
 10767  00359E  0E0A               	movlw	10
 10768  0035A0  26D9               	addwf	fsr2l,f,c
 10769  0035A2  C025  FFDE         	movff	?_clust2sect,postinc2
 10770  0035A6  C026  FFDE         	movff	?_clust2sect+1,postinc2
 10771  0035AA  C027  FFDE         	movff	?_clust2sect+2,postinc2
 10772  0035AE  C028  FFDE         	movff	?_clust2sect+3,postinc2
 10773  0035B2                     l10283:
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 10777  0035B2  519B               	movf	next_dir_entry@dj& (0+255),w,b
 10778  0035B4  6ED9               	movwf	fsr2l,c
 10779  0035B6  6ADA               	clrf	fsr2h,c
 10780  0035B8  0E02               	movlw	2
 10781  0035BA  26D9               	addwf	fsr2l,f,c
 10782  0035BC  C0A5  FFDE         	movff	next_dir_entry@idx,postinc2
 10783  0035C0  C0A6  FFDD         	movff	next_dir_entry@idx+1,postdec2
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;tff.c: 383: return TRUE;
 10787  0035C4  0E01               	movlw	1
 10788                           
 10789                           ; BSR set to: 0
 10790  0035C6  0012               	return		;funcret
 10791  0035C8                     __end_of_next_dir_entry:
 10792                           	callstack 0
 10793                           
 10794 ;; *************** function _clust2sect *****************
 10795 ;; Defined at:
 10796 ;;		line 339 in file "bibliotecas/tff.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  clust           2   36[COMRAM] unsigned short 
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;  fs              2   45[COMRAM] PTR struct _FATFS
 10801 ;;		 -> NULL(0), fs(544), 
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  4   36[COMRAM] unsigned long 
 10804 ;; Registers used:
 10805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10806 ;; Tracked objects:
 10807 ;;		On entry : 3F/0
 10808 ;;		On exit  : 3F/0
 10809 ;;		Unchanged: 3F/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10811 ;;      Params:         4       0       0       0       0       0       0       0       0
 10812 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10813 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10814 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10815 ;;Total ram usage:       11 bytes
 10816 ;; Hardware stack levels used:    1
 10817 ;; Hardware stack levels required when called:    4
 10818 ;; This function calls:
 10819 ;;		___lmul
 10820 ;; This function is called by:
 10821 ;;		_next_dir_entry
 10822 ;;		_trace_path
 10823 ;;		_reserve_direntry
 10824 ;;		_f_write
 10825 ;;		_f_read
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           	psect	text44
 10830  0040B6                     __ptext44:
 10831                           	callstack 0
 10832  0040B6                     _clust2sect:
 10833                           	callstack 19
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;tff.c: 343: FATFS *fs = FatFs;
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;incstack = 0
 10840  0040B6  C039  F02E         	movff	_FatFs,clust2sect@fs
 10841  0040BA  C03A  F02F         	movff	_FatFs+1,clust2sect@fs+1
 10842                           
 10843                           ;tff.c: 346: clust -= 2;
 10844  0040BE  0E02               	movlw	2
 10845  0040C0  5E25               	subwf	clust2sect@clust^0,f,c
 10846  0040C2  0E00               	movlw	0
 10847  0040C4  5A26               	subwfb	(clust2sect@clust+1)^0,f,c
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 10851  0040C6  0EFE               	movlw	254
 10852  0040C8  6E29               	movwf	??_clust2sect^0,c
 10853  0040CA  0EFF               	movlw	255
 10854  0040CC  6E2A               	movwf	(??_clust2sect+1)^0,c
 10855  0040CE  EE20 F016          	lfsr	2,22
 10856  0040D2  502E               	movf	clust2sect@fs^0,w,c
 10857  0040D4  26D9               	addwf	fsr2l,f,c
 10858  0040D6  502F               	movf	(clust2sect@fs+1)^0,w,c
 10859  0040D8  22DA               	addwfc	fsr2h,f,c
 10860  0040DA  CFDE F02B          	movff	postinc2,??_clust2sect+2
 10861  0040DE  CFDD F02C          	movff	postdec2,??_clust2sect+3
 10862  0040E2  5029               	movf	??_clust2sect^0,w,c
 10863  0040E4  262B               	addwf	(??_clust2sect+2)^0,f,c
 10864  0040E6  502A               	movf	(??_clust2sect+1)^0,w,c
 10865  0040E8  222C               	addwfc	(??_clust2sect+3)^0,f,c
 10866  0040EA  502B               	movf	(??_clust2sect+2)^0,w,c
 10867  0040EC  5C25               	subwf	clust2sect@clust^0,w,c
 10868  0040EE  502C               	movf	(??_clust2sect+3)^0,w,c
 10869  0040F0  5826               	subwfb	(clust2sect@clust+1)^0,w,c
 10870  0040F2  A0D8               	btfss	status,0,c
 10871  0040F4  D009               	goto	l9847
 10872                           
 10873                           ; BSR set to: 0
 10874  0040F6  0E00               	movlw	0
 10875  0040F8  6E25               	movwf	?_clust2sect^0,c
 10876  0040FA  0E00               	movlw	0
 10877  0040FC  6E26               	movwf	(?_clust2sect+1)^0,c
 10878  0040FE  0E00               	movlw	0
 10879  004100  6E27               	movwf	(?_clust2sect+2)^0,c
 10880  004102  0E00               	movlw	0
 10881  004104  6E28               	movwf	(?_clust2sect+3)^0,c
 10882  004106  0012               	return	
 10883  004108                     l9847:
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 10887  004108  EE20 F010          	lfsr	2,16
 10888  00410C  502E               	movf	clust2sect@fs^0,w,c
 10889  00410E  26D9               	addwf	fsr2l,f,c
 10890  004110  502F               	movf	(clust2sect@fs+1)^0,w,c
 10891  004112  22DA               	addwfc	fsr2h,f,c
 10892  004114  CFDE F029          	movff	postinc2,??_clust2sect
 10893  004118  CFDE F02A          	movff	postinc2,??_clust2sect+1
 10894  00411C  CFDE F02B          	movff	postinc2,??_clust2sect+2
 10895  004120  CFDE F02C          	movff	postinc2,??_clust2sect+3
 10896  004124  C025  F019         	movff	clust2sect@clust,___lmul@multiplier
 10897  004128  C026  F01A         	movff	clust2sect@clust+1,___lmul@multiplier+1
 10898  00412C  6A1B               	clrf	(___lmul@multiplier+2)^0,c
 10899  00412E  6A1C               	clrf	(___lmul@multiplier+3)^0,c
 10900  004130  EE20 F01D          	lfsr	2,29
 10901  004134  502E               	movf	clust2sect@fs^0,w,c
 10902  004136  26D9               	addwf	fsr2l,f,c
 10903  004138  502F               	movf	(clust2sect@fs+1)^0,w,c
 10904  00413A  22DA               	addwfc	fsr2h,f,c
 10905  00413C  50DF               	movf	indf2,w,c
 10906  00413E  6E2D               	movwf	(??_clust2sect+4)^0,c
 10907  004140  502D               	movf	(??_clust2sect+4)^0,w,c
 10908  004142  6E1D               	movwf	___lmul@multiplicand^0,c
 10909  004144  6A1E               	clrf	(___lmul@multiplicand+1)^0,c
 10910  004146  6A1F               	clrf	(___lmul@multiplicand+2)^0,c
 10911  004148  6A20               	clrf	(___lmul@multiplicand+3)^0,c
 10912  00414A  ECBF  F025         	call	___lmul	;wreg free
 10913  00414E  5029               	movf	??_clust2sect^0,w,c
 10914  004150  2419               	addwf	?___lmul^0,w,c
 10915  004152  6E25               	movwf	?_clust2sect^0,c
 10916  004154  502A               	movf	(??_clust2sect+1)^0,w,c
 10917  004156  201A               	addwfc	(?___lmul+1)^0,w,c
 10918  004158  6E26               	movwf	(?_clust2sect+1)^0,c
 10919  00415A  502B               	movf	(??_clust2sect+2)^0,w,c
 10920  00415C  201B               	addwfc	(?___lmul+2)^0,w,c
 10921  00415E  6E27               	movwf	(?_clust2sect+2)^0,c
 10922  004160  502C               	movf	(??_clust2sect+3)^0,w,c
 10923  004162  201C               	addwfc	(?___lmul+3)^0,w,c
 10924  004164  6E28               	movwf	(?_clust2sect+3)^0,c
 10925                           
 10926                           ; BSR set to: 0
 10927  004166  0012               	return		;funcret
 10928  004168                     __end_of_clust2sect:
 10929                           	callstack 0
 10930                           
 10931 ;; *************** function _remove_chain *****************
 10932 ;; Defined at:
 10933 ;;		line 250 in file "bibliotecas/tff.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;  clust           2   64[BANK0 ] unsigned short 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  fs              2   70[BANK0 ] PTR struct _FATFS
 10938 ;;		 -> NULL(0), fs(544), 
 10939 ;;  nxt             2   68[BANK0 ] unsigned short 
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      enum E105
 10942 ;; Registers used:
 10943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 3F/0
 10946 ;;		On exit  : 3F/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10949 ;;      Params:         0       2       0       0       0       0       0       0       0
 10950 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10951 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10952 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10953 ;;Total ram usage:        8 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:   10
 10956 ;; This function calls:
 10957 ;;		_get_cluster
 10958 ;;		_put_cluster
 10959 ;; This function is called by:
 10960 ;;		_f_open
 10961 ;; This function uses a non-reentrant model
 10962 ;;
 10963                           
 10964                           	psect	text45
 10965  004350                     __ptext45:
 10966                           	callstack 0
 10967  004350                     _remove_chain:
 10968                           	callstack 16
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;incstack = 0
 10975  004350  C039  F0A6         	movff	_FatFs,remove_chain@fs
 10976  004354  C03A  F0A7         	movff	_FatFs+1,remove_chain@fs+1
 10977                           
 10978                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 10979  004358  D035               	goto	l10455
 10980  00435A                     l10435:
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;tff.c: 259: nxt = get_cluster(clust);
 10984  00435A  C0A0  F031         	movff	remove_chain@clust,get_cluster@clust
 10985  00435E  C0A1  F032         	movff	remove_chain@clust+1,get_cluster@clust+1
 10986  004362  ECAB  F016         	call	_get_cluster	;wreg free
 10987  004366  C031  F0A4         	movff	?_get_cluster,remove_chain@nxt
 10988  00436A  C032  F0A5         	movff	?_get_cluster+1,remove_chain@nxt+1
 10989                           
 10990                           ; BSR set to: 0
 10991                           ;tff.c: 260: if (nxt == 1) return FALSE;
 10992  00436E  05A4               	decf	remove_chain@nxt& (0+255),w,b
 10993  004370  11A5               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 10994  004372  A4D8               	btfss	status,2,c
 10995  004374  D002               	goto	l10443
 10996  004376                     u12570:
 10997                           
 10998                           ; BSR set to: 0
 10999  004376  0E00               	movlw	0
 11000  004378  0012               	return	
 11001  00437A                     l10443:
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 11005  00437A  C0A0  F088         	movff	remove_chain@clust,put_cluster@clust
 11006  00437E  C0A1  F089         	movff	remove_chain@clust+1,put_cluster@clust+1
 11007  004382  0E00               	movlw	0
 11008  004384  6F8B               	movwf	(put_cluster@val+1)& (0+255),b
 11009  004386  0E00               	movlw	0
 11010  004388  6F8A               	movwf	put_cluster@val& (0+255),b
 11011  00438A  EC78  F015         	call	_put_cluster	;wreg free
 11012  00438E  0900               	iorlw	0
 11013  004390  B4D8               	btfsc	status,2,c
 11014  004392  D7F1               	goto	u12570
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 11018  004394  EE20 F01A          	lfsr	2,26
 11019  004398  51A6               	movf	remove_chain@fs& (0+255),w,b
 11020  00439A  26D9               	addwf	fsr2l,f,c
 11021  00439C  51A7               	movf	(remove_chain@fs+1)& (0+255),w,b
 11022  00439E  22DA               	addwfc	fsr2h,f,c
 11023  0043A0  28DE               	incf	postinc2,w,c
 11024  0043A2  E103               	bnz	u12590
 11025  0043A4  28DE               	incf	postinc2,w,c
 11026  0043A6  B4D8               	btfsc	status,2,c
 11027  0043A8  D009               	goto	l10453
 11028  0043AA                     u12590:
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;tff.c: 263: fs->free_clust++;
 11032  0043AA  EE20 F01A          	lfsr	2,26
 11033  0043AE  51A6               	movf	remove_chain@fs& (0+255),w,b
 11034  0043B0  26D9               	addwf	fsr2l,f,c
 11035  0043B2  51A7               	movf	(remove_chain@fs+1)& (0+255),w,b
 11036  0043B4  22DA               	addwfc	fsr2h,f,c
 11037  0043B6  2ADE               	incf	postinc2,f,c
 11038  0043B8  0E00               	movlw	0
 11039  0043BA  22DD               	addwfc	postdec2,f,c
 11040  0043BC                     l10453:
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 11044  0043BC  C0A4  F0A0         	movff	remove_chain@nxt,remove_chain@clust
 11045  0043C0  C0A5  F0A1         	movff	remove_chain@nxt+1,remove_chain@clust+1
 11046  0043C4                     l10455:
 11047                           
 11048                           ; BSR set to: 0
 11049  0043C4  51A1               	movf	(remove_chain@clust+1)& (0+255),w,b
 11050  0043C6  E104               	bnz	u12600
 11051  0043C8  0E02               	movlw	2
 11052  0043CA  5DA0               	subwf	remove_chain@clust& (0+255),w,b
 11053  0043CC  A0D8               	btfss	status,0,c
 11054  0043CE  D00C               	goto	u12610
 11055  0043D0                     u12600:
 11056                           
 11057                           ; BSR set to: 0
 11058  0043D0  EE20 F016          	lfsr	2,22
 11059  0043D4  51A6               	movf	remove_chain@fs& (0+255),w,b
 11060  0043D6  26D9               	addwf	fsr2l,f,c
 11061  0043D8  51A7               	movf	(remove_chain@fs+1)& (0+255),w,b
 11062  0043DA  22DA               	addwfc	fsr2h,f,c
 11063  0043DC  50DE               	movf	postinc2,w,c
 11064  0043DE  5DA0               	subwf	remove_chain@clust& (0+255),w,b
 11065  0043E0  50DE               	movf	postinc2,w,c
 11066  0043E2  59A1               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 11067  0043E4  A0D8               	btfss	status,0,c
 11068  0043E6  D7B9               	goto	l10435
 11069  0043E8                     u12610:
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;tff.c: 269: };tff.c: 270: return TRUE;
 11073  0043E8  0E01               	movlw	1
 11074                           
 11075                           ; BSR set to: 0
 11076  0043EA  0012               	return		;funcret
 11077  0043EC                     __end_of_remove_chain:
 11078                           	callstack 0
 11079                           
 11080 ;; *************** function _memcpy *****************
 11081 ;; Defined at:
 11082 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  d1              2   24[COMRAM] PTR void 
 11085 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 11086 ;;  s1              2   26[COMRAM] PTR const void 
 11087 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 11088 ;;		 -> fs(544), 
 11089 ;;  n               2   28[COMRAM] unsigned int 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  s               2   33[COMRAM] PTR const unsigned char 
 11092 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 11093 ;;		 -> fs(544), 
 11094 ;;  d               2   31[COMRAM] PTR unsigned char 
 11095 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 11096 ;;  tmp             1   30[COMRAM] unsigned char 
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  2   24[COMRAM] PTR void 
 11099 ;; Registers used:
 11100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11106 ;;      Params:         6       0       0       0       0       0       0       0       0
 11107 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11109 ;;      Totals:        11       0       0       0       0       0       0       0       0
 11110 ;;Total ram usage:       11 bytes
 11111 ;; Hardware stack levels used:    1
 11112 ;; Hardware stack levels required when called:    3
 11113 ;; This function calls:
 11114 ;;		Nothing
 11115 ;; This function is called by:
 11116 ;;		_f_open
 11117 ;;		_f_write
 11118 ;;		_f_read
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           	psect	text46
 11123  004E7C                     __ptext46:
 11124                           	callstack 0
 11125  004E7C                     _memcpy:
 11126                           	callstack 20
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;incstack = 0
 11130  004E7C  C01B  F022         	movff	memcpy@s1,memcpy@s
 11131  004E80  C01C  F023         	movff	memcpy@s1+1,memcpy@s+1
 11132  004E84  C019  F020         	movff	memcpy@d1,memcpy@d
 11133  004E88  C01A  F021         	movff	memcpy@d1+1,memcpy@d+1
 11134  004E8C  D010               	goto	l9881
 11135  004E8E                     l9873:
 11136  004E8E  C022  FFD9         	movff	memcpy@s,fsr2l
 11137  004E92  C023  FFDA         	movff	memcpy@s+1,fsr2h
 11138  004E96  50DF               	movf	indf2,w,c
 11139  004E98  6E1F               	movwf	memcpy@tmp^0,c
 11140  004E9A  4A22               	infsnz	memcpy@s^0,f,c
 11141  004E9C  2A23               	incf	(memcpy@s+1)^0,f,c
 11142  004E9E  C020  FFD9         	movff	memcpy@d,fsr2l
 11143  004EA2  C021  FFDA         	movff	memcpy@d+1,fsr2h
 11144  004EA6  C01F  FFDF         	movff	memcpy@tmp,indf2
 11145  004EAA  4A20               	infsnz	memcpy@d^0,f,c
 11146  004EAC  2A21               	incf	(memcpy@d+1)^0,f,c
 11147  004EAE                     l9881:
 11148  004EAE  061D               	decf	memcpy@n^0,f,c
 11149  004EB0  A0D8               	btfss	status,0,c
 11150  004EB2  061E               	decf	(memcpy@n+1)^0,f,c
 11151  004EB4  281D               	incf	memcpy@n^0,w,c
 11152  004EB6  E1EB               	bnz	l9873
 11153  004EB8  281E               	incf	(memcpy@n+1)^0,w,c
 11154  004EBA  B4D8               	btfsc	status,2,c
 11155  004EBC  0012               	return	
 11156  004EBE  D7E7               	goto	l9873
 11157  004EC0                     __end_of_memcpy:
 11158                           	callstack 0
 11159                           
 11160 ;; *************** function _auto_mount *****************
 11161 ;; Defined at:
 11162 ;;		line 652 in file "bibliotecas/tff.c"
 11163 ;; Parameters:    Size  Location     Type
 11164 ;;  path            1   25[BANK0 ] PTR PTR const unsigned c
 11165 ;;		 -> f_opendir@path(2), f_open@path(2), 
 11166 ;;  chk_wp          1   26[BANK0 ] unsigned char 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;  fatsize         4   65[BANK0 ] unsigned long 
 11169 ;;  totalsect       4   57[BANK0 ] unsigned long 
 11170 ;;  bootsect        4   53[BANK0 ] unsigned long 
 11171 ;;  maxclust        4   49[BANK0 ] unsigned long 
 11172 ;;  fs              2   69[BANK0 ] PTR struct _FATFS
 11173 ;;		 -> NULL(0), fs(544), 
 11174 ;;  p               2   61[BANK0 ] PTR const unsigned char 
 11175 ;;		 -> STR_20(13), filename(15), 
 11176 ;;  stat            1   64[BANK0 ] unsigned char 
 11177 ;;  fmt             1   63[BANK0 ] unsigned char 
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  1    wreg      enum E155
 11180 ;; Registers used:
 11181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11182 ;; Tracked objects:
 11183 ;;		On entry : 3F/0
 11184 ;;		On exit  : 3E/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11187 ;;      Params:         0       2       0       0       0       0       0       0       0
 11188 ;;      Locals:         0      22       0       0       0       0       0       0       0
 11189 ;;      Temps:          0      22       0       0       0       0       0       0       0
 11190 ;;      Totals:         0      46       0       0       0       0       0       0       0
 11191 ;;Total ram usage:       46 bytes
 11192 ;; Hardware stack levels used:    1
 11193 ;; Hardware stack levels required when called:    9
 11194 ;; This function calls:
 11195 ;;		___lldiv
 11196 ;;		___lmul
 11197 ;;		_check_fs
 11198 ;;		_disk_initialize
 11199 ;;		_disk_status
 11200 ;;		_memset
 11201 ;; This function is called by:
 11202 ;;		_f_open
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text47
 11207  000C88                     __ptext47:
 11208                           	callstack 0
 11209  000C88                     _auto_mount:
 11210                           	callstack 17
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 11214                           
 11215                           ;incstack = 0
 11216  000C88  5179               	movf	auto_mount@path& (0+255),w,b
 11217  000C8A  6ED9               	movwf	fsr2l,c
 11218  000C8C  6ADA               	clrf	fsr2h,c
 11219  000C8E  CFDE F09D          	movff	postinc2,auto_mount@p
 11220  000C92  CFDD F09E          	movff	postdec2,auto_mount@p+1
 11221                           
 11222                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 11223  000C96  D003               	goto	l10625
 11224  000C98                     l10623:
 11225  000C98  0100               	movlb	0	; () banked
 11226  000C9A  4B9D               	infsnz	auto_mount@p& (0+255),f,b
 11227  000C9C  2B9E               	incf	(auto_mount@p+1)& (0+255),f,b
 11228  000C9E                     l10625:
 11229                           
 11230                           ; BSR set to: 0
 11231  000C9E  C09D  FFF6         	movff	auto_mount@p,tblptrl
 11232  000CA2  C09E  FFF7         	movff	auto_mount@p+1,tblptrh
 11233  000CA6  6AF8               	clrf	tblptru,c
 11234  000CA8  0E07               	movlw	(high __ramtop+-1)
 11235  000CAA  64F7               	cpfsgt	tblptrh,c
 11236  000CAC  D003               	bra	u12887
 11237  000CAE  0008               	tblrd		*
 11238  000CB0  50F5               	movf	tablat,w,c
 11239  000CB2  D005               	bra	u12880
 11240  000CB4                     u12887:
 11241  000CB4  CFF6 FFE1          	movff	tblptrl,fsr1l
 11242  000CB8  CFF7 FFE2          	movff	tblptrh,fsr1h
 11243  000CBC  50E7               	movf	indf1,w,c
 11244  000CBE                     u12880:
 11245  000CBE  0A20               	xorlw	32
 11246  000CC0  B4D8               	btfsc	status,2,c
 11247  000CC2  D7EA               	goto	l10623
 11248                           
 11249                           ;tff.c: 665: if (*p == '/') p++;
 11250  000CC4  C09D  FFF6         	movff	auto_mount@p,tblptrl
 11251  000CC8  C09E  FFF7         	movff	auto_mount@p+1,tblptrh
 11252  000CCC  6AF8               	clrf	tblptru,c
 11253  000CCE  0E07               	movlw	(high __ramtop+-1)
 11254  000CD0  64F7               	cpfsgt	tblptrh,c
 11255  000CD2  D003               	bra	u12907
 11256  000CD4  0008               	tblrd		*
 11257  000CD6  50F5               	movf	tablat,w,c
 11258  000CD8  D005               	bra	u12900
 11259  000CDA                     u12907:
 11260  000CDA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11261  000CDE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11262  000CE2  50E7               	movf	indf1,w,c
 11263  000CE4                     u12900:
 11264  000CE4  0A2F               	xorlw	47
 11265  000CE6  A4D8               	btfss	status,2,c
 11266  000CE8  D003               	goto	l10631
 11267  000CEA  0100               	movlb	0	; () banked
 11268  000CEC  4B9D               	infsnz	auto_mount@p& (0+255),f,b
 11269  000CEE  2B9E               	incf	(auto_mount@p+1)& (0+255),f,b
 11270  000CF0                     l10631:
 11271                           
 11272                           ;tff.c: 666: *path = p;
 11273  000CF0  0100               	movlb	0	; () banked
 11274  000CF2  5179               	movf	auto_mount@path& (0+255),w,b
 11275  000CF4  6ED9               	movwf	fsr2l,c
 11276  000CF6  6ADA               	clrf	fsr2h,c
 11277  000CF8  C09D  FFDE         	movff	auto_mount@p,postinc2
 11278  000CFC  C09E  FFDD         	movff	auto_mount@p+1,postdec2
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;tff.c: 669: fs = FatFs;
 11282  000D00  C039  F0A5         	movff	_FatFs,auto_mount@fs
 11283  000D04  C03A  F0A6         	movff	_FatFs+1,auto_mount@fs+1
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 11287  000D08  51A5               	movf	auto_mount@fs& (0+255),w,b
 11288  000D0A  11A6               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 11289  000D0C  A4D8               	btfss	status,2,c
 11290  000D0E  D002               	goto	l10641
 11291                           
 11292                           ; BSR set to: 0
 11293  000D10  0E0A               	movlw	10
 11294  000D12  0012               	return	
 11295  000D14                     l10641:
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;tff.c: 672: if (fs->fs_type) {
 11299  000D14  EE20 F01C          	lfsr	2,28
 11300  000D18  51A5               	movf	auto_mount@fs& (0+255),w,b
 11301  000D1A  26D9               	addwf	fsr2l,f,c
 11302  000D1C  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11303  000D1E  22DA               	addwfc	fsr2h,f,c
 11304  000D20  50DF               	movf	indf2,w,c
 11305  000D22  B4D8               	btfsc	status,2,c
 11306  000D24  D00F               	goto	l10659
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;tff.c: 673: stat = disk_status(0);
 11310  000D26  0E00               	movlw	0
 11311  000D28  EC2B  F028         	call	_disk_status
 11312  000D2C  0100               	movlb	0	; () banked
 11313  000D2E  6FA0               	movwf	auto_mount@stat& (0+255),b
 11314                           
 11315                           ; BSR set to: 0
 11316                           ;tff.c: 674: if (!(stat & 0x01)) {
 11317  000D30  B1A0               	btfsc	auto_mount@stat& (0+255),0,b
 11318  000D32  D008               	goto	l10659
 11319                           
 11320                           ; BSR set to: 0
 11321                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 11322  000D34  517A               	movf	auto_mount@chk_wp& (0+255),w,b
 11323  000D36  A4D8               	btfss	status,2,c
 11324                           
 11325                           ; BSR set to: 0
 11326  000D38  A5A0               	btfss	auto_mount@stat& (0+255),2,b
 11327  000D3A  D002               	goto	l10655
 11328  000D3C                     u12960:
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 11332  000D3C  0E09               	movlw	9
 11333  000D3E  0012               	return	
 11334  000D40                     l10655:
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;tff.c: 679: return FR_OK;
 11338  000D40  0E00               	movlw	0
 11339  000D42  0012               	return	
 11340  000D44                     l10659:
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 11344  000D44  C0A5  F019         	movff	auto_mount@fs,memset@p1
 11345  000D48  C0A6  F01A         	movff	auto_mount@fs+1,memset@p1+1
 11346  000D4C  0E00               	movlw	0
 11347  000D4E  6E1C               	movwf	(memset@c+1)^0,c
 11348  000D50  0E00               	movlw	0
 11349  000D52  6E1B               	movwf	memset@c^0,c
 11350  000D54  0E02               	movlw	2
 11351  000D56  6E1E               	movwf	(memset@n+1)^0,c
 11352  000D58  0E20               	movlw	32
 11353  000D5A  6E1D               	movwf	memset@n^0,c
 11354  000D5C  EC70  F028         	call	_memset	;wreg free
 11355                           
 11356                           ;tff.c: 686: stat = disk_initialize(0);
 11357  000D60  0E00               	movlw	0
 11358  000D62  ECB0  F028         	call	_disk_initialize
 11359  000D66  0100               	movlb	0	; () banked
 11360  000D68  6FA0               	movwf	auto_mount@stat& (0+255),b
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;tff.c: 687: if (stat & 0x01)
 11364  000D6A  A1A0               	btfss	auto_mount@stat& (0+255),0,b
 11365  000D6C  D002               	goto	l10669
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;tff.c: 688: return FR_NOT_READY;
 11369  000D6E  0E01               	movlw	1
 11370  000D70  0012               	return	
 11371  000D72                     l10669:
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 11375  000D72  517A               	movf	auto_mount@chk_wp& (0+255),w,b
 11376  000D74  B4D8               	btfsc	status,2,c
 11377  000D76  D002               	goto	l10677
 11378                           
 11379                           ; BSR set to: 0
 11380  000D78  B5A0               	btfsc	auto_mount@stat& (0+255),2,b
 11381  000D7A  D7E0               	goto	u12960
 11382  000D7C                     l10677:
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 11386  000D7C  0E00               	movlw	0
 11387  000D7E  6F95               	movwf	auto_mount@bootsect& (0+255),b
 11388  000D80  0E00               	movlw	0
 11389  000D82  6F96               	movwf	(auto_mount@bootsect+1)& (0+255),b
 11390  000D84  0E00               	movlw	0
 11391  000D86  6F97               	movwf	(auto_mount@bootsect+2)& (0+255),b
 11392  000D88  0E00               	movlw	0
 11393  000D8A  6F98               	movwf	(auto_mount@bootsect+3)& (0+255),b
 11394  000D8C  C095  F073         	movff	auto_mount@bootsect,check_fs@sect
 11395  000D90  C096  F074         	movff	auto_mount@bootsect+1,check_fs@sect+1
 11396  000D94  C097  F075         	movff	auto_mount@bootsect+2,check_fs@sect+2
 11397  000D98  C098  F076         	movff	auto_mount@bootsect+3,check_fs@sect+3
 11398  000D9C  EC5C  F023         	call	_check_fs	;wreg free
 11399  000DA0  0100               	movlb	0	; () banked
 11400  000DA2  6F9F               	movwf	auto_mount@fmt& (0+255),b
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;tff.c: 697: if (fmt == 1) {
 11404  000DA4  059F               	decf	auto_mount@fmt& (0+255),w,b
 11405  000DA6  A4D8               	btfss	status,2,c
 11406  000DA8  D023               	goto	l10687
 11407                           
 11408                           ; BSR set to: 0
 11409                           ;tff.c: 699: if (fs->win[446+4]) {
 11410  000DAA  EE21 F0E2          	lfsr	2,482
 11411  000DAE  51A5               	movf	auto_mount@fs& (0+255),w,b
 11412  000DB0  26D9               	addwf	fsr2l,f,c
 11413  000DB2  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11414  000DB4  22DA               	addwfc	fsr2h,f,c
 11415  000DB6  50DF               	movf	indf2,w,c
 11416  000DB8  B4D8               	btfsc	status,2,c
 11417  000DBA  D01A               	goto	l10687
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 11421  000DBC  EE21 F0E6          	lfsr	2,486
 11422  000DC0  51A5               	movf	auto_mount@fs& (0+255),w,b
 11423  000DC2  26D9               	addwf	fsr2l,f,c
 11424  000DC4  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11425  000DC6  22DA               	addwfc	fsr2h,f,c
 11426  000DC8  CFDE F095          	movff	postinc2,auto_mount@bootsect
 11427  000DCC  CFDE F096          	movff	postinc2,auto_mount@bootsect+1
 11428  000DD0  CFDE F097          	movff	postinc2,auto_mount@bootsect+2
 11429  000DD4  CFDE F098          	movff	postinc2,auto_mount@bootsect+3
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;tff.c: 701: fmt = check_fs(bootsect);
 11433  000DD8  C095  F073         	movff	auto_mount@bootsect,check_fs@sect
 11434  000DDC  C096  F074         	movff	auto_mount@bootsect+1,check_fs@sect+1
 11435  000DE0  C097  F075         	movff	auto_mount@bootsect+2,check_fs@sect+2
 11436  000DE4  C098  F076         	movff	auto_mount@bootsect+3,check_fs@sect+3
 11437  000DE8  EC5C  F023         	call	_check_fs	;wreg free
 11438  000DEC  0100               	movlb	0	; () banked
 11439  000DEE  6F9F               	movwf	auto_mount@fmt& (0+255),b
 11440  000DF0                     l10687:
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 11444  000DF0  519F               	movf	auto_mount@fmt& (0+255),w,b
 11445  000DF2  A4D8               	btfss	status,2,c
 11446  000DF4  D00C               	goto	u13030
 11447                           
 11448                           ; BSR set to: 0
 11449  000DF6  EE20 F02B          	lfsr	2,43
 11450  000DFA  51A5               	movf	auto_mount@fs& (0+255),w,b
 11451  000DFC  26D9               	addwf	fsr2l,f,c
 11452  000DFE  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11453  000E00  22DA               	addwfc	fsr2h,f,c
 11454  000E02  50DE               	movf	postinc2,w,c
 11455  000E04  E104               	bnz	u13030
 11456  000E06  0E02               	movlw	2
 11457  000E08  18DE               	xorwf	postinc2,w,c
 11458  000E0A  B4D8               	btfsc	status,2,c
 11459  000E0C  D002               	goto	l10695
 11460  000E0E                     u13030:
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 11464  000E0E  0E0B               	movlw	11
 11465  000E10  0012               	return	
 11466  000E12                     l10695:
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 11470  000E12  EE20 F036          	lfsr	2,54
 11471  000E16  51A5               	movf	auto_mount@fs& (0+255),w,b
 11472  000E18  26D9               	addwf	fsr2l,f,c
 11473  000E1A  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11474  000E1C  22DA               	addwfc	fsr2h,f,c
 11475  000E1E  CFDE F07B          	movff	postinc2,??_auto_mount
 11476  000E22  CFDD F07C          	movff	postdec2,??_auto_mount+1
 11477  000E26  C07B  F0A1         	movff	??_auto_mount,auto_mount@fatsize
 11478  000E2A  C07C  F0A2         	movff	??_auto_mount+1,auto_mount@fatsize+1
 11479  000E2E  6BA3               	clrf	(auto_mount@fatsize+2)& (0+255),b
 11480  000E30  6BA4               	clrf	(auto_mount@fatsize+3)& (0+255),b
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 11484  000E32  51A1               	movf	auto_mount@fatsize& (0+255),w,b
 11485  000E34  11A2               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 11486  000E36  11A3               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 11487  000E38  11A4               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 11488  000E3A  A4D8               	btfss	status,2,c
 11489  000E3C  D00E               	goto	l933
 11490                           
 11491                           ; BSR set to: 0
 11492  000E3E  EE20 F044          	lfsr	2,68
 11493  000E42  51A5               	movf	auto_mount@fs& (0+255),w,b
 11494  000E44  26D9               	addwf	fsr2l,f,c
 11495  000E46  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11496  000E48  22DA               	addwfc	fsr2h,f,c
 11497  000E4A  CFDE F0A1          	movff	postinc2,auto_mount@fatsize
 11498  000E4E  CFDE F0A2          	movff	postinc2,auto_mount@fatsize+1
 11499  000E52  CFDE F0A3          	movff	postinc2,auto_mount@fatsize+2
 11500  000E56  CFDE F0A4          	movff	postinc2,auto_mount@fatsize+3
 11501  000E5A                     l933:
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 11505  000E5A  EE20 F014          	lfsr	2,20
 11506  000E5E  51A5               	movf	auto_mount@fs& (0+255),w,b
 11507  000E60  26D9               	addwf	fsr2l,f,c
 11508  000E62  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11509  000E64  22DA               	addwfc	fsr2h,f,c
 11510  000E66  C0A1  FFDE         	movff	auto_mount@fatsize,postinc2
 11511  000E6A  C0A2  FFDD         	movff	auto_mount@fatsize+1,postdec2
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;tff.c: 711: fs->n_fats = fs->win[16];
 11515  000E6E  EE20 F030          	lfsr	2,48
 11516  000E72  51A5               	movf	auto_mount@fs& (0+255),w,b
 11517  000E74  26D9               	addwf	fsr2l,f,c
 11518  000E76  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11519  000E78  22DA               	addwfc	fsr2h,f,c
 11520  000E7A  EE10 F01E          	lfsr	1,30
 11521  000E7E  51A5               	movf	auto_mount@fs& (0+255),w,b
 11522  000E80  26E1               	addwf	fsr1l,f,c
 11523  000E82  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11524  000E84  22E2               	addwfc	fsr1h,f,c
 11525  000E86  CFDF FFE7          	movff	indf2,indf1
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;tff.c: 712: fatsize *= fs->n_fats;
 11529  000E8A  C0A1  F019         	movff	auto_mount@fatsize,___lmul@multiplier
 11530  000E8E  C0A2  F01A         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 11531  000E92  C0A3  F01B         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 11532  000E96  C0A4  F01C         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 11533  000E9A  EE20 F01E          	lfsr	2,30
 11534  000E9E  51A5               	movf	auto_mount@fs& (0+255),w,b
 11535  000EA0  26D9               	addwf	fsr2l,f,c
 11536  000EA2  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11537  000EA4  22DA               	addwfc	fsr2h,f,c
 11538  000EA6  50DF               	movf	indf2,w,c
 11539  000EA8  6F7B               	movwf	??_auto_mount& (0+255),b
 11540  000EAA  517B               	movf	??_auto_mount& (0+255),w,b
 11541  000EAC  6E1D               	movwf	___lmul@multiplicand^0,c
 11542  000EAE  6A1E               	clrf	(___lmul@multiplicand+1)^0,c
 11543  000EB0  6A1F               	clrf	(___lmul@multiplicand+2)^0,c
 11544  000EB2  6A20               	clrf	(___lmul@multiplicand+3)^0,c
 11545  000EB4  ECBF  F025         	call	___lmul	;wreg free
 11546  000EB8  C019  F0A1         	movff	?___lmul,auto_mount@fatsize
 11547  000EBC  C01A  F0A2         	movff	?___lmul+1,auto_mount@fatsize+1
 11548  000EC0  C01B  F0A3         	movff	?___lmul+2,auto_mount@fatsize+2
 11549  000EC4  C01C  F0A4         	movff	?___lmul+3,auto_mount@fatsize+3
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 11553  000EC8  EE20 F02E          	lfsr	2,46
 11554  000ECC  51A5               	movf	auto_mount@fs& (0+255),w,b
 11555  000ECE  26D9               	addwf	fsr2l,f,c
 11556  000ED0  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11557  000ED2  22DA               	addwfc	fsr2h,f,c
 11558  000ED4  CFDE F07B          	movff	postinc2,??_auto_mount
 11559  000ED8  CFDD F07C          	movff	postdec2,??_auto_mount+1
 11560  000EDC  517B               	movf	??_auto_mount& (0+255),w,b
 11561  000EDE  2595               	addwf	auto_mount@bootsect& (0+255),w,b
 11562  000EE0  6F7D               	movwf	(??_auto_mount+2)& (0+255),b
 11563  000EE2  517C               	movf	(??_auto_mount+1)& (0+255),w,b
 11564  000EE4  2196               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 11565  000EE6  6F7E               	movwf	(??_auto_mount+3)& (0+255),b
 11566  000EE8  0E00               	movlw	0
 11567  000EEA  2197               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 11568  000EEC  6F7F               	movwf	(??_auto_mount+4)& (0+255),b
 11569  000EEE  0E00               	movlw	0
 11570  000EF0  2198               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 11571  000EF2  6F80               	movwf	(??_auto_mount+5)& (0+255),b
 11572  000EF4  EE20 F008          	lfsr	2,8
 11573  000EF8  51A5               	movf	auto_mount@fs& (0+255),w,b
 11574  000EFA  26D9               	addwf	fsr2l,f,c
 11575  000EFC  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11576  000EFE  22DA               	addwfc	fsr2h,f,c
 11577  000F00  C07D  FFDE         	movff	??_auto_mount+2,postinc2
 11578  000F04  C07E  FFDE         	movff	??_auto_mount+3,postinc2
 11579  000F08  C07F  FFDE         	movff	??_auto_mount+4,postinc2
 11580  000F0C  C080  FFDE         	movff	??_auto_mount+5,postinc2
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;tff.c: 714: fs->csize = fs->win[13];
 11584  000F10  EE20 F02D          	lfsr	2,45
 11585  000F14  51A5               	movf	auto_mount@fs& (0+255),w,b
 11586  000F16  26D9               	addwf	fsr2l,f,c
 11587  000F18  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11588  000F1A  22DA               	addwfc	fsr2h,f,c
 11589  000F1C  EE10 F01D          	lfsr	1,29
 11590  000F20  51A5               	movf	auto_mount@fs& (0+255),w,b
 11591  000F22  26E1               	addwf	fsr1l,f,c
 11592  000F24  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11593  000F26  22E2               	addwfc	fsr1h,f,c
 11594  000F28  CFDF FFE7          	movff	indf2,indf1
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 11598  000F2C  EE20 F031          	lfsr	2,49
 11599  000F30  51A5               	movf	auto_mount@fs& (0+255),w,b
 11600  000F32  26D9               	addwf	fsr2l,f,c
 11601  000F34  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11602  000F36  22DA               	addwfc	fsr2h,f,c
 11603  000F38  EE10 F002          	lfsr	1,2
 11604  000F3C  51A5               	movf	auto_mount@fs& (0+255),w,b
 11605  000F3E  26E1               	addwf	fsr1l,f,c
 11606  000F40  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11607  000F42  22E2               	addwfc	fsr1h,f,c
 11608  000F44  CFDE FFE6          	movff	postinc2,postinc1
 11609  000F48  CFDD FFE5          	movff	postdec2,postdec1
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 11613  000F4C  EE20 F033          	lfsr	2,51
 11614  000F50  51A5               	movf	auto_mount@fs& (0+255),w,b
 11615  000F52  26D9               	addwf	fsr2l,f,c
 11616  000F54  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11617  000F56  22DA               	addwfc	fsr2h,f,c
 11618  000F58  CFDE F07B          	movff	postinc2,??_auto_mount
 11619  000F5C  CFDD F07C          	movff	postdec2,??_auto_mount+1
 11620  000F60  C07B  F099         	movff	??_auto_mount,auto_mount@totalsect
 11621  000F64  C07C  F09A         	movff	??_auto_mount+1,auto_mount@totalsect+1
 11622  000F68  6B9B               	clrf	(auto_mount@totalsect+2)& (0+255),b
 11623  000F6A  6B9C               	clrf	(auto_mount@totalsect+3)& (0+255),b
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 11627  000F6C  5199               	movf	auto_mount@totalsect& (0+255),w,b
 11628  000F6E  119A               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 11629  000F70  119B               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 11630  000F72  119C               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 11631  000F74  A4D8               	btfss	status,2,c
 11632  000F76  D00E               	goto	l10717
 11633                           
 11634                           ; BSR set to: 0
 11635  000F78  EE20 F040          	lfsr	2,64
 11636  000F7C  51A5               	movf	auto_mount@fs& (0+255),w,b
 11637  000F7E  26D9               	addwf	fsr2l,f,c
 11638  000F80  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11639  000F82  22DA               	addwfc	fsr2h,f,c
 11640  000F84  CFDE F099          	movff	postinc2,auto_mount@totalsect
 11641  000F88  CFDE F09A          	movff	postinc2,auto_mount@totalsect+1
 11642  000F8C  CFDE F09B          	movff	postinc2,auto_mount@totalsect+2
 11643  000F90  CFDE F09C          	movff	postinc2,auto_mount@totalsect+3
 11644  000F94                     l10717:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 11648  000F94  EE20 F002          	lfsr	2,2
 11649  000F98  51A5               	movf	auto_mount@fs& (0+255),w,b
 11650  000F9A  26D9               	addwf	fsr2l,f,c
 11651  000F9C  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11652  000F9E  22DA               	addwfc	fsr2h,f,c
 11653  000FA0  CFDE F07B          	movff	postinc2,??_auto_mount
 11654  000FA4  CFDD F07C          	movff	postdec2,??_auto_mount+1
 11655  000FA8  0E04               	movlw	4
 11656  000FAA  6F7D               	movwf	(??_auto_mount+2)& (0+255),b
 11657  000FAC                     u13065:
 11658  000FAC  90D8               	bcf	status,0,c
 11659  000FAE  337C               	rrcf	(??_auto_mount+1)& (0+255),f,b
 11660  000FB0  337B               	rrcf	??_auto_mount& (0+255),f,b
 11661  000FB2  2F7D               	decfsz	(??_auto_mount+2)& (0+255),f,b
 11662  000FB4  D7FB               	goto	u13065
 11663  000FB6  517B               	movf	??_auto_mount& (0+255),w,b
 11664  000FB8  6F7E               	movwf	(??_auto_mount+3)& (0+255),b
 11665  000FBA  517C               	movf	(??_auto_mount+1)& (0+255),w,b
 11666  000FBC  6F7F               	movwf	(??_auto_mount+4)& (0+255),b
 11667  000FBE  6B80               	clrf	(??_auto_mount+5)& (0+255),b
 11668  000FC0  6B81               	clrf	(??_auto_mount+6)& (0+255),b
 11669  000FC2  EE20 F02E          	lfsr	2,46
 11670  000FC6  51A5               	movf	auto_mount@fs& (0+255),w,b
 11671  000FC8  26D9               	addwf	fsr2l,f,c
 11672  000FCA  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11673  000FCC  22DA               	addwfc	fsr2h,f,c
 11674  000FCE  CFDE F082          	movff	postinc2,??_auto_mount+7
 11675  000FD2  CFDD F083          	movff	postdec2,??_auto_mount+8
 11676  000FD6  5182               	movf	(??_auto_mount+7)& (0+255),w,b
 11677  000FD8  6F84               	movwf	(??_auto_mount+9)& (0+255),b
 11678  000FDA  5183               	movf	(??_auto_mount+8)& (0+255),w,b
 11679  000FDC  6F85               	movwf	(??_auto_mount+10)& (0+255),b
 11680  000FDE  6B86               	clrf	(??_auto_mount+11)& (0+255),b
 11681  000FE0  6B87               	clrf	(??_auto_mount+12)& (0+255),b
 11682  000FE2  1F84               	comf	(??_auto_mount+9)& (0+255),f,b
 11683  000FE4  1F85               	comf	(??_auto_mount+10)& (0+255),f,b
 11684  000FE6  1F86               	comf	(??_auto_mount+11)& (0+255),f,b
 11685  000FE8  1F87               	comf	(??_auto_mount+12)& (0+255),f,b
 11686  000FEA  2B84               	incf	(??_auto_mount+9)& (0+255),f,b
 11687  000FEC  0E00               	movlw	0
 11688  000FEE  2385               	addwfc	(??_auto_mount+10)& (0+255),f,b
 11689  000FF0  2386               	addwfc	(??_auto_mount+11)& (0+255),f,b
 11690  000FF2  2387               	addwfc	(??_auto_mount+12)& (0+255),f,b
 11691  000FF4  51A1               	movf	auto_mount@fatsize& (0+255),w,b
 11692  000FF6  5D84               	subwf	(??_auto_mount+9)& (0+255),w,b
 11693  000FF8  6F88               	movwf	(??_auto_mount+13)& (0+255),b
 11694  000FFA  51A2               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11695  000FFC  5985               	subwfb	(??_auto_mount+10)& (0+255),w,b
 11696  000FFE  6F89               	movwf	(??_auto_mount+14)& (0+255),b
 11697  001000  51A3               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11698  001002  5986               	subwfb	(??_auto_mount+11)& (0+255),w,b
 11699  001004  6F8A               	movwf	(??_auto_mount+15)& (0+255),b
 11700  001006  51A4               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11701  001008  5987               	subwfb	(??_auto_mount+12)& (0+255),w,b
 11702  00100A  6F8B               	movwf	(??_auto_mount+16)& (0+255),b
 11703  00100C  517E               	movf	(??_auto_mount+3)& (0+255),w,b
 11704  00100E  5D88               	subwf	(??_auto_mount+13)& (0+255),w,b
 11705  001010  6F8C               	movwf	(??_auto_mount+17)& (0+255),b
 11706  001012  517F               	movf	(??_auto_mount+4)& (0+255),w,b
 11707  001014  5989               	subwfb	(??_auto_mount+14)& (0+255),w,b
 11708  001016  6F8D               	movwf	(??_auto_mount+18)& (0+255),b
 11709  001018  5180               	movf	(??_auto_mount+5)& (0+255),w,b
 11710  00101A  598A               	subwfb	(??_auto_mount+15)& (0+255),w,b
 11711  00101C  6F8E               	movwf	(??_auto_mount+19)& (0+255),b
 11712  00101E  5181               	movf	(??_auto_mount+6)& (0+255),w,b
 11713  001020  598B               	subwfb	(??_auto_mount+16)& (0+255),w,b
 11714  001022  6F8F               	movwf	(??_auto_mount+20)& (0+255),b
 11715  001024  5199               	movf	auto_mount@totalsect& (0+255),w,b
 11716  001026  258C               	addwf	(??_auto_mount+17)& (0+255),w,b
 11717  001028  6E19               	movwf	___lldiv@dividend^0,c
 11718  00102A  519A               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 11719  00102C  218D               	addwfc	(??_auto_mount+18)& (0+255),w,b
 11720  00102E  6E1A               	movwf	(___lldiv@dividend+1)^0,c
 11721  001030  519B               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 11722  001032  218E               	addwfc	(??_auto_mount+19)& (0+255),w,b
 11723  001034  6E1B               	movwf	(___lldiv@dividend+2)^0,c
 11724  001036  519C               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 11725  001038  218F               	addwfc	(??_auto_mount+20)& (0+255),w,b
 11726  00103A  6E1C               	movwf	(___lldiv@dividend+3)^0,c
 11727  00103C  EE20 F01D          	lfsr	2,29
 11728  001040  51A5               	movf	auto_mount@fs& (0+255),w,b
 11729  001042  26D9               	addwf	fsr2l,f,c
 11730  001044  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11731  001046  22DA               	addwfc	fsr2h,f,c
 11732  001048  50DF               	movf	indf2,w,c
 11733  00104A  6F90               	movwf	(??_auto_mount+21)& (0+255),b
 11734  00104C  5190               	movf	(??_auto_mount+21)& (0+255),w,b
 11735  00104E  6E1D               	movwf	___lldiv@divisor^0,c
 11736  001050  6A1E               	clrf	(___lldiv@divisor+1)^0,c
 11737  001052  6A1F               	clrf	(___lldiv@divisor+2)^0,c
 11738  001054  6A20               	clrf	(___lldiv@divisor+3)^0,c
 11739  001056  EC9D  F023         	call	___lldiv	;wreg free
 11740  00105A  0E02               	movlw	2
 11741  00105C  2419               	addwf	?___lldiv^0,w,c
 11742  00105E  0100               	movlb	0	; () banked
 11743  001060  6F91               	movwf	auto_mount@maxclust& (0+255),b
 11744  001062  0E00               	movlw	0
 11745  001064  201A               	addwfc	(?___lldiv+1)^0,w,c
 11746  001066  6F92               	movwf	(auto_mount@maxclust+1)& (0+255),b
 11747  001068  0E00               	movlw	0
 11748  00106A  201B               	addwfc	(?___lldiv+2)^0,w,c
 11749  00106C  6F93               	movwf	(auto_mount@maxclust+2)& (0+255),b
 11750  00106E  0E00               	movlw	0
 11751  001070  201C               	addwfc	(?___lldiv+3)^0,w,c
 11752  001072  6F94               	movwf	(auto_mount@maxclust+3)& (0+255),b
 11753  001074  EE20 F016          	lfsr	2,22
 11754  001078  51A5               	movf	auto_mount@fs& (0+255),w,b
 11755  00107A  26D9               	addwf	fsr2l,f,c
 11756  00107C  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11757  00107E  22DA               	addwfc	fsr2h,f,c
 11758  001080  C091  FFDE         	movff	auto_mount@maxclust,postinc2
 11759  001084  C092  FFDD         	movff	auto_mount@maxclust+1,postdec2
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;tff.c: 722: fmt = 1;
 11763  001088  0E01               	movlw	1
 11764  00108A  6F9F               	movwf	auto_mount@fmt& (0+255),b
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 11768  00108C  5194               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11769  00108E  1193               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11770  001090  E106               	bnz	u13070
 11771  001092  0EF7               	movlw	247
 11772  001094  5D91               	subwf	auto_mount@maxclust& (0+255),w,b
 11773  001096  0E0F               	movlw	15
 11774  001098  5992               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11775  00109A  A0D8               	btfss	status,0,c
 11776  00109C  D002               	goto	l10725
 11777  00109E                     u13070:
 11778                           
 11779                           ; BSR set to: 0
 11780  00109E  0E02               	movlw	2
 11781  0010A0  6F9F               	movwf	auto_mount@fmt& (0+255),b
 11782  0010A2                     l10725:
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 11786  0010A2  5194               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 11787  0010A4  1193               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 11788  0010A6  E107               	bnz	u13080
 11789  0010A8  0EF7               	movlw	247
 11790  0010AA  5D91               	subwf	auto_mount@maxclust& (0+255),w,b
 11791  0010AC  0EFF               	movlw	255
 11792  0010AE  5992               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 11793  0010B0  B0D8               	btfsc	status,0,c
 11794  0010B2  D6AD               	goto	u13030
 11795  0010B4  D001               	goto	l10731
 11796  0010B6                     u13080:
 11797  0010B6  D6AB               	goto	u13030
 11798  0010B8                     l10731:
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 11802  0010B8  EE20 F008          	lfsr	2,8
 11803  0010BC  51A5               	movf	auto_mount@fs& (0+255),w,b
 11804  0010BE  26D9               	addwf	fsr2l,f,c
 11805  0010C0  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11806  0010C2  22DA               	addwfc	fsr2h,f,c
 11807  0010C4  CFDE F07B          	movff	postinc2,??_auto_mount
 11808  0010C8  CFDE F07C          	movff	postinc2,??_auto_mount+1
 11809  0010CC  CFDE F07D          	movff	postinc2,??_auto_mount+2
 11810  0010D0  CFDE F07E          	movff	postinc2,??_auto_mount+3
 11811  0010D4  51A1               	movf	auto_mount@fatsize& (0+255),w,b
 11812  0010D6  257B               	addwf	??_auto_mount& (0+255),w,b
 11813  0010D8  6F7F               	movwf	(??_auto_mount+4)& (0+255),b
 11814  0010DA  51A2               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11815  0010DC  217C               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11816  0010DE  6F80               	movwf	(??_auto_mount+5)& (0+255),b
 11817  0010E0  51A3               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11818  0010E2  217D               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11819  0010E4  6F81               	movwf	(??_auto_mount+6)& (0+255),b
 11820  0010E6  51A4               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11821  0010E8  217E               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11822  0010EA  6F82               	movwf	(??_auto_mount+7)& (0+255),b
 11823  0010EC  EE20 F00C          	lfsr	2,12
 11824  0010F0  51A5               	movf	auto_mount@fs& (0+255),w,b
 11825  0010F2  26D9               	addwf	fsr2l,f,c
 11826  0010F4  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11827  0010F6  22DA               	addwfc	fsr2h,f,c
 11828  0010F8  C07F  FFDE         	movff	??_auto_mount+4,postinc2
 11829  0010FC  C080  FFDE         	movff	??_auto_mount+5,postinc2
 11830  001100  C081  FFDE         	movff	??_auto_mount+6,postinc2
 11831  001104  C082  FFDE         	movff	??_auto_mount+7,postinc2
 11832                           
 11833                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 11834  001108  EE20 F008          	lfsr	2,8
 11835  00110C  51A5               	movf	auto_mount@fs& (0+255),w,b
 11836  00110E  26D9               	addwf	fsr2l,f,c
 11837  001110  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11838  001112  22DA               	addwfc	fsr2h,f,c
 11839  001114  CFDE F07B          	movff	postinc2,??_auto_mount
 11840  001118  CFDE F07C          	movff	postinc2,??_auto_mount+1
 11841  00111C  CFDE F07D          	movff	postinc2,??_auto_mount+2
 11842  001120  CFDE F07E          	movff	postinc2,??_auto_mount+3
 11843  001124  EE20 F002          	lfsr	2,2
 11844  001128  51A5               	movf	auto_mount@fs& (0+255),w,b
 11845  00112A  26D9               	addwf	fsr2l,f,c
 11846  00112C  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11847  00112E  22DA               	addwfc	fsr2h,f,c
 11848  001130  CFDE F07F          	movff	postinc2,??_auto_mount+4
 11849  001134  CFDD F080          	movff	postdec2,??_auto_mount+5
 11850  001138  0E04               	movlw	4
 11851  00113A  6F81               	movwf	(??_auto_mount+6)& (0+255),b
 11852  00113C                     u13095:
 11853  00113C  90D8               	bcf	status,0,c
 11854  00113E  3380               	rrcf	(??_auto_mount+5)& (0+255),f,b
 11855  001140  337F               	rrcf	(??_auto_mount+4)& (0+255),f,b
 11856  001142  2F81               	decfsz	(??_auto_mount+6)& (0+255),f,b
 11857  001144  D7FB               	goto	u13095
 11858  001146  517F               	movf	(??_auto_mount+4)& (0+255),w,b
 11859  001148  257B               	addwf	??_auto_mount& (0+255),w,b
 11860  00114A  6F82               	movwf	(??_auto_mount+7)& (0+255),b
 11861  00114C  5180               	movf	(??_auto_mount+5)& (0+255),w,b
 11862  00114E  217C               	addwfc	(??_auto_mount+1)& (0+255),w,b
 11863  001150  6F83               	movwf	(??_auto_mount+8)& (0+255),b
 11864  001152  0E00               	movlw	0
 11865  001154  217D               	addwfc	(??_auto_mount+2)& (0+255),w,b
 11866  001156  6F84               	movwf	(??_auto_mount+9)& (0+255),b
 11867  001158  0E00               	movlw	0
 11868  00115A  217E               	addwfc	(??_auto_mount+3)& (0+255),w,b
 11869  00115C  6F85               	movwf	(??_auto_mount+10)& (0+255),b
 11870  00115E  51A1               	movf	auto_mount@fatsize& (0+255),w,b
 11871  001160  2582               	addwf	(??_auto_mount+7)& (0+255),w,b
 11872  001162  6F86               	movwf	(??_auto_mount+11)& (0+255),b
 11873  001164  51A2               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 11874  001166  2183               	addwfc	(??_auto_mount+8)& (0+255),w,b
 11875  001168  6F87               	movwf	(??_auto_mount+12)& (0+255),b
 11876  00116A  51A3               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 11877  00116C  2184               	addwfc	(??_auto_mount+9)& (0+255),w,b
 11878  00116E  6F88               	movwf	(??_auto_mount+13)& (0+255),b
 11879  001170  51A4               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 11880  001172  2185               	addwfc	(??_auto_mount+10)& (0+255),w,b
 11881  001174  6F89               	movwf	(??_auto_mount+14)& (0+255),b
 11882  001176  EE20 F010          	lfsr	2,16
 11883  00117A  51A5               	movf	auto_mount@fs& (0+255),w,b
 11884  00117C  26D9               	addwf	fsr2l,f,c
 11885  00117E  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11886  001180  22DA               	addwfc	fsr2h,f,c
 11887  001182  C086  FFDE         	movff	??_auto_mount+11,postinc2
 11888  001186  C087  FFDE         	movff	??_auto_mount+12,postinc2
 11889  00118A  C088  FFDE         	movff	??_auto_mount+13,postinc2
 11890  00118E  C089  FFDE         	movff	??_auto_mount+14,postinc2
 11891                           
 11892                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 11893  001192  EE20 F01A          	lfsr	2,26
 11894  001196  51A5               	movf	auto_mount@fs& (0+255),w,b
 11895  001198  26D9               	addwf	fsr2l,f,c
 11896  00119A  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11897  00119C  22DA               	addwfc	fsr2h,f,c
 11898  00119E  0EFF               	movlw	255
 11899  0011A0  6EDE               	movwf	postinc2,c
 11900  0011A2  0EFF               	movlw	255
 11901  0011A4  6EDD               	movwf	postdec2,c
 11902                           
 11903                           ;tff.c: 754: fs->fs_type = fmt;
 11904  0011A6  EE20 F01C          	lfsr	2,28
 11905  0011AA  51A5               	movf	auto_mount@fs& (0+255),w,b
 11906  0011AC  26D9               	addwf	fsr2l,f,c
 11907  0011AE  51A6               	movf	(auto_mount@fs+1)& (0+255),w,b
 11908  0011B0  22DA               	addwfc	fsr2h,f,c
 11909  0011B2  C09F  FFDF         	movff	auto_mount@fmt,indf2
 11910                           
 11911                           ; BSR set to: 0
 11912                           ;tff.c: 755: fs->id = ++fsid;
 11913  0011B6  0101               	movlb	1	; () banked
 11914  0011B8  4B1A               	infsnz	_fsid& (0+255),f,b
 11915  0011BA  2B1B               	incf	(_fsid+1)& (0+255),f,b
 11916  0011BC  C0A5  FFD9         	movff	auto_mount@fs,fsr2l
 11917  0011C0  C0A6  FFDA         	movff	auto_mount@fs+1,fsr2h
 11918  0011C4  C11A  FFDE         	movff	_fsid,postinc2
 11919  0011C8  C11B  FFDD         	movff	_fsid+1,postdec2
 11920                           
 11921                           ;tff.c: 756: return FR_OK;
 11922  0011CC  0E00               	movlw	0
 11923  0011CE  0012               	return		;funcret
 11924  0011D0                     __end_of_auto_mount:
 11925                           	callstack 0
 11926                           
 11927 ;; *************** function _memset *****************
 11928 ;; Defined at:
 11929 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;  p1              2   24[COMRAM] PTR void 
 11932 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 11933 ;;  c               2   26[COMRAM] int 
 11934 ;;  n               2   28[COMRAM] unsigned int 
 11935 ;; Auto vars:     Size  Location     Type
 11936 ;;  p               2   30[COMRAM] PTR unsigned char 
 11937 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  2   24[COMRAM] PTR void 
 11940 ;; Registers used:
 11941 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11947 ;;      Params:         6       0       0       0       0       0       0       0       0
 11948 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11949 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11950 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11951 ;;Total ram usage:        8 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    3
 11954 ;; This function calls:
 11955 ;;		Nothing
 11956 ;; This function is called by:
 11957 ;;		_make_dirfile
 11958 ;;		_reserve_direntry
 11959 ;;		_auto_mount
 11960 ;;		_f_open
 11961 ;; This function uses a non-reentrant model
 11962 ;;
 11963                           
 11964                           	psect	text48
 11965  0050E0                     __ptext48:
 11966                           	callstack 0
 11967  0050E0                     _memset:
 11968                           	callstack 21
 11969                           
 11970                           ;incstack = 0
 11971  0050E0  C019  F01F         	movff	memset@p1,memset@p
 11972  0050E4  C01A  F020         	movff	memset@p1+1,memset@p+1
 11973  0050E8  D008               	goto	l6669
 11974  0050EA                     l6665:
 11975  0050EA  C01F  FFD9         	movff	memset@p,fsr2l
 11976  0050EE  C020  FFDA         	movff	memset@p+1,fsr2h
 11977  0050F2  C01B  FFDF         	movff	memset@c,indf2
 11978  0050F6  4A1F               	infsnz	memset@p^0,f,c
 11979  0050F8  2A20               	incf	(memset@p+1)^0,f,c
 11980  0050FA                     l6669:
 11981  0050FA  061D               	decf	memset@n^0,f,c
 11982  0050FC  A0D8               	btfss	status,0,c
 11983  0050FE  061E               	decf	(memset@n+1)^0,f,c
 11984  005100  281D               	incf	memset@n^0,w,c
 11985  005102  E1F3               	bnz	l6665
 11986  005104  281E               	incf	(memset@n+1)^0,w,c
 11987  005106  B4D8               	btfsc	status,2,c
 11988  005108  0012               	return	
 11989  00510A  D7EF               	goto	l6665
 11990  00510C                     __end_of_memset:
 11991                           	callstack 0
 11992                           
 11993 ;; *************** function _disk_initialize *****************
 11994 ;; Defined at:
 11995 ;;		line 59 in file "bibliotecas/diskio.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;  pdrv            1    wreg     unsigned char 
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;  pdrv            1   44[COMRAM] unsigned char 
 12000 ;;  result          2    0        int 
 12001 ;;  stat            1   45[COMRAM] unsigned char 
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  1    wreg      unsigned char 
 12004 ;; Registers used:
 12005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12006 ;; Tracked objects:
 12007 ;;		On entry : 0/0
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12011 ;;      Params:         0       0       0       0       0       0       0       0       0
 12012 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12013 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12014 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12015 ;;Total ram usage:        2 bytes
 12016 ;; Hardware stack levels used:    1
 12017 ;; Hardware stack levels required when called:    8
 12018 ;; This function calls:
 12019 ;;		_sdc_disk_initialize
 12020 ;; This function is called by:
 12021 ;;		_auto_mount
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text49
 12026  005160                     __ptext49:
 12027                           	callstack 0
 12028  005160                     _disk_initialize:
 12029                           	callstack 17
 12030                           
 12031                           ;incstack = 0
 12032                           ;disk_initialize@pdrv stored from wreg
 12033  005160  6E2D               	movwf	disk_initialize@pdrv^0,c
 12034                           
 12035                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 12036  005162  D005               	goto	l10229
 12037  005164                     l10211:
 12038                           
 12039                           ;diskio.c: 68: stat = sdc_disk_initialize();
 12040  005164  EC23  F010         	call	_sdc_disk_initialize	;wreg free
 12041  005168  6E2E               	movwf	disk_initialize@stat^0,c
 12042  00516A                     l10213:
 12043                           
 12044                           ;diskio.c: 72: return stat;
 12045  00516A  502E               	movf	disk_initialize@stat^0,w,c
 12046  00516C  0012               	return	
 12047  00516E                     l10229:
 12048  00516E  502D               	movf	disk_initialize@pdrv^0,w,c
 12049                           
 12050                           ; Switch size 1, requested type "simple"
 12051                           ; Number of cases is 3, Range of values is 0 to 2
 12052                           ; switch strategies available:
 12053                           ; Name         Instructions Cycles
 12054                           ; simple_byte           10     6 (average)
 12055                           ;	Chosen strategy is simple_byte
 12056  005170  0A00               	xorlw	0	; case 0
 12057  005172  B4D8               	btfsc	status,2,c
 12058  005174  D7F7               	goto	l10211
 12059  005176  0A01               	xorlw	1	; case 1
 12060  005178  B4D8               	btfsc	status,2,c
 12061  00517A  D7F4               	goto	l10211
 12062  00517C  0A03               	xorlw	3	; case 2
 12063  00517E  B4D8               	btfsc	status,2,c
 12064  005180  D7F4               	goto	l10213
 12065                           
 12066                           ;diskio.c: 88: return 0x01;
 12067  005182  0E01               	movlw	1
 12068  005184  0012               	return		;funcret
 12069  005186                     __end_of_disk_initialize:
 12070                           	callstack 0
 12071                           
 12072 ;; *************** function _sdc_disk_initialize *****************
 12073 ;; Defined at:
 12074 ;;		line 275 in file "bibliotecas/diskio.c"
 12075 ;; Parameters:    Size  Location     Type
 12076 ;;		None
 12077 ;; Auto vars:     Size  Location     Type
 12078 ;;  count2          2    9[BANK0 ] int 
 12079 ;;  crc_number      2    5[BANK0 ] int 
 12080 ;;  count1          2    3[BANK0 ] int 
 12081 ;;  i               2    0        int 
 12082 ;;  buff            1   11[BANK0 ] unsigned char 
 12083 ;;  ocr             1    8[BANK0 ] unsigned char 
 12084 ;;  buff_i          1    7[BANK0 ] unsigned char 
 12085 ;;  stat            1    2[BANK0 ] unsigned char 
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  1    wreg      unsigned char 
 12088 ;; Registers used:
 12089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 3F/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12095 ;;      Params:         0       0       0       0       0       0       0       0       0
 12096 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12097 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12098 ;;      Totals:         1      12       0       0       0       0       0       0       0
 12099 ;;Total ram usage:       13 bytes
 12100 ;; Hardware stack levels used:    1
 12101 ;; Hardware stack levels required when called:    7
 12102 ;; This function calls:
 12103 ;;		_command
 12104 ;;		_dummy_clocks
 12105 ;;		_escreve_frase_ram_lcd
 12106 ;;		_posicao_cursor_lcd
 12107 ;;		_proceed
 12108 ;;		_response
 12109 ;;		_sdc_reset
 12110 ;; This function is called by:
 12111 ;;		_disk_initialize
 12112 ;; This function uses a non-reentrant model
 12113 ;;
 12114                           
 12115                           	psect	text50
 12116  002046                     __ptext50:
 12117                           	callstack 0
 12118  002046                     _sdc_disk_initialize:
 12119                           	callstack 17
 12120                           
 12121                           ;incstack = 0
 12122  002046  0E00               	movlw	0
 12123  002048  0100               	movlb	0	; () banked
 12124  00204A  6F64               	movwf	(sdc_disk_initialize@count1+1)& (0+255),b
 12125  00204C  0E00               	movlw	0
 12126  00204E  6F63               	movwf	sdc_disk_initialize@count1& (0+255),b
 12127  002050  0E00               	movlw	0
 12128  002052  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12129  002054  0E00               	movlw	0
 12130  002056  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12131                           
 12132                           ;diskio.c: 280: BYTE buff = 0;
 12133  002058  0E00               	movlw	0
 12134  00205A  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12135                           
 12136                           ; BSR set to: 0
 12137                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 12138  00205C  0E10               	movlw	16
 12139  00205E  6E2C               	movwf	??_sdc_disk_initialize^0,c
 12140  002060  0E94               	movlw	148
 12141  002062                     u15987:
 12142  002062  2EE8               	decfsz	wreg,f,c
 12143  002064  D7FE               	bra	u15987
 12144  002066  2E2C               	decfsz	??_sdc_disk_initialize^0,f,c
 12145  002068  D7FC               	bra	u15987
 12146  00206A  D000               	nop2	
 12147                           
 12148                           ;diskio.c: 284: dummy_clocks(100);
 12149  00206C  0E64               	movlw	100
 12150  00206E  ECA1  F027         	call	_dummy_clocks
 12151                           
 12152                           ;diskio.c: 287: sdc_reset();
 12153  002072  EC89  F022         	call	_sdc_reset	;wreg free
 12154                           
 12155                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 12156  002076  0EAA               	movlw	170
 12157  002078  6E1E               	movwf	command@arg^0,c
 12158  00207A  0E01               	movlw	1
 12159  00207C  6E1F               	movwf	(command@arg+1)^0,c
 12160  00207E  0E00               	movlw	0
 12161  002080  6E20               	movwf	(command@arg+2)^0,c
 12162  002082  0E00               	movlw	0
 12163  002084  6E21               	movwf	(command@arg+3)^0,c
 12164  002086  0E87               	movlw	135
 12165  002088  6E22               	movwf	command@CRC^0,c
 12166  00208A  0E48               	movlw	72
 12167  00208C  EC92  F025         	call	_command
 12168                           
 12169                           ;diskio.c: 289: proceed();
 12170  002090  ECF3  F029         	call	_proceed	;wreg free
 12171  002094                     l9895:
 12172                           
 12173                           ;diskio.c: 291: buff_i = response();
 12174  002094  ECED  F029         	call	_response	;wreg free
 12175  002098  0100               	movlb	0	; () banked
 12176  00209A  6F67               	movwf	sdc_disk_initialize@buff_i& (0+255),b
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;diskio.c: 292: if(buff_i == 1)
 12180  00209C  0567               	decf	sdc_disk_initialize@buff_i& (0+255),w,b
 12181  00209E  A4D8               	btfss	status,2,c
 12182  0020A0  D004               	goto	l9901
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 12186  0020A2  5167               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 12187  0020A4  6F66               	movwf	(sdc_disk_initialize@crc_number+1)& (0+255),b
 12188  0020A6  6B65               	clrf	sdc_disk_initialize@crc_number& (0+255),b
 12189                           
 12190                           ;diskio.c: 295: }
 12191  0020A8  D006               	goto	l9905
 12192  0020AA                     l9901:
 12193                           
 12194                           ; BSR set to: 0
 12195                           ;diskio.c: 296: else if(buff_i==0xAA)
 12196  0020AA  0EAA               	movlw	170
 12197  0020AC  1967               	xorwf	sdc_disk_initialize@buff_i& (0+255),w,b
 12198  0020AE  A4D8               	btfss	status,2,c
 12199  0020B0  D002               	goto	l9905
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 12203  0020B2  5167               	movf	sdc_disk_initialize@buff_i& (0+255),w,b
 12204  0020B4  1365               	iorwf	sdc_disk_initialize@crc_number& (0+255),f,b
 12205  0020B6                     l9905:
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;diskio.c: 299: };diskio.c: 300: count1++;
 12209  0020B6  4B63               	infsnz	sdc_disk_initialize@count1& (0+255),f,b
 12210  0020B8  2B64               	incf	(sdc_disk_initialize@count1+1)& (0+255),f,b
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 12214  0020BA  0EAA               	movlw	170
 12215  0020BC  1965               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 12216  0020BE  E103               	bnz	u11770
 12217  0020C0  0566               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 12218  0020C2  B4D8               	btfsc	status,2,c
 12219  0020C4  D008               	goto	u11780
 12220  0020C6                     u11770:
 12221                           
 12222                           ; BSR set to: 0
 12223  0020C6  BF64               	btfsc	(sdc_disk_initialize@count1+1)& (0+255),7,b
 12224  0020C8  D7E5               	goto	l9895
 12225  0020CA  0EE8               	movlw	232
 12226  0020CC  5D63               	subwf	sdc_disk_initialize@count1& (0+255),w,b
 12227  0020CE  0E03               	movlw	3
 12228  0020D0  5964               	subwfb	(sdc_disk_initialize@count1+1)& (0+255),w,b
 12229  0020D2  A0D8               	btfss	status,0,c
 12230  0020D4  D7DF               	goto	l9895
 12231  0020D6                     u11780:
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;diskio.c: 306: if (crc_number == 0x1AA)
 12235  0020D6  0EAA               	movlw	170
 12236  0020D8  1965               	xorwf	sdc_disk_initialize@crc_number& (0+255),w,b
 12237  0020DA  E102               	bnz	u11791
 12238  0020DC  0566               	decf	(sdc_disk_initialize@crc_number+1)& (0+255),w,b
 12239  0020DE  A4D8               	btfss	status,2,c
 12240  0020E0                     u11791:
 12241  0020E0  D09E               	goto	l9983
 12242  0020E2                     u11790:
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;diskio.c: 310: count2 = 0;
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;diskio.c: 309: do{
 12249  0020E2  0E00               	movlw	0
 12250  0020E4  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12251  0020E6  0E00               	movlw	0
 12252  0020E8  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12253  0020EA                     
 12254                           ; BSR set to: 0
 12255                           ;diskio.c: 319: dummy_clocks(10);
 12256                           
 12257                           ; BSR set to: 0
 12258  0020EA  0E0A               	movlw	10
 12259  0020EC  ECA1  F027         	call	_dummy_clocks
 12260                           
 12261                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 12262  0020F0  0E00               	movlw	0
 12263  0020F2  6E1E               	movwf	command@arg^0,c
 12264  0020F4  0E00               	movlw	0
 12265  0020F6  6E1F               	movwf	(command@arg+1)^0,c
 12266  0020F8  0E00               	movlw	0
 12267  0020FA  6E20               	movwf	(command@arg+2)^0,c
 12268  0020FC  0E00               	movlw	0
 12269  0020FE  6E21               	movwf	(command@arg+3)^0,c
 12270  002100  0E00               	movlw	0
 12271  002102  6E22               	movwf	command@CRC^0,c
 12272  002104  0E77               	movlw	119
 12273  002106  EC92  F025         	call	_command
 12274                           
 12275                           ;diskio.c: 323: proceed();
 12276  00210A  ECF3  F029         	call	_proceed	;wreg free
 12277  00210E                     l9925:
 12278                           
 12279                           ;diskio.c: 325: buff = response();
 12280  00210E  ECED  F029         	call	_response	;wreg free
 12281  002112  0100               	movlb	0	; () banked
 12282  002114  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12283                           
 12284                           ; BSR set to: 0
 12285                           ;diskio.c: 326: count2++;
 12286  002116  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12287  002118  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12288                           
 12289                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 12290  00211A  056B               	decf	sdc_disk_initialize@buff& (0+255),w,b
 12291  00211C  B4D8               	btfsc	status,2,c
 12292  00211E  D008               	goto	u11810
 12293                           
 12294                           ; BSR set to: 0
 12295  002120  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12296  002122  D7F5               	goto	l9925
 12297  002124  516A               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12298  002126  E104               	bnz	u11810
 12299  002128  0E0A               	movlw	10
 12300  00212A  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12301  00212C  A0D8               	btfss	status,0,c
 12302  00212E  D7EF               	goto	l9925
 12303  002130                     u11810:
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;diskio.c: 328: count2 = 0;
 12307  002130  0E00               	movlw	0
 12308  002132  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12309  002134  0E00               	movlw	0
 12310  002136  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;diskio.c: 332: dummy_clocks(10);
 12314  002138  0E0A               	movlw	10
 12315  00213A  ECA1  F027         	call	_dummy_clocks
 12316                           
 12317                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 12318  00213E  0E00               	movlw	0
 12319  002140  6E1E               	movwf	command@arg^0,c
 12320  002142  0E00               	movlw	0
 12321  002144  6E1F               	movwf	(command@arg+1)^0,c
 12322  002146  0E00               	movlw	0
 12323  002148  6E20               	movwf	(command@arg+2)^0,c
 12324  00214A  0E40               	movlw	64
 12325  00214C  6E21               	movwf	(command@arg+3)^0,c
 12326  00214E  0E00               	movlw	0
 12327  002150  6E22               	movwf	command@CRC^0,c
 12328  002152  0E69               	movlw	105
 12329  002154  EC92  F025         	call	_command
 12330                           
 12331                           ;diskio.c: 334: proceed();
 12332  002158  ECF3  F029         	call	_proceed	;wreg free
 12333                           
 12334                           ;diskio.c: 335: buff = response();
 12335  00215C  ECED  F029         	call	_response	;wreg free
 12336  002160  0100               	movlb	0	; () banked
 12337  002162  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;diskio.c: 336: count2++;
 12341  002164  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12342  002166  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12343                           
 12344                           ; BSR set to: 0
 12345                           ;diskio.c: 337: }while(buff!=0X00);
 12346  002168  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12347  00216A  A4D8               	btfss	status,2,c
 12348  00216C  D7BE               	goto	l9915
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;diskio.c: 342: dummy_clocks(10);
 12352                           
 12353                           ; BSR set to: 0
 12354  00216E  0E0A               	movlw	10
 12355  002170  ECA1  F027         	call	_dummy_clocks
 12356                           
 12357                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 12358  002174  0E00               	movlw	0
 12359  002176  6E1E               	movwf	command@arg^0,c
 12360  002178  0E00               	movlw	0
 12361  00217A  6E1F               	movwf	(command@arg+1)^0,c
 12362  00217C  0E00               	movlw	0
 12363  00217E  6E20               	movwf	(command@arg+2)^0,c
 12364  002180  0E00               	movlw	0
 12365  002182  6E21               	movwf	(command@arg+3)^0,c
 12366  002184  0EFF               	movlw	255
 12367  002186  6E22               	movwf	command@CRC^0,c
 12368  002188  0E7A               	movlw	122
 12369  00218A  EC92  F025         	call	_command
 12370                           
 12371                           ;diskio.c: 344: proceed();
 12372  00218E  ECF3  F029         	call	_proceed	;wreg free
 12373  002192                     l9949:
 12374                           
 12375                           ;diskio.c: 346: buff = response();
 12376  002192  ECED  F029         	call	_response	;wreg free
 12377  002196  0100               	movlb	0	; () banked
 12378  002198  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 12382  00219A  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12383  00219C  256B               	addwf	sdc_disk_initialize@buff& (0+255),w,b
 12384  00219E  0B80               	andlw	128
 12385  0021A0  6F68               	movwf	sdc_disk_initialize@ocr& (0+255),b
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;diskio.c: 348: count2++;
 12389  0021A2  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12390  0021A4  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 12394  0021A6  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12395  0021A8  B4D8               	btfsc	status,2,c
 12396  0021AA  D00B               	goto	u11850
 12397                           
 12398                           ; BSR set to: 0
 12399  0021AC  0568               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 12400  0021AE  B4D8               	btfsc	status,2,c
 12401  0021B0  D008               	goto	u11850
 12402                           
 12403                           ; BSR set to: 0
 12404  0021B2  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12405  0021B4  D7EE               	goto	l9949
 12406  0021B6  516A               	movf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12407  0021B8  E104               	bnz	u11850
 12408  0021BA  0E0A               	movlw	10
 12409  0021BC  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12410  0021BE  A0D8               	btfss	status,0,c
 12411  0021C0  D7E8               	goto	l9949
 12412  0021C2                     u11850:
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 12416  0021C2  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12417  0021C4  B4D8               	btfsc	status,2,c
 12418  0021C6  D003               	goto	u11870
 12419                           
 12420                           ; BSR set to: 0
 12421  0021C8  0568               	decf	sdc_disk_initialize@ocr& (0+255),w,b
 12422  0021CA  A4D8               	btfss	status,2,c
 12423  0021CC  D78A               	goto	u11790
 12424  0021CE                     u11870:
 12425                           
 12426                           ; BSR set to: 0
 12427                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 12428                           
 12429                           ; BSR set to: 0
 12430  0021CE  0E10               	movlw	16
 12431  0021D0  6E2C               	movwf	??_sdc_disk_initialize^0,c
 12432  0021D2  0E94               	movlw	148
 12433  0021D4                     u15997:
 12434  0021D4  2EE8               	decfsz	wreg,f,c
 12435  0021D6  D7FE               	bra	u15997
 12436  0021D8  2E2C               	decfsz	??_sdc_disk_initialize^0,f,c
 12437  0021DA  D7FC               	bra	u15997
 12438  0021DC  D000               	nop2	
 12439                           
 12440                           ;diskio.c: 356: stat = 0X00;
 12441  0021DE  0E00               	movlw	0
 12442  0021E0  0100               	movlb	0	; () banked
 12443  0021E2  6F62               	movwf	sdc_disk_initialize@stat& (0+255),b
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;diskio.c: 358: if(!ocr)
 12447  0021E4  5168               	movf	sdc_disk_initialize@ocr& (0+255),w,b
 12448  0021E6  A4D8               	btfss	status,2,c
 12449  0021E8  D0AC               	goto	u11970
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 12453  0021EA  0E0A               	movlw	10
 12454  0021EC  ECA1  F027         	call	_dummy_clocks
 12455                           
 12456                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 12457  0021F0  0E00               	movlw	0
 12458  0021F2  6E1E               	movwf	command@arg^0,c
 12459  0021F4  0E02               	movlw	2
 12460  0021F6  6E1F               	movwf	(command@arg+1)^0,c
 12461  0021F8  0E00               	movlw	0
 12462  0021FA  6E20               	movwf	(command@arg+2)^0,c
 12463  0021FC  0E00               	movlw	0
 12464  0021FE  6E21               	movwf	(command@arg+3)^0,c
 12465  002200  0EFF               	movlw	255
 12466  002202  6E22               	movwf	command@CRC^0,c
 12467  002204  0E50               	movlw	80
 12468  002206  EC92  F025         	call	_command
 12469                           
 12470                           ;diskio.c: 363: proceed();
 12471  00220A  ECF3  F029         	call	_proceed	;wreg free
 12472  00220E                     
 12473                           ;diskio.c: 367: buff = response();
 12474  00220E  ECED  F029         	call	_response	;wreg free
 12475  002212  0100               	movlb	0	; () banked
 12476  002214  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;diskio.c: 368: }while(buff!=0X00);
 12480  002216  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12481  002218  B4D8               	btfsc	status,2,c
 12482  00221A  D093               	goto	u11970
 12483  00221C  D7F8               	goto	l9977
 12484  00221E                     l9983:
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 12488  00221E  0E00               	movlw	0
 12489  002220  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12490  002222  0E00               	movlw	0
 12491  002224  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;diskio.c: 378: dummy_clocks(1);
 12495                           
 12496                           ; BSR set to: 0
 12497  002226  0E01               	movlw	1
 12498  002228  ECA1  F027         	call	_dummy_clocks
 12499                           
 12500                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 12501  00222C  0E00               	movlw	0
 12502  00222E  6E1E               	movwf	command@arg^0,c
 12503  002230  0E00               	movlw	0
 12504  002232  6E1F               	movwf	(command@arg+1)^0,c
 12505  002234  0E00               	movlw	0
 12506  002236  6E20               	movwf	(command@arg+2)^0,c
 12507  002238  0E00               	movlw	0
 12508  00223A  6E21               	movwf	(command@arg+3)^0,c
 12509  00223C  0EFF               	movlw	255
 12510  00223E  6E22               	movwf	command@CRC^0,c
 12511  002240  0E69               	movlw	105
 12512  002242  EC92  F025         	call	_command
 12513                           
 12514                           ;diskio.c: 380: proceed();
 12515  002246  ECF3  F029         	call	_proceed	;wreg free
 12516  00224A                     l9993:
 12517                           
 12518                           ;diskio.c: 382: buff = response();
 12519  00224A  ECED  F029         	call	_response	;wreg free
 12520  00224E  0100               	movlb	0	; () banked
 12521  002250  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;diskio.c: 383: count2++;
 12525  002252  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12526  002254  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;diskio.c: 384: if(buff==0x00)
 12530  002256  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12531  002258  A4D8               	btfss	status,2,c
 12532  00225A  D00B               	goto	l10003
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 12536  00225C  0E00               	movlw	0
 12537  00225E  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
 12538  002260  0E01               	movlw	1
 12539  002262  EC63  F025         	call	_posicao_cursor_lcd
 12540                           
 12541                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 12542  002266  0E30               	movlw	low STR_3
 12543  002268  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
 12544  00226A  0E62               	movlw	high STR_3
 12545  00226C  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 12546  00226E  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
 12547  002272                     l10003:
 12548                           
 12549                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 12550  002272  0E10               	movlw	16
 12551  002274  6E2C               	movwf	??_sdc_disk_initialize^0,c
 12552  002276  0E94               	movlw	148
 12553  002278                     u16007:
 12554  002278  2EE8               	decfsz	wreg,f,c
 12555  00227A  D7FE               	bra	u16007
 12556  00227C  2E2C               	decfsz	??_sdc_disk_initialize^0,f,c
 12557  00227E  D7FC               	bra	u16007
 12558  002280  D000               	nop2	
 12559                           
 12560                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 12561  002282  0100               	movlb	0	; () banked
 12562  002284  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12563  002286  B4D8               	btfsc	status,2,c
 12564  002288  D008               	goto	u11920
 12565                           
 12566                           ; BSR set to: 0
 12567  00228A  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12568  00228C  D7DE               	goto	l9993
 12569  00228E  0E10               	movlw	16
 12570  002290  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12571  002292  0E27               	movlw	39
 12572  002294  596A               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12573  002296  A0D8               	btfss	status,0,c
 12574  002298  D7D8               	goto	l9993
 12575  00229A                     u11920:
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;diskio.c: 393: if(count2==10)
 12579                           
 12580                           ; BSR set to: 0
 12581  00229A  0E0A               	movlw	10
 12582  00229C  1969               	xorwf	sdc_disk_initialize@count2& (0+255),w,b
 12583  00229E  116A               	iorwf	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12584  0022A0  A4D8               	btfss	status,2,c
 12585  0022A2  D036               	goto	u11960
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 12589  0022A4  0E00               	movlw	0
 12590  0022A6  6F6A               	movwf	(sdc_disk_initialize@count2+1)& (0+255),b
 12591  0022A8  0E00               	movlw	0
 12592  0022AA  6F69               	movwf	sdc_disk_initialize@count2& (0+255),b
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;diskio.c: 396: dummy_clocks(10);
 12596  0022AC  0E0A               	movlw	10
 12597  0022AE  ECA1  F027         	call	_dummy_clocks
 12598                           
 12599                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 12600  0022B2  0E00               	movlw	0
 12601  0022B4  6E1E               	movwf	command@arg^0,c
 12602  0022B6  0E00               	movlw	0
 12603  0022B8  6E1F               	movwf	(command@arg+1)^0,c
 12604  0022BA  0E00               	movlw	0
 12605  0022BC  6E20               	movwf	(command@arg+2)^0,c
 12606  0022BE  0E00               	movlw	0
 12607  0022C0  6E21               	movwf	(command@arg+3)^0,c
 12608  0022C2  0EFF               	movlw	255
 12609  0022C4  6E22               	movwf	command@CRC^0,c
 12610  0022C6  0E41               	movlw	65
 12611  0022C8  EC92  F025         	call	_command
 12612                           
 12613                           ;diskio.c: 398: proceed();
 12614  0022CC  ECF3  F029         	call	_proceed	;wreg free
 12615  0022D0                     l10019:
 12616                           
 12617                           ;diskio.c: 400: buff = response();
 12618  0022D0  ECED  F029         	call	_response	;wreg free
 12619  0022D4  0100               	movlb	0	; () banked
 12620  0022D6  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;diskio.c: 401: count2++;
 12624  0022D8  4B69               	infsnz	sdc_disk_initialize@count2& (0+255),f,b
 12625  0022DA  2B6A               	incf	(sdc_disk_initialize@count2+1)& (0+255),f,b
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;diskio.c: 402: if(buff==0x00)
 12629  0022DC  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12630  0022DE  A4D8               	btfss	status,2,c
 12631  0022E0  D00B               	goto	l10029
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 12635  0022E2  0E00               	movlw	0
 12636  0022E4  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
 12637  0022E6  0E01               	movlw	1
 12638  0022E8  EC63  F025         	call	_posicao_cursor_lcd
 12639                           
 12640                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 12641  0022EC  0E06               	movlw	low STR_4
 12642  0022EE  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
 12643  0022F0  0E62               	movlw	high STR_4
 12644  0022F2  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 12645  0022F4  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
 12646  0022F8                     l10029:
 12647                           
 12648                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 12649  0022F8  0100               	movlb	0	; () banked
 12650  0022FA  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12651  0022FC  B4D8               	btfsc	status,2,c
 12652  0022FE  D008               	goto	u11960
 12653                           
 12654                           ; BSR set to: 0
 12655  002300  BF6A               	btfsc	(sdc_disk_initialize@count2+1)& (0+255),7,b
 12656  002302  D7E6               	goto	l10019
 12657  002304  0E10               	movlw	16
 12658  002306  5D69               	subwf	sdc_disk_initialize@count2& (0+255),w,b
 12659  002308  0E27               	movlw	39
 12660  00230A  596A               	subwfb	(sdc_disk_initialize@count2+1)& (0+255),w,b
 12661  00230C  A0D8               	btfss	status,0,c
 12662  00230E  D7E0               	goto	l10019
 12663  002310                     u11960:
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 12667  002310  0E0A               	movlw	10
 12668  002312  ECA1  F027         	call	_dummy_clocks
 12669                           
 12670                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 12671  002316  0E00               	movlw	0
 12672  002318  6E1E               	movwf	command@arg^0,c
 12673  00231A  0E02               	movlw	2
 12674  00231C  6E1F               	movwf	(command@arg+1)^0,c
 12675  00231E  0E00               	movlw	0
 12676  002320  6E20               	movwf	(command@arg+2)^0,c
 12677  002322  0E00               	movlw	0
 12678  002324  6E21               	movwf	(command@arg+3)^0,c
 12679  002326  0EFF               	movlw	255
 12680  002328  6E22               	movwf	command@CRC^0,c
 12681  00232A  0E50               	movlw	80
 12682  00232C  EC92  F025         	call	_command
 12683                           
 12684                           ;diskio.c: 414: proceed();
 12685  002330  ECF3  F029         	call	_proceed	;wreg free
 12686  002334                     
 12687                           ;diskio.c: 418: buff = response();
 12688  002334  ECED  F029         	call	_response	;wreg free
 12689  002338  0100               	movlb	0	; () banked
 12690  00233A  6F6B               	movwf	sdc_disk_initialize@buff& (0+255),b
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;diskio.c: 419: }while(buff!=0X00);
 12694  00233C  516B               	movf	sdc_disk_initialize@buff& (0+255),w,b
 12695  00233E  A4D8               	btfss	status,2,c
 12696  002340  D7F9               	goto	l10037
 12697  002342                     u11970:
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;diskio.c: 421: };diskio.c: 425: return stat;
 12701  002342  5162               	movf	sdc_disk_initialize@stat& (0+255),w,b
 12702                           
 12703                           ; BSR set to: 0
 12704  002344  0012               	return		;funcret
 12705  002346                     __end_of_sdc_disk_initialize:
 12706                           	callstack 0
 12707                           
 12708 ;; *************** function _sdc_reset *****************
 12709 ;; Defined at:
 12710 ;;		line 238 in file "bibliotecas/diskio.c"
 12711 ;; Parameters:    Size  Location     Type
 12712 ;;		None
 12713 ;; Auto vars:     Size  Location     Type
 12714 ;;  teste          10    0        unsigned char [10]
 12715 ;;  count           2   40[COMRAM] int 
 12716 ;;  count_nosd      2   38[COMRAM] int 
 12717 ;;  i               2    0        int 
 12718 ;;  receive         2    0        unsigned int 
 12719 ;;  buff            1   42[COMRAM] unsigned char 
 12720 ;;  stat            1    0        unsigned char 
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      void 
 12723 ;; Registers used:
 12724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12730 ;;      Params:         0       0       0       0       0       0       0       0       0
 12731 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12732 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12733 ;;      Totals:         7       0       0       0       0       0       0       0       0
 12734 ;;Total ram usage:        7 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; Hardware stack levels required when called:    6
 12737 ;; This function calls:
 12738 ;;		_command
 12739 ;;		_escreve_frase_ram_lcd
 12740 ;;		_posicao_cursor_lcd
 12741 ;;		_proceed
 12742 ;;		_response
 12743 ;; This function is called by:
 12744 ;;		_sdc_disk_initialize
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748                           	psect	text51
 12749  004512                     __ptext51:
 12750                           	callstack 0
 12751  004512                     _sdc_reset:
 12752                           	callstack 17
 12753                           
 12754                           ; BSR set to: 0
 12755                           ;incstack = 0
 12756  004512  0E00               	movlw	0
 12757  004514  6E2A               	movwf	(sdc_reset@count+1)^0,c
 12758  004516  0E00               	movlw	0
 12759  004518  6E29               	movwf	sdc_reset@count^0,c
 12760  00451A  0E00               	movlw	0
 12761  00451C  6E28               	movwf	(sdc_reset@count_nosd+1)^0,c
 12762  00451E  0E00               	movlw	0
 12763  004520  6E27               	movwf	sdc_reset@count_nosd^0,c
 12764  004522                     l9737:
 12765                           
 12766                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 12767  004522  0E00               	movlw	0
 12768  004524  6E1E               	movwf	command@arg^0,c
 12769  004526  0E00               	movlw	0
 12770  004528  6E1F               	movwf	(command@arg+1)^0,c
 12771  00452A  0E00               	movlw	0
 12772  00452C  6E20               	movwf	(command@arg+2)^0,c
 12773  00452E  0E00               	movlw	0
 12774  004530  6E21               	movwf	(command@arg+3)^0,c
 12775  004532  0E95               	movlw	149
 12776  004534  6E22               	movwf	command@CRC^0,c
 12777  004536  0E40               	movlw	64
 12778  004538  EC92  F025         	call	_command
 12779                           
 12780                           ;diskio.c: 249: proceed();
 12781  00453C  ECF3  F029         	call	_proceed	;wreg free
 12782  004540                     l9741:
 12783                           
 12784                           ;diskio.c: 251: buff = response();
 12785  004540  ECED  F029         	call	_response	;wreg free
 12786  004544  6E2B               	movwf	sdc_reset@buff^0,c
 12787                           
 12788                           ;diskio.c: 252: count++;
 12789  004546  4A29               	infsnz	sdc_reset@count^0,f,c
 12790  004548  2A2A               	incf	(sdc_reset@count+1)^0,f,c
 12791                           
 12792                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 12793  00454A  042B               	decf	sdc_reset@buff^0,w,c
 12794  00454C  B4D8               	btfsc	status,2,c
 12795  00454E  D008               	goto	u11520
 12796  004550  BE2A               	btfsc	(sdc_reset@count+1)^0,7,c
 12797  004552  D7F6               	goto	l9741
 12798  004554  502A               	movf	(sdc_reset@count+1)^0,w,c
 12799  004556  E104               	bnz	u11520
 12800  004558  0E0A               	movlw	10
 12801  00455A  5C29               	subwf	sdc_reset@count^0,w,c
 12802  00455C  A0D8               	btfss	status,0,c
 12803  00455E  D7F0               	goto	l9741
 12804  004560                     u11520:
 12805                           
 12806                           ;diskio.c: 254: count = 0;
 12807  004560  0E00               	movlw	0
 12808  004562  6E2A               	movwf	(sdc_reset@count+1)^0,c
 12809  004564  0E00               	movlw	0
 12810  004566  6E29               	movwf	sdc_reset@count^0,c
 12811                           
 12812                           ;diskio.c: 255: if(buff != 0x01)
 12813  004568  042B               	decf	sdc_reset@buff^0,w,c
 12814  00456A  B4D8               	btfsc	status,2,c
 12815  00456C  D016               	goto	l9759
 12816                           
 12817                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 12818  00456E  0E00               	movlw	0
 12819  004570  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
 12820  004572  0E01               	movlw	1
 12821  004574  EC63  F025         	call	_posicao_cursor_lcd
 12822                           
 12823                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 12824  004578  0E11               	movlw	low STR_1
 12825  00457A  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
 12826  00457C  0E62               	movlw	high STR_1
 12827  00457E  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 12828  004580  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
 12829                           
 12830                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 12831  004584  0E00               	movlw	0
 12832  004586  6E1C               	movwf	posicao_cursor_lcd@coluna^0,c
 12833  004588  0E02               	movlw	2
 12834  00458A  EC63  F025         	call	_posicao_cursor_lcd
 12835                           
 12836                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 12837  00458E  0EBE               	movlw	low STR_2
 12838  004590  6E1C               	movwf	escreve_frase_ram_lcd@buffer^0,c
 12839  004592  0E61               	movlw	high STR_2
 12840  004594  6E1D               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 12841  004596  EC13  F026         	call	_escreve_frase_ram_lcd	;wreg free
 12842  00459A                     l9759:
 12843                           
 12844                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 12845  00459A  042B               	decf	sdc_reset@buff^0,w,c
 12846  00459C  B4D8               	btfsc	status,2,c
 12847  00459E  0012               	return	
 12848  0045A0  D7C0               	goto	l9737
 12849  0045A2                     __end_of_sdc_reset:
 12850                           	callstack 0
 12851                           
 12852 ;; *************** function _posicao_cursor_lcd *****************
 12853 ;; Defined at:
 12854 ;;		line 271 in file "bibliotecas/display_lcd.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;  linha           1    wreg     unsigned char 
 12857 ;;  coluna          1   27[COMRAM] unsigned char 
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;  linha           1   28[COMRAM] unsigned char 
 12860 ;;  endereco        1   29[COMRAM] unsigned char 
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      void 
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12870 ;;      Params:         1       0       0       0       0       0       0       0       0
 12871 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12873 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12874 ;;Total ram usage:        3 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    5
 12877 ;; This function calls:
 12878 ;;		_endereco_cursor_lcd
 12879 ;; This function is called by:
 12880 ;;		_sdc_reset
 12881 ;;		_sdc_disk_initialize
 12882 ;;		_mensagem_inicial
 12883 ;;		_troca_de_tela
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           
 12887                           	psect	text52
 12888  004AC6                     __ptext52:
 12889                           	callstack 0
 12890  004AC6                     _posicao_cursor_lcd:
 12891                           	callstack 24
 12892                           
 12893                           ;incstack = 0
 12894                           ;posicao_cursor_lcd@linha stored from wreg
 12895  004AC6  6E1D               	movwf	posicao_cursor_lcd@linha^0,c
 12896                           
 12897                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 12898  004AC8  0E11               	movlw	17
 12899  004ACA  601C               	cpfslt	posicao_cursor_lcd@coluna^0,c
 12900  004ACC  0012               	return	
 12901  004ACE  D01B               	goto	l9601
 12902  004AD0                     l232:
 12903                           
 12904                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 12905  004AD0  C01C  F01E         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 12906                           
 12907                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 12908  004AD4  501E               	movf	posicao_cursor_lcd@endereco^0,w,c
 12909  004AD6  ECC7  F024         	call	_endereco_cursor_lcd
 12910                           
 12911                           ;display_lcd.c: 284: break;
 12912  004ADA  D022               	goto	l9603
 12913  004ADC                     l9585:
 12914                           
 12915                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 12916  004ADC  501C               	movf	posicao_cursor_lcd@coluna^0,w,c
 12917  004ADE  0F40               	addlw	64
 12918  004AE0  6E1E               	movwf	posicao_cursor_lcd@endereco^0,c
 12919                           
 12920                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 12921  004AE2  501E               	movf	posicao_cursor_lcd@endereco^0,w,c
 12922  004AE4  ECC7  F024         	call	_endereco_cursor_lcd
 12923                           
 12924                           ;display_lcd.c: 289: break;
 12925  004AE8  D01B               	goto	l9603
 12926  004AEA                     l9589:
 12927                           
 12928                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 12929  004AEA  501C               	movf	posicao_cursor_lcd@coluna^0,w,c
 12930  004AEC  0F14               	addlw	20
 12931  004AEE  6E1E               	movwf	posicao_cursor_lcd@endereco^0,c
 12932                           
 12933                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 12934  004AF0  501E               	movf	posicao_cursor_lcd@endereco^0,w,c
 12935  004AF2  ECC7  F024         	call	_endereco_cursor_lcd
 12936                           
 12937                           ;display_lcd.c: 294: break;
 12938  004AF6  D014               	goto	l9603
 12939  004AF8                     l9593:
 12940                           
 12941                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 12942  004AF8  501C               	movf	posicao_cursor_lcd@coluna^0,w,c
 12943  004AFA  0F54               	addlw	84
 12944  004AFC  6E1E               	movwf	posicao_cursor_lcd@endereco^0,c
 12945                           
 12946                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 12947  004AFE  501E               	movf	posicao_cursor_lcd@endereco^0,w,c
 12948  004B00  ECC7  F024         	call	_endereco_cursor_lcd
 12949                           
 12950                           ;display_lcd.c: 303: break;
 12951                           
 12952                           ;display_lcd.c: 299: break;
 12953  004B04  D00D               	goto	l9603
 12954  004B06                     l9601:
 12955  004B06  501D               	movf	posicao_cursor_lcd@linha^0,w,c
 12956                           
 12957                           ; Switch size 1, requested type "simple"
 12958                           ; Number of cases is 4, Range of values is 1 to 4
 12959                           ; switch strategies available:
 12960                           ; Name         Instructions Cycles
 12961                           ; simple_byte           13     7 (average)
 12962                           ;	Chosen strategy is simple_byte
 12963  004B08  0A01               	xorlw	1	; case 1
 12964  004B0A  B4D8               	btfsc	status,2,c
 12965  004B0C  D7E1               	goto	l232
 12966  004B0E  0A03               	xorlw	3	; case 2
 12967  004B10  B4D8               	btfsc	status,2,c
 12968  004B12  D7E4               	goto	l9585
 12969  004B14  0A01               	xorlw	1	; case 3
 12970  004B16  B4D8               	btfsc	status,2,c
 12971  004B18  D7E8               	goto	l9589
 12972  004B1A  0A07               	xorlw	7	; case 4
 12973  004B1C  B4D8               	btfsc	status,2,c
 12974  004B1E  D7EC               	goto	l9593
 12975  004B20                     l9603:
 12976                           
 12977                           ;display_lcd.c: 306: coluna++;
 12978  004B20  2A1C               	incf	posicao_cursor_lcd@coluna^0,f,c
 12979                           
 12980                           ;display_lcd.c: 307: }
 12981  004B22  0012               	return	
 12982  004B24                     __end_of_posicao_cursor_lcd:
 12983                           	callstack 0
 12984                           
 12985 ;; *************** function _endereco_cursor_lcd *****************
 12986 ;; Defined at:
 12987 ;;		line 218 in file "bibliotecas/display_lcd.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;  endereco        1    wreg     unsigned char 
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;  endereco        1   26[COMRAM] unsigned char 
 12992 ;; Return value:  Size  Location     Type
 12993 ;;                  1    wreg      void 
 12994 ;; Registers used:
 12995 ;;		wreg, status,2, status,0, cstack
 12996 ;; Tracked objects:
 12997 ;;		On entry : 0/0
 12998 ;;		On exit  : 0/0
 12999 ;;		Unchanged: 0/0
 13000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13001 ;;      Params:         0       0       0       0       0       0       0       0       0
 13002 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13004 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13005 ;;Total ram usage:        1 bytes
 13006 ;; Hardware stack levels used:    1
 13007 ;; Hardware stack levels required when called:    4
 13008 ;; This function calls:
 13009 ;;		_delay
 13010 ;; This function is called by:
 13011 ;;		_posicao_cursor_lcd
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           	psect	text53
 13016  00498E                     __ptext53:
 13017                           	callstack 0
 13018  00498E                     _endereco_cursor_lcd:
 13019                           	callstack 24
 13020                           
 13021                           ;incstack = 0
 13022                           ;endereco_cursor_lcd@endereco stored from wreg
 13023  00498E  6E1B               	movwf	endereco_cursor_lcd@endereco^0,c
 13024                           
 13025                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 13026  004990  9483               	bcf	131,2,c	;volatile
 13027                           
 13028                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 13029  004992  9283               	bcf	131,1,c	;volatile
 13030                           
 13031                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 13032  004994  9083               	bcf	131,0,c	;volatile
 13033                           
 13034                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 13035  004996  8E83               	bsf	131,7,c	;volatile
 13036                           
 13037                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 13038  004998  A81B               	btfss	endereco_cursor_lcd@endereco^0,4,c
 13039  00499A  D002               	goto	l213
 13040  00499C  8883               	bsf	131,4,c	;volatile
 13041  00499E  D001               	goto	l9439
 13042  0049A0                     l213:
 13043                           
 13044                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 13045  0049A0  9883               	bcf	131,4,c	;volatile
 13046  0049A2                     l9439:
 13047                           
 13048                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 13049  0049A2  AA1B               	btfss	endereco_cursor_lcd@endereco^0,5,c
 13050  0049A4  D002               	goto	l215
 13051  0049A6  8A83               	bsf	131,5,c	;volatile
 13052  0049A8  D001               	goto	l9443
 13053  0049AA                     l215:
 13054                           
 13055                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 13056  0049AA  9A83               	bcf	131,5,c	;volatile
 13057  0049AC                     l9443:
 13058                           
 13059                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 13060  0049AC  AC1B               	btfss	endereco_cursor_lcd@endereco^0,6,c
 13061  0049AE  D002               	goto	l217
 13062  0049B0  8C83               	bsf	131,6,c	;volatile
 13063  0049B2  D001               	goto	l218
 13064  0049B4                     l217:
 13065                           
 13066                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 13067  0049B4  9C83               	bcf	131,6,c	;volatile
 13068  0049B6                     l218:
 13069                           
 13070                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 13071  0049B6  8083               	bsf	131,0,c	;volatile
 13072                           
 13073                           ;display_lcd.c: 236: delay();
 13074  0049B8  EC7D  F029         	call	_delay	;wreg free
 13075                           
 13076                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 13077  0049BC  9083               	bcf	131,0,c	;volatile
 13078                           
 13079                           ;display_lcd.c: 238: delay();
 13080  0049BE  EC7D  F029         	call	_delay	;wreg free
 13081                           
 13082                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 13083  0049C2  A01B               	btfss	endereco_cursor_lcd@endereco^0,0,c
 13084  0049C4  D002               	goto	l219
 13085  0049C6  8883               	bsf	131,4,c	;volatile
 13086  0049C8  D001               	goto	l220
 13087  0049CA                     l219:
 13088                           
 13089                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 13090  0049CA  9883               	bcf	131,4,c	;volatile
 13091  0049CC                     l220:
 13092                           
 13093                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 13094  0049CC  A21B               	btfss	endereco_cursor_lcd@endereco^0,1,c
 13095  0049CE  D002               	goto	l221
 13096  0049D0  8A83               	bsf	131,5,c	;volatile
 13097  0049D2  D001               	goto	l222
 13098  0049D4                     l221:
 13099                           
 13100                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 13101  0049D4  9A83               	bcf	131,5,c	;volatile
 13102  0049D6                     l222:
 13103                           
 13104                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 13105  0049D6  A41B               	btfss	endereco_cursor_lcd@endereco^0,2,c
 13106  0049D8  D002               	goto	l223
 13107  0049DA  8C83               	bsf	131,6,c	;volatile
 13108  0049DC  D001               	goto	l224
 13109  0049DE                     l223:
 13110                           
 13111                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 13112  0049DE  9C83               	bcf	131,6,c	;volatile
 13113  0049E0                     l224:
 13114                           
 13115                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 13116  0049E0  A61B               	btfss	endereco_cursor_lcd@endereco^0,3,c
 13117  0049E2  D002               	goto	l225
 13118  0049E4  8E83               	bsf	131,7,c	;volatile
 13119  0049E6  D001               	goto	l226
 13120  0049E8                     l225:
 13121                           
 13122                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 13123  0049E8  9E83               	bcf	131,7,c	;volatile
 13124  0049EA                     l226:
 13125                           
 13126                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 13127  0049EA  8083               	bsf	131,0,c	;volatile
 13128                           
 13129                           ;display_lcd.c: 252: delay();
 13130  0049EC  EC7D  F029         	call	_delay	;wreg free
 13131                           
 13132                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 13133  0049F0  9083               	bcf	131,0,c	;volatile
 13134                           
 13135                           ;display_lcd.c: 254: delay();
 13136  0049F2  EC7D  F029         	call	_delay	;wreg free
 13137  0049F6  0012               	return		;funcret
 13138  0049F8                     __end_of_endereco_cursor_lcd:
 13139                           	callstack 0
 13140                           
 13141 ;; *************** function _escreve_frase_ram_lcd *****************
 13142 ;; Defined at:
 13143 ;;		line 445 in file "bibliotecas/display_lcd.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;  buffer          2   27[COMRAM] PTR unsigned char 
 13146 ;;		 -> STR_33(2), STR_32(7), STR_31(14), STR_30(8), 
 13147 ;;		 -> STR_29(17), STR_28(8), STR_27(16), STR_26(4), 
 13148 ;;		 -> STR_25(4), STR_24(5), STR_23(5), mensagem_inicial@msg_dois(17), 
 13149 ;;		 -> mensagem_inicial@msg_linha_um(17), NULL(0), STR_12(9), STR_11(10), 
 13150 ;;		 -> STR_10(10), STR_9(14), STR_8(21), STR_7(15), 
 13151 ;;		 -> rawFix(2), rawLongitude(13), rawLatitude(13), escreve_inteiro_lcd@texto(7), 
 13152 ;;		 -> STR_4(11), STR_3(10), STR_2(16), STR_1(11), 
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;		None
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1    wreg      void 
 13157 ;; Registers used:
 13158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13164 ;;      Params:         2       0       0       0       0       0       0       0       0
 13165 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13167 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13168 ;;Total ram usage:        2 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:    5
 13171 ;; This function calls:
 13172 ;;		_escreve_caractere_lcd
 13173 ;; This function is called by:
 13174 ;;		_sdc_reset
 13175 ;;		_sdc_disk_initialize
 13176 ;;		_escreve_inteiro_lcd
 13177 ;;		_mensagem_inicial
 13178 ;;		_troca_de_tela
 13179 ;; This function uses a non-reentrant model
 13180 ;;
 13181                           
 13182                           	psect	text54
 13183  004C26                     __ptext54:
 13184                           	callstack 0
 13185  004C26                     _escreve_frase_ram_lcd:
 13186                           	callstack 24
 13187                           
 13188                           ;display_lcd.c: 447: while(*buffer)
 13189                           
 13190                           ;incstack = 0
 13191  004C26  D014               	goto	l9613
 13192  004C28                     l9609:
 13193                           
 13194                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 13195  004C28  C01C  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 13196  004C2C  C01D  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 13197  004C30  6AF8               	clrf	tblptru,c
 13198  004C32  0E07               	movlw	(high __ramtop+-1)
 13199  004C34  64F7               	cpfsgt	tblptrh,c
 13200  004C36  D003               	bra	u11297
 13201  004C38  0008               	tblrd		*
 13202  004C3A  50F5               	movf	tablat,w,c
 13203  004C3C  D005               	bra	u11290
 13204  004C3E                     u11297:
 13205  004C3E  CFF6 FFE1          	movff	tblptrl,fsr1l
 13206  004C42  CFF7 FFE2          	movff	tblptrh,fsr1h
 13207  004C46  50E7               	movf	indf1,w,c
 13208  004C48                     u11290:
 13209  004C48  EC56  F024         	call	_escreve_caractere_lcd
 13210                           
 13211                           ;display_lcd.c: 450: buffer++;
 13212  004C4C  4A1C               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 13213  004C4E  2A1D               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 13214  004C50                     l9613:
 13215  004C50  C01C  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 13216  004C54  C01D  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 13217  004C58  6AF8               	clrf	tblptru,c
 13218  004C5A  0E07               	movlw	(high __ramtop+-1)
 13219  004C5C  64F7               	cpfsgt	tblptrh,c
 13220  004C5E  D003               	bra	u11307
 13221  004C60  0008               	tblrd		*
 13222  004C62  50F5               	movf	tablat,w,c
 13223  004C64  D005               	bra	u11300
 13224  004C66                     u11307:
 13225  004C66  CFF6 FFE1          	movff	tblptrl,fsr1l
 13226  004C6A  CFF7 FFE2          	movff	tblptrh,fsr1h
 13227  004C6E  50E7               	movf	indf1,w,c
 13228  004C70                     u11300:
 13229  004C70  0900               	iorlw	0
 13230  004C72  B4D8               	btfsc	status,2,c
 13231  004C74  0012               	return	
 13232  004C76  D7D8               	goto	l9609
 13233  004C78                     __end_of_escreve_frase_ram_lcd:
 13234                           	callstack 0
 13235                           
 13236 ;; *************** function _escreve_caractere_lcd *****************
 13237 ;; Defined at:
 13238 ;;		line 323 in file "bibliotecas/display_lcd.c"
 13239 ;; Parameters:    Size  Location     Type
 13240 ;;  data            1    wreg     unsigned char 
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;  data            1   26[COMRAM] unsigned char 
 13243 ;; Return value:  Size  Location     Type
 13244 ;;                  1    wreg      void 
 13245 ;; Registers used:
 13246 ;;		wreg, status,2, status,0, cstack
 13247 ;; Tracked objects:
 13248 ;;		On entry : 0/0
 13249 ;;		On exit  : 0/0
 13250 ;;		Unchanged: 0/0
 13251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13252 ;;      Params:         0       0       0       0       0       0       0       0       0
 13253 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13254 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13255 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13256 ;;Total ram usage:        1 bytes
 13257 ;; Hardware stack levels used:    1
 13258 ;; Hardware stack levels required when called:    4
 13259 ;; This function calls:
 13260 ;;		_delay
 13261 ;; This function is called by:
 13262 ;;		_escreve_frase_ram_lcd
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           	psect	text55
 13267  0048AC                     __ptext55:
 13268                           	callstack 0
 13269  0048AC                     _escreve_caractere_lcd:
 13270                           	callstack 24
 13271                           
 13272                           ;incstack = 0
 13273                           ;escreve_caractere_lcd@data stored from wreg
 13274  0048AC  6E1B               	movwf	escreve_caractere_lcd@data^0,c
 13275                           
 13276                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 13277  0048AE  9483               	bcf	131,2,c	;volatile
 13278                           
 13279                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 13280  0048B0  8283               	bsf	131,1,c	;volatile
 13281                           
 13282                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 13283  0048B2  9083               	bcf	131,0,c	;volatile
 13284                           
 13285                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 13286  0048B4  A81B               	btfss	escreve_caractere_lcd@data^0,4,c
 13287  0048B6  D002               	goto	l242
 13288  0048B8  8883               	bsf	131,4,c	;volatile
 13289  0048BA  D001               	goto	l9471
 13290  0048BC                     l242:
 13291                           
 13292                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 13293  0048BC  9883               	bcf	131,4,c	;volatile
 13294  0048BE                     l9471:
 13295                           
 13296                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 13297  0048BE  AA1B               	btfss	escreve_caractere_lcd@data^0,5,c
 13298  0048C0  D002               	goto	l244
 13299  0048C2  8A83               	bsf	131,5,c	;volatile
 13300  0048C4  D001               	goto	l9475
 13301  0048C6                     l244:
 13302                           
 13303                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 13304  0048C6  9A83               	bcf	131,5,c	;volatile
 13305  0048C8                     l9475:
 13306                           
 13307                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 13308  0048C8  AC1B               	btfss	escreve_caractere_lcd@data^0,6,c
 13309  0048CA  D002               	goto	l246
 13310  0048CC  8C83               	bsf	131,6,c	;volatile
 13311  0048CE  D001               	goto	l9479
 13312  0048D0                     l246:
 13313                           
 13314                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 13315  0048D0  9C83               	bcf	131,6,c	;volatile
 13316  0048D2                     l9479:
 13317                           
 13318                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 13319  0048D2  AE1B               	btfss	escreve_caractere_lcd@data^0,7,c
 13320  0048D4  D002               	goto	l248
 13321  0048D6  8E83               	bsf	131,7,c	;volatile
 13322  0048D8  D001               	goto	l249
 13323  0048DA                     l248:
 13324                           
 13325                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 13326  0048DA  9E83               	bcf	131,7,c	;volatile
 13327  0048DC                     l249:
 13328                           
 13329                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 13330  0048DC  8083               	bsf	131,0,c	;volatile
 13331                           
 13332                           ;display_lcd.c: 342: delay();
 13333  0048DE  EC7D  F029         	call	_delay	;wreg free
 13334                           
 13335                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 13336  0048E2  9083               	bcf	131,0,c	;volatile
 13337                           
 13338                           ;display_lcd.c: 344: delay();
 13339  0048E4  EC7D  F029         	call	_delay	;wreg free
 13340                           
 13341                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 13342  0048E8  A01B               	btfss	escreve_caractere_lcd@data^0,0,c
 13343  0048EA  D002               	goto	l250
 13344  0048EC  8883               	bsf	131,4,c	;volatile
 13345  0048EE  D001               	goto	l251
 13346  0048F0                     l250:
 13347                           
 13348                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 13349  0048F0  9883               	bcf	131,4,c	;volatile
 13350  0048F2                     l251:
 13351                           
 13352                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 13353  0048F2  A21B               	btfss	escreve_caractere_lcd@data^0,1,c
 13354  0048F4  D002               	goto	l252
 13355  0048F6  8A83               	bsf	131,5,c	;volatile
 13356  0048F8  D001               	goto	l253
 13357  0048FA                     l252:
 13358                           
 13359                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 13360  0048FA  9A83               	bcf	131,5,c	;volatile
 13361  0048FC                     l253:
 13362                           
 13363                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 13364  0048FC  A41B               	btfss	escreve_caractere_lcd@data^0,2,c
 13365  0048FE  D002               	goto	l254
 13366  004900  8C83               	bsf	131,6,c	;volatile
 13367  004902  D001               	goto	l255
 13368  004904                     l254:
 13369                           
 13370                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 13371  004904  9C83               	bcf	131,6,c	;volatile
 13372  004906                     l255:
 13373                           
 13374                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 13375  004906  A61B               	btfss	escreve_caractere_lcd@data^0,3,c
 13376  004908  D002               	goto	l256
 13377  00490A  8E83               	bsf	131,7,c	;volatile
 13378  00490C  D001               	goto	l257
 13379  00490E                     l256:
 13380                           
 13381                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 13382  00490E  9E83               	bcf	131,7,c	;volatile
 13383  004910                     l257:
 13384                           
 13385                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 13386  004910  8083               	bsf	131,0,c	;volatile
 13387                           
 13388                           ;display_lcd.c: 359: delay();
 13389  004912  EC7D  F029         	call	_delay	;wreg free
 13390                           
 13391                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 13392  004916  9083               	bcf	131,0,c	;volatile
 13393                           
 13394                           ;display_lcd.c: 361: delay();
 13395  004918  EC7D  F029         	call	_delay	;wreg free
 13396  00491C  0012               	return		;funcret
 13397  00491E                     __end_of_escreve_caractere_lcd:
 13398                           	callstack 0
 13399                           
 13400 ;; *************** function _delay *****************
 13401 ;; Defined at:
 13402 ;;		line 45 in file "bibliotecas/display_lcd.c"
 13403 ;; Parameters:    Size  Location     Type
 13404 ;;		None
 13405 ;; Auto vars:     Size  Location     Type
 13406 ;;  contador_int    1   25[COMRAM] unsigned char 
 13407 ;;  contador_ext    1   24[COMRAM] unsigned char 
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  1    wreg      void 
 13410 ;; Registers used:
 13411 ;;		wreg, status,2, status,0
 13412 ;; Tracked objects:
 13413 ;;		On entry : 0/0
 13414 ;;		On exit  : 0/0
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13417 ;;      Params:         0       0       0       0       0       0       0       0       0
 13418 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13420 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13421 ;;Total ram usage:        2 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:    3
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		_init_lcd
 13428 ;;		_escreve_cmd_lcd
 13429 ;;		_endereco_cursor_lcd
 13430 ;;		_escreve_caractere_lcd
 13431 ;; This function uses a non-reentrant model
 13432 ;;
 13433                           
 13434                           	psect	text56
 13435  0052FA                     __ptext56:
 13436                           	callstack 0
 13437  0052FA                     _delay:
 13438                           	callstack 24
 13439                           
 13440                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 13441                           
 13442                           ;incstack = 0
 13443  0052FA  0E00               	movlw	0
 13444  0052FC  6E19               	movwf	delay@contador_ext^0,c
 13445  0052FE                     l181:
 13446                           
 13447                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 13448  0052FE  F000               	nop	
 13449                           
 13450                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 13451  005300  0E00               	movlw	0
 13452  005302  6E1A               	movwf	delay@contador_int^0,c
 13453  005304                     l183:
 13454                           
 13455                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 13456  005304  F000               	nop	
 13457  005306  2A1A               	incf	delay@contador_int^0,f,c
 13458  005308  0E31               	movlw	49
 13459  00530A  641A               	cpfsgt	delay@contador_int^0,c
 13460  00530C  D7FB               	goto	l183
 13461  00530E  2A19               	incf	delay@contador_ext^0,f,c
 13462  005310  0E63               	movlw	99
 13463  005312  6419               	cpfsgt	delay@contador_ext^0,c
 13464  005314  D7F4               	goto	l181
 13465  005316  0012               	return	
 13466  005318                     __end_of_delay:
 13467                           	callstack 0
 13468                           
 13469 ;; *************** function _check_fs *****************
 13470 ;; Defined at:
 13471 ;;		line 624 in file "bibliotecas/tff.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;  sect            4   19[BANK0 ] unsigned long 
 13474 ;; Auto vars:     Size  Location     Type
 13475 ;;  fs              2   23[BANK0 ] PTR struct _FATFS
 13476 ;;		 -> NULL(0), fs(544), 
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  1    wreg      unsigned char 
 13479 ;; Registers used:
 13480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13481 ;; Tracked objects:
 13482 ;;		On entry : 3F/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13486 ;;      Params:         0       4       0       0       0       0       0       0       0
 13487 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13488 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13489 ;;      Totals:         2       6       0       0       0       0       0       0       0
 13490 ;;Total ram usage:        8 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; Hardware stack levels required when called:    8
 13493 ;; This function calls:
 13494 ;;		_disk_read
 13495 ;;		_memcmp
 13496 ;; This function is called by:
 13497 ;;		_auto_mount
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501                           	psect	text57
 13502  0046B8                     __ptext57:
 13503                           	callstack 0
 13504  0046B8                     _check_fs:
 13505                           	callstack 17
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;tff.c: 628: FATFS *fs = FatFs;
 13509                           
 13510                           ;incstack = 0
 13511  0046B8  C039  F077         	movff	_FatFs,check_fs@fs
 13512  0046BC  C03A  F078         	movff	_FatFs+1,check_fs@fs+1
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 13516  0046C0  0E20               	movlw	32
 13517  0046C2  2577               	addwf	check_fs@fs& (0+255),w,b
 13518  0046C4  6F68               	movwf	disk_read@buff& (0+255),b
 13519  0046C6  0E00               	movlw	0
 13520  0046C8  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13521  0046CA  6F69               	movwf	(disk_read@buff+1)& (0+255),b
 13522  0046CC  C073  F06A         	movff	check_fs@sect,disk_read@sector
 13523  0046D0  C074  F06B         	movff	check_fs@sect+1,disk_read@sector+1
 13524  0046D4  C075  F06C         	movff	check_fs@sect+2,disk_read@sector+2
 13525  0046D8  C076  F06D         	movff	check_fs@sect+3,disk_read@sector+3
 13526  0046DC  0E01               	movlw	1
 13527  0046DE  6F6E               	movwf	disk_read@count& (0+255),b
 13528  0046E0  0E00               	movlw	0
 13529  0046E2  EC8F  F024         	call	_disk_read
 13530  0046E6  0900               	iorlw	0
 13531  0046E8  B4D8               	btfsc	status,2,c
 13532  0046EA  D002               	goto	l10297
 13533  0046EC                     u12330:
 13534  0046EC                     l10293:
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;tff.c: 631: return 2;
 13538  0046EC  0E02               	movlw	2
 13539  0046EE  0012               	return	
 13540  0046F0                     l10297:
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 13544  0046F0  EE22 F01E          	lfsr	2,542
 13545  0046F4  5177               	movf	check_fs@fs& (0+255),w,b
 13546  0046F6  26D9               	addwf	fsr2l,f,c
 13547  0046F8  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 13548  0046FA  22DA               	addwfc	fsr2h,f,c
 13549  0046FC  0E55               	movlw	85
 13550  0046FE  18DE               	xorwf	postinc2,w,c
 13551  004700  E1F5               	bnz	l10293
 13552  004702  0EAA               	movlw	170
 13553  004704  18DE               	xorwf	postinc2,w,c
 13554  004706  A4D8               	btfss	status,2,c
 13555  004708  D7F1               	goto	u12330
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 13559  00470A  0E56               	movlw	86
 13560  00470C  2577               	addwf	check_fs@fs& (0+255),w,b
 13561  00470E  6E19               	movwf	memcmp@s1^0,c
 13562  004710  0E00               	movlw	0
 13563  004712  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13564  004714  6E1A               	movwf	(memcmp@s1+1)^0,c
 13565  004716  0E75               	movlw	low STR_21
 13566  004718  6E1B               	movwf	memcmp@s2^0,c
 13567  00471A  0E62               	movlw	high STR_21
 13568  00471C  6E1C               	movwf	(memcmp@s2+1)^0,c
 13569  00471E  0E00               	movlw	0
 13570  004720  6E1E               	movwf	(memcmp@n+1)^0,c
 13571  004722  0E03               	movlw	3
 13572  004724  6E1D               	movwf	memcmp@n^0,c
 13573  004726  EC40  F022         	call	_memcmp	;wreg free
 13574  00472A  5019               	movf	?_memcmp^0,w,c
 13575  00472C  101A               	iorwf	(?_memcmp+1)^0,w,c
 13576  00472E  A4D8               	btfss	status,2,c
 13577  004730  D002               	goto	l10309
 13578                           
 13579                           ;tff.c: 636: return 0;
 13580  004732  0E00               	movlw	0
 13581  004734  0012               	return	
 13582  004736                     l10309:
 13583                           
 13584                           ;tff.c: 641: return 1;
 13585  004736  0E01               	movlw	1
 13586  004738  0012               	return		;funcret
 13587  00473A                     __end_of_check_fs:
 13588                           	callstack 0
 13589                           
 13590 ;; *************** function _memcmp *****************
 13591 ;; Defined at:
 13592 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 13593 ;; Parameters:    Size  Location     Type
 13594 ;;  s1              2   24[COMRAM] PTR const void 
 13595 ;;		 -> fs.win(512), NULL(0), fs(544), 
 13596 ;;  s2              2   26[COMRAM] PTR const void 
 13597 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_21(4), 
 13598 ;;  n               2   28[COMRAM] unsigned int 
 13599 ;; Auto vars:     Size  Location     Type
 13600 ;;		None
 13601 ;; Return value:  Size  Location     Type
 13602 ;;                  2   24[COMRAM] int 
 13603 ;; Registers used:
 13604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13605 ;; Tracked objects:
 13606 ;;		On entry : 3F/0
 13607 ;;		On exit  : 0/0
 13608 ;;		Unchanged: 0/0
 13609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13610 ;;      Params:         6       0       0       0       0       0       0       0       0
 13611 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13612 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13613 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13614 ;;Total ram usage:        8 bytes
 13615 ;; Hardware stack levels used:    1
 13616 ;; Hardware stack levels required when called:    3
 13617 ;; This function calls:
 13618 ;;		Nothing
 13619 ;; This function is called by:
 13620 ;;		_trace_path
 13621 ;;		_check_fs
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text58
 13626  004480                     __ptext58:
 13627                           	callstack 0
 13628  004480                     _memcmp:
 13629                           	callstack 22
 13630                           
 13631                           ; BSR set to: 0
 13632                           
 13633                           ;incstack = 0
 13634  004480  D03B               	goto	l10091
 13635  004482                     l10083:
 13636  004482  C019  FFD9         	movff	memcmp@s1,fsr2l
 13637  004486  C01A  FFDA         	movff	memcmp@s1+1,fsr2h
 13638  00448A  50DF               	movf	indf2,w,c
 13639  00448C  6E1F               	movwf	??_memcmp^0,c
 13640  00448E  C01B  FFF6         	movff	memcmp@s2,tblptrl
 13641  004492  C01C  FFF7         	movff	memcmp@s2+1,tblptrh
 13642  004496  6AF8               	clrf	tblptru,c
 13643  004498  0E07               	movlw	(high __ramtop+-1)
 13644  00449A  64F7               	cpfsgt	tblptrh,c
 13645  00449C  D003               	bra	u11987
 13646  00449E  0008               	tblrd		*
 13647  0044A0  50F5               	movf	tablat,w,c
 13648  0044A2  D005               	bra	u11980
 13649  0044A4                     u11987:
 13650  0044A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13651  0044A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13652  0044AC  50E7               	movf	indf1,w,c
 13653  0044AE                     u11980:
 13654  0044AE  181F               	xorwf	??_memcmp^0,w,c
 13655  0044B0  B4D8               	btfsc	status,2,c
 13656  0044B2  D01E               	goto	l10089
 13657  0044B4  C019  FFD9         	movff	memcmp@s1,fsr2l
 13658  0044B8  C01A  FFDA         	movff	memcmp@s1+1,fsr2h
 13659  0044BC  50DF               	movf	indf2,w,c
 13660  0044BE  6E1F               	movwf	??_memcmp^0,c
 13661  0044C0  C01B  FFF6         	movff	memcmp@s2,tblptrl
 13662  0044C4  C01C  FFF7         	movff	memcmp@s2+1,tblptrh
 13663  0044C8  6AF8               	clrf	tblptru,c
 13664  0044CA  0E07               	movlw	(high __ramtop+-1)
 13665  0044CC  64F7               	cpfsgt	tblptrh,c
 13666  0044CE  D003               	bra	u12007
 13667  0044D0  0008               	tblrd		*
 13668  0044D2  50F5               	movf	tablat,w,c
 13669  0044D4  D005               	bra	u12000
 13670  0044D6                     u12007:
 13671  0044D6  CFF6 FFE1          	movff	tblptrl,fsr1l
 13672  0044DA  CFF7 FFE2          	movff	tblptrh,fsr1h
 13673  0044DE  50E7               	movf	indf1,w,c
 13674  0044E0                     u12000:
 13675  0044E0  6E20               	movwf	(??_memcmp+1)^0,c
 13676  0044E2  5020               	movf	(??_memcmp+1)^0,w,c
 13677  0044E4  5C1F               	subwf	??_memcmp^0,w,c
 13678  0044E6  6E19               	movwf	?_memcmp^0,c
 13679  0044E8  6A1A               	clrf	(?_memcmp+1)^0,c
 13680  0044EA  A0D8               	btfss	status,0,c
 13681  0044EC  061A               	decf	(?_memcmp+1)^0,f,c
 13682  0044EE  0012               	return	
 13683  0044F0                     l10089:
 13684  0044F0  4A19               	infsnz	memcmp@s1^0,f,c
 13685  0044F2  2A1A               	incf	(memcmp@s1+1)^0,f,c
 13686  0044F4  4A1B               	infsnz	memcmp@s2^0,f,c
 13687  0044F6  2A1C               	incf	(memcmp@s2+1)^0,f,c
 13688  0044F8                     l10091:
 13689  0044F8  061D               	decf	memcmp@n^0,f,c
 13690  0044FA  A0D8               	btfss	status,0,c
 13691  0044FC  061E               	decf	(memcmp@n+1)^0,f,c
 13692  0044FE  281D               	incf	memcmp@n^0,w,c
 13693  004500  E1C0               	bnz	l10083
 13694  004502  281E               	incf	(memcmp@n+1)^0,w,c
 13695  004504  A4D8               	btfss	status,2,c
 13696  004506  D7BD               	goto	l10083
 13697  004508  0E00               	movlw	0
 13698  00450A  6E1A               	movwf	(?_memcmp+1)^0,c
 13699  00450C  0E00               	movlw	0
 13700  00450E  6E19               	movwf	?_memcmp^0,c
 13701  004510  0012               	return		;funcret
 13702  004512                     __end_of_memcmp:
 13703                           	callstack 0
 13704                           
 13705 ;; *************** function ___lmul *****************
 13706 ;; Defined at:
 13707 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 13708 ;; Parameters:    Size  Location     Type
 13709 ;;  multiplier      4   24[COMRAM] unsigned long 
 13710 ;;  multiplicand    4   28[COMRAM] unsigned long 
 13711 ;; Auto vars:     Size  Location     Type
 13712 ;;  product         4   32[COMRAM] unsigned long 
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  4   24[COMRAM] unsigned long 
 13715 ;; Registers used:
 13716 ;;		wreg, status,2, status,0
 13717 ;; Tracked objects:
 13718 ;;		On entry : 3F/0
 13719 ;;		On exit  : 3F/0
 13720 ;;		Unchanged: 3F/0
 13721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13722 ;;      Params:         8       0       0       0       0       0       0       0       0
 13723 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13725 ;;      Totals:        12       0       0       0       0       0       0       0       0
 13726 ;;Total ram usage:       12 bytes
 13727 ;; Hardware stack levels used:    1
 13728 ;; Hardware stack levels required when called:    3
 13729 ;; This function calls:
 13730 ;;		Nothing
 13731 ;; This function is called by:
 13732 ;;		_clust2sect
 13733 ;;		_auto_mount
 13734 ;; This function uses a non-reentrant model
 13735 ;;
 13736                           
 13737                           	psect	text59
 13738  004B7E                     __ptext59:
 13739                           	callstack 0
 13740  004B7E                     ___lmul:
 13741                           	callstack 19
 13742                           
 13743                           ; BSR set to: 0
 13744                           
 13745                           ;incstack = 0
 13746  004B7E  0E00               	movlw	0
 13747  004B80  6E21               	movwf	___lmul@product^0,c
 13748  004B82  0E00               	movlw	0
 13749  004B84  6E22               	movwf	(___lmul@product+1)^0,c
 13750  004B86  0E00               	movlw	0
 13751  004B88  6E23               	movwf	(___lmul@product+2)^0,c
 13752  004B8A  0E00               	movlw	0
 13753  004B8C  6E24               	movwf	(___lmul@product+3)^0,c
 13754  004B8E                     l9727:
 13755                           
 13756                           ; BSR set to: 0
 13757  004B8E  A019               	btfss	___lmul@multiplier^0,0,c
 13758  004B90  D008               	goto	l9731
 13759                           
 13760                           ; BSR set to: 0
 13761  004B92  501D               	movf	___lmul@multiplicand^0,w,c
 13762  004B94  2621               	addwf	___lmul@product^0,f,c
 13763  004B96  501E               	movf	(___lmul@multiplicand+1)^0,w,c
 13764  004B98  2222               	addwfc	(___lmul@product+1)^0,f,c
 13765  004B9A  501F               	movf	(___lmul@multiplicand+2)^0,w,c
 13766  004B9C  2223               	addwfc	(___lmul@product+2)^0,f,c
 13767  004B9E  5020               	movf	(___lmul@multiplicand+3)^0,w,c
 13768  004BA0  2224               	addwfc	(___lmul@product+3)^0,f,c
 13769  004BA2                     l9731:
 13770                           
 13771                           ; BSR set to: 0
 13772  004BA2  90D8               	bcf	status,0,c
 13773  004BA4  361D               	rlcf	___lmul@multiplicand^0,f,c
 13774  004BA6  361E               	rlcf	(___lmul@multiplicand+1)^0,f,c
 13775  004BA8  361F               	rlcf	(___lmul@multiplicand+2)^0,f,c
 13776  004BAA  3620               	rlcf	(___lmul@multiplicand+3)^0,f,c
 13777                           
 13778                           ; BSR set to: 0
 13779  004BAC  90D8               	bcf	status,0,c
 13780  004BAE  321C               	rrcf	(___lmul@multiplier+3)^0,f,c
 13781  004BB0  321B               	rrcf	(___lmul@multiplier+2)^0,f,c
 13782  004BB2  321A               	rrcf	(___lmul@multiplier+1)^0,f,c
 13783  004BB4  3219               	rrcf	___lmul@multiplier^0,f,c
 13784  004BB6  5019               	movf	___lmul@multiplier^0,w,c
 13785  004BB8  101A               	iorwf	(___lmul@multiplier+1)^0,w,c
 13786  004BBA  101B               	iorwf	(___lmul@multiplier+2)^0,w,c
 13787  004BBC  101C               	iorwf	(___lmul@multiplier+3)^0,w,c
 13788  004BBE  A4D8               	btfss	status,2,c
 13789  004BC0  D7E6               	goto	l9727
 13790                           
 13791                           ; BSR set to: 0
 13792  004BC2  C021  F019         	movff	___lmul@product,?___lmul
 13793  004BC6  C022  F01A         	movff	___lmul@product+1,?___lmul+1
 13794  004BCA  C023  F01B         	movff	___lmul@product+2,?___lmul+2
 13795  004BCE  C024  F01C         	movff	___lmul@product+3,?___lmul+3
 13796                           
 13797                           ; BSR set to: 0
 13798  004BD2  0012               	return		;funcret
 13799  004BD4                     __end_of___lmul:
 13800                           	callstack 0
 13801                           
 13802 ;; *************** function _f_mount *****************
 13803 ;; Defined at:
 13804 ;;		line 794 in file "bibliotecas/tff.c"
 13805 ;; Parameters:    Size  Location     Type
 13806 ;;  drv             1    wreg     unsigned char 
 13807 ;;  fs              2   24[COMRAM] PTR struct _FATFS
 13808 ;;		 -> fs(544), 
 13809 ;; Auto vars:     Size  Location     Type
 13810 ;;  drv             1   26[COMRAM] unsigned char 
 13811 ;; Return value:  Size  Location     Type
 13812 ;;                  1    wreg      enum E3236
 13813 ;; Registers used:
 13814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13815 ;; Tracked objects:
 13816 ;;		On entry : 3F/0
 13817 ;;		On exit  : 0/0
 13818 ;;		Unchanged: 0/0
 13819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13820 ;;      Params:         2       0       0       0       0       0       0       0       0
 13821 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13822 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13823 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13824 ;;Total ram usage:        3 bytes
 13825 ;; Hardware stack levels used:    1
 13826 ;; Hardware stack levels required when called:    3
 13827 ;; This function calls:
 13828 ;;		Nothing
 13829 ;; This function is called by:
 13830 ;;		_escrita_sdcard
 13831 ;; This function uses a non-reentrant model
 13832 ;;
 13833                           
 13834                           	psect	text60
 13835  004D62                     __ptext60:
 13836                           	callstack 0
 13837  004D62                     _f_mount:
 13838                           	callstack 24
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;incstack = 0
 13842                           ;f_mount@drv stored from wreg
 13843  004D62  6E1B               	movwf	f_mount@drv^0,c
 13844                           
 13845                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 13846  004D64  501B               	movf	f_mount@drv^0,w,c
 13847  004D66  B4D8               	btfsc	status,2,c
 13848  004D68  D002               	goto	l7589
 13849  004D6A  0E05               	movlw	5
 13850  004D6C  0012               	return	
 13851  004D6E                     l7589:
 13852                           
 13853                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 13854  004D6E  5039               	movf	_FatFs^0,w,c
 13855  004D70  103A               	iorwf	(_FatFs+1)^0,w,c
 13856  004D72  B4D8               	btfsc	status,2,c
 13857  004D74  D008               	goto	l7593
 13858  004D76  EE20 F01C          	lfsr	2,28
 13859  004D7A  5039               	movf	_FatFs^0,w,c
 13860  004D7C  26D9               	addwf	fsr2l,f,c
 13861  004D7E  503A               	movf	(_FatFs+1)^0,w,c
 13862  004D80  22DA               	addwfc	fsr2h,f,c
 13863  004D82  0E00               	movlw	0
 13864  004D84  6EDF               	movwf	indf2,c
 13865  004D86                     l7593:
 13866                           
 13867                           ;tff.c: 803: FatFs = fs;
 13868  004D86  C019  F039         	movff	f_mount@fs,_FatFs
 13869  004D8A  C01A  F03A         	movff	f_mount@fs+1,_FatFs+1
 13870                           
 13871                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 13872  004D8E  5019               	movf	f_mount@fs^0,w,c
 13873  004D90  101A               	iorwf	(f_mount@fs+1)^0,w,c
 13874  004D92  B4D8               	btfsc	status,2,c
 13875  004D94  D008               	goto	l7599
 13876  004D96  EE20 F01C          	lfsr	2,28
 13877  004D9A  5019               	movf	f_mount@fs^0,w,c
 13878  004D9C  26D9               	addwf	fsr2l,f,c
 13879  004D9E  501A               	movf	(f_mount@fs+1)^0,w,c
 13880  004DA0  22DA               	addwfc	fsr2h,f,c
 13881  004DA2  0E00               	movlw	0
 13882  004DA4  6EDF               	movwf	indf2,c
 13883  004DA6                     l7599:
 13884                           
 13885                           ;tff.c: 806: return FR_OK;
 13886  004DA6  0E00               	movlw	0
 13887  004DA8  0012               	return		;funcret
 13888  004DAA                     __end_of_f_mount:
 13889                           	callstack 0
 13890                           
 13891 ;; *************** function _f_lseek *****************
 13892 ;; Defined at:
 13893 ;;		line 1140 in file "bibliotecas/tff.c"
 13894 ;; Parameters:    Size  Location     Type
 13895 ;;  fp              2   78[BANK0 ] PTR struct _FIL
 13896 ;;		 -> fil(28), 
 13897 ;;  ofs             4   80[BANK0 ] unsigned long 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  csize           4  105[BANK0 ] unsigned long 
 13900 ;;  ifptr           4  101[BANK0 ] unsigned long 
 13901 ;;  clust           2  109[BANK0 ] unsigned short 
 13902 ;;  res             1  100[BANK0 ] enum E155
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1    wreg      enum E3236
 13905 ;; Registers used:
 13906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13907 ;; Tracked objects:
 13908 ;;		On entry : 3F/0
 13909 ;;		On exit  : 3F/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13912 ;;      Params:         0       6       0       0       0       0       0       0       0
 13913 ;;      Locals:         0      11       0       0       0       0       0       0       0
 13914 ;;      Temps:          0      16       0       0       0       0       0       0       0
 13915 ;;      Totals:         0      33       0       0       0       0       0       0       0
 13916 ;;Total ram usage:       33 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:   11
 13919 ;; This function calls:
 13920 ;;		___lldiv
 13921 ;;		_create_chain
 13922 ;;		_get_cluster
 13923 ;;		_validate
 13924 ;; This function is called by:
 13925 ;;		_escrita_sdcard
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text61
 13930  0011D0                     __ptext61:
 13931                           	callstack 0
 13932  0011D0                     _f_lseek:
 13933                           	callstack 16
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 13937                           
 13938                           ;incstack = 0
 13939  0011D0  EE20 F004          	lfsr	2,4
 13940  0011D4  51AE               	movf	f_lseek@fp& (0+255),w,b
 13941  0011D6  26D9               	addwf	fsr2l,f,c
 13942  0011D8  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 13943  0011DA  22DA               	addwfc	fsr2h,f,c
 13944  0011DC  CFDE F01F          	movff	postinc2,validate@fs
 13945  0011E0  CFDD F020          	movff	postdec2,validate@fs+1
 13946  0011E4  C0AE  FFD9         	movff	f_lseek@fp,fsr2l
 13947  0011E8  C0AF  FFDA         	movff	f_lseek@fp+1,fsr2h
 13948  0011EC  CFDE F021          	movff	postinc2,validate@id
 13949  0011F0  CFDD F022          	movff	postdec2,validate@id+1
 13950  0011F4  ECD5  F026         	call	_validate	;wreg free
 13951  0011F8  0100               	movlb	0	; () banked
 13952  0011FA  6FC4               	movwf	f_lseek@res& (0+255),b
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;tff.c: 1151: if (res != FR_OK) return res;
 13956  0011FC  51C4               	movf	f_lseek@res& (0+255),w,b
 13957  0011FE  A4D8               	btfss	status,2,c
 13958  001200  0012               	return	
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 13962  001202  EE20 F002          	lfsr	2,2
 13963  001206  51AE               	movf	f_lseek@fp& (0+255),w,b
 13964  001208  26D9               	addwf	fsr2l,f,c
 13965  00120A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 13966  00120C  22DA               	addwfc	fsr2h,f,c
 13967  00120E  BEDF               	btfsc	indf2,7,c
 13968  001210  0012               	return	
 13969                           
 13970                           ; BSR set to: 0
 13971                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 13972  001212  EE20 F00A          	lfsr	2,10
 13973  001216  51AE               	movf	f_lseek@fp& (0+255),w,b
 13974  001218  26D9               	addwf	fsr2l,f,c
 13975  00121A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 13976  00121C  22DA               	addwfc	fsr2h,f,c
 13977  00121E  51B0               	movf	f_lseek@ofs& (0+255),w,b
 13978  001220  5CDE               	subwf	postinc2,w,c
 13979  001222  51B1               	movf	(f_lseek@ofs+1)& (0+255),w,b
 13980  001224  58DE               	subwfb	postinc2,w,c
 13981  001226  51B2               	movf	(f_lseek@ofs+2)& (0+255),w,b
 13982  001228  58DE               	subwfb	postinc2,w,c
 13983  00122A  51B3               	movf	(f_lseek@ofs+3)& (0+255),w,b
 13984  00122C  58DE               	subwfb	postinc2,w,c
 13985  00122E  B0D8               	btfsc	status,0,c
 13986  001230  D016               	goto	l1047
 13987                           
 13988                           ; BSR set to: 0
 13989  001232  EE20 F002          	lfsr	2,2
 13990  001236  51AE               	movf	f_lseek@fp& (0+255),w,b
 13991  001238  26D9               	addwf	fsr2l,f,c
 13992  00123A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 13993  00123C  22DA               	addwfc	fsr2h,f,c
 13994  00123E  B2DF               	btfsc	indf2,1,c
 13995  001240  D00E               	goto	l1047
 13996                           
 13997                           ; BSR set to: 0
 13998  001242  EE20 F00A          	lfsr	2,10
 13999  001246  51AE               	movf	f_lseek@fp& (0+255),w,b
 14000  001248  26D9               	addwf	fsr2l,f,c
 14001  00124A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14002  00124C  22DA               	addwfc	fsr2h,f,c
 14003  00124E  CFDE F0B0          	movff	postinc2,f_lseek@ofs
 14004  001252  CFDE F0B1          	movff	postinc2,f_lseek@ofs+1
 14005  001256  CFDE F0B2          	movff	postinc2,f_lseek@ofs+2
 14006  00125A  CFDE F0B3          	movff	postinc2,f_lseek@ofs+3
 14007  00125E                     l1047:
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;tff.c: 1159: ifptr = fp->fptr;
 14011  00125E  EE20 F006          	lfsr	2,6
 14012  001262  51AE               	movf	f_lseek@fp& (0+255),w,b
 14013  001264  26D9               	addwf	fsr2l,f,c
 14014  001266  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14015  001268  22DA               	addwfc	fsr2h,f,c
 14016  00126A  CFDE F0C5          	movff	postinc2,f_lseek@ifptr
 14017  00126E  CFDE F0C6          	movff	postinc2,f_lseek@ifptr+1
 14018  001272  CFDE F0C7          	movff	postinc2,f_lseek@ifptr+2
 14019  001276  CFDE F0C8          	movff	postinc2,f_lseek@ifptr+3
 14020                           
 14021                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 14022  00127A  EE20 F006          	lfsr	2,6
 14023  00127E  51AE               	movf	f_lseek@fp& (0+255),w,b
 14024  001280  26D9               	addwf	fsr2l,f,c
 14025  001282  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14026  001284  22DA               	addwfc	fsr2h,f,c
 14027  001286  6ADE               	clrf	postinc2,c
 14028  001288  6ADE               	clrf	postinc2,c
 14029  00128A  6ADE               	clrf	postinc2,c
 14030  00128C  6ADD               	clrf	postdec2,c
 14031  00128E  EE20 F003          	lfsr	2,3
 14032  001292  51AE               	movf	f_lseek@fp& (0+255),w,b
 14033  001294  26D9               	addwf	fsr2l,f,c
 14034  001296  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14035  001298  22DA               	addwfc	fsr2h,f,c
 14036  00129A  0EFF               	movlw	255
 14037  00129C  6EDF               	movwf	indf2,c
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;tff.c: 1161: if (ofs > 0) {
 14041  00129E  51B0               	movf	f_lseek@ofs& (0+255),w,b
 14042  0012A0  11B1               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 14043  0012A2  11B2               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 14044  0012A4  11B3               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 14045  0012A6  B4D8               	btfsc	status,2,c
 14046  0012A8  D19C               	goto	l11051
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 14050  0012AA  EE20 F004          	lfsr	2,4
 14051  0012AE  51AE               	movf	f_lseek@fp& (0+255),w,b
 14052  0012B0  26D9               	addwf	fsr2l,f,c
 14053  0012B2  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14054  0012B4  22DA               	addwfc	fsr2h,f,c
 14055  0012B6  EE10 F01D          	lfsr	1,29
 14056  0012BA  50DE               	movf	postinc2,w,c
 14057  0012BC  26E1               	addwf	fsr1l,f,c
 14058  0012BE  50DD               	movf	postdec2,w,c
 14059  0012C0  22E2               	addwfc	fsr1h,f,c
 14060  0012C2  50E7               	movf	indf1,w,c
 14061  0012C4  6FB4               	movwf	??_f_lseek& (0+255),b
 14062  0012C6  C0B4  F0B5         	movff	??_f_lseek,??_f_lseek+1
 14063  0012CA  6BB6               	clrf	(??_f_lseek+2)& (0+255),b
 14064  0012CC  6BB7               	clrf	(??_f_lseek+3)& (0+255),b
 14065  0012CE  6BB8               	clrf	(??_f_lseek+4)& (0+255),b
 14066  0012D0  0E09               	movlw	9
 14067  0012D2                     u13565:
 14068  0012D2  90D8               	bcf	status,0,c
 14069  0012D4  37B5               	rlcf	(??_f_lseek+1)& (0+255),f,b
 14070  0012D6  37B6               	rlcf	(??_f_lseek+2)& (0+255),f,b
 14071  0012D8  37B7               	rlcf	(??_f_lseek+3)& (0+255),f,b
 14072  0012DA  37B8               	rlcf	(??_f_lseek+4)& (0+255),f,b
 14073  0012DC  2EE8               	decfsz	wreg,f,c
 14074  0012DE  D7F9               	goto	u13565
 14075  0012E0  C0B5  F0C9         	movff	??_f_lseek+1,f_lseek@csize
 14076  0012E4  C0B6  F0CA         	movff	??_f_lseek+2,f_lseek@csize+1
 14077  0012E8  C0B7  F0CB         	movff	??_f_lseek+3,f_lseek@csize+2
 14078  0012EC  C0B8  F0CC         	movff	??_f_lseek+4,f_lseek@csize+3
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 14082  0012F0  51C5               	movf	f_lseek@ifptr& (0+255),w,b
 14083  0012F2  11C6               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 14084  0012F4  11C7               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 14085  0012F6  11C8               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 14086  0012F8  B4D8               	btfsc	status,2,c
 14087  0012FA  D093               	goto	l11009
 14088                           
 14089                           ; BSR set to: 0
 14090  0012FC  0EFF               	movlw	255
 14091  0012FE  25B0               	addwf	f_lseek@ofs& (0+255),w,b
 14092  001300  6E19               	movwf	___lldiv@dividend^0,c
 14093  001302  0EFF               	movlw	255
 14094  001304  21B1               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 14095  001306  6E1A               	movwf	(___lldiv@dividend+1)^0,c
 14096  001308  0EFF               	movlw	255
 14097  00130A  21B2               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 14098  00130C  6E1B               	movwf	(___lldiv@dividend+2)^0,c
 14099  00130E  0EFF               	movlw	255
 14100  001310  21B3               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 14101  001312  6E1C               	movwf	(___lldiv@dividend+3)^0,c
 14102  001314  C0C9  F01D         	movff	f_lseek@csize,___lldiv@divisor
 14103  001318  C0CA  F01E         	movff	f_lseek@csize+1,___lldiv@divisor+1
 14104  00131C  C0CB  F01F         	movff	f_lseek@csize+2,___lldiv@divisor+2
 14105  001320  C0CC  F020         	movff	f_lseek@csize+3,___lldiv@divisor+3
 14106  001324  EC9D  F023         	call	___lldiv	;wreg free
 14107  001328  C019  F0B4         	movff	?___lldiv,??_f_lseek
 14108  00132C  C01A  F0B5         	movff	?___lldiv+1,??_f_lseek+1
 14109  001330  C01B  F0B6         	movff	?___lldiv+2,??_f_lseek+2
 14110  001334  C01C  F0B7         	movff	?___lldiv+3,??_f_lseek+3
 14111  001338  0EFF               	movlw	255
 14112  00133A  0100               	movlb	0	; () banked
 14113  00133C  25C5               	addwf	f_lseek@ifptr& (0+255),w,b
 14114  00133E  6E19               	movwf	___lldiv@dividend^0,c
 14115  001340  0EFF               	movlw	255
 14116  001342  21C6               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 14117  001344  6E1A               	movwf	(___lldiv@dividend+1)^0,c
 14118  001346  0EFF               	movlw	255
 14119  001348  21C7               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 14120  00134A  6E1B               	movwf	(___lldiv@dividend+2)^0,c
 14121  00134C  0EFF               	movlw	255
 14122  00134E  21C8               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 14123  001350  6E1C               	movwf	(___lldiv@dividend+3)^0,c
 14124  001352  C0C9  F01D         	movff	f_lseek@csize,___lldiv@divisor
 14125  001356  C0CA  F01E         	movff	f_lseek@csize+1,___lldiv@divisor+1
 14126  00135A  C0CB  F01F         	movff	f_lseek@csize+2,___lldiv@divisor+2
 14127  00135E  C0CC  F020         	movff	f_lseek@csize+3,___lldiv@divisor+3
 14128  001362  EC9D  F023         	call	___lldiv	;wreg free
 14129  001366  5019               	movf	?___lldiv^0,w,c
 14130  001368  0100               	movlb	0	; () banked
 14131  00136A  5DB4               	subwf	??_f_lseek& (0+255),w,b
 14132  00136C  501A               	movf	(?___lldiv+1)^0,w,c
 14133  00136E  59B5               	subwfb	(??_f_lseek+1)& (0+255),w,b
 14134  001370  501B               	movf	(?___lldiv+2)^0,w,c
 14135  001372  59B6               	subwfb	(??_f_lseek+2)& (0+255),w,b
 14136  001374  501C               	movf	(?___lldiv+3)^0,w,c
 14137  001376  59B7               	subwfb	(??_f_lseek+3)& (0+255),w,b
 14138  001378  A0D8               	btfss	status,0,c
 14139  00137A  D053               	goto	l11009
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 14143  00137C  0EFF               	movlw	255
 14144  00137E  25C9               	addwf	f_lseek@csize& (0+255),w,b
 14145  001380  6FB4               	movwf	??_f_lseek& (0+255),b
 14146  001382  0EFF               	movlw	255
 14147  001384  21CA               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 14148  001386  6FB5               	movwf	(??_f_lseek+1)& (0+255),b
 14149  001388  0EFF               	movlw	255
 14150  00138A  21CB               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 14151  00138C  6FB6               	movwf	(??_f_lseek+2)& (0+255),b
 14152  00138E  0EFF               	movlw	255
 14153  001390  21CC               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 14154  001392  6FB7               	movwf	(??_f_lseek+3)& (0+255),b
 14155  001394  1DB4               	comf	??_f_lseek& (0+255),w,b
 14156  001396  6FB8               	movwf	(??_f_lseek+4)& (0+255),b
 14157  001398  1DB5               	comf	(??_f_lseek+1)& (0+255),w,b
 14158  00139A  6FB9               	movwf	(??_f_lseek+5)& (0+255),b
 14159  00139C  1DB6               	comf	(??_f_lseek+2)& (0+255),w,b
 14160  00139E  6FBA               	movwf	(??_f_lseek+6)& (0+255),b
 14161  0013A0  1DB7               	comf	(??_f_lseek+3)& (0+255),w,b
 14162  0013A2  6FBB               	movwf	(??_f_lseek+7)& (0+255),b
 14163  0013A4  0EFF               	movlw	255
 14164  0013A6  25C5               	addwf	f_lseek@ifptr& (0+255),w,b
 14165  0013A8  6FBC               	movwf	(??_f_lseek+8)& (0+255),b
 14166  0013AA  0EFF               	movlw	255
 14167  0013AC  21C6               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 14168  0013AE  6FBD               	movwf	(??_f_lseek+9)& (0+255),b
 14169  0013B0  0EFF               	movlw	255
 14170  0013B2  21C7               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 14171  0013B4  6FBE               	movwf	(??_f_lseek+10)& (0+255),b
 14172  0013B6  0EFF               	movlw	255
 14173  0013B8  21C8               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 14174  0013BA  6FBF               	movwf	(??_f_lseek+11)& (0+255),b
 14175  0013BC  51B8               	movf	(??_f_lseek+4)& (0+255),w,b
 14176  0013BE  15BC               	andwf	(??_f_lseek+8)& (0+255),w,b
 14177  0013C0  6FC0               	movwf	(??_f_lseek+12)& (0+255),b
 14178  0013C2  51B9               	movf	(??_f_lseek+5)& (0+255),w,b
 14179  0013C4  15BD               	andwf	(??_f_lseek+9)& (0+255),w,b
 14180  0013C6  6FC1               	movwf	(??_f_lseek+13)& (0+255),b
 14181  0013C8  51BA               	movf	(??_f_lseek+6)& (0+255),w,b
 14182  0013CA  15BE               	andwf	(??_f_lseek+10)& (0+255),w,b
 14183  0013CC  6FC2               	movwf	(??_f_lseek+14)& (0+255),b
 14184  0013CE  51BB               	movf	(??_f_lseek+7)& (0+255),w,b
 14185  0013D0  15BF               	andwf	(??_f_lseek+11)& (0+255),w,b
 14186  0013D2  6FC3               	movwf	(??_f_lseek+15)& (0+255),b
 14187  0013D4  EE20 F006          	lfsr	2,6
 14188  0013D8  51AE               	movf	f_lseek@fp& (0+255),w,b
 14189  0013DA  26D9               	addwf	fsr2l,f,c
 14190  0013DC  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14191  0013DE  22DA               	addwfc	fsr2h,f,c
 14192  0013E0  C0C0  FFDE         	movff	??_f_lseek+12,postinc2
 14193  0013E4  C0C1  FFDE         	movff	??_f_lseek+13,postinc2
 14194  0013E8  C0C2  FFDE         	movff	??_f_lseek+14,postinc2
 14195  0013EC  C0C3  FFDE         	movff	??_f_lseek+15,postinc2
 14196                           
 14197                           ;tff.c: 1166: ofs -= fp->fptr;
 14198  0013F0  EE20 F006          	lfsr	2,6
 14199  0013F4  51AE               	movf	f_lseek@fp& (0+255),w,b
 14200  0013F6  26D9               	addwf	fsr2l,f,c
 14201  0013F8  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14202  0013FA  22DA               	addwfc	fsr2h,f,c
 14203  0013FC  50DE               	movf	postinc2,w,c
 14204  0013FE  5FB0               	subwf	f_lseek@ofs& (0+255),f,b
 14205  001400  50DE               	movf	postinc2,w,c
 14206  001402  5BB1               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 14207  001404  50DE               	movf	postinc2,w,c
 14208  001406  5BB2               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 14209  001408  50DD               	movf	postdec2,w,c
 14210  00140A  5BB3               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 14211                           
 14212                           ;tff.c: 1167: clust = fp->curr_clust;
 14213  00140C  EE20 F010          	lfsr	2,16
 14214  001410  51AE               	movf	f_lseek@fp& (0+255),w,b
 14215  001412  26D9               	addwf	fsr2l,f,c
 14216  001414  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14217  001416  22DA               	addwfc	fsr2h,f,c
 14218  001418  CFDE F0CD          	movff	postinc2,f_lseek@clust
 14219  00141C  CFDD F0CE          	movff	postdec2,f_lseek@clust+1
 14220                           
 14221                           ;tff.c: 1168: } else {
 14222  001420  D030               	goto	l11021
 14223  001422                     l11009:
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;tff.c: 1169: clust = fp->org_clust;
 14227  001422  EE20 F00E          	lfsr	2,14
 14228  001426  51AE               	movf	f_lseek@fp& (0+255),w,b
 14229  001428  26D9               	addwf	fsr2l,f,c
 14230  00142A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14231  00142C  22DA               	addwfc	fsr2h,f,c
 14232  00142E  CFDE F0CD          	movff	postinc2,f_lseek@clust
 14233  001432  CFDD F0CE          	movff	postdec2,f_lseek@clust+1
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;tff.c: 1171: if (clust == 0) {
 14237  001436  51CD               	movf	f_lseek@clust& (0+255),w,b
 14238  001438  11CE               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14239  00143A  A4D8               	btfss	status,2,c
 14240  00143C  D018               	goto	l1051
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;tff.c: 1172: clust = create_chain(0);
 14244  00143E  0E00               	movlw	0
 14245  001440  6FA1               	movwf	(create_chain@clust+1)& (0+255),b
 14246  001442  0E00               	movlw	0
 14247  001444  6FA0               	movwf	create_chain@clust& (0+255),b
 14248  001446  EC6C  F019         	call	_create_chain	;wreg free
 14249  00144A  C0A0  F0CD         	movff	?_create_chain,f_lseek@clust
 14250  00144E  C0A1  F0CE         	movff	?_create_chain+1,f_lseek@clust+1
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 14254  001452  05CD               	decf	f_lseek@clust& (0+255),w,b
 14255  001454  11CE               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14256  001456  B4D8               	btfsc	status,2,c
 14257  001458  D0F7               	goto	l11059
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;tff.c: 1174: fp->org_clust = clust;
 14261  00145A  EE20 F00E          	lfsr	2,14
 14262  00145E  51AE               	movf	f_lseek@fp& (0+255),w,b
 14263  001460  26D9               	addwf	fsr2l,f,c
 14264  001462  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14265  001464  22DA               	addwfc	fsr2h,f,c
 14266  001466  C0CD  FFDE         	movff	f_lseek@clust,postinc2
 14267  00146A  C0CE  FFDD         	movff	f_lseek@clust+1,postdec2
 14268  00146E                     l1051:
 14269                           
 14270                           ; BSR set to: 0
 14271                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 14272  00146E  EE20 F010          	lfsr	2,16
 14273  001472  51AE               	movf	f_lseek@fp& (0+255),w,b
 14274  001474  26D9               	addwf	fsr2l,f,c
 14275  001476  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14276  001478  22DA               	addwfc	fsr2h,f,c
 14277  00147A  C0CD  FFDE         	movff	f_lseek@clust,postinc2
 14278  00147E  C0CE  FFDD         	movff	f_lseek@clust+1,postdec2
 14279  001482                     l11021:
 14280                           
 14281                           ; BSR set to: 0
 14282                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 14283  001482  51CD               	movf	f_lseek@clust& (0+255),w,b
 14284  001484  11CE               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14285  001486  A4D8               	btfss	status,2,c
 14286  001488  D062               	goto	l11043
 14287  00148A  D0AB               	goto	l11051
 14288  00148C                     l11025:
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;tff.c: 1182: if (fp->flag & 0x02) {
 14292  00148C  EE20 F002          	lfsr	2,2
 14293  001490  51AE               	movf	f_lseek@fp& (0+255),w,b
 14294  001492  26D9               	addwf	fsr2l,f,c
 14295  001494  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14296  001496  22DA               	addwfc	fsr2h,f,c
 14297  001498  A2DF               	btfss	indf2,1,c
 14298  00149A  D017               	goto	l11033
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;tff.c: 1183: clust = create_chain(clust);
 14302  00149C  C0CD  F0A0         	movff	f_lseek@clust,create_chain@clust
 14303  0014A0  C0CE  F0A1         	movff	f_lseek@clust+1,create_chain@clust+1
 14304  0014A4  EC6C  F019         	call	_create_chain	;wreg free
 14305  0014A8  C0A0  F0CD         	movff	?_create_chain,f_lseek@clust
 14306  0014AC  C0A1  F0CE         	movff	?_create_chain+1,f_lseek@clust+1
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;tff.c: 1184: if (clust == 0) {
 14310  0014B0  51CD               	movf	f_lseek@clust& (0+255),w,b
 14311  0014B2  11CE               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 14312  0014B4  A4D8               	btfss	status,2,c
 14313  0014B6  D013               	goto	l11035
 14314                           
 14315                           ; BSR set to: 0
 14316                           ;tff.c: 1185: ofs = csize; break;
 14317  0014B8  C0C9  F0B0         	movff	f_lseek@csize,f_lseek@ofs
 14318  0014BC  C0CA  F0B1         	movff	f_lseek@csize+1,f_lseek@ofs+1
 14319  0014C0  C0CB  F0B2         	movff	f_lseek@csize+2,f_lseek@ofs+2
 14320  0014C4  C0CC  F0B3         	movff	f_lseek@csize+3,f_lseek@ofs+3
 14321  0014C8  D04C               	goto	u13660
 14322  0014CA                     l11033:
 14323                           
 14324                           ; BSR set to: 0
 14325                           ;tff.c: 1189: clust = get_cluster(clust);
 14326  0014CA  C0CD  F031         	movff	f_lseek@clust,get_cluster@clust
 14327  0014CE  C0CE  F032         	movff	f_lseek@clust+1,get_cluster@clust+1
 14328  0014D2  ECAB  F016         	call	_get_cluster	;wreg free
 14329  0014D6  C031  F0CD         	movff	?_get_cluster,f_lseek@clust
 14330  0014DA  C032  F0CE         	movff	?_get_cluster+1,f_lseek@clust+1
 14331  0014DE                     l11035:
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 14335  0014DE  51CE               	movf	(f_lseek@clust+1)& (0+255),w,b
 14336  0014E0  E104               	bnz	u13640
 14337  0014E2  0E02               	movlw	2
 14338  0014E4  5DCD               	subwf	f_lseek@clust& (0+255),w,b
 14339  0014E6  A0D8               	btfss	status,0,c
 14340  0014E8  D0AF               	goto	l11059
 14341  0014EA                     u13640:
 14342                           
 14343                           ; BSR set to: 0
 14344  0014EA  EE20 F004          	lfsr	2,4
 14345  0014EE  51AE               	movf	f_lseek@fp& (0+255),w,b
 14346  0014F0  26D9               	addwf	fsr2l,f,c
 14347  0014F2  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14348  0014F4  22DA               	addwfc	fsr2h,f,c
 14349  0014F6  EE10 F016          	lfsr	1,22
 14350  0014FA  50DE               	movf	postinc2,w,c
 14351  0014FC  26E1               	addwf	fsr1l,f,c
 14352  0014FE  50DD               	movf	postdec2,w,c
 14353  001500  22E2               	addwfc	fsr1h,f,c
 14354  001502  50E6               	movf	postinc1,w,c
 14355  001504  5DCD               	subwf	f_lseek@clust& (0+255),w,b
 14356  001506  50E6               	movf	postinc1,w,c
 14357  001508  59CE               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 14358  00150A  B0D8               	btfsc	status,0,c
 14359  00150C  D09D               	goto	l11059
 14360                           
 14361                           ; BSR set to: 0
 14362                           ;tff.c: 1191: fp->curr_clust = clust;
 14363  00150E  EE20 F010          	lfsr	2,16
 14364  001512  51AE               	movf	f_lseek@fp& (0+255),w,b
 14365  001514  26D9               	addwf	fsr2l,f,c
 14366  001516  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14367  001518  22DA               	addwfc	fsr2h,f,c
 14368  00151A  C0CD  FFDE         	movff	f_lseek@clust,postinc2
 14369  00151E  C0CE  FFDD         	movff	f_lseek@clust+1,postdec2
 14370                           
 14371                           ;tff.c: 1192: fp->fptr += csize;
 14372  001522  EE20 F006          	lfsr	2,6
 14373  001526  51AE               	movf	f_lseek@fp& (0+255),w,b
 14374  001528  26D9               	addwf	fsr2l,f,c
 14375  00152A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14376  00152C  22DA               	addwfc	fsr2h,f,c
 14377  00152E  51C9               	movf	f_lseek@csize& (0+255),w,b
 14378  001530  26DE               	addwf	postinc2,f,c
 14379  001532  51CA               	movf	(f_lseek@csize+1)& (0+255),w,b
 14380  001534  22DE               	addwfc	postinc2,f,c
 14381  001536  51CB               	movf	(f_lseek@csize+2)& (0+255),w,b
 14382  001538  22DE               	addwfc	postinc2,f,c
 14383  00153A  51CC               	movf	(f_lseek@csize+3)& (0+255),w,b
 14384  00153C  22DE               	addwfc	postinc2,f,c
 14385                           
 14386                           ; BSR set to: 0
 14387                           ;tff.c: 1193: ofs -= csize;
 14388  00153E  51C9               	movf	f_lseek@csize& (0+255),w,b
 14389  001540  5FB0               	subwf	f_lseek@ofs& (0+255),f,b
 14390  001542  51CA               	movf	(f_lseek@csize+1)& (0+255),w,b
 14391  001544  5BB1               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 14392  001546  51CB               	movf	(f_lseek@csize+2)& (0+255),w,b
 14393  001548  5BB2               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 14394  00154A  51CC               	movf	(f_lseek@csize+3)& (0+255),w,b
 14395  00154C  5BB3               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 14396  00154E                     l11043:
 14397                           
 14398                           ; BSR set to: 0
 14399  00154E  51B0               	movf	f_lseek@ofs& (0+255),w,b
 14400  001550  5DC9               	subwf	f_lseek@csize& (0+255),w,b
 14401  001552  51B1               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14402  001554  59CA               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 14403  001556  51B2               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14404  001558  59CB               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 14405  00155A  51B3               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14406  00155C  59CC               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 14407  00155E  A0D8               	btfss	status,0,c
 14408  001560  D795               	goto	l11025
 14409  001562                     u13660:
 14410                           
 14411                           ; BSR set to: 0
 14412                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 14413  001562  EE20 F006          	lfsr	2,6
 14414  001566  51AE               	movf	f_lseek@fp& (0+255),w,b
 14415  001568  26D9               	addwf	fsr2l,f,c
 14416  00156A  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14417  00156C  22DA               	addwfc	fsr2h,f,c
 14418  00156E  51B0               	movf	f_lseek@ofs& (0+255),w,b
 14419  001570  26DE               	addwf	postinc2,f,c
 14420  001572  51B1               	movf	(f_lseek@ofs+1)& (0+255),w,b
 14421  001574  22DE               	addwfc	postinc2,f,c
 14422  001576  51B2               	movf	(f_lseek@ofs+2)& (0+255),w,b
 14423  001578  22DE               	addwfc	postinc2,f,c
 14424  00157A  51B3               	movf	(f_lseek@ofs+3)& (0+255),w,b
 14425  00157C  22DE               	addwfc	postinc2,f,c
 14426                           
 14427                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 14428  00157E  EE20 F003          	lfsr	2,3
 14429  001582  51AE               	movf	f_lseek@fp& (0+255),w,b
 14430  001584  26D9               	addwf	fsr2l,f,c
 14431  001586  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14432  001588  22DA               	addwfc	fsr2h,f,c
 14433  00158A  C0B0  F0B4         	movff	f_lseek@ofs,??_f_lseek
 14434  00158E  C0B1  F0B5         	movff	f_lseek@ofs+1,??_f_lseek+1
 14435  001592  C0B2  F0B6         	movff	f_lseek@ofs+2,??_f_lseek+2
 14436  001596  C0B3  F0B7         	movff	f_lseek@ofs+3,??_f_lseek+3
 14437  00159A  0E0A               	movlw	10
 14438  00159C  D005               	goto	u13670
 14439  00159E                     u13675:
 14440  00159E  90D8               	bcf	status,0,c
 14441  0015A0  33B7               	rrcf	(??_f_lseek+3)& (0+255),f,b
 14442  0015A2  33B6               	rrcf	(??_f_lseek+2)& (0+255),f,b
 14443  0015A4  33B5               	rrcf	(??_f_lseek+1)& (0+255),f,b
 14444  0015A6  33B4               	rrcf	??_f_lseek& (0+255),f,b
 14445  0015A8                     u13670:
 14446  0015A8  2EE8               	decfsz	wreg,f,c
 14447  0015AA  D7F9               	goto	u13675
 14448  0015AC  51B4               	movf	??_f_lseek& (0+255),w,b
 14449  0015AE  6EDF               	movwf	indf2,c
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 14453  0015B0  0EFF               	movlw	255
 14454  0015B2  15B0               	andwf	f_lseek@ofs& (0+255),w,b
 14455  0015B4  6FB4               	movwf	??_f_lseek& (0+255),b
 14456  0015B6  0E01               	movlw	1
 14457  0015B8  15B1               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 14458  0015BA  6FB5               	movwf	(??_f_lseek+1)& (0+255),b
 14459  0015BC  0E00               	movlw	0
 14460  0015BE  15B2               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 14461  0015C0  6FB6               	movwf	(??_f_lseek+2)& (0+255),b
 14462  0015C2  0E00               	movlw	0
 14463  0015C4  15B3               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 14464  0015C6  6FB7               	movwf	(??_f_lseek+3)& (0+255),b
 14465  0015C8  51B4               	movf	??_f_lseek& (0+255),w,b
 14466  0015CA  11B5               	iorwf	(??_f_lseek+1)& (0+255),w,b
 14467  0015CC  11B6               	iorwf	(??_f_lseek+2)& (0+255),w,b
 14468  0015CE  11B7               	iorwf	(??_f_lseek+3)& (0+255),w,b
 14469  0015D0  B4D8               	btfsc	status,2,c
 14470  0015D2  D007               	goto	l11051
 14471                           
 14472                           ; BSR set to: 0
 14473  0015D4  EE20 F003          	lfsr	2,3
 14474  0015D8  51AE               	movf	f_lseek@fp& (0+255),w,b
 14475  0015DA  26D9               	addwf	fsr2l,f,c
 14476  0015DC  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14477  0015DE  22DA               	addwfc	fsr2h,f,c
 14478  0015E0  2ADF               	incf	indf2,f,c
 14479  0015E2                     l11051:
 14480                           
 14481                           ; BSR set to: 0
 14482                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 14483  0015E2  EE20 F006          	lfsr	2,6
 14484  0015E6  51AE               	movf	f_lseek@fp& (0+255),w,b
 14485  0015E8  26D9               	addwf	fsr2l,f,c
 14486  0015EA  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14487  0015EC  22DA               	addwfc	fsr2h,f,c
 14488  0015EE  EE10 F00A          	lfsr	1,10
 14489  0015F2  51AE               	movf	f_lseek@fp& (0+255),w,b
 14490  0015F4  26E1               	addwf	fsr1l,f,c
 14491  0015F6  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14492  0015F8  22E2               	addwfc	fsr1h,f,c
 14493  0015FA  50DE               	movf	postinc2,w,c
 14494  0015FC  5CE6               	subwf	postinc1,w,c
 14495  0015FE  50DE               	movf	postinc2,w,c
 14496  001600  58E6               	subwfb	postinc1,w,c
 14497  001602  50DE               	movf	postinc2,w,c
 14498  001604  58E6               	subwfb	postinc1,w,c
 14499  001606  50DE               	movf	postinc2,w,c
 14500  001608  58E6               	subwfb	postinc1,w,c
 14501  00160A  B0D8               	btfsc	status,0,c
 14502  00160C  0012               	return	
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;tff.c: 1203: fp->fsize = fp->fptr;
 14506  00160E  EE20 F006          	lfsr	2,6
 14507  001612  51AE               	movf	f_lseek@fp& (0+255),w,b
 14508  001614  26D9               	addwf	fsr2l,f,c
 14509  001616  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14510  001618  22DA               	addwfc	fsr2h,f,c
 14511  00161A  EE10 F00A          	lfsr	1,10
 14512  00161E  51AE               	movf	f_lseek@fp& (0+255),w,b
 14513  001620  26E1               	addwf	fsr1l,f,c
 14514  001622  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14515  001624  22E2               	addwfc	fsr1h,f,c
 14516  001626  CFDE FFE6          	movff	postinc2,postinc1
 14517  00162A  CFDE FFE6          	movff	postinc2,postinc1
 14518  00162E  CFDE FFE6          	movff	postinc2,postinc1
 14519  001632  CFDE FFE6          	movff	postinc2,postinc1
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;tff.c: 1204: fp->flag |= 0x20;
 14523  001636  EE20 F002          	lfsr	2,2
 14524  00163A  51AE               	movf	f_lseek@fp& (0+255),w,b
 14525  00163C  26D9               	addwf	fsr2l,f,c
 14526  00163E  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14527  001640  22DA               	addwfc	fsr2h,f,c
 14528  001642  0E00               	movlw	0
 14529  001644  8ADB               	bsf	plusw2,5,c
 14530  001646  0012               	return	
 14531  001648                     l11059:
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;tff.c: 1211: fp->flag |= 0x80;
 14535  001648  EE20 F002          	lfsr	2,2
 14536  00164C  51AE               	movf	f_lseek@fp& (0+255),w,b
 14537  00164E  26D9               	addwf	fsr2l,f,c
 14538  001650  51AF               	movf	(f_lseek@fp+1)& (0+255),w,b
 14539  001652  22DA               	addwfc	fsr2h,f,c
 14540  001654  0E00               	movlw	0
 14541  001656  8EDB               	bsf	plusw2,7,c
 14542                           
 14543                           ; BSR set to: 0
 14544  001658  0012               	return		;funcret
 14545  00165A                     __end_of_f_lseek:
 14546                           	callstack 0
 14547                           
 14548 ;; *************** function _create_chain *****************
 14549 ;; Defined at:
 14550 ;;		line 283 in file "bibliotecas/tff.c"
 14551 ;; Parameters:    Size  Location     Type
 14552 ;;  clust           2   64[BANK0 ] unsigned short 
 14553 ;; Auto vars:     Size  Location     Type
 14554 ;;  ncl             2   76[BANK0 ] unsigned short 
 14555 ;;  scl             2   74[BANK0 ] unsigned short 
 14556 ;;  cstat           2   72[BANK0 ] unsigned short 
 14557 ;;  fs              2   70[BANK0 ] PTR struct _FATFS
 14558 ;;		 -> NULL(0), fs(544), 
 14559 ;;  mcl             2   68[BANK0 ] unsigned short 
 14560 ;; Return value:  Size  Location     Type
 14561 ;;                  2   64[BANK0 ] unsigned short 
 14562 ;; Registers used:
 14563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14564 ;; Tracked objects:
 14565 ;;		On entry : 3F/0
 14566 ;;		On exit  : 3F/0
 14567 ;;		Unchanged: 0/0
 14568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14569 ;;      Params:         0       2       0       0       0       0       0       0       0
 14570 ;;      Locals:         0      10       0       0       0       0       0       0       0
 14571 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14572 ;;      Totals:         0      14       0       0       0       0       0       0       0
 14573 ;;Total ram usage:       14 bytes
 14574 ;; Hardware stack levels used:    1
 14575 ;; Hardware stack levels required when called:   10
 14576 ;; This function calls:
 14577 ;;		_get_cluster
 14578 ;;		_put_cluster
 14579 ;; This function is called by:
 14580 ;;		_reserve_direntry
 14581 ;;		_f_write
 14582 ;;		_f_lseek
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text62
 14587  0032D8                     __ptext62:
 14588                           	callstack 0
 14589  0032D8                     _create_chain:
 14590                           	callstack 13
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;incstack = 0
 14597  0032D8  C039  F0A6         	movff	_FatFs,create_chain@fs
 14598  0032DC  C03A  F0A7         	movff	_FatFs+1,create_chain@fs+1
 14599                           
 14600                           ; BSR set to: 0
 14601                           ;tff.c: 291: mcl = fs->max_clust;
 14602  0032E0  EE20 F016          	lfsr	2,22
 14603  0032E4  51A6               	movf	create_chain@fs& (0+255),w,b
 14604  0032E6  26D9               	addwf	fsr2l,f,c
 14605  0032E8  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 14606  0032EA  22DA               	addwfc	fsr2h,f,c
 14607  0032EC  CFDE F0A4          	movff	postinc2,create_chain@mcl
 14608  0032F0  CFDD F0A5          	movff	postdec2,create_chain@mcl+1
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;tff.c: 292: if (clust == 0) {
 14612  0032F4  51A0               	movf	create_chain@clust& (0+255),w,b
 14613  0032F6  11A1               	iorwf	(create_chain@clust+1)& (0+255),w,b
 14614  0032F8  A4D8               	btfss	status,2,c
 14615  0032FA  D01B               	goto	l9775
 14616                           
 14617                           ; BSR set to: 0
 14618                           ;tff.c: 293: scl = fs->last_clust;
 14619  0032FC  EE20 F018          	lfsr	2,24
 14620  003300  51A6               	movf	create_chain@fs& (0+255),w,b
 14621  003302  26D9               	addwf	fsr2l,f,c
 14622  003304  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 14623  003306  22DA               	addwfc	fsr2h,f,c
 14624  003308  CFDE F0AA          	movff	postinc2,create_chain@scl
 14625  00330C  CFDD F0AB          	movff	postdec2,create_chain@scl+1
 14626                           
 14627                           ; BSR set to: 0
 14628                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 14629  003310  51AB               	movf	(create_chain@scl+1)& (0+255),w,b
 14630  003312  E104               	bnz	u11560
 14631  003314  0E02               	movlw	2
 14632  003316  5DAA               	subwf	create_chain@scl& (0+255),w,b
 14633  003318  A0D8               	btfss	status,0,c
 14634  00331A  D006               	goto	u11570
 14635  00331C                     u11560:
 14636                           
 14637                           ; BSR set to: 0
 14638  00331C  51A4               	movf	create_chain@mcl& (0+255),w,b
 14639  00331E  5DAA               	subwf	create_chain@scl& (0+255),w,b
 14640  003320  51A5               	movf	(create_chain@mcl+1)& (0+255),w,b
 14641  003322  59AB               	subwfb	(create_chain@scl+1)& (0+255),w,b
 14642  003324  A0D8               	btfss	status,0,c
 14643  003326  D029               	goto	l772
 14644  003328                     u11570:
 14645                           
 14646                           ; BSR set to: 0
 14647  003328  0E00               	movlw	0
 14648  00332A  6FAB               	movwf	(create_chain@scl+1)& (0+255),b
 14649  00332C  0E01               	movlw	1
 14650  00332E  6FAA               	movwf	create_chain@scl& (0+255),b
 14651  003330  D024               	goto	l772
 14652  003332                     l9775:
 14653                           
 14654                           ; BSR set to: 0
 14655                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 14656  003332  C0A0  F031         	movff	create_chain@clust,get_cluster@clust
 14657  003336  C0A1  F032         	movff	create_chain@clust+1,get_cluster@clust+1
 14658  00333A  ECAB  F016         	call	_get_cluster	;wreg free
 14659  00333E  C031  F0A8         	movff	?_get_cluster,create_chain@cstat
 14660  003342  C032  F0A9         	movff	?_get_cluster+1,create_chain@cstat+1
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;tff.c: 298: if (cstat < 2) return 1;
 14664  003346  51A9               	movf	(create_chain@cstat+1)& (0+255),w,b
 14665  003348  E109               	bnz	l9783
 14666  00334A  0E02               	movlw	2
 14667  00334C  5DA8               	subwf	create_chain@cstat& (0+255),w,b
 14668  00334E  B0D8               	btfsc	status,0,c
 14669  003350  D005               	goto	l9783
 14670  003352                     u11580:
 14671                           
 14672                           ; BSR set to: 0
 14673  003352  0E00               	movlw	0
 14674  003354  6FA1               	movwf	(?_create_chain+1)& (0+255),b
 14675  003356  0E01               	movlw	1
 14676  003358  6FA0               	movwf	?_create_chain& (0+255),b
 14677  00335A  0012               	return	
 14678  00335C                     l9783:
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;tff.c: 299: if (cstat < mcl) return cstat;
 14682  00335C  51A4               	movf	create_chain@mcl& (0+255),w,b
 14683  00335E  5DA8               	subwf	create_chain@cstat& (0+255),w,b
 14684  003360  51A5               	movf	(create_chain@mcl+1)& (0+255),w,b
 14685  003362  59A9               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 14686  003364  B0D8               	btfsc	status,0,c
 14687  003366  D005               	goto	l775
 14688                           
 14689                           ; BSR set to: 0
 14690  003368  C0A8  F0A0         	movff	create_chain@cstat,?_create_chain
 14691  00336C  C0A9  F0A1         	movff	create_chain@cstat+1,?_create_chain+1
 14692  003370  0012               	return	
 14693  003372                     l775:
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;tff.c: 300: scl = clust;
 14697  003372  C0A0  F0AA         	movff	create_chain@clust,create_chain@scl
 14698  003376  C0A1  F0AB         	movff	create_chain@clust+1,create_chain@scl+1
 14699  00337A                     l772:
 14700                           
 14701                           ; BSR set to: 0
 14702                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 14703  00337A  C0AA  F0AC         	movff	create_chain@scl,create_chain@ncl
 14704  00337E  C0AB  F0AD         	movff	create_chain@scl+1,create_chain@ncl+1
 14705  003382                     l9787:
 14706                           
 14707                           ; BSR set to: 0
 14708                           ;tff.c: 305: ncl++;
 14709  003382  4BAC               	infsnz	create_chain@ncl& (0+255),f,b
 14710  003384  2BAD               	incf	(create_chain@ncl+1)& (0+255),f,b
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;tff.c: 306: if (ncl >= mcl) {
 14714  003386  51A4               	movf	create_chain@mcl& (0+255),w,b
 14715  003388  5DAC               	subwf	create_chain@ncl& (0+255),w,b
 14716  00338A  51A5               	movf	(create_chain@mcl+1)& (0+255),w,b
 14717  00338C  59AD               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 14718  00338E  A0D8               	btfss	status,0,c
 14719  003390  D00F               	goto	l9799
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;tff.c: 307: ncl = 2;
 14723  003392  0E00               	movlw	0
 14724  003394  6FAD               	movwf	(create_chain@ncl+1)& (0+255),b
 14725  003396  0E02               	movlw	2
 14726  003398  6FAC               	movwf	create_chain@ncl& (0+255),b
 14727                           
 14728                           ; BSR set to: 0
 14729                           ;tff.c: 308: if (ncl > scl) return 0;
 14730  00339A  51AB               	movf	(create_chain@scl+1)& (0+255),w,b
 14731  00339C  E109               	bnz	l9799
 14732  00339E  0E02               	movlw	2
 14733  0033A0  5DAA               	subwf	create_chain@scl& (0+255),w,b
 14734  0033A2  B0D8               	btfsc	status,0,c
 14735  0033A4  D005               	goto	l9799
 14736  0033A6                     u11610:
 14737                           
 14738                           ; BSR set to: 0
 14739  0033A6  0E00               	movlw	0
 14740  0033A8  6FA1               	movwf	(?_create_chain+1)& (0+255),b
 14741  0033AA  0E00               	movlw	0
 14742  0033AC  6FA0               	movwf	?_create_chain& (0+255),b
 14743  0033AE  0012               	return	
 14744  0033B0                     l9799:
 14745                           
 14746                           ; BSR set to: 0
 14747                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 14748  0033B0  C0AC  F031         	movff	create_chain@ncl,get_cluster@clust
 14749  0033B4  C0AD  F032         	movff	create_chain@ncl+1,get_cluster@clust+1
 14750  0033B8  ECAB  F016         	call	_get_cluster	;wreg free
 14751  0033BC  C031  F0A8         	movff	?_get_cluster,create_chain@cstat
 14752  0033C0  C032  F0A9         	movff	?_get_cluster+1,create_chain@cstat+1
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;tff.c: 311: if (cstat == 0) break;
 14756  0033C4  51A8               	movf	create_chain@cstat& (0+255),w,b
 14757  0033C6  11A9               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 14758  0033C8  B4D8               	btfsc	status,2,c
 14759  0033CA  D00C               	goto	l9817
 14760                           
 14761                           ; BSR set to: 0
 14762                           ;tff.c: 312: if (cstat == 1) return 1;
 14763  0033CC  05A8               	decf	create_chain@cstat& (0+255),w,b
 14764  0033CE  11A9               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 14765  0033D0  B4D8               	btfsc	status,2,c
 14766  0033D2  D7BF               	goto	u11580
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;tff.c: 313: if (ncl == scl) return 0;
 14770  0033D4  51AA               	movf	create_chain@scl& (0+255),w,b
 14771  0033D6  19AC               	xorwf	create_chain@ncl& (0+255),w,b
 14772  0033D8  E1D4               	bnz	l9787
 14773  0033DA  51AB               	movf	(create_chain@scl+1)& (0+255),w,b
 14774  0033DC  19AD               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 14775  0033DE  B4D8               	btfsc	status,2,c
 14776  0033E0  D7E2               	goto	u11610
 14777  0033E2  D7CF               	goto	l9787
 14778  0033E4                     l9817:
 14779                           
 14780                           ; BSR set to: 0
 14781                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 14782  0033E4  C0AC  F088         	movff	create_chain@ncl,put_cluster@clust
 14783  0033E8  C0AD  F089         	movff	create_chain@ncl+1,put_cluster@clust+1
 14784  0033EC  0EFF               	movlw	255
 14785  0033EE  6F8B               	movwf	(put_cluster@val+1)& (0+255),b
 14786  0033F0  698A               	setf	put_cluster@val& (0+255),b
 14787  0033F2  EC78  F015         	call	_put_cluster	;wreg free
 14788  0033F6  0900               	iorlw	0
 14789  0033F8  B4D8               	btfsc	status,2,c
 14790  0033FA  D7AB               	goto	u11580
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 14794  0033FC  51A0               	movf	create_chain@clust& (0+255),w,b
 14795  0033FE  11A1               	iorwf	(create_chain@clust+1)& (0+255),w,b
 14796  003400  B4D8               	btfsc	status,2,c
 14797  003402  D00D               	goto	l9831
 14798                           
 14799                           ; BSR set to: 0
 14800  003404  C0A0  F088         	movff	create_chain@clust,put_cluster@clust
 14801  003408  C0A1  F089         	movff	create_chain@clust+1,put_cluster@clust+1
 14802  00340C  C0AC  F08A         	movff	create_chain@ncl,put_cluster@val
 14803  003410  C0AD  F08B         	movff	create_chain@ncl+1,put_cluster@val+1
 14804  003414  EC78  F015         	call	_put_cluster	;wreg free
 14805  003418  0900               	iorlw	0
 14806  00341A  B4D8               	btfsc	status,2,c
 14807  00341C  D79A               	goto	u11580
 14808  00341E                     l9831:
 14809                           
 14810                           ; BSR set to: 0
 14811                           ;tff.c: 319: fs->last_clust = ncl;
 14812  00341E  EE20 F018          	lfsr	2,24
 14813  003422  51A6               	movf	create_chain@fs& (0+255),w,b
 14814  003424  26D9               	addwf	fsr2l,f,c
 14815  003426  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 14816  003428  22DA               	addwfc	fsr2h,f,c
 14817  00342A  C0AC  FFDE         	movff	create_chain@ncl,postinc2
 14818  00342E  C0AD  FFDD         	movff	create_chain@ncl+1,postdec2
 14819                           
 14820                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 14821  003432  EE20 F01A          	lfsr	2,26
 14822  003436  51A6               	movf	create_chain@fs& (0+255),w,b
 14823  003438  26D9               	addwf	fsr2l,f,c
 14824  00343A  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 14825  00343C  22DA               	addwfc	fsr2h,f,c
 14826  00343E  28DE               	incf	postinc2,w,c
 14827  003440  E103               	bnz	u11680
 14828  003442  28DE               	incf	postinc2,w,c
 14829  003444  B4D8               	btfsc	status,2,c
 14830  003446  D009               	goto	l9835
 14831  003448                     u11680:
 14832                           
 14833                           ; BSR set to: 0
 14834                           ;tff.c: 321: fs->free_clust--;
 14835  003448  EE20 F01A          	lfsr	2,26
 14836  00344C  51A6               	movf	create_chain@fs& (0+255),w,b
 14837  00344E  26D9               	addwf	fsr2l,f,c
 14838  003450  51A7               	movf	(create_chain@fs+1)& (0+255),w,b
 14839  003452  22DA               	addwfc	fsr2h,f,c
 14840  003454  06DE               	decf	postinc2,f,c
 14841  003456  0E00               	movlw	0
 14842  003458  5ADD               	subwfb	postdec2,f,c
 14843  00345A                     l9835:
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;tff.c: 325: };tff.c: 327: return ncl;
 14847  00345A  C0AC  F0A0         	movff	create_chain@ncl,?_create_chain
 14848  00345E  C0AD  F0A1         	movff	create_chain@ncl+1,?_create_chain+1
 14849                           
 14850                           ; BSR set to: 0
 14851  003462  0012               	return		;funcret
 14852  003464                     __end_of_create_chain:
 14853                           	callstack 0
 14854                           
 14855 ;; *************** function _put_cluster *****************
 14856 ;; Defined at:
 14857 ;;		line 198 in file "bibliotecas/tff.c"
 14858 ;; Parameters:    Size  Location     Type
 14859 ;;  clust           2   40[BANK0 ] unsigned short 
 14860 ;;  val             2   42[BANK0 ] unsigned short 
 14861 ;; Auto vars:     Size  Location     Type
 14862 ;;  fatsect         4   54[BANK0 ] unsigned long 
 14863 ;;  fs              2   62[BANK0 ] PTR struct _FATFS
 14864 ;;		 -> NULL(0), fs(544), 
 14865 ;;  p               2   60[BANK0 ] PTR unsigned char 
 14866 ;;		 -> fs.win(512), NULL(0), fs(544), 
 14867 ;;  bc              2   58[BANK0 ] unsigned short 
 14868 ;; Return value:  Size  Location     Type
 14869 ;;                  1    wreg      enum E105
 14870 ;; Registers used:
 14871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14872 ;; Tracked objects:
 14873 ;;		On entry : 3F/0
 14874 ;;		On exit  : 3F/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14877 ;;      Params:         0       4       0       0       0       0       0       0       0
 14878 ;;      Locals:         0      14       0       0       0       0       0       0       0
 14879 ;;      Temps:          0       6       0       0       0       0       0       0       0
 14880 ;;      Totals:         0      24       0       0       0       0       0       0       0
 14881 ;;Total ram usage:       24 bytes
 14882 ;; Hardware stack levels used:    1
 14883 ;; Hardware stack levels required when called:    9
 14884 ;; This function calls:
 14885 ;;		___wmul
 14886 ;;		_move_window
 14887 ;; This function is called by:
 14888 ;;		_remove_chain
 14889 ;;		_create_chain
 14890 ;; This function uses a non-reentrant model
 14891 ;;
 14892                           
 14893                           	psect	text63
 14894  002AF0                     __ptext63:
 14895                           	callstack 0
 14896  002AF0                     _put_cluster:
 14897                           	callstack 13
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;incstack = 0
 14904  002AF0  C039  F09E         	movff	_FatFs,put_cluster@fs
 14905  002AF4  C03A  F09F         	movff	_FatFs+1,put_cluster@fs+1
 14906                           
 14907                           ; BSR set to: 0
 14908                           ;tff.c: 209: fatsect = fs->fatbase;
 14909  002AF8  EE20 F008          	lfsr	2,8
 14910  002AFC  519E               	movf	put_cluster@fs& (0+255),w,b
 14911  002AFE  26D9               	addwf	fsr2l,f,c
 14912  002B00  519F               	movf	(put_cluster@fs+1)& (0+255),w,b
 14913  002B02  22DA               	addwfc	fsr2h,f,c
 14914  002B04  CFDE F096          	movff	postinc2,put_cluster@fatsect
 14915  002B08  CFDE F097          	movff	postinc2,put_cluster@fatsect+1
 14916  002B0C  CFDE F098          	movff	postinc2,put_cluster@fatsect+2
 14917  002B10  CFDE F099          	movff	postinc2,put_cluster@fatsect+3
 14918                           
 14919                           ;tff.c: 210: switch (fs->fs_type) {
 14920  002B14  D108               	goto	l9717
 14921  002B16                     l9665:
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 14925  002B16  C088  F019         	movff	put_cluster@clust,___wmul@multiplier
 14926  002B1A  C089  F01A         	movff	put_cluster@clust+1,___wmul@multiplier+1
 14927  002B1E  0E00               	movlw	0
 14928  002B20  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
 14929  002B22  0E03               	movlw	3
 14930  002B24  6E1B               	movwf	___wmul@multiplicand^0,c
 14931  002B26  ECC3  F028         	call	___wmul	;wreg free
 14932  002B2A  90D8               	bcf	status,0,c
 14933  002B2C  301A               	rrcf	(?___wmul+1)^0,w,c
 14934  002B2E  0100               	movlb	0	; () banked
 14935  002B30  6F8C               	movwf	??_put_cluster& (0+255),b
 14936  002B32  3019               	rrcf	?___wmul^0,w,c
 14937  002B34  6F9A               	movwf	put_cluster@bc& (0+255),b
 14938  002B36  C08C  F09B         	movff	??_put_cluster,put_cluster@bc+1
 14939                           
 14940                           ; BSR set to: 0
 14941                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 14942  002B3A  C09A  F08C         	movff	put_cluster@bc,??_put_cluster
 14943  002B3E  C09B  F08D         	movff	put_cluster@bc+1,??_put_cluster+1
 14944  002B42  0E09               	movlw	9
 14945  002B44  6F8E               	movwf	(??_put_cluster+2)& (0+255),b
 14946  002B46                     u11415:
 14947  002B46  90D8               	bcf	status,0,c
 14948  002B48  338D               	rrcf	(??_put_cluster+1)& (0+255),f,b
 14949  002B4A  338C               	rrcf	??_put_cluster& (0+255),f,b
 14950  002B4C  2F8E               	decfsz	(??_put_cluster+2)& (0+255),f,b
 14951  002B4E  D7FB               	goto	u11415
 14952  002B50  518C               	movf	??_put_cluster& (0+255),w,b
 14953  002B52  2596               	addwf	put_cluster@fatsect& (0+255),w,b
 14954  002B54  6F73               	movwf	move_window@sector& (0+255),b
 14955  002B56  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 14956  002B58  2197               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 14957  002B5A  6F74               	movwf	(move_window@sector+1)& (0+255),b
 14958  002B5C  0E00               	movlw	0
 14959  002B5E  2198               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 14960  002B60  6F75               	movwf	(move_window@sector+2)& (0+255),b
 14961  002B62  0E00               	movlw	0
 14962  002B64  2199               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 14963  002B66  6F76               	movwf	(move_window@sector+3)& (0+255),b
 14964  002B68  EC97  F018         	call	_move_window	;wreg free
 14965  002B6C  0900               	iorlw	0
 14966  002B6E  A4D8               	btfss	status,2,c
 14967  002B70  D002               	goto	l9673
 14968  002B72                     u11420:
 14969                           
 14970                           ; BSR set to: 0
 14971  002B72  0E00               	movlw	0
 14972  002B74  0012               	return	
 14973  002B76                     l9673:
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;tff.c: 214: p = &fs->win[bc % 512U];
 14977  002B76  0EFF               	movlw	255
 14978  002B78  6F8C               	movwf	??_put_cluster& (0+255),b
 14979  002B7A  0E01               	movlw	1
 14980  002B7C  6F8D               	movwf	(??_put_cluster+1)& (0+255),b
 14981  002B7E  C09A  F08E         	movff	put_cluster@bc,??_put_cluster+2
 14982  002B82  C09B  F08F         	movff	put_cluster@bc+1,??_put_cluster+3
 14983  002B86  518C               	movf	??_put_cluster& (0+255),w,b
 14984  002B88  178E               	andwf	(??_put_cluster+2)& (0+255),f,b
 14985  002B8A  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 14986  002B8C  178F               	andwf	(??_put_cluster+3)& (0+255),f,b
 14987  002B8E  C09E  F090         	movff	put_cluster@fs,??_put_cluster+4
 14988  002B92  C09F  F091         	movff	put_cluster@fs+1,??_put_cluster+5
 14989  002B96  518E               	movf	(??_put_cluster+2)& (0+255),w,b
 14990  002B98  2790               	addwf	(??_put_cluster+4)& (0+255),f,b
 14991  002B9A  518F               	movf	(??_put_cluster+3)& (0+255),w,b
 14992  002B9C  2391               	addwfc	(??_put_cluster+5)& (0+255),f,b
 14993  002B9E  0E20               	movlw	32
 14994  002BA0  2590               	addwf	(??_put_cluster+4)& (0+255),w,b
 14995  002BA2  6F9C               	movwf	put_cluster@p& (0+255),b
 14996  002BA4  0E00               	movlw	0
 14997  002BA6  2191               	addwfc	(??_put_cluster+5)& (0+255),w,b
 14998  002BA8  6F9D               	movwf	(put_cluster@p+1)& (0+255),b
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 15002  002BAA  B188               	btfsc	put_cluster@clust& (0+255),0,b
 15003  002BAC  D004               	goto	l9679
 15004                           
 15005                           ; BSR set to: 0
 15006  002BAE  C08A  F092         	movff	put_cluster@val,_put_cluster$1528
 15007  002BB2  6B93               	clrf	(_put_cluster$1528+1)& (0+255),b
 15008  002BB4  D01A               	goto	l9681
 15009  002BB6                     l9679:
 15010                           
 15011                           ; BSR set to: 0
 15012  002BB6  518A               	movf	put_cluster@val& (0+255),w,b
 15013  002BB8  6F8C               	movwf	??_put_cluster& (0+255),b
 15014  002BBA  6B8D               	clrf	(??_put_cluster+1)& (0+255),b
 15015  002BBC  3B8C               	swapf	??_put_cluster& (0+255),f,b
 15016  002BBE  3B8D               	swapf	(??_put_cluster+1)& (0+255),f,b
 15017  002BC0  0EF0               	movlw	240
 15018  002BC2  178D               	andwf	(??_put_cluster+1)& (0+255),f,b
 15019  002BC4  518C               	movf	??_put_cluster& (0+255),w,b
 15020  002BC6  0B0F               	andlw	15
 15021  002BC8  138D               	iorwf	(??_put_cluster+1)& (0+255),f,b
 15022  002BCA  0EF0               	movlw	240
 15023  002BCC  178C               	andwf	??_put_cluster& (0+255),f,b
 15024  002BCE  C09C  FFD9         	movff	put_cluster@p,fsr2l
 15025  002BD2  C09D  FFDA         	movff	put_cluster@p+1,fsr2h
 15026  002BD6  50DF               	movf	indf2,w,c
 15027  002BD8  0B0F               	andlw	15
 15028  002BDA  6F8E               	movwf	(??_put_cluster+2)& (0+255),b
 15029  002BDC  6B8F               	clrf	(??_put_cluster+3)& (0+255),b
 15030  002BDE  518C               	movf	??_put_cluster& (0+255),w,b
 15031  002BE0  118E               	iorwf	(??_put_cluster+2)& (0+255),w,b
 15032  002BE2  6F92               	movwf	_put_cluster$1528& (0+255),b
 15033  002BE4  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15034  002BE6  118F               	iorwf	(??_put_cluster+3)& (0+255),w,b
 15035  002BE8  6F93               	movwf	(_put_cluster$1528+1)& (0+255),b
 15036  002BEA                     l9681:
 15037                           
 15038                           ; BSR set to: 0
 15039  002BEA  C09C  FFD9         	movff	put_cluster@p,fsr2l
 15040  002BEE  C09D  FFDA         	movff	put_cluster@p+1,fsr2h
 15041  002BF2  C092  FFDF         	movff	_put_cluster$1528,indf2
 15042                           
 15043                           ; BSR set to: 0
 15044                           ;tff.c: 216: bc++;
 15045  002BF6  4B9A               	infsnz	put_cluster@bc& (0+255),f,b
 15046  002BF8  2B9B               	incf	(put_cluster@bc+1)& (0+255),f,b
 15047                           
 15048                           ; BSR set to: 0
 15049                           ;tff.c: 217: fs->winflag = 1;
 15050  002BFA  EE20 F01F          	lfsr	2,31
 15051  002BFE  519E               	movf	put_cluster@fs& (0+255),w,b
 15052  002C00  26D9               	addwf	fsr2l,f,c
 15053  002C02  519F               	movf	(put_cluster@fs+1)& (0+255),w,b
 15054  002C04  22DA               	addwfc	fsr2h,f,c
 15055  002C06  0E01               	movlw	1
 15056  002C08  6EDF               	movwf	indf2,c
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 15060  002C0A  C09A  F08C         	movff	put_cluster@bc,??_put_cluster
 15061  002C0E  C09B  F08D         	movff	put_cluster@bc+1,??_put_cluster+1
 15062  002C12  0E09               	movlw	9
 15063  002C14  6F8E               	movwf	(??_put_cluster+2)& (0+255),b
 15064  002C16                     u11445:
 15065  002C16  90D8               	bcf	status,0,c
 15066  002C18  338D               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15067  002C1A  338C               	rrcf	??_put_cluster& (0+255),f,b
 15068  002C1C  2F8E               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15069  002C1E  D7FB               	goto	u11445
 15070  002C20  518C               	movf	??_put_cluster& (0+255),w,b
 15071  002C22  2596               	addwf	put_cluster@fatsect& (0+255),w,b
 15072  002C24  6F73               	movwf	move_window@sector& (0+255),b
 15073  002C26  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15074  002C28  2197               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15075  002C2A  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15076  002C2C  0E00               	movlw	0
 15077  002C2E  2198               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15078  002C30  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15079  002C32  0E00               	movlw	0
 15080  002C34  2199               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15081  002C36  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15082  002C38  EC97  F018         	call	_move_window	;wreg free
 15083  002C3C  0900               	iorlw	0
 15084  002C3E  B4D8               	btfsc	status,2,c
 15085  002C40  D798               	goto	u11420
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;tff.c: 219: p = &fs->win[bc % 512U];
 15089  002C42  0EFF               	movlw	255
 15090  002C44  6F8C               	movwf	??_put_cluster& (0+255),b
 15091  002C46  0E01               	movlw	1
 15092  002C48  6F8D               	movwf	(??_put_cluster+1)& (0+255),b
 15093  002C4A  C09A  F08E         	movff	put_cluster@bc,??_put_cluster+2
 15094  002C4E  C09B  F08F         	movff	put_cluster@bc+1,??_put_cluster+3
 15095  002C52  518C               	movf	??_put_cluster& (0+255),w,b
 15096  002C54  178E               	andwf	(??_put_cluster+2)& (0+255),f,b
 15097  002C56  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15098  002C58  178F               	andwf	(??_put_cluster+3)& (0+255),f,b
 15099  002C5A  C09E  F090         	movff	put_cluster@fs,??_put_cluster+4
 15100  002C5E  C09F  F091         	movff	put_cluster@fs+1,??_put_cluster+5
 15101  002C62  518E               	movf	(??_put_cluster+2)& (0+255),w,b
 15102  002C64  2790               	addwf	(??_put_cluster+4)& (0+255),f,b
 15103  002C66  518F               	movf	(??_put_cluster+3)& (0+255),w,b
 15104  002C68  2391               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15105  002C6A  0E20               	movlw	32
 15106  002C6C  2590               	addwf	(??_put_cluster+4)& (0+255),w,b
 15107  002C6E  6F9C               	movwf	put_cluster@p& (0+255),b
 15108  002C70  0E00               	movlw	0
 15109  002C72  2191               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15110  002C74  6F9D               	movwf	(put_cluster@p+1)& (0+255),b
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 15114  002C76  B188               	btfsc	put_cluster@clust& (0+255),0,b
 15115  002C78  D00E               	goto	l9699
 15116                           
 15117                           ; BSR set to: 0
 15118  002C7A  C08B  F08C         	movff	put_cluster@val+1,??_put_cluster
 15119  002C7E  0E0F               	movlw	15
 15120  002C80  178C               	andwf	??_put_cluster& (0+255),f,b
 15121  002C82  C09C  FFD9         	movff	put_cluster@p,fsr2l
 15122  002C86  C09D  FFDA         	movff	put_cluster@p+1,fsr2h
 15123  002C8A  50DF               	movf	indf2,w,c
 15124  002C8C  0BF0               	andlw	240
 15125  002C8E  118C               	iorwf	??_put_cluster& (0+255),w,b
 15126  002C90  6F8D               	movwf	(??_put_cluster+1)& (0+255),b
 15127  002C92  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15128  002C94  D00C               	goto	L6
 15129  002C96                     l9699:
 15130                           
 15131                           ; BSR set to: 0
 15132  002C96  C08A  F08C         	movff	put_cluster@val,??_put_cluster
 15133  002C9A  C08B  F08D         	movff	put_cluster@val+1,??_put_cluster+1
 15134  002C9E  0E04               	movlw	4
 15135  002CA0  6F8E               	movwf	(??_put_cluster+2)& (0+255),b
 15136  002CA2                     u11475:
 15137  002CA2  90D8               	bcf	status,0,c
 15138  002CA4  338D               	rrcf	(??_put_cluster+1)& (0+255),f,b
 15139  002CA6  338C               	rrcf	??_put_cluster& (0+255),f,b
 15140  002CA8  2F8E               	decfsz	(??_put_cluster+2)& (0+255),f,b
 15141  002CAA  D7FB               	goto	u11475
 15142  002CAC  518C               	movf	??_put_cluster& (0+255),w,b
 15143  002CAE                     L6:
 15144  002CAE  6F94               	movwf	_put_cluster$1529& (0+255),b
 15145  002CB0  6B95               	clrf	(_put_cluster$1529+1)& (0+255),b
 15146                           
 15147                           ; BSR set to: 0
 15148  002CB2  C09C  FFD9         	movff	put_cluster@p,fsr2l
 15149  002CB6  C09D  FFDA         	movff	put_cluster@p+1,fsr2h
 15150  002CBA  C094  FFDF         	movff	_put_cluster$1529,indf2
 15151                           
 15152                           ;tff.c: 221: break;
 15153  002CBE  D041               	goto	l9719
 15154  002CC0                     l9703:
 15155                           
 15156                           ; BSR set to: 0
 15157                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 15158  002CC0  5189               	movf	(put_cluster@clust+1)& (0+255),w,b
 15159  002CC2  2596               	addwf	put_cluster@fatsect& (0+255),w,b
 15160  002CC4  6F73               	movwf	move_window@sector& (0+255),b
 15161  002CC6  0E00               	movlw	0
 15162  002CC8  2197               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 15163  002CCA  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15164  002CCC  0E00               	movlw	0
 15165  002CCE  2198               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 15166  002CD0  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15167  002CD2  0E00               	movlw	0
 15168  002CD4  2199               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 15169  002CD6  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15170  002CD8  EC97  F018         	call	_move_window	;wreg free
 15171  002CDC  0900               	iorlw	0
 15172  002CDE  B4D8               	btfsc	status,2,c
 15173  002CE0  D748               	goto	u11420
 15174                           
 15175                           ; BSR set to: 0
 15176                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 15177  002CE2  0EFF               	movlw	255
 15178  002CE4  6F8C               	movwf	??_put_cluster& (0+255),b
 15179  002CE6  0E01               	movlw	1
 15180  002CE8  6F8D               	movwf	(??_put_cluster+1)& (0+255),b
 15181  002CEA  C088  F08E         	movff	put_cluster@clust,??_put_cluster+2
 15182  002CEE  C089  F08F         	movff	put_cluster@clust+1,??_put_cluster+3
 15183  002CF2  90D8               	bcf	status,0,c
 15184  002CF4  378E               	rlcf	(??_put_cluster+2)& (0+255),f,b
 15185  002CF6  378F               	rlcf	(??_put_cluster+3)& (0+255),f,b
 15186  002CF8  518C               	movf	??_put_cluster& (0+255),w,b
 15187  002CFA  178E               	andwf	(??_put_cluster+2)& (0+255),f,b
 15188  002CFC  518D               	movf	(??_put_cluster+1)& (0+255),w,b
 15189  002CFE  178F               	andwf	(??_put_cluster+3)& (0+255),f,b
 15190  002D00  C09E  F090         	movff	put_cluster@fs,??_put_cluster+4
 15191  002D04  C09F  F091         	movff	put_cluster@fs+1,??_put_cluster+5
 15192  002D08  518E               	movf	(??_put_cluster+2)& (0+255),w,b
 15193  002D0A  2790               	addwf	(??_put_cluster+4)& (0+255),f,b
 15194  002D0C  518F               	movf	(??_put_cluster+3)& (0+255),w,b
 15195  002D0E  2391               	addwfc	(??_put_cluster+5)& (0+255),f,b
 15196  002D10  0E20               	movlw	32
 15197  002D12  2590               	addwf	(??_put_cluster+4)& (0+255),w,b
 15198  002D14  6ED9               	movwf	fsr2l,c
 15199  002D16  0E00               	movlw	0
 15200  002D18  2191               	addwfc	(??_put_cluster+5)& (0+255),w,b
 15201  002D1A  6EDA               	movwf	fsr2h,c
 15202  002D1C  C08A  FFDE         	movff	put_cluster@val,postinc2
 15203  002D20  C08B  FFDD         	movff	put_cluster@val+1,postdec2
 15204                           
 15205                           ;tff.c: 226: break;
 15206  002D24  D00E               	goto	l9719
 15207  002D26                     l9717:
 15208                           
 15209                           ; BSR set to: 0
 15210  002D26  EE20 F01C          	lfsr	2,28
 15211  002D2A  519E               	movf	put_cluster@fs& (0+255),w,b
 15212  002D2C  26D9               	addwf	fsr2l,f,c
 15213  002D2E  519F               	movf	(put_cluster@fs+1)& (0+255),w,b
 15214  002D30  22DA               	addwfc	fsr2h,f,c
 15215  002D32  50DF               	movf	indf2,w,c
 15216                           
 15217                           ; Switch size 1, requested type "simple"
 15218                           ; Number of cases is 2, Range of values is 1 to 2
 15219                           ; switch strategies available:
 15220                           ; Name         Instructions Cycles
 15221                           ; simple_byte            7     4 (average)
 15222                           ;	Chosen strategy is simple_byte
 15223  002D34  0A01               	xorlw	1	; case 1
 15224  002D36  B4D8               	btfsc	status,2,c
 15225  002D38  D6EE               	goto	l9665
 15226  002D3A  0A03               	xorlw	3	; case 2
 15227  002D3C  B4D8               	btfsc	status,2,c
 15228  002D3E  D7C0               	goto	l9703
 15229  002D40  D718               	goto	u11420
 15230  002D42                     l9719:
 15231                           
 15232                           ; BSR set to: 0
 15233                           ;tff.c: 236: fs->winflag = 1;
 15234  002D42  EE20 F01F          	lfsr	2,31
 15235  002D46  519E               	movf	put_cluster@fs& (0+255),w,b
 15236  002D48  26D9               	addwf	fsr2l,f,c
 15237  002D4A  519F               	movf	(put_cluster@fs+1)& (0+255),w,b
 15238  002D4C  22DA               	addwfc	fsr2h,f,c
 15239  002D4E  0E01               	movlw	1
 15240  002D50  6EDF               	movwf	indf2,c
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;tff.c: 237: return TRUE;
 15244  002D52  0E01               	movlw	1
 15245                           
 15246                           ; BSR set to: 0
 15247  002D54  0012               	return		;funcret
 15248  002D56                     __end_of_put_cluster:
 15249                           	callstack 0
 15250                           
 15251 ;; *************** function _get_cluster *****************
 15252 ;; Defined at:
 15253 ;;		line 155 in file "bibliotecas/tff.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;  clust           2   48[COMRAM] unsigned short 
 15256 ;; Auto vars:     Size  Location     Type
 15257 ;;  fatsect         4   51[BANK0 ] unsigned long 
 15258 ;;  fs              2   57[BANK0 ] PTR struct _FATFS
 15259 ;;		 -> NULL(0), fs(544), 
 15260 ;;  bc              2   55[BANK0 ] unsigned short 
 15261 ;;  wc              2   49[BANK0 ] unsigned short 
 15262 ;; Return value:  Size  Location     Type
 15263 ;;                  2   48[COMRAM] unsigned short 
 15264 ;; Registers used:
 15265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15266 ;; Tracked objects:
 15267 ;;		On entry : 3F/0
 15268 ;;		On exit  : 3F/0
 15269 ;;		Unchanged: 0/0
 15270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15271 ;;      Params:         2       0       0       0       0       0       0       0       0
 15272 ;;      Locals:         0      10       0       0       0       0       0       0       0
 15273 ;;      Temps:          0       9       0       0       0       0       0       0       0
 15274 ;;      Totals:         2      19       0       0       0       0       0       0       0
 15275 ;;Total ram usage:       21 bytes
 15276 ;; Hardware stack levels used:    1
 15277 ;; Hardware stack levels required when called:    9
 15278 ;; This function calls:
 15279 ;;		___wmul
 15280 ;;		_move_window
 15281 ;; This function is called by:
 15282 ;;		_remove_chain
 15283 ;;		_create_chain
 15284 ;;		_next_dir_entry
 15285 ;;		_f_lseek
 15286 ;;		_f_read
 15287 ;; This function uses a non-reentrant model
 15288 ;;
 15289                           
 15290                           	psect	text64
 15291  002D56                     __ptext64:
 15292                           	callstack 0
 15293  002D56                     _get_cluster:
 15294                           	callstack 13
 15295                           
 15296                           ; BSR set to: 0
 15297                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 15298                           
 15299                           ; BSR set to: 0
 15300                           ;incstack = 0
 15301  002D56  C039  F099         	movff	_FatFs,get_cluster@fs
 15302  002D5A  C03A  F09A         	movff	_FatFs+1,get_cluster@fs+1
 15303                           
 15304                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 15305  002D5E  5032               	movf	(get_cluster@clust+1)^0,w,c
 15306  002D60  E104               	bnz	u11320
 15307  002D62  0E02               	movlw	2
 15308  002D64  5C31               	subwf	get_cluster@clust^0,w,c
 15309  002D66  A0D8               	btfss	status,0,c
 15310  002D68  D102               	goto	l9657
 15311  002D6A                     u11320:
 15312                           
 15313                           ; BSR set to: 0
 15314  002D6A  EE20 F016          	lfsr	2,22
 15315  002D6E  5199               	movf	get_cluster@fs& (0+255),w,b
 15316  002D70  26D9               	addwf	fsr2l,f,c
 15317  002D72  519A               	movf	(get_cluster@fs+1)& (0+255),w,b
 15318  002D74  22DA               	addwfc	fsr2h,f,c
 15319  002D76  50DE               	movf	postinc2,w,c
 15320  002D78  5C31               	subwf	get_cluster@clust^0,w,c
 15321  002D7A  50DE               	movf	postinc2,w,c
 15322  002D7C  5832               	subwfb	(get_cluster@clust+1)^0,w,c
 15323  002D7E  B0D8               	btfsc	status,0,c
 15324  002D80  D0F6               	goto	l9657
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;tff.c: 165: fatsect = fs->fatbase;
 15328  002D82  EE20 F008          	lfsr	2,8
 15329  002D86  5199               	movf	get_cluster@fs& (0+255),w,b
 15330  002D88  26D9               	addwf	fsr2l,f,c
 15331  002D8A  519A               	movf	(get_cluster@fs+1)& (0+255),w,b
 15332  002D8C  22DA               	addwfc	fsr2h,f,c
 15333  002D8E  CFDE F093          	movff	postinc2,get_cluster@fatsect
 15334  002D92  CFDE F094          	movff	postinc2,get_cluster@fatsect+1
 15335  002D96  CFDE F095          	movff	postinc2,get_cluster@fatsect+2
 15336  002D9A  CFDE F096          	movff	postinc2,get_cluster@fatsect+3
 15337                           
 15338                           ;tff.c: 166: switch (fs->fs_type) {
 15339  002D9E  D0DA               	goto	l9655
 15340  002DA0                     l9621:
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 15344  002DA0  C031  F019         	movff	get_cluster@clust,___wmul@multiplier
 15345  002DA4  C032  F01A         	movff	get_cluster@clust+1,___wmul@multiplier+1
 15346  002DA8  0E00               	movlw	0
 15347  002DAA  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
 15348  002DAC  0E03               	movlw	3
 15349  002DAE  6E1B               	movwf	___wmul@multiplicand^0,c
 15350  002DB0  ECC3  F028         	call	___wmul	;wreg free
 15351  002DB4  90D8               	bcf	status,0,c
 15352  002DB6  301A               	rrcf	(?___wmul+1)^0,w,c
 15353  002DB8  0100               	movlb	0	; () banked
 15354  002DBA  6F88               	movwf	??_get_cluster& (0+255),b
 15355  002DBC  3019               	rrcf	?___wmul^0,w,c
 15356  002DBE  6F97               	movwf	get_cluster@bc& (0+255),b
 15357  002DC0  C088  F098         	movff	??_get_cluster,get_cluster@bc+1
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 15361  002DC4  C097  F088         	movff	get_cluster@bc,??_get_cluster
 15362  002DC8  C098  F089         	movff	get_cluster@bc+1,??_get_cluster+1
 15363  002DCC  0E09               	movlw	9
 15364  002DCE  6F8A               	movwf	(??_get_cluster+2)& (0+255),b
 15365  002DD0                     u11345:
 15366  002DD0  90D8               	bcf	status,0,c
 15367  002DD2  3389               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15368  002DD4  3388               	rrcf	??_get_cluster& (0+255),f,b
 15369  002DD6  2F8A               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15370  002DD8  D7FB               	goto	u11345
 15371  002DDA  5188               	movf	??_get_cluster& (0+255),w,b
 15372  002DDC  2593               	addwf	get_cluster@fatsect& (0+255),w,b
 15373  002DDE  6F73               	movwf	move_window@sector& (0+255),b
 15374  002DE0  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15375  002DE2  2194               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15376  002DE4  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15377  002DE6  0E00               	movlw	0
 15378  002DE8  2195               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15379  002DEA  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15380  002DEC  0E00               	movlw	0
 15381  002DEE  2196               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15382  002DF0  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15383  002DF2  EC97  F018         	call	_move_window	;wreg free
 15384  002DF6  0900               	iorlw	0
 15385  002DF8  B4D8               	btfsc	status,2,c
 15386  002DFA  D0B9               	goto	l9657
 15387                           
 15388                           ; BSR set to: 0
 15389                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 15390  002DFC  0EFF               	movlw	255
 15391  002DFE  6F88               	movwf	??_get_cluster& (0+255),b
 15392  002E00  0E01               	movlw	1
 15393  002E02  6F89               	movwf	(??_get_cluster+1)& (0+255),b
 15394  002E04  C097  F08A         	movff	get_cluster@bc,??_get_cluster+2
 15395  002E08  C098  F08B         	movff	get_cluster@bc+1,??_get_cluster+3
 15396  002E0C  5188               	movf	??_get_cluster& (0+255),w,b
 15397  002E0E  178A               	andwf	(??_get_cluster+2)& (0+255),f,b
 15398  002E10  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15399  002E12  178B               	andwf	(??_get_cluster+3)& (0+255),f,b
 15400  002E14  C099  F08C         	movff	get_cluster@fs,??_get_cluster+4
 15401  002E18  C09A  F08D         	movff	get_cluster@fs+1,??_get_cluster+5
 15402  002E1C  518A               	movf	(??_get_cluster+2)& (0+255),w,b
 15403  002E1E  278C               	addwf	(??_get_cluster+4)& (0+255),f,b
 15404  002E20  518B               	movf	(??_get_cluster+3)& (0+255),w,b
 15405  002E22  238D               	addwfc	(??_get_cluster+5)& (0+255),f,b
 15406  002E24  0E20               	movlw	32
 15407  002E26  258C               	addwf	(??_get_cluster+4)& (0+255),w,b
 15408  002E28  6ED9               	movwf	fsr2l,c
 15409  002E2A  0E00               	movlw	0
 15410  002E2C  218D               	addwfc	(??_get_cluster+5)& (0+255),w,b
 15411  002E2E  6EDA               	movwf	fsr2h,c
 15412  002E30  50DF               	movf	indf2,w,c
 15413  002E32  6F8E               	movwf	(??_get_cluster+6)& (0+255),b
 15414  002E34  518E               	movf	(??_get_cluster+6)& (0+255),w,b
 15415  002E36  6F91               	movwf	get_cluster@wc& (0+255),b
 15416  002E38  6B92               	clrf	(get_cluster@wc+1)& (0+255),b
 15417                           
 15418                           ; BSR set to: 0
 15419  002E3A  4B97               	infsnz	get_cluster@bc& (0+255),f,b
 15420  002E3C  2B98               	incf	(get_cluster@bc+1)& (0+255),f,b
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 15424  002E3E  C097  F088         	movff	get_cluster@bc,??_get_cluster
 15425  002E42  C098  F089         	movff	get_cluster@bc+1,??_get_cluster+1
 15426  002E46  0E09               	movlw	9
 15427  002E48  6F8A               	movwf	(??_get_cluster+2)& (0+255),b
 15428  002E4A                     u11365:
 15429  002E4A  90D8               	bcf	status,0,c
 15430  002E4C  3389               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15431  002E4E  3388               	rrcf	??_get_cluster& (0+255),f,b
 15432  002E50  2F8A               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15433  002E52  D7FB               	goto	u11365
 15434  002E54  5188               	movf	??_get_cluster& (0+255),w,b
 15435  002E56  2593               	addwf	get_cluster@fatsect& (0+255),w,b
 15436  002E58  6F73               	movwf	move_window@sector& (0+255),b
 15437  002E5A  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15438  002E5C  2194               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15439  002E5E  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15440  002E60  0E00               	movlw	0
 15441  002E62  2195               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15442  002E64  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15443  002E66  0E00               	movlw	0
 15444  002E68  2196               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15445  002E6A  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15446  002E6C  EC97  F018         	call	_move_window	;wreg free
 15447  002E70  0900               	iorlw	0
 15448  002E72  B4D8               	btfsc	status,2,c
 15449  002E74  D07C               	goto	l9657
 15450                           
 15451                           ; BSR set to: 0
 15452                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 15453  002E76  0EFF               	movlw	255
 15454  002E78  6F88               	movwf	??_get_cluster& (0+255),b
 15455  002E7A  0E01               	movlw	1
 15456  002E7C  6F89               	movwf	(??_get_cluster+1)& (0+255),b
 15457  002E7E  C097  F08A         	movff	get_cluster@bc,??_get_cluster+2
 15458  002E82  C098  F08B         	movff	get_cluster@bc+1,??_get_cluster+3
 15459  002E86  5188               	movf	??_get_cluster& (0+255),w,b
 15460  002E88  178A               	andwf	(??_get_cluster+2)& (0+255),f,b
 15461  002E8A  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15462  002E8C  178B               	andwf	(??_get_cluster+3)& (0+255),f,b
 15463  002E8E  C099  F08C         	movff	get_cluster@fs,??_get_cluster+4
 15464  002E92  C09A  F08D         	movff	get_cluster@fs+1,??_get_cluster+5
 15465  002E96  518A               	movf	(??_get_cluster+2)& (0+255),w,b
 15466  002E98  278C               	addwf	(??_get_cluster+4)& (0+255),f,b
 15467  002E9A  518B               	movf	(??_get_cluster+3)& (0+255),w,b
 15468  002E9C  238D               	addwfc	(??_get_cluster+5)& (0+255),f,b
 15469  002E9E  0E20               	movlw	32
 15470  002EA0  258C               	addwf	(??_get_cluster+4)& (0+255),w,b
 15471  002EA2  6ED9               	movwf	fsr2l,c
 15472  002EA4  0E00               	movlw	0
 15473  002EA6  218D               	addwfc	(??_get_cluster+5)& (0+255),w,b
 15474  002EA8  6EDA               	movwf	fsr2h,c
 15475  002EAA  50DF               	movf	indf2,w,c
 15476  002EAC  6F8E               	movwf	(??_get_cluster+6)& (0+255),b
 15477  002EAE  518E               	movf	(??_get_cluster+6)& (0+255),w,b
 15478  002EB0  6F90               	movwf	(??_get_cluster+8)& (0+255),b
 15479  002EB2  6B8F               	clrf	(??_get_cluster+7)& (0+255),b
 15480  002EB4  518F               	movf	(??_get_cluster+7)& (0+255),w,b
 15481  002EB6  1391               	iorwf	get_cluster@wc& (0+255),f,b
 15482  002EB8  5190               	movf	(??_get_cluster+8)& (0+255),w,b
 15483  002EBA  1392               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 15484                           
 15485                           ; BSR set to: 0
 15486                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 15487  002EBC  B031               	btfsc	get_cluster@clust^0,0,c
 15488  002EBE  D007               	goto	l9641
 15489                           
 15490                           ; BSR set to: 0
 15491  002EC0  0EFF               	movlw	255
 15492  002EC2  1591               	andwf	get_cluster@wc& (0+255),w,b
 15493  002EC4  6E31               	movwf	?_get_cluster^0,c
 15494  002EC6  0E0F               	movlw	15
 15495  002EC8  1592               	andwf	(get_cluster@wc+1)& (0+255),w,b
 15496  002ECA  6E32               	movwf	(?_get_cluster+1)^0,c
 15497  002ECC  0012               	return	
 15498  002ECE                     l9641:
 15499                           
 15500                           ; BSR set to: 0
 15501  002ECE  C091  F088         	movff	get_cluster@wc,??_get_cluster
 15502  002ED2  C092  F089         	movff	get_cluster@wc+1,??_get_cluster+1
 15503  002ED6  0E04               	movlw	4
 15504  002ED8  6F8A               	movwf	(??_get_cluster+2)& (0+255),b
 15505  002EDA                     u11395:
 15506  002EDA  90D8               	bcf	status,0,c
 15507  002EDC  3389               	rrcf	(??_get_cluster+1)& (0+255),f,b
 15508  002EDE  3388               	rrcf	??_get_cluster& (0+255),f,b
 15509  002EE0  2F8A               	decfsz	(??_get_cluster+2)& (0+255),f,b
 15510  002EE2  D7FB               	goto	u11395
 15511  002EE4  C088  F031         	movff	??_get_cluster,?_get_cluster
 15512  002EE8  C089  F032         	movff	??_get_cluster+1,?_get_cluster+1
 15513  002EEC  0012               	return	
 15514  002EEE                     l9645:
 15515                           
 15516                           ; BSR set to: 0
 15517                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 15518  002EEE  5032               	movf	(get_cluster@clust+1)^0,w,c
 15519  002EF0  2593               	addwf	get_cluster@fatsect& (0+255),w,b
 15520  002EF2  6F73               	movwf	move_window@sector& (0+255),b
 15521  002EF4  0E00               	movlw	0
 15522  002EF6  2194               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 15523  002EF8  6F74               	movwf	(move_window@sector+1)& (0+255),b
 15524  002EFA  0E00               	movlw	0
 15525  002EFC  2195               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 15526  002EFE  6F75               	movwf	(move_window@sector+2)& (0+255),b
 15527  002F00  0E00               	movlw	0
 15528  002F02  2196               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 15529  002F04  6F76               	movwf	(move_window@sector+3)& (0+255),b
 15530  002F06  EC97  F018         	call	_move_window	;wreg free
 15531  002F0A  0900               	iorlw	0
 15532  002F0C  B4D8               	btfsc	status,2,c
 15533  002F0E  D02F               	goto	l9657
 15534                           
 15535                           ; BSR set to: 0
 15536                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 15537  002F10  0EFF               	movlw	255
 15538  002F12  6F88               	movwf	??_get_cluster& (0+255),b
 15539  002F14  0E01               	movlw	1
 15540  002F16  6F89               	movwf	(??_get_cluster+1)& (0+255),b
 15541  002F18  C031  F08A         	movff	get_cluster@clust,??_get_cluster+2
 15542  002F1C  C032  F08B         	movff	get_cluster@clust+1,??_get_cluster+3
 15543  002F20  90D8               	bcf	status,0,c
 15544  002F22  378A               	rlcf	(??_get_cluster+2)& (0+255),f,b
 15545  002F24  378B               	rlcf	(??_get_cluster+3)& (0+255),f,b
 15546  002F26  5188               	movf	??_get_cluster& (0+255),w,b
 15547  002F28  178A               	andwf	(??_get_cluster+2)& (0+255),f,b
 15548  002F2A  5189               	movf	(??_get_cluster+1)& (0+255),w,b
 15549  002F2C  178B               	andwf	(??_get_cluster+3)& (0+255),f,b
 15550  002F2E  C099  F08C         	movff	get_cluster@fs,??_get_cluster+4
 15551  002F32  C09A  F08D         	movff	get_cluster@fs+1,??_get_cluster+5
 15552  002F36  518A               	movf	(??_get_cluster+2)& (0+255),w,b
 15553  002F38  278C               	addwf	(??_get_cluster+4)& (0+255),f,b
 15554  002F3A  518B               	movf	(??_get_cluster+3)& (0+255),w,b
 15555  002F3C  238D               	addwfc	(??_get_cluster+5)& (0+255),f,b
 15556  002F3E  0E20               	movlw	32
 15557  002F40  258C               	addwf	(??_get_cluster+4)& (0+255),w,b
 15558  002F42  6ED9               	movwf	fsr2l,c
 15559  002F44  0E00               	movlw	0
 15560  002F46  218D               	addwfc	(??_get_cluster+5)& (0+255),w,b
 15561  002F48  6EDA               	movwf	fsr2h,c
 15562  002F4A  CFDE F031          	movff	postinc2,?_get_cluster
 15563  002F4E  CFDD F032          	movff	postdec2,?_get_cluster+1
 15564  002F52  0012               	return	
 15565  002F54                     l9655:
 15566                           
 15567                           ; BSR set to: 0
 15568  002F54  EE20 F01C          	lfsr	2,28
 15569  002F58  5199               	movf	get_cluster@fs& (0+255),w,b
 15570  002F5A  26D9               	addwf	fsr2l,f,c
 15571  002F5C  519A               	movf	(get_cluster@fs+1)& (0+255),w,b
 15572  002F5E  22DA               	addwfc	fsr2h,f,c
 15573  002F60  50DF               	movf	indf2,w,c
 15574                           
 15575                           ; Switch size 1, requested type "simple"
 15576                           ; Number of cases is 2, Range of values is 1 to 2
 15577                           ; switch strategies available:
 15578                           ; Name         Instructions Cycles
 15579                           ; simple_byte            7     4 (average)
 15580                           ;	Chosen strategy is simple_byte
 15581  002F62  0A01               	xorlw	1	; case 1
 15582  002F64  B4D8               	btfsc	status,2,c
 15583  002F66  D71C               	goto	l9621
 15584  002F68  0A03               	xorlw	3	; case 2
 15585  002F6A  B4D8               	btfsc	status,2,c
 15586  002F6C  D7C0               	goto	l9645
 15587  002F6E                     l9657:
 15588                           
 15589                           ; BSR set to: 0
 15590                           ;tff.c: 184: };tff.c: 186: return 1;
 15591  002F6E  0E00               	movlw	0
 15592  002F70  6E32               	movwf	(?_get_cluster+1)^0,c
 15593  002F72  0E01               	movlw	1
 15594  002F74  6E31               	movwf	?_get_cluster^0,c
 15595                           
 15596                           ; BSR set to: 0
 15597  002F76  0012               	return		;funcret
 15598  002F78                     __end_of_get_cluster:
 15599                           	callstack 0
 15600                           
 15601 ;; *************** function ___wmul *****************
 15602 ;; Defined at:
 15603 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 15604 ;; Parameters:    Size  Location     Type
 15605 ;;  multiplier      2   24[COMRAM] unsigned int 
 15606 ;;  multiplicand    2   26[COMRAM] unsigned int 
 15607 ;; Auto vars:     Size  Location     Type
 15608 ;;  product         2   28[COMRAM] unsigned int 
 15609 ;; Return value:  Size  Location     Type
 15610 ;;                  2   24[COMRAM] unsigned int 
 15611 ;; Registers used:
 15612 ;;		wreg, status,2, status,0, prodl, prodh
 15613 ;; Tracked objects:
 15614 ;;		On entry : 0/0
 15615 ;;		On exit  : 0/0
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15618 ;;      Params:         4       0       0       0       0       0       0       0       0
 15619 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15620 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15621 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15622 ;;Total ram usage:        6 bytes
 15623 ;; Hardware stack levels used:    1
 15624 ;; Hardware stack levels required when called:    3
 15625 ;; This function calls:
 15626 ;;		Nothing
 15627 ;; This function is called by:
 15628 ;;		_get_cluster
 15629 ;;		_put_cluster
 15630 ;;		_fprintf
 15631 ;;		_atoi
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           	psect	text65
 15636  005186                     __ptext65:
 15637                           	callstack 0
 15638  005186                     ___wmul:
 15639                           	callstack 24
 15640                           
 15641                           ; BSR set to: 0
 15642                           ;incstack = 0
 15643  005186  5019               	movf	___wmul@multiplier^0,w,c
 15644  005188  021B               	mulwf	___wmul@multiplicand^0,c
 15645  00518A  CFF3 F01D          	movff	prodl,___wmul@product
 15646  00518E  CFF4 F01E          	movff	prodh,___wmul@product+1
 15647  005192  5019               	movf	___wmul@multiplier^0,w,c
 15648  005194  021C               	mulwf	(___wmul@multiplicand+1)^0,c
 15649  005196  50F3               	movf	243,w,c
 15650  005198  261E               	addwf	(___wmul@product+1)^0,f,c
 15651  00519A  501A               	movf	(___wmul@multiplier+1)^0,w,c
 15652  00519C  021B               	mulwf	___wmul@multiplicand^0,c
 15653  00519E  50F3               	movf	243,w,c
 15654  0051A0  261E               	addwf	(___wmul@product+1)^0,f,c
 15655  0051A2  C01D  F019         	movff	___wmul@product,?___wmul
 15656  0051A6  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
 15657  0051AA  0012               	return		;funcret
 15658  0051AC                     __end_of___wmul:
 15659                           	callstack 0
 15660                           
 15661 ;; *************** function ___lldiv *****************
 15662 ;; Defined at:
 15663 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;  dividend        4   24[COMRAM] unsigned long 
 15666 ;;  divisor         4   28[COMRAM] unsigned long 
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;  quotient        4   32[COMRAM] unsigned long 
 15669 ;;  counter         1   36[COMRAM] unsigned char 
 15670 ;; Return value:  Size  Location     Type
 15671 ;;                  4   24[COMRAM] unsigned long 
 15672 ;; Registers used:
 15673 ;;		wreg, status,2, status,0
 15674 ;; Tracked objects:
 15675 ;;		On entry : 3C/3
 15676 ;;		On exit  : 3C/0
 15677 ;;		Unchanged: 3C/0
 15678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15679 ;;      Params:         8       0       0       0       0       0       0       0       0
 15680 ;;      Locals:         5       0       0       0       0       0       0       0       0
 15681 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15682 ;;      Totals:        13       0       0       0       0       0       0       0       0
 15683 ;;Total ram usage:       13 bytes
 15684 ;; Hardware stack levels used:    1
 15685 ;; Hardware stack levels required when called:    3
 15686 ;; This function calls:
 15687 ;;		Nothing
 15688 ;; This function is called by:
 15689 ;;		_auto_mount
 15690 ;;		_f_lseek
 15691 ;;		_fprintf
 15692 ;; This function uses a non-reentrant model
 15693 ;;
 15694                           
 15695                           	psect	text66
 15696  00473A                     __ptext66:
 15697                           	callstack 0
 15698  00473A                     ___lldiv:
 15699                           	callstack 23
 15700                           
 15701                           ;incstack = 0
 15702  00473A  0E00               	movlw	0
 15703  00473C  6E21               	movwf	___lldiv@quotient^0,c
 15704  00473E  0E00               	movlw	0
 15705  004740  6E22               	movwf	(___lldiv@quotient+1)^0,c
 15706  004742  0E00               	movlw	0
 15707  004744  6E23               	movwf	(___lldiv@quotient+2)^0,c
 15708  004746  0E00               	movlw	0
 15709  004748  6E24               	movwf	(___lldiv@quotient+3)^0,c
 15710  00474A  501D               	movf	___lldiv@divisor^0,w,c
 15711  00474C  101E               	iorwf	(___lldiv@divisor+1)^0,w,c
 15712  00474E  101F               	iorwf	(___lldiv@divisor+2)^0,w,c
 15713  004750  1020               	iorwf	(___lldiv@divisor+3)^0,w,c
 15714  004752  B4D8               	btfsc	status,2,c
 15715  004754  D02A               	goto	l1555
 15716  004756  0E01               	movlw	1
 15717  004758  6E25               	movwf	___lldiv@counter^0,c
 15718  00475A  D006               	goto	l10337
 15719  00475C                     l10335:
 15720  00475C  90D8               	bcf	status,0,c
 15721  00475E  361D               	rlcf	___lldiv@divisor^0,f,c
 15722  004760  361E               	rlcf	(___lldiv@divisor+1)^0,f,c
 15723  004762  361F               	rlcf	(___lldiv@divisor+2)^0,f,c
 15724  004764  3620               	rlcf	(___lldiv@divisor+3)^0,f,c
 15725  004766  2A25               	incf	___lldiv@counter^0,f,c
 15726  004768                     l10337:
 15727  004768  AE20               	btfss	(___lldiv@divisor+3)^0,7,c
 15728  00476A  D7F8               	goto	l10335
 15729  00476C                     u12430:
 15730  00476C  90D8               	bcf	status,0,c
 15731  00476E  3621               	rlcf	___lldiv@quotient^0,f,c
 15732  004770  3622               	rlcf	(___lldiv@quotient+1)^0,f,c
 15733  004772  3623               	rlcf	(___lldiv@quotient+2)^0,f,c
 15734  004774  3624               	rlcf	(___lldiv@quotient+3)^0,f,c
 15735  004776  501D               	movf	___lldiv@divisor^0,w,c
 15736  004778  5C19               	subwf	___lldiv@dividend^0,w,c
 15737  00477A  501E               	movf	(___lldiv@divisor+1)^0,w,c
 15738  00477C  581A               	subwfb	(___lldiv@dividend+1)^0,w,c
 15739  00477E  501F               	movf	(___lldiv@divisor+2)^0,w,c
 15740  004780  581B               	subwfb	(___lldiv@dividend+2)^0,w,c
 15741  004782  5020               	movf	(___lldiv@divisor+3)^0,w,c
 15742  004784  581C               	subwfb	(___lldiv@dividend+3)^0,w,c
 15743  004786  A0D8               	btfss	status,0,c
 15744  004788  D009               	goto	l10347
 15745  00478A  501D               	movf	___lldiv@divisor^0,w,c
 15746  00478C  5E19               	subwf	___lldiv@dividend^0,f,c
 15747  00478E  501E               	movf	(___lldiv@divisor+1)^0,w,c
 15748  004790  5A1A               	subwfb	(___lldiv@dividend+1)^0,f,c
 15749  004792  501F               	movf	(___lldiv@divisor+2)^0,w,c
 15750  004794  5A1B               	subwfb	(___lldiv@dividend+2)^0,f,c
 15751  004796  5020               	movf	(___lldiv@divisor+3)^0,w,c
 15752  004798  5A1C               	subwfb	(___lldiv@dividend+3)^0,f,c
 15753  00479A  8021               	bsf	___lldiv@quotient^0,0,c
 15754  00479C                     l10347:
 15755  00479C  90D8               	bcf	status,0,c
 15756  00479E  3220               	rrcf	(___lldiv@divisor+3)^0,f,c
 15757  0047A0  321F               	rrcf	(___lldiv@divisor+2)^0,f,c
 15758  0047A2  321E               	rrcf	(___lldiv@divisor+1)^0,f,c
 15759  0047A4  321D               	rrcf	___lldiv@divisor^0,f,c
 15760  0047A6  2E25               	decfsz	___lldiv@counter^0,f,c
 15761  0047A8  D7E1               	goto	u12430
 15762  0047AA                     l1555:
 15763  0047AA  C021  F019         	movff	___lldiv@quotient,?___lldiv
 15764  0047AE  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
 15765  0047B2  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
 15766  0047B6  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
 15767  0047BA  0012               	return		;funcret
 15768  0047BC                     __end_of___lldiv:
 15769                           	callstack 0
 15770                           
 15771 ;; *************** function _f_close *****************
 15772 ;; Defined at:
 15773 ;;		line 1116 in file "bibliotecas/tff.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;  fp              2   49[BANK0 ] PTR struct _FIL
 15776 ;;		 -> fil(28), 
 15777 ;; Auto vars:     Size  Location     Type
 15778 ;;  res             1   51[BANK0 ] enum E155
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  1    wreg      enum E3236
 15781 ;; Registers used:
 15782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15783 ;; Tracked objects:
 15784 ;;		On entry : 3F/0
 15785 ;;		On exit  : 3F/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15788 ;;      Params:         0       2       0       0       0       0       0       0       0
 15789 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15790 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15791 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15792 ;;Total ram usage:        3 bytes
 15793 ;; Hardware stack levels used:    1
 15794 ;; Hardware stack levels required when called:   11
 15795 ;; This function calls:
 15796 ;;		_f_sync
 15797 ;; This function is called by:
 15798 ;;		_escrita_sdcard
 15799 ;; This function uses a non-reentrant model
 15800 ;;
 15801                           
 15802                           	psect	text67
 15803  00510C                     __ptext67:
 15804                           	callstack 0
 15805  00510C                     _f_close:
 15806                           	callstack 16
 15807                           
 15808                           ; BSR set to: 0
 15809                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 15810                           
 15811                           ;incstack = 0
 15812  00510C  C091  F088         	movff	f_close@fp,f_sync@fp
 15813  005110  C092  F089         	movff	f_close@fp+1,f_sync@fp+1
 15814  005114  ECD2  F01C         	call	_f_sync	;wreg free
 15815  005118  6F93               	movwf	f_close@res& (0+255),b
 15816                           
 15817                           ; BSR set to: 0
 15818                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 15819  00511A  5193               	movf	f_close@res& (0+255),w,b
 15820  00511C  A4D8               	btfss	status,2,c
 15821  00511E  0012               	return	
 15822                           
 15823                           ; BSR set to: 0
 15824  005120  EE20 F004          	lfsr	2,4
 15825  005124  5191               	movf	f_close@fp& (0+255),w,b
 15826  005126  26D9               	addwf	fsr2l,f,c
 15827  005128  5192               	movf	(f_close@fp+1)& (0+255),w,b
 15828  00512A  22DA               	addwfc	fsr2h,f,c
 15829  00512C  0E00               	movlw	0
 15830  00512E  6EDE               	movwf	postinc2,c
 15831  005130  0E00               	movlw	0
 15832  005132  6EDD               	movwf	postdec2,c
 15833                           
 15834                           ; BSR set to: 0
 15835  005134  0012               	return		;funcret
 15836  005136                     __end_of_f_close:
 15837                           	callstack 0
 15838                           
 15839 ;; *************** function _f_sync *****************
 15840 ;; Defined at:
 15841 ;;		line 1077 in file "bibliotecas/tff.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;  fp              2   40[BANK0 ] PTR struct _FIL
 15844 ;;		 -> fil(28), 
 15845 ;; Auto vars:     Size  Location     Type
 15846 ;;  tim             4   42[BANK0 ] unsigned long 
 15847 ;;  dir             2   47[BANK0 ] PTR unsigned char 
 15848 ;;		 -> NULL(0), fs(544), 
 15849 ;;  res             1   46[BANK0 ] enum E155
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  1    wreg      enum E155
 15852 ;; Registers used:
 15853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15854 ;; Tracked objects:
 15855 ;;		On entry : 3F/0
 15856 ;;		On exit  : 3F/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15859 ;;      Params:         0       2       0       0       0       0       0       0       0
 15860 ;;      Locals:         0       7       0       0       0       0       0       0       0
 15861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15862 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15863 ;;Total ram usage:        9 bytes
 15864 ;; Hardware stack levels used:    1
 15865 ;; Hardware stack levels required when called:   10
 15866 ;; This function calls:
 15867 ;;		_get_fattime
 15868 ;;		_move_window
 15869 ;;		_sync
 15870 ;;		_validate
 15871 ;; This function is called by:
 15872 ;;		_f_close
 15873 ;; This function uses a non-reentrant model
 15874 ;;
 15875                           
 15876                           	psect	text68
 15877  0039A4                     __ptext68:
 15878                           	callstack 0
 15879  0039A4                     _f_sync:
 15880                           	callstack 16
 15881                           
 15882                           ; BSR set to: 0
 15883                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;incstack = 0
 15887  0039A4  EE20 F004          	lfsr	2,4
 15888  0039A8  5188               	movf	f_sync@fp& (0+255),w,b
 15889  0039AA  26D9               	addwf	fsr2l,f,c
 15890  0039AC  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 15891  0039AE  22DA               	addwfc	fsr2h,f,c
 15892  0039B0  CFDE F01F          	movff	postinc2,validate@fs
 15893  0039B4  CFDD F020          	movff	postdec2,validate@fs+1
 15894  0039B8  C088  FFD9         	movff	f_sync@fp,fsr2l
 15895  0039BC  C089  FFDA         	movff	f_sync@fp+1,fsr2h
 15896  0039C0  CFDE F021          	movff	postinc2,validate@id
 15897  0039C4  CFDD F022          	movff	postdec2,validate@id+1
 15898  0039C8  ECD5  F026         	call	_validate	;wreg free
 15899  0039CC  0100               	movlb	0	; () banked
 15900  0039CE  6F8E               	movwf	f_sync@res& (0+255),b
 15901                           
 15902                           ; BSR set to: 0
 15903                           ;tff.c: 1087: if (res == FR_OK) {
 15904  0039D0  518E               	movf	f_sync@res& (0+255),w,b
 15905  0039D2  A4D8               	btfss	status,2,c
 15906  0039D4  D077               	goto	l10763
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;tff.c: 1088: if (fp->flag & 0x20) {
 15910  0039D6  EE20 F002          	lfsr	2,2
 15911  0039DA  5188               	movf	f_sync@fp& (0+255),w,b
 15912  0039DC  26D9               	addwf	fsr2l,f,c
 15913  0039DE  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 15914  0039E0  22DA               	addwfc	fsr2h,f,c
 15915  0039E2  AADF               	btfss	indf2,5,c
 15916  0039E4  D06F               	goto	l10763
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 15920  0039E6  EE20 F016          	lfsr	2,22
 15921  0039EA  5188               	movf	f_sync@fp& (0+255),w,b
 15922  0039EC  26D9               	addwf	fsr2l,f,c
 15923  0039EE  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 15924  0039F0  22DA               	addwfc	fsr2h,f,c
 15925  0039F2  CFDE F073          	movff	postinc2,move_window@sector
 15926  0039F6  CFDE F074          	movff	postinc2,move_window@sector+1
 15927  0039FA  CFDE F075          	movff	postinc2,move_window@sector+2
 15928  0039FE  CFDE F076          	movff	postinc2,move_window@sector+3
 15929  003A02  EC97  F018         	call	_move_window	;wreg free
 15930  003A06  0900               	iorlw	0
 15931  003A08  A4D8               	btfss	status,2,c
 15932  003A0A  D002               	goto	l10749
 15933                           
 15934                           ; BSR set to: 0
 15935                           ;tff.c: 1091: return FR_RW_ERROR;
 15936  003A0C  0E08               	movlw	8
 15937  003A0E  0012               	return	
 15938  003A10                     l10749:
 15939                           
 15940                           ; BSR set to: 0
 15941                           ;tff.c: 1092: dir = fp->dir_ptr;
 15942  003A10  EE20 F01A          	lfsr	2,26
 15943  003A14  5188               	movf	f_sync@fp& (0+255),w,b
 15944  003A16  26D9               	addwf	fsr2l,f,c
 15945  003A18  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 15946  003A1A  22DA               	addwfc	fsr2h,f,c
 15947  003A1C  CFDE F08F          	movff	postinc2,f_sync@dir
 15948  003A20  CFDD F090          	movff	postdec2,f_sync@dir+1
 15949                           
 15950                           ;tff.c: 1093: dir[11] |= 0x20;
 15951  003A24  EE20 F00B          	lfsr	2,11
 15952  003A28  518F               	movf	f_sync@dir& (0+255),w,b
 15953  003A2A  26D9               	addwf	fsr2l,f,c
 15954  003A2C  5190               	movf	(f_sync@dir+1)& (0+255),w,b
 15955  003A2E  22DA               	addwfc	fsr2h,f,c
 15956  003A30  0E00               	movlw	0
 15957  003A32  8ADB               	bsf	plusw2,5,c
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 15961  003A34  EE20 F00A          	lfsr	2,10
 15962  003A38  5188               	movf	f_sync@fp& (0+255),w,b
 15963  003A3A  26D9               	addwf	fsr2l,f,c
 15964  003A3C  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 15965  003A3E  22DA               	addwfc	fsr2h,f,c
 15966  003A40  EE10 F01C          	lfsr	1,28
 15967  003A44  518F               	movf	f_sync@dir& (0+255),w,b
 15968  003A46  26E1               	addwf	fsr1l,f,c
 15969  003A48  5190               	movf	(f_sync@dir+1)& (0+255),w,b
 15970  003A4A  22E2               	addwfc	fsr1h,f,c
 15971  003A4C  CFDE FFE6          	movff	postinc2,postinc1
 15972  003A50  CFDE FFE6          	movff	postinc2,postinc1
 15973  003A54  CFDE FFE6          	movff	postinc2,postinc1
 15974  003A58  CFDE FFE6          	movff	postinc2,postinc1
 15975                           
 15976                           ; BSR set to: 0
 15977                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 15978  003A5C  EE20 F00E          	lfsr	2,14
 15979  003A60  5188               	movf	f_sync@fp& (0+255),w,b
 15980  003A62  26D9               	addwf	fsr2l,f,c
 15981  003A64  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 15982  003A66  22DA               	addwfc	fsr2h,f,c
 15983  003A68  EE10 F01A          	lfsr	1,26
 15984  003A6C  518F               	movf	f_sync@dir& (0+255),w,b
 15985  003A6E  26E1               	addwf	fsr1l,f,c
 15986  003A70  5190               	movf	(f_sync@dir+1)& (0+255),w,b
 15987  003A72  22E2               	addwfc	fsr1h,f,c
 15988  003A74  CFDE FFE6          	movff	postinc2,postinc1
 15989  003A78  CFDD FFE5          	movff	postdec2,postdec1
 15990                           
 15991                           ; BSR set to: 0
 15992                           ;tff.c: 1099: tim = get_fattime();
 15993  003A7C  EC91  F01B         	call	_get_fattime	;wreg free
 15994  003A80  C01D  F08A         	movff	?_get_fattime,f_sync@tim
 15995  003A84  C01E  F08B         	movff	?_get_fattime+1,f_sync@tim+1
 15996  003A88  C01F  F08C         	movff	?_get_fattime+2,f_sync@tim+2
 15997  003A8C  C020  F08D         	movff	?_get_fattime+3,f_sync@tim+3
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 16001  003A90  EE20 F016          	lfsr	2,22
 16002  003A94  518F               	movf	f_sync@dir& (0+255),w,b
 16003  003A96  26D9               	addwf	fsr2l,f,c
 16004  003A98  5190               	movf	(f_sync@dir+1)& (0+255),w,b
 16005  003A9A  22DA               	addwfc	fsr2h,f,c
 16006  003A9C  C08A  FFDE         	movff	f_sync@tim,postinc2
 16007  003AA0  C08B  FFDE         	movff	f_sync@tim+1,postinc2
 16008  003AA4  C08C  FFDE         	movff	f_sync@tim+2,postinc2
 16009  003AA8  C08D  FFDE         	movff	f_sync@tim+3,postinc2
 16010                           
 16011                           ; BSR set to: 0
 16012                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 16013  003AAC  EE20 F002          	lfsr	2,2
 16014  003AB0  5188               	movf	f_sync@fp& (0+255),w,b
 16015  003AB2  26D9               	addwf	fsr2l,f,c
 16016  003AB4  5189               	movf	(f_sync@fp+1)& (0+255),w,b
 16017  003AB6  22DA               	addwfc	fsr2h,f,c
 16018  003AB8  0EDF               	movlw	223
 16019  003ABA  16DF               	andwf	indf2,f,c
 16020                           
 16021                           ; BSR set to: 0
 16022                           ;tff.c: 1102: res = sync();
 16023  003ABC  EC3C  F026         	call	_sync	;wreg free
 16024  003AC0  0100               	movlb	0	; () banked
 16025  003AC2  6F8E               	movwf	f_sync@res& (0+255),b
 16026  003AC4                     l10763:
 16027                           
 16028                           ; BSR set to: 0
 16029                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 16030  003AC4  518E               	movf	f_sync@res& (0+255),w,b
 16031                           
 16032                           ; BSR set to: 0
 16033  003AC6  0012               	return		;funcret
 16034  003AC8                     __end_of_f_sync:
 16035                           	callstack 0
 16036                           
 16037 ;; *************** function _validate *****************
 16038 ;; Defined at:
 16039 ;;		line 767 in file "bibliotecas/tff.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;  fs              2   30[COMRAM] PTR const struct _FATFS
 16042 ;;		 -> NULL(0), fs(544), 
 16043 ;;  id              2   32[COMRAM] unsigned short 
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;		None
 16046 ;; Return value:  Size  Location     Type
 16047 ;;                  1    wreg      enum E155
 16048 ;; Registers used:
 16049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16050 ;; Tracked objects:
 16051 ;;		On entry : 3F/0
 16052 ;;		On exit  : 0/0
 16053 ;;		Unchanged: 0/0
 16054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16055 ;;      Params:         4       0       0       0       0       0       0       0       0
 16056 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16057 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16058 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16059 ;;Total ram usage:        6 bytes
 16060 ;; Hardware stack levels used:    1
 16061 ;; Hardware stack levels required when called:    5
 16062 ;; This function calls:
 16063 ;;		_disk_status
 16064 ;; This function is called by:
 16065 ;;		_f_write
 16066 ;;		_f_sync
 16067 ;;		_f_lseek
 16068 ;;		_f_read
 16069 ;; This function uses a non-reentrant model
 16070 ;;
 16071                           
 16072                           	psect	text69
 16073  004DAA                     __ptext69:
 16074                           	callstack 0
 16075  004DAA                     _validate:
 16076                           	callstack 18
 16077                           
 16078                           ; BSR set to: 0
 16079                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 16080                           
 16081                           ; BSR set to: 0
 16082                           ;incstack = 0
 16083  004DAA  501F               	movf	validate@fs^0,w,c
 16084  004DAC  1020               	iorwf	(validate@fs+1)^0,w,c
 16085  004DAE  B4D8               	btfsc	status,2,c
 16086  004DB0  D014               	goto	u11720
 16087                           
 16088                           ; BSR set to: 0
 16089  004DB2  EE20 F01C          	lfsr	2,28
 16090  004DB6  501F               	movf	validate@fs^0,w,c
 16091  004DB8  26D9               	addwf	fsr2l,f,c
 16092  004DBA  5020               	movf	(validate@fs+1)^0,w,c
 16093  004DBC  22DA               	addwfc	fsr2h,f,c
 16094  004DBE  50DF               	movf	indf2,w,c
 16095  004DC0  B4D8               	btfsc	status,2,c
 16096  004DC2  D00B               	goto	u11720
 16097                           
 16098                           ; BSR set to: 0
 16099  004DC4  C01F  FFD9         	movff	validate@fs,fsr2l
 16100  004DC8  C020  FFDA         	movff	validate@fs+1,fsr2h
 16101  004DCC  5021               	movf	validate@id^0,w,c
 16102  004DCE  18DE               	xorwf	postinc2,w,c
 16103  004DD0  E104               	bnz	u11720
 16104  004DD2  5022               	movf	(validate@id+1)^0,w,c
 16105  004DD4  18DE               	xorwf	postinc2,w,c
 16106  004DD6  B4D8               	btfsc	status,2,c
 16107  004DD8  D002               	goto	l9861
 16108  004DDA                     u11720:
 16109                           
 16110                           ; BSR set to: 0
 16111                           ;tff.c: 773: return FR_INVALID_OBJECT;
 16112  004DDA  0E0C               	movlw	12
 16113  004DDC  0012               	return	
 16114  004DDE                     l9861:
 16115                           
 16116                           ; BSR set to: 0
 16117                           ;tff.c: 774: if (disk_status(0) & 0x01)
 16118  004DDE  0E00               	movlw	0
 16119  004DE0  EC2B  F028         	call	_disk_status
 16120  004DE4  6E23               	movwf	??_validate^0,c
 16121  004DE6  A023               	btfss	??_validate^0,0,c
 16122  004DE8  D002               	goto	l9867
 16123                           
 16124                           ;tff.c: 775: return FR_NOT_READY;
 16125  004DEA  0E01               	movlw	1
 16126  004DEC  0012               	return	
 16127  004DEE                     l9867:
 16128                           
 16129                           ;tff.c: 777: return FR_OK;
 16130  004DEE  0E00               	movlw	0
 16131  004DF0  0012               	return		;funcret
 16132  004DF2                     __end_of_validate:
 16133                           	callstack 0
 16134                           
 16135 ;; *************** function _disk_status *****************
 16136 ;; Defined at:
 16137 ;;		line 27 in file "bibliotecas/diskio.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;  pdrv            1    wreg     unsigned char 
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;  pdrv            1   28[COMRAM] unsigned char 
 16142 ;;  result          2    0        int 
 16143 ;;  stat            1   29[COMRAM] unsigned char 
 16144 ;; Return value:  Size  Location     Type
 16145 ;;                  1    wreg      unsigned char 
 16146 ;; Registers used:
 16147 ;;		wreg, status,2, status,0, cstack
 16148 ;; Tracked objects:
 16149 ;;		On entry : 3F/0
 16150 ;;		On exit  : 0/0
 16151 ;;		Unchanged: 0/0
 16152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16153 ;;      Params:         0       0       0       0       0       0       0       0       0
 16154 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16155 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16156 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16157 ;;Total ram usage:        4 bytes
 16158 ;; Hardware stack levels used:    1
 16159 ;; Hardware stack levels required when called:    4
 16160 ;; This function calls:
 16161 ;;		_sdc_disk_status
 16162 ;; This function is called by:
 16163 ;;		_auto_mount
 16164 ;;		_validate
 16165 ;; This function uses a non-reentrant model
 16166 ;;
 16167                           
 16168                           	psect	text70
 16169  005056                     __ptext70:
 16170                           	callstack 0
 16171  005056                     _disk_status:
 16172                           	callstack 18
 16173                           
 16174                           ;incstack = 0
 16175                           ;disk_status@pdrv stored from wreg
 16176  005056  6E1D               	movwf	disk_status@pdrv^0,c
 16177                           
 16178                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 16179  005058  D00A               	goto	l9571
 16180  00505A                     l9553:
 16181                           
 16182                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 16183  00505A  501D               	movf	disk_status@pdrv^0,w,c
 16184  00505C  ECCF  F029         	call	_sdc_disk_status
 16185  005060  6E1E               	movwf	disk_status@stat^0,c
 16186  005062                     l9555:
 16187                           
 16188                           ;diskio.c: 39: return stat;
 16189  005062  501E               	movf	disk_status@stat^0,w,c
 16190  005064  0012               	return	
 16191  005066                     l9559:
 16192  005066  501D               	movf	disk_status@pdrv^0,w,c
 16193  005068  ECCF  F029         	call	_sdc_disk_status
 16194  00506C  D7FA               	goto	l9555
 16195  00506E                     l9571:
 16196  00506E  501D               	movf	disk_status@pdrv^0,w,c
 16197                           
 16198                           ; Switch size 1, requested type "simple"
 16199                           ; Number of cases is 3, Range of values is 0 to 2
 16200                           ; switch strategies available:
 16201                           ; Name         Instructions Cycles
 16202                           ; simple_byte           10     6 (average)
 16203                           ;	Chosen strategy is simple_byte
 16204  005070  0A00               	xorlw	0	; case 0
 16205  005072  B4D8               	btfsc	status,2,c
 16206  005074  D7F2               	goto	l9553
 16207  005076  0A01               	xorlw	1	; case 1
 16208  005078  B4D8               	btfsc	status,2,c
 16209  00507A  D7F5               	goto	l9559
 16210  00507C  0A03               	xorlw	3	; case 2
 16211  00507E  B4D8               	btfsc	status,2,c
 16212  005080  D7F0               	goto	l9555
 16213                           
 16214                           ;diskio.c: 50: return 0x01;
 16215  005082  0E01               	movlw	1
 16216  005084  0012               	return		;funcret
 16217  005086                     __end_of_disk_status:
 16218                           	callstack 0
 16219                           
 16220 ;; *************** function _sdc_disk_status *****************
 16221 ;; Defined at:
 16222 ;;		line 588 in file "bibliotecas/diskio.c"
 16223 ;; Parameters:    Size  Location     Type
 16224 ;;  pdrv            1    wreg     unsigned char 
 16225 ;; Auto vars:     Size  Location     Type
 16226 ;;  pdrv            1   25[COMRAM] unsigned char 
 16227 ;;  stat            1    0        unsigned char 
 16228 ;;  cont            1    0        unsigned char 
 16229 ;;  buff            1    0        unsigned char 
 16230 ;; Return value:  Size  Location     Type
 16231 ;;                  1    wreg      unsigned char 
 16232 ;; Registers used:
 16233 ;;		wreg, status,2
 16234 ;; Tracked objects:
 16235 ;;		On entry : 0/0
 16236 ;;		On exit  : 0/0
 16237 ;;		Unchanged: 0/0
 16238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16239 ;;      Params:         0       0       0       0       0       0       0       0       0
 16240 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16241 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16242 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16243 ;;Total ram usage:        2 bytes
 16244 ;; Hardware stack levels used:    1
 16245 ;; Hardware stack levels required when called:    3
 16246 ;; This function calls:
 16247 ;;		Nothing
 16248 ;; This function is called by:
 16249 ;;		_disk_status
 16250 ;; This function uses a non-reentrant model
 16251 ;;
 16252                           
 16253                           	psect	text71
 16254  00539E                     __ptext71:
 16255                           	callstack 0
 16256  00539E                     _sdc_disk_status:
 16257                           	callstack 18
 16258                           
 16259                           ;incstack = 0
 16260                           ;sdc_disk_status@pdrv stored from wreg
 16261  00539E  6E1A               	movwf	sdc_disk_status@pdrv^0,c
 16262                           
 16263                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 16264  0053A0  501A               	movf	sdc_disk_status@pdrv^0,w,c
 16265  0053A2  B4D8               	btfsc	status,2,c
 16266  0053A4  D002               	goto	l9429
 16267  0053A6  0E01               	movlw	1
 16268  0053A8  0012               	return	
 16269  0053AA                     l9429:
 16270                           
 16271                           ;diskio.c: 595: return FR_OK;
 16272  0053AA  0E00               	movlw	0
 16273  0053AC  0012               	return		;funcret
 16274  0053AE                     __end_of_sdc_disk_status:
 16275                           	callstack 0
 16276                           
 16277 ;; *************** function _sync *****************
 16278 ;; Defined at:
 16279 ;;		line 119 in file "bibliotecas/tff.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;		None
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;  fs              2   48[COMRAM] PTR struct _FATFS
 16284 ;;		 -> NULL(0), fs(544), 
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  1    wreg      enum E155
 16287 ;; Registers used:
 16288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16289 ;; Tracked objects:
 16290 ;;		On entry : 3F/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16294 ;;      Params:         0       0       0       0       0       0       0       0       0
 16295 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16296 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16297 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16298 ;;Total ram usage:        2 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:    9
 16301 ;; This function calls:
 16302 ;;		_disk_ioctl
 16303 ;;		_move_window
 16304 ;; This function is called by:
 16305 ;;		_f_sync
 16306 ;; This function uses a non-reentrant model
 16307 ;;
 16308                           
 16309                           	psect	text72
 16310  004C78                     __ptext72:
 16311                           	callstack 0
 16312  004C78                     _sync:
 16313                           	callstack 16
 16314                           
 16315                           ; BSR set to: 0
 16316                           ;tff.c: 121: FATFS *fs = FatFs;
 16317                           
 16318                           ;incstack = 0
 16319  004C78  C039  F031         	movff	_FatFs,sync@fs
 16320  004C7C  C03A  F032         	movff	_FatFs+1,sync@fs+1
 16321                           
 16322                           ; BSR set to: 0
 16323                           ;tff.c: 124: fs->winflag = 1;
 16324  004C80  EE20 F01F          	lfsr	2,31
 16325  004C84  5031               	movf	sync@fs^0,w,c
 16326  004C86  26D9               	addwf	fsr2l,f,c
 16327  004C88  5032               	movf	(sync@fs+1)^0,w,c
 16328  004C8A  22DA               	addwfc	fsr2h,f,c
 16329  004C8C  0E01               	movlw	1
 16330  004C8E  6EDF               	movwf	indf2,c
 16331                           
 16332                           ; BSR set to: 0
 16333                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 16334  004C90  0E00               	movlw	0
 16335  004C92  6F73               	movwf	move_window@sector& (0+255),b
 16336  004C94  0E00               	movlw	0
 16337  004C96  6F74               	movwf	(move_window@sector+1)& (0+255),b
 16338  004C98  0E00               	movlw	0
 16339  004C9A  6F75               	movwf	(move_window@sector+2)& (0+255),b
 16340  004C9C  0E00               	movlw	0
 16341  004C9E  6F76               	movwf	(move_window@sector+3)& (0+255),b
 16342  004CA0  EC97  F018         	call	_move_window	;wreg free
 16343  004CA4  0900               	iorlw	0
 16344  004CA6  A4D8               	btfss	status,2,c
 16345  004CA8  D002               	goto	l10245
 16346  004CAA                     u12240:
 16347  004CAA  0E08               	movlw	8
 16348  004CAC  0012               	return	
 16349  004CAE                     l10245:
 16350                           
 16351                           ; BSR set to: 0
 16352                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 16353  004CAE  0E00               	movlw	0
 16354  004CB0  6E19               	movwf	disk_ioctl@cmd^0,c
 16355  004CB2  0E00               	movlw	0
 16356  004CB4  6E1A               	movwf	disk_ioctl@buff^0,c
 16357  004CB6  0E00               	movlw	0
 16358  004CB8  6E1B               	movwf	(disk_ioctl@buff+1)^0,c
 16359  004CBA  0E00               	movlw	0
 16360  004CBC  EC5E  F029         	call	_disk_ioctl
 16361  004CC0  0900               	iorlw	0
 16362  004CC2  A4D8               	btfss	status,2,c
 16363  004CC4  D7F2               	goto	u12240
 16364                           
 16365                           ;tff.c: 143: return FR_OK;
 16366  004CC6  0E00               	movlw	0
 16367  004CC8  0012               	return		;funcret
 16368  004CCA                     __end_of_sync:
 16369                           	callstack 0
 16370                           
 16371 ;; *************** function _move_window *****************
 16372 ;; Defined at:
 16373 ;;		line 77 in file "bibliotecas/tff.c"
 16374 ;; Parameters:    Size  Location     Type
 16375 ;;  sector          4   19[BANK0 ] unsigned long 
 16376 ;; Auto vars:     Size  Location     Type
 16377 ;;  n               1   33[BANK0 ] unsigned char 
 16378 ;;  wsect           4   34[BANK0 ] unsigned long 
 16379 ;;  fs              2   38[BANK0 ] PTR struct _FATFS
 16380 ;;		 -> NULL(0), fs(544), 
 16381 ;; Return value:  Size  Location     Type
 16382 ;;                  1    wreg      enum E105
 16383 ;; Registers used:
 16384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16385 ;; Tracked objects:
 16386 ;;		On entry : 3F/0
 16387 ;;		On exit  : 3F/0
 16388 ;;		Unchanged: 0/0
 16389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16390 ;;      Params:         0       4       0       0       0       0       0       0       0
 16391 ;;      Locals:         0       7       0       0       0       0       0       0       0
 16392 ;;      Temps:          0      10       0       0       0       0       0       0       0
 16393 ;;      Totals:         0      21       0       0       0       0       0       0       0
 16394 ;;Total ram usage:       21 bytes
 16395 ;; Hardware stack levels used:    1
 16396 ;; Hardware stack levels required when called:    8
 16397 ;; This function calls:
 16398 ;;		_disk_read
 16399 ;;		_disk_write
 16400 ;; This function is called by:
 16401 ;;		_sync
 16402 ;;		_get_cluster
 16403 ;;		_put_cluster
 16404 ;;		_trace_path
 16405 ;;		_reserve_direntry
 16406 ;;		_f_open
 16407 ;;		_f_write
 16408 ;;		_f_sync
 16409 ;;		_f_read
 16410 ;; This function uses a non-reentrant model
 16411 ;;
 16412                           
 16413                           	psect	text73
 16414  00312E                     __ptext73:
 16415                           	callstack 0
 16416  00312E                     _move_window:
 16417                           	callstack 15
 16418                           
 16419                           ; BSR set to: 0
 16420                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 16421                           
 16422                           ;incstack = 0
 16423  00312E  C039  F086         	movff	_FatFs,move_window@fs
 16424  003132  C03A  F087         	movff	_FatFs+1,move_window@fs+1
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;tff.c: 85: wsect = fs->winsect;
 16428  003136  EE20 F004          	lfsr	2,4
 16429  00313A  5186               	movf	move_window@fs& (0+255),w,b
 16430  00313C  26D9               	addwf	fsr2l,f,c
 16431  00313E  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16432  003140  22DA               	addwfc	fsr2h,f,c
 16433  003142  CFDE F082          	movff	postinc2,move_window@wsect
 16434  003146  CFDE F083          	movff	postinc2,move_window@wsect+1
 16435  00314A  CFDE F084          	movff	postinc2,move_window@wsect+2
 16436  00314E  CFDE F085          	movff	postinc2,move_window@wsect+3
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;tff.c: 86: if (wsect != sector) {
 16440  003152  5173               	movf	move_window@sector& (0+255),w,b
 16441  003154  1982               	xorwf	move_window@wsect& (0+255),w,b
 16442  003156  E10A               	bnz	u11210
 16443  003158  5174               	movf	(move_window@sector+1)& (0+255),w,b
 16444  00315A  1983               	xorwf	(move_window@wsect+1)& (0+255),w,b
 16445  00315C  E107               	bnz	u11210
 16446  00315E  5175               	movf	(move_window@sector+2)& (0+255),w,b
 16447  003160  1984               	xorwf	(move_window@wsect+2)& (0+255),w,b
 16448  003162  E104               	bnz	u11210
 16449  003164  5176               	movf	(move_window@sector+3)& (0+255),w,b
 16450  003166  1985               	xorwf	(move_window@wsect+3)& (0+255),w,b
 16451  003168  B4D8               	btfsc	status,2,c
 16452  00316A  D0B4               	goto	l9541
 16453  00316C                     u11210:
 16454                           
 16455                           ; BSR set to: 0
 16456                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 16457  00316C  EE20 F01F          	lfsr	2,31
 16458  003170  5186               	movf	move_window@fs& (0+255),w,b
 16459  003172  26D9               	addwf	fsr2l,f,c
 16460  003174  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16461  003176  22DA               	addwfc	fsr2h,f,c
 16462  003178  50DF               	movf	indf2,w,c
 16463  00317A  B4D8               	btfsc	status,2,c
 16464  00317C  D081               	goto	l9531
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 16468  00317E  0E20               	movlw	32
 16469  003180  2586               	addwf	move_window@fs& (0+255),w,b
 16470  003182  6F68               	movwf	disk_write@buff& (0+255),b
 16471  003184  0E00               	movlw	0
 16472  003186  2187               	addwfc	(move_window@fs+1)& (0+255),w,b
 16473  003188  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 16474  00318A  C082  F06A         	movff	move_window@wsect,disk_write@sector
 16475  00318E  C083  F06B         	movff	move_window@wsect+1,disk_write@sector+1
 16476  003192  C084  F06C         	movff	move_window@wsect+2,disk_write@sector+2
 16477  003196  C085  F06D         	movff	move_window@wsect+3,disk_write@sector+3
 16478  00319A  0E01               	movlw	1
 16479  00319C  6F6E               	movwf	disk_write@count& (0+255),b
 16480  00319E  0E00               	movlw	0
 16481  0031A0  EC65  F026         	call	_disk_write
 16482  0031A4  0900               	iorlw	0
 16483  0031A6  B4D8               	btfsc	status,2,c
 16484  0031A8  D002               	goto	l9515
 16485  0031AA                     u11230:
 16486                           
 16487                           ; BSR set to: 0
 16488                           ;tff.c: 91: return FALSE;
 16489  0031AA  0E00               	movlw	0
 16490  0031AC  0012               	return	
 16491  0031AE                     l9515:
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;tff.c: 92: fs->winflag = 0;
 16495  0031AE  EE20 F01F          	lfsr	2,31
 16496  0031B2  5186               	movf	move_window@fs& (0+255),w,b
 16497  0031B4  26D9               	addwf	fsr2l,f,c
 16498  0031B6  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16499  0031B8  22DA               	addwfc	fsr2h,f,c
 16500  0031BA  0E00               	movlw	0
 16501  0031BC  6EDF               	movwf	indf2,c
 16502                           
 16503                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 16504  0031BE  EE20 F008          	lfsr	2,8
 16505  0031C2  5186               	movf	move_window@fs& (0+255),w,b
 16506  0031C4  26D9               	addwf	fsr2l,f,c
 16507  0031C6  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16508  0031C8  22DA               	addwfc	fsr2h,f,c
 16509  0031CA  CFDE F077          	movff	postinc2,??_move_window
 16510  0031CE  CFDE F078          	movff	postinc2,??_move_window+1
 16511  0031D2  CFDE F079          	movff	postinc2,??_move_window+2
 16512  0031D6  CFDE F07A          	movff	postinc2,??_move_window+3
 16513  0031DA  EE20 F014          	lfsr	2,20
 16514  0031DE  5186               	movf	move_window@fs& (0+255),w,b
 16515  0031E0  26D9               	addwf	fsr2l,f,c
 16516  0031E2  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16517  0031E4  22DA               	addwfc	fsr2h,f,c
 16518  0031E6  CFDE F07B          	movff	postinc2,??_move_window+4
 16519  0031EA  CFDD F07C          	movff	postdec2,??_move_window+5
 16520  0031EE  517B               	movf	(??_move_window+4)& (0+255),w,b
 16521  0031F0  2577               	addwf	??_move_window& (0+255),w,b
 16522  0031F2  6F7D               	movwf	(??_move_window+6)& (0+255),b
 16523  0031F4  517C               	movf	(??_move_window+5)& (0+255),w,b
 16524  0031F6  2178               	addwfc	(??_move_window+1)& (0+255),w,b
 16525  0031F8  6F7E               	movwf	(??_move_window+7)& (0+255),b
 16526  0031FA  0E00               	movlw	0
 16527  0031FC  2179               	addwfc	(??_move_window+2)& (0+255),w,b
 16528  0031FE  6F7F               	movwf	(??_move_window+8)& (0+255),b
 16529  003200  0E00               	movlw	0
 16530  003202  217A               	addwfc	(??_move_window+3)& (0+255),w,b
 16531  003204  6F80               	movwf	(??_move_window+9)& (0+255),b
 16532  003206  517D               	movf	(??_move_window+6)& (0+255),w,b
 16533  003208  5D82               	subwf	move_window@wsect& (0+255),w,b
 16534  00320A  517E               	movf	(??_move_window+7)& (0+255),w,b
 16535  00320C  5983               	subwfb	(move_window@wsect+1)& (0+255),w,b
 16536  00320E  517F               	movf	(??_move_window+8)& (0+255),w,b
 16537  003210  5984               	subwfb	(move_window@wsect+2)& (0+255),w,b
 16538  003212  5180               	movf	(??_move_window+9)& (0+255),w,b
 16539  003214  5985               	subwfb	(move_window@wsect+3)& (0+255),w,b
 16540  003216  B0D8               	btfsc	status,0,c
 16541  003218  D033               	goto	l9531
 16542                           
 16543                           ; BSR set to: 0
 16544                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 16545  00321A  EE20 F01E          	lfsr	2,30
 16546  00321E  5186               	movf	move_window@fs& (0+255),w,b
 16547  003220  26D9               	addwf	fsr2l,f,c
 16548  003222  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16549  003224  22DA               	addwfc	fsr2h,f,c
 16550  003226  50DF               	movf	indf2,w,c
 16551  003228  6F81               	movwf	move_window@n& (0+255),b
 16552  00322A                     l9519:
 16553                           
 16554                           ; BSR set to: 0
 16555  00322A  0E02               	movlw	2
 16556  00322C  6181               	cpfslt	move_window@n& (0+255),b
 16557  00322E  D001               	goto	l9523
 16558  003230  D027               	goto	l9531
 16559  003232                     l9523:
 16560                           
 16561                           ; BSR set to: 0
 16562                           ;tff.c: 95: wsect += fs->sects_fat;
 16563  003232  EE20 F014          	lfsr	2,20
 16564  003236  5186               	movf	move_window@fs& (0+255),w,b
 16565  003238  26D9               	addwf	fsr2l,f,c
 16566  00323A  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16567  00323C  22DA               	addwfc	fsr2h,f,c
 16568  00323E  CFDE F077          	movff	postinc2,??_move_window
 16569  003242  CFDD F078          	movff	postdec2,??_move_window+1
 16570  003246  5177               	movf	??_move_window& (0+255),w,b
 16571  003248  2782               	addwf	move_window@wsect& (0+255),f,b
 16572  00324A  5178               	movf	(??_move_window+1)& (0+255),w,b
 16573  00324C  2383               	addwfc	(move_window@wsect+1)& (0+255),f,b
 16574  00324E  0E00               	movlw	0
 16575  003250  2384               	addwfc	(move_window@wsect+2)& (0+255),f,b
 16576  003252  0E00               	movlw	0
 16577  003254  2385               	addwfc	(move_window@wsect+3)& (0+255),f,b
 16578                           
 16579                           ; BSR set to: 0
 16580                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 16581  003256  0E20               	movlw	32
 16582  003258  2586               	addwf	move_window@fs& (0+255),w,b
 16583  00325A  6F68               	movwf	disk_write@buff& (0+255),b
 16584  00325C  0E00               	movlw	0
 16585  00325E  2187               	addwfc	(move_window@fs+1)& (0+255),w,b
 16586  003260  6F69               	movwf	(disk_write@buff+1)& (0+255),b
 16587  003262  C082  F06A         	movff	move_window@wsect,disk_write@sector
 16588  003266  C083  F06B         	movff	move_window@wsect+1,disk_write@sector+1
 16589  00326A  C084  F06C         	movff	move_window@wsect+2,disk_write@sector+2
 16590  00326E  C085  F06D         	movff	move_window@wsect+3,disk_write@sector+3
 16591  003272  0E01               	movlw	1
 16592  003274  6F6E               	movwf	disk_write@count& (0+255),b
 16593  003276  0E00               	movlw	0
 16594  003278  EC65  F026         	call	_disk_write
 16595                           
 16596                           ; BSR set to: 0
 16597  00327C  0781               	decf	move_window@n& (0+255),f,b
 16598  00327E  D7D5               	goto	l9519
 16599  003280                     l9531:
 16600                           
 16601                           ; BSR set to: 0
 16602                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 16603  003280  5173               	movf	move_window@sector& (0+255),w,b
 16604  003282  1174               	iorwf	(move_window@sector+1)& (0+255),w,b
 16605  003284  1175               	iorwf	(move_window@sector+2)& (0+255),w,b
 16606  003286  1176               	iorwf	(move_window@sector+3)& (0+255),w,b
 16607  003288  B4D8               	btfsc	status,2,c
 16608  00328A  D024               	goto	l9541
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 16612  00328C  0E20               	movlw	32
 16613  00328E  2586               	addwf	move_window@fs& (0+255),w,b
 16614  003290  6F68               	movwf	disk_read@buff& (0+255),b
 16615  003292  0E00               	movlw	0
 16616  003294  2187               	addwfc	(move_window@fs+1)& (0+255),w,b
 16617  003296  6F69               	movwf	(disk_read@buff+1)& (0+255),b
 16618  003298  C073  F06A         	movff	move_window@sector,disk_read@sector
 16619  00329C  C074  F06B         	movff	move_window@sector+1,disk_read@sector+1
 16620  0032A0  C075  F06C         	movff	move_window@sector+2,disk_read@sector+2
 16621  0032A4  C076  F06D         	movff	move_window@sector+3,disk_read@sector+3
 16622  0032A8  0E01               	movlw	1
 16623  0032AA  6F6E               	movwf	disk_read@count& (0+255),b
 16624  0032AC  0E00               	movlw	0
 16625  0032AE  EC8F  F024         	call	_disk_read
 16626  0032B2  0900               	iorlw	0
 16627  0032B4  A4D8               	btfss	status,2,c
 16628  0032B6  D779               	goto	u11230
 16629                           
 16630                           ; BSR set to: 0
 16631                           ;tff.c: 104: fs->winsect = sector;
 16632  0032B8  EE20 F004          	lfsr	2,4
 16633  0032BC  5186               	movf	move_window@fs& (0+255),w,b
 16634  0032BE  26D9               	addwf	fsr2l,f,c
 16635  0032C0  5187               	movf	(move_window@fs+1)& (0+255),w,b
 16636  0032C2  22DA               	addwfc	fsr2h,f,c
 16637  0032C4  C073  FFDE         	movff	move_window@sector,postinc2
 16638  0032C8  C074  FFDE         	movff	move_window@sector+1,postinc2
 16639  0032CC  C075  FFDE         	movff	move_window@sector+2,postinc2
 16640  0032D0  C076  FFDE         	movff	move_window@sector+3,postinc2
 16641  0032D4                     l9541:
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 16645  0032D4  0E01               	movlw	1
 16646                           
 16647                           ; BSR set to: 0
 16648  0032D6  0012               	return		;funcret
 16649  0032D8                     __end_of_move_window:
 16650                           	callstack 0
 16651                           
 16652 ;; *************** function _disk_write *****************
 16653 ;; Defined at:
 16654 ;;		line 150 in file "bibliotecas/diskio.c"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;  pdrv            1    wreg     unsigned char 
 16657 ;;  buff            2    8[BANK0 ] PTR const unsigned char 
 16658 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 16659 ;;  sector          4   10[BANK0 ] unsigned long 
 16660 ;;  count           1   14[BANK0 ] unsigned char 
 16661 ;; Auto vars:     Size  Location     Type
 16662 ;;  pdrv            1   15[BANK0 ] unsigned char 
 16663 ;;  result          2   16[BANK0 ] int 
 16664 ;;  res             1   18[BANK0 ] enum E25
 16665 ;; Return value:  Size  Location     Type
 16666 ;;                  1    wreg      enum E25
 16667 ;; Registers used:
 16668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16669 ;; Tracked objects:
 16670 ;;		On entry : 3F/0
 16671 ;;		On exit  : 3F/0
 16672 ;;		Unchanged: 0/0
 16673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16674 ;;      Params:         0       7       0       0       0       0       0       0       0
 16675 ;;      Locals:         0       4       0       0       0       0       0       0       0
 16676 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16677 ;;      Totals:         1      11       0       0       0       0       0       0       0
 16678 ;;Total ram usage:       12 bytes
 16679 ;; Hardware stack levels used:    1
 16680 ;; Hardware stack levels required when called:    7
 16681 ;; This function calls:
 16682 ;;		_sdc_disk_write
 16683 ;; This function is called by:
 16684 ;;		_move_window
 16685 ;;		_reserve_direntry
 16686 ;;		_f_write
 16687 ;; This function uses a non-reentrant model
 16688 ;;
 16689                           
 16690                           	psect	text74
 16691  004CCA                     __ptext74:
 16692                           	callstack 0
 16693  004CCA                     _disk_write:
 16694                           	callstack 15
 16695                           
 16696                           ; BSR set to: 0
 16697                           ;incstack = 0
 16698                           ;disk_write@pdrv stored from wreg
 16699  004CCA  6F6F               	movwf	disk_write@pdrv& (0+255),b
 16700                           
 16701                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 16702  004CCC  D018               	goto	l9395
 16703  004CCE                     l9373:
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 16707  004CCE  C068  F025         	movff	disk_write@buff,sdc_disk_write@p_buff
 16708  004CD2  C069  F026         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 16709  004CD6  C06A  F027         	movff	disk_write@sector,sdc_disk_write@sector
 16710  004CDA  C06B  F028         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 16711  004CDE  C06C  F029         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 16712  004CE2  C06D  F02A         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 16713  004CE6  C06E  F02B         	movff	disk_write@count,sdc_disk_write@count
 16714  004CEA  ECBC  F017         	call	_sdc_disk_write	;wreg free
 16715  004CEE  6E30               	movwf	??_disk_write^0,c
 16716  004CF0  5030               	movf	??_disk_write^0,w,c
 16717  004CF2  6F70               	movwf	disk_write@result& (0+255),b
 16718  004CF4  6B71               	clrf	(disk_write@result+1)& (0+255),b
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;diskio.c: 165: res = result;
 16722  004CF6  C070  F072         	movff	disk_write@result,disk_write@res
 16723  004CFA                     l9377:
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;diskio.c: 168: return res;
 16727  004CFA  5172               	movf	disk_write@res& (0+255),w,b
 16728  004CFC  0012               	return	
 16729  004CFE                     l9395:
 16730  004CFE  0100               	movlb	0	; () banked
 16731  004D00  516F               	movf	disk_write@pdrv& (0+255),w,b
 16732                           
 16733                           ; Switch size 1, requested type "simple"
 16734                           ; Number of cases is 3, Range of values is 0 to 2
 16735                           ; switch strategies available:
 16736                           ; Name         Instructions Cycles
 16737                           ; simple_byte           10     6 (average)
 16738                           ;	Chosen strategy is simple_byte
 16739  004D02  0A00               	xorlw	0	; case 0
 16740  004D04  B4D8               	btfsc	status,2,c
 16741  004D06  D7E3               	goto	l9373
 16742  004D08  0A01               	xorlw	1	; case 1
 16743  004D0A  B4D8               	btfsc	status,2,c
 16744  004D0C  D7E0               	goto	l9373
 16745  004D0E  0A03               	xorlw	3	; case 2
 16746  004D10  B4D8               	btfsc	status,2,c
 16747  004D12  D7F3               	goto	l9377
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;diskio.c: 189: return RES_PARERR;
 16751  004D14  0E04               	movlw	4
 16752                           
 16753                           ; BSR set to: 0
 16754  004D16  0012               	return		;funcret
 16755  004D18                     __end_of_disk_write:
 16756                           	callstack 0
 16757                           
 16758 ;; *************** function _sdc_disk_write *****************
 16759 ;; Defined at:
 16760 ;;		line 509 in file "bibliotecas/diskio.c"
 16761 ;; Parameters:    Size  Location     Type
 16762 ;;  p_buff          2   36[COMRAM] PTR const unsigned char 
 16763 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 16764 ;;  sector          4   38[COMRAM] unsigned long 
 16765 ;;  count           1   42[COMRAM] unsigned char 
 16766 ;; Auto vars:     Size  Location     Type
 16767 ;;  j               2    5[BANK0 ] int 
 16768 ;;  count1          2    2[BANK0 ] int 
 16769 ;;  i               2    0        int 
 16770 ;;  buff            1    7[BANK0 ] unsigned char 
 16771 ;;  res             1    4[BANK0 ] enum E25
 16772 ;; Return value:  Size  Location     Type
 16773 ;;                  1    wreg      enum E25
 16774 ;; Registers used:
 16775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16776 ;; Tracked objects:
 16777 ;;		On entry : 0/0
 16778 ;;		On exit  : 3F/0
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16781 ;;      Params:         7       0       0       0       0       0       0       0       0
 16782 ;;      Locals:         0       8       0       0       0       0       0       0       0
 16783 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16784 ;;      Totals:        11       8       0       0       0       0       0       0       0
 16785 ;;Total ram usage:       19 bytes
 16786 ;; Hardware stack levels used:    1
 16787 ;; Hardware stack levels required when called:    6
 16788 ;; This function calls:
 16789 ;;		_command
 16790 ;;		_dummy_clocks
 16791 ;;		_escreve_SPI
 16792 ;;		_leitura_SPI
 16793 ;;		_proceed
 16794 ;;		_response
 16795 ;; This function is called by:
 16796 ;;		_disk_write
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text75
 16801  002F78                     __ptext75:
 16802                           	callstack 0
 16803  002F78                     _sdc_disk_write:
 16804                           	callstack 15
 16805                           
 16806                           ; BSR set to: 0
 16807                           ;incstack = 0
 16808  002F78  0E00               	movlw	0
 16809  002F7A  0100               	movlb	0	; () banked
 16810  002F7C  6F63               	movwf	(sdc_disk_write@count1+1)& (0+255),b
 16811  002F7E  0E00               	movlw	0
 16812  002F80  6F62               	movwf	sdc_disk_write@count1& (0+255),b
 16813                           
 16814                           ; BSR set to: 0
 16815                           ;diskio.c: 515: if(count>1)
 16816  002F82  0E01               	movlw	1
 16817  002F84  642B               	cpfsgt	sdc_disk_write@count^0,c
 16818  002F86  D069               	goto	l144
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 16822  002F88  9E8B               	bcf	139,7,c	;volatile
 16823                           
 16824                           ;diskio.c: 518: LATBbits.LATB4 = 0;
 16825  002F8A  988A               	bcf	138,4,c	;volatile
 16826                           
 16827                           ; BSR set to: 0
 16828                           ;diskio.c: 519: dummy_clocks(10);
 16829  002F8C  0E0A               	movlw	10
 16830  002F8E  ECA1  F027         	call	_dummy_clocks
 16831                           
 16832                           ;diskio.c: 520: command(0X57, count, 0XFF);
 16833  002F92  502B               	movf	sdc_disk_write@count^0,w,c
 16834  002F94  6E1E               	movwf	command@arg^0,c
 16835  002F96  6A1F               	clrf	(command@arg+1)^0,c
 16836  002F98  6A20               	clrf	(command@arg+2)^0,c
 16837  002F9A  6A21               	clrf	(command@arg+3)^0,c
 16838  002F9C  0EFF               	movlw	255
 16839  002F9E  6E22               	movwf	command@CRC^0,c
 16840  002FA0  0E57               	movlw	87
 16841  002FA2  EC92  F025         	call	_command
 16842                           
 16843                           ;diskio.c: 521: proceed();
 16844  002FA6  ECF3  F029         	call	_proceed	;wreg free
 16845  002FAA                     l9261:
 16846                           
 16847                           ;diskio.c: 523: buff = response();
 16848  002FAA  ECED  F029         	call	_response	;wreg free
 16849  002FAE  0100               	movlb	0	; () banked
 16850  002FB0  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;diskio.c: 524: }while(buff!=0X00);
 16854  002FB2  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 16855  002FB4  A4D8               	btfss	status,2,c
 16856  002FB6  D7F9               	goto	l9261
 16857                           
 16858                           ; BSR set to: 0
 16859                           ;diskio.c: 526: dummy_clocks(10);
 16860  002FB8  0E0A               	movlw	10
 16861  002FBA  ECA1  F027         	call	_dummy_clocks
 16862                           
 16863                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 16864  002FBE  C027  F02C         	movff	sdc_disk_write@sector,??_sdc_disk_write
 16865  002FC2  C028  F02D         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 16866  002FC6  C029  F02E         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 16867  002FCA  C02A  F02F         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 16868  002FCE  0E09               	movlw	9
 16869  002FD0                     u10965:
 16870  002FD0  90D8               	bcf	status,0,c
 16871  002FD2  362C               	rlcf	??_sdc_disk_write^0,f,c
 16872  002FD4  362D               	rlcf	(??_sdc_disk_write+1)^0,f,c
 16873  002FD6  362E               	rlcf	(??_sdc_disk_write+2)^0,f,c
 16874  002FD8  362F               	rlcf	(??_sdc_disk_write+3)^0,f,c
 16875  002FDA  2EE8               	decfsz	wreg,f,c
 16876  002FDC  D7F9               	goto	u10965
 16877  002FDE  C02C  F01E         	movff	??_sdc_disk_write,command@arg
 16878  002FE2  C02D  F01F         	movff	??_sdc_disk_write+1,command@arg+1
 16879  002FE6  C02E  F020         	movff	??_sdc_disk_write+2,command@arg+2
 16880  002FEA  C02F  F021         	movff	??_sdc_disk_write+3,command@arg+3
 16881  002FEE  0EFF               	movlw	255
 16882  002FF0  6E22               	movwf	command@CRC^0,c
 16883  002FF2  0E59               	movlw	89
 16884  002FF4  EC92  F025         	call	_command
 16885                           
 16886                           ;diskio.c: 528: proceed();
 16887  002FF8  ECF3  F029         	call	_proceed	;wreg free
 16888  002FFC                     l9269:
 16889                           
 16890                           ;diskio.c: 530: buff = response();
 16891  002FFC  ECED  F029         	call	_response	;wreg free
 16892  003000  0100               	movlb	0	; () banked
 16893  003002  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 16894                           
 16895                           ; BSR set to: 0
 16896                           ;diskio.c: 531: }while(buff!=0X00);
 16897  003004  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 16898  003006  A4D8               	btfss	status,2,c
 16899  003008  D7F9               	goto	l9269
 16900                           
 16901                           ; BSR set to: 0
 16902                           ;diskio.c: 533: dummy_clocks(1);
 16903  00300A  0E01               	movlw	1
 16904  00300C  ECA1  F027         	call	_dummy_clocks
 16905                           
 16906                           ;diskio.c: 534: escreve_SPI(0XFC);
 16907  003010  0EFC               	movlw	252
 16908  003012  ECD7  F029         	call	_escreve_SPI
 16909                           
 16910                           ;diskio.c: 535: for(j=0;j<512;j++)
 16911  003016  0E00               	movlw	0
 16912  003018  0100               	movlb	0	; () banked
 16913  00301A  6F66               	movwf	(sdc_disk_write@j+1)& (0+255),b
 16914  00301C  0E00               	movlw	0
 16915  00301E  6F65               	movwf	sdc_disk_write@j& (0+255),b
 16916  003020                     l9283:
 16917                           
 16918                           ; BSR set to: 0
 16919                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 16920  003020  C025  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 16921  003024  C026  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 16922  003028  50DF               	movf	indf2,w,c
 16923  00302A  ECD7  F029         	call	_escreve_SPI
 16924                           
 16925                           ;diskio.c: 538: p_buff++;
 16926  00302E  4A25               	infsnz	sdc_disk_write@p_buff^0,f,c
 16927  003030  2A26               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 16928  003032  0100               	movlb	0	; () banked
 16929  003034  4B65               	infsnz	sdc_disk_write@j& (0+255),f,b
 16930  003036  2B66               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 16931                           
 16932                           ; BSR set to: 0
 16933  003038  BF66               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 16934  00303A  D7F2               	goto	l9283
 16935  00303C  0E02               	movlw	2
 16936  00303E  5D66               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 16937  003040  A0D8               	btfss	status,0,c
 16938  003042  D7EE               	goto	l9283
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 16942  003044  ECF9  F029         	call	_leitura_SPI	;wreg free
 16943                           
 16944                           ;diskio.c: 541: leitura_SPI();
 16945  003048  ECF9  F029         	call	_leitura_SPI	;wreg free
 16946                           
 16947                           ;diskio.c: 543: dummy_clocks(1);
 16948  00304C  0E01               	movlw	1
 16949  00304E  ECA1  F027         	call	_dummy_clocks
 16950                           
 16951                           ;diskio.c: 544: escreve_SPI(0XFD);
 16952  003052  0EFD               	movlw	253
 16953  003054  ECD7  F029         	call	_escreve_SPI
 16954                           
 16955                           ;diskio.c: 546: }
 16956  003058  D067               	goto	u11020
 16957  00305A                     l144:
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 16961  00305A  9E8B               	bcf	139,7,c	;volatile
 16962                           
 16963                           ;diskio.c: 550: LATBbits.LATB4 = 0;
 16964  00305C  988A               	bcf	138,4,c	;volatile
 16965                           
 16966                           ; BSR set to: 0
 16967                           ;diskio.c: 551: dummy_clocks(10);
 16968  00305E  0E0A               	movlw	10
 16969  003060  ECA1  F027         	call	_dummy_clocks
 16970                           
 16971                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 16972  003064  C027  F02C         	movff	sdc_disk_write@sector,??_sdc_disk_write
 16973  003068  C028  F02D         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 16974  00306C  C029  F02E         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 16975  003070  C02A  F02F         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 16976  003074  0E09               	movlw	9
 16977  003076                     u10995:
 16978  003076  90D8               	bcf	status,0,c
 16979  003078  362C               	rlcf	??_sdc_disk_write^0,f,c
 16980  00307A  362D               	rlcf	(??_sdc_disk_write+1)^0,f,c
 16981  00307C  362E               	rlcf	(??_sdc_disk_write+2)^0,f,c
 16982  00307E  362F               	rlcf	(??_sdc_disk_write+3)^0,f,c
 16983  003080  2EE8               	decfsz	wreg,f,c
 16984  003082  D7F9               	goto	u10995
 16985  003084  C02C  F01E         	movff	??_sdc_disk_write,command@arg
 16986  003088  C02D  F01F         	movff	??_sdc_disk_write+1,command@arg+1
 16987  00308C  C02E  F020         	movff	??_sdc_disk_write+2,command@arg+2
 16988  003090  C02F  F021         	movff	??_sdc_disk_write+3,command@arg+3
 16989  003094  0E00               	movlw	0
 16990  003096  6E22               	movwf	command@CRC^0,c
 16991  003098  0E58               	movlw	88
 16992  00309A  EC92  F025         	call	_command
 16993                           
 16994                           ;diskio.c: 553: proceed();
 16995  00309E  ECF3  F029         	call	_proceed	;wreg free
 16996  0030A2                     l9301:
 16997                           
 16998                           ;diskio.c: 555: buff = response();
 16999  0030A2  ECED  F029         	call	_response	;wreg free
 17000  0030A6  0100               	movlb	0	; () banked
 17001  0030A8  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;diskio.c: 556: }while(buff!=0X00);
 17005  0030AA  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17006  0030AC  A4D8               	btfss	status,2,c
 17007  0030AE  D7F9               	goto	l9301
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;diskio.c: 558: LATBbits.LATB4 = 0;
 17011  0030B0  988A               	bcf	138,4,c	;volatile
 17012                           
 17013                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 17014  0030B2  9E8B               	bcf	139,7,c	;volatile
 17015                           
 17016                           ; BSR set to: 0
 17017                           ;diskio.c: 560: dummy_clocks(1);
 17018  0030B4  0E01               	movlw	1
 17019  0030B6  ECA1  F027         	call	_dummy_clocks
 17020                           
 17021                           ;diskio.c: 561: escreve_SPI(0XFE);
 17022  0030BA  0EFE               	movlw	254
 17023  0030BC  ECD7  F029         	call	_escreve_SPI
 17024                           
 17025                           ;diskio.c: 562: for(j=0;j<512;j++)
 17026  0030C0  0E00               	movlw	0
 17027  0030C2  0100               	movlb	0	; () banked
 17028  0030C4  6F66               	movwf	(sdc_disk_write@j+1)& (0+255),b
 17029  0030C6  0E00               	movlw	0
 17030  0030C8  6F65               	movwf	sdc_disk_write@j& (0+255),b
 17031  0030CA                     l9315:
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 17035  0030CA  C025  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 17036  0030CE  C026  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 17037  0030D2  50DF               	movf	indf2,w,c
 17038  0030D4  ECD7  F029         	call	_escreve_SPI
 17039                           
 17040                           ;diskio.c: 565: p_buff++;
 17041  0030D8  4A25               	infsnz	sdc_disk_write@p_buff^0,f,c
 17042  0030DA  2A26               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 17043  0030DC  0100               	movlb	0	; () banked
 17044  0030DE  4B65               	infsnz	sdc_disk_write@j& (0+255),f,b
 17045  0030E0  2B66               	incf	(sdc_disk_write@j+1)& (0+255),f,b
 17046                           
 17047                           ; BSR set to: 0
 17048  0030E2  BF66               	btfsc	(sdc_disk_write@j+1)& (0+255),7,b
 17049  0030E4  D7F2               	goto	l9315
 17050  0030E6  0E02               	movlw	2
 17051  0030E8  5D66               	subwf	(sdc_disk_write@j+1)& (0+255),w,b
 17052  0030EA  A0D8               	btfss	status,0,c
 17053  0030EC  D7EE               	goto	l9315
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 17057  0030EE  ECF9  F029         	call	_leitura_SPI	;wreg free
 17058                           
 17059                           ;diskio.c: 568: leitura_SPI();
 17060  0030F2  ECF9  F029         	call	_leitura_SPI	;wreg free
 17061                           
 17062                           ;diskio.c: 570: dummy_clocks(10);
 17063  0030F6  0E0A               	movlw	10
 17064  0030F8  ECA1  F027         	call	_dummy_clocks
 17065                           
 17066                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 17067  0030FC  0E00               	movlw	0
 17068  0030FE  6E1E               	movwf	command@arg^0,c
 17069  003100  0E00               	movlw	0
 17070  003102  6E1F               	movwf	(command@arg+1)^0,c
 17071  003104  0E00               	movlw	0
 17072  003106  6E20               	movwf	(command@arg+2)^0,c
 17073  003108  0E00               	movlw	0
 17074  00310A  6E21               	movwf	(command@arg+3)^0,c
 17075  00310C  0E00               	movlw	0
 17076  00310E  6E22               	movwf	command@CRC^0,c
 17077  003110  0E4D               	movlw	77
 17078  003112  EC92  F025         	call	_command
 17079                           
 17080                           ;diskio.c: 572: proceed();
 17081  003116  ECF3  F029         	call	_proceed	;wreg free
 17082  00311A                     l9331:
 17083                           
 17084                           ;diskio.c: 574: buff = response();
 17085  00311A  ECED  F029         	call	_response	;wreg free
 17086  00311E  0100               	movlb	0	; () banked
 17087  003120  6F67               	movwf	sdc_disk_write@buff& (0+255),b
 17088                           
 17089                           ; BSR set to: 0
 17090                           ;diskio.c: 575: }while(buff!=0X00 );
 17091  003122  5167               	movf	sdc_disk_write@buff& (0+255),w,b
 17092  003124  A4D8               	btfss	status,2,c
 17093  003126  D7F9               	goto	l9331
 17094  003128                     u11020:
 17095                           
 17096                           ;diskio.c: 576: };diskio.c: 577: return res;
 17097  003128  0100               	movlb	0	; () banked
 17098  00312A  5164               	movf	sdc_disk_write@res& (0+255),w,b
 17099                           
 17100                           ; BSR set to: 0
 17101  00312C  0012               	return		;funcret
 17102  00312E                     __end_of_sdc_disk_write:
 17103                           	callstack 0
 17104                           
 17105 ;; *************** function _disk_read *****************
 17106 ;; Defined at:
 17107 ;;		line 97 in file "bibliotecas/diskio.c"
 17108 ;; Parameters:    Size  Location     Type
 17109 ;;  pdrv            1    wreg     unsigned char 
 17110 ;;  buff            2    8[BANK0 ] PTR unsigned char 
 17111 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 17112 ;;  sector          4   10[BANK0 ] unsigned long 
 17113 ;;  count           1   14[BANK0 ] unsigned char 
 17114 ;; Auto vars:     Size  Location     Type
 17115 ;;  pdrv            1   15[BANK0 ] unsigned char 
 17116 ;;  result          2   16[BANK0 ] int 
 17117 ;;  res             1   18[BANK0 ] enum E25
 17118 ;; Return value:  Size  Location     Type
 17119 ;;                  1    wreg      enum E25
 17120 ;; Registers used:
 17121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17122 ;; Tracked objects:
 17123 ;;		On entry : 3F/0
 17124 ;;		On exit  : 3F/0
 17125 ;;		Unchanged: 0/0
 17126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17127 ;;      Params:         0       7       0       0       0       0       0       0       0
 17128 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17129 ;;      Temps:          1       0       0       0       0       0       0       0       0
 17130 ;;      Totals:         1      11       0       0       0       0       0       0       0
 17131 ;;Total ram usage:       12 bytes
 17132 ;; Hardware stack levels used:    1
 17133 ;; Hardware stack levels required when called:    7
 17134 ;; This function calls:
 17135 ;;		_sdc_disk_read
 17136 ;; This function is called by:
 17137 ;;		_move_window
 17138 ;;		_check_fs
 17139 ;;		_f_read
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           	psect	text76
 17144  00491E                     __ptext76:
 17145                           	callstack 0
 17146  00491E                     _disk_read:
 17147                           	callstack 15
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;incstack = 0
 17151                           ;disk_read@pdrv stored from wreg
 17152  00491E  6F6F               	movwf	disk_read@pdrv& (0+255),b
 17153                           
 17154                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 17155  004920  D029               	goto	l9365
 17156  004922                     l9341:
 17157                           
 17158                           ; BSR set to: 0
 17159                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 17160  004922  C068  F025         	movff	disk_read@buff,sdc_disk_read@p_buff
 17161  004926  C069  F026         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 17162  00492A  C06A  F027         	movff	disk_read@sector,sdc_disk_read@sector
 17163  00492E  C06B  F028         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 17164  004932  C06C  F029         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 17165  004936  C06D  F02A         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 17166  00493A  C06E  F02B         	movff	disk_read@count,sdc_disk_read@count
 17167  00493E  EC64  F01D         	call	_sdc_disk_read	;wreg free
 17168  004942  6E30               	movwf	??_disk_read^0,c
 17169  004944  5030               	movf	??_disk_read^0,w,c
 17170  004946  6F70               	movwf	disk_read@result& (0+255),b
 17171  004948  6B71               	clrf	(disk_read@result+1)& (0+255),b
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;diskio.c: 115: res = result;
 17175  00494A  C070  F072         	movff	disk_read@result,disk_read@res
 17176  00494E                     l9345:
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;diskio.c: 117: return res;
 17180  00494E  5172               	movf	disk_read@res& (0+255),w,b
 17181  004950  0012               	return	
 17182  004952                     l9349:
 17183                           
 17184                           ; BSR set to: 0
 17185                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 17186  004952  C068  F025         	movff	disk_read@buff,sdc_disk_read@p_buff
 17187  004956  C069  F026         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 17188  00495A  C06A  F027         	movff	disk_read@sector,sdc_disk_read@sector
 17189  00495E  C06B  F028         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 17190  004962  C06C  F029         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 17191  004966  C06D  F02A         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 17192  00496A  C06E  F02B         	movff	disk_read@count,sdc_disk_read@count
 17193  00496E  EC64  F01D         	call	_sdc_disk_read	;wreg free
 17194  004972  D7E7               	goto	L10
 17195  004974                     l9365:
 17196  004974  0100               	movlb	0	; () banked
 17197  004976  516F               	movf	disk_read@pdrv& (0+255),w,b
 17198                           
 17199                           ; Switch size 1, requested type "simple"
 17200                           ; Number of cases is 3, Range of values is 0 to 2
 17201                           ; switch strategies available:
 17202                           ; Name         Instructions Cycles
 17203                           ; simple_byte           10     6 (average)
 17204                           ;	Chosen strategy is simple_byte
 17205  004978  0A00               	xorlw	0	; case 0
 17206  00497A  B4D8               	btfsc	status,2,c
 17207  00497C  D7D2               	goto	l9341
 17208  00497E  0A01               	xorlw	1	; case 1
 17209  004980  B4D8               	btfsc	status,2,c
 17210  004982  D7E7               	goto	l9349
 17211  004984  0A03               	xorlw	3	; case 2
 17212  004986  B4D8               	btfsc	status,2,c
 17213  004988  D7E2               	goto	l9345
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;diskio.c: 141: return RES_PARERR;
 17217  00498A  0E04               	movlw	4
 17218                           
 17219                           ; BSR set to: 0
 17220  00498C  0012               	return		;funcret
 17221  00498E                     __end_of_disk_read:
 17222                           	callstack 0
 17223                           
 17224 ;; *************** function _sdc_disk_read *****************
 17225 ;; Defined at:
 17226 ;;		line 439 in file "bibliotecas/diskio.c"
 17227 ;; Parameters:    Size  Location     Type
 17228 ;;  p_buff          2   36[COMRAM] PTR unsigned char 
 17229 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 17230 ;;  sector          4   38[COMRAM] unsigned long 
 17231 ;;  count           1   42[COMRAM] unsigned char 
 17232 ;; Auto vars:     Size  Location     Type
 17233 ;;  start_add       4    1[BANK0 ] unsigned long 
 17234 ;;  length          2    5[BANK0 ] int 
 17235 ;;  count1          2    0        int 
 17236 ;;  i               2    0        int 
 17237 ;;  buff            1    7[BANK0 ] unsigned char 
 17238 ;;  ptr             1    0        unsigned char 
 17239 ;;  res             1    0        enum E25
 17240 ;; Return value:  Size  Location     Type
 17241 ;;                  1    wreg      enum E25
 17242 ;; Registers used:
 17243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17244 ;; Tracked objects:
 17245 ;;		On entry : 0/0
 17246 ;;		On exit  : 3F/0
 17247 ;;		Unchanged: 0/0
 17248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17249 ;;      Params:         7       0       0       0       0       0       0       0       0
 17250 ;;      Locals:         0       8       0       0       0       0       0       0       0
 17251 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17252 ;;      Totals:        11       8       0       0       0       0       0       0       0
 17253 ;;Total ram usage:       19 bytes
 17254 ;; Hardware stack levels used:    1
 17255 ;; Hardware stack levels required when called:    6
 17256 ;; This function calls:
 17257 ;;		_command
 17258 ;;		_dummy_clocks
 17259 ;;		_proceed
 17260 ;;		_response
 17261 ;; This function is called by:
 17262 ;;		_disk_read
 17263 ;; This function uses a non-reentrant model
 17264 ;;
 17265                           
 17266                           	psect	text77
 17267  003AC8                     __ptext77:
 17268                           	callstack 0
 17269  003AC8                     _sdc_disk_read:
 17270                           	callstack 15
 17271                           
 17272                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;incstack = 0
 17276  003AC8  0E0A               	movlw	10
 17277  003ACA  ECA1  F027         	call	_dummy_clocks
 17278                           
 17279                           ;diskio.c: 452: start_add = sector*512;
 17280  003ACE  C027  F02C         	movff	sdc_disk_read@sector,??_sdc_disk_read
 17281  003AD2  C028  F02D         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 17282  003AD6  C029  F02E         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 17283  003ADA  C02A  F02F         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 17284  003ADE  0E09               	movlw	9
 17285  003AE0                     u10875:
 17286  003AE0  90D8               	bcf	status,0,c
 17287  003AE2  362C               	rlcf	??_sdc_disk_read^0,f,c
 17288  003AE4  362D               	rlcf	(??_sdc_disk_read+1)^0,f,c
 17289  003AE6  362E               	rlcf	(??_sdc_disk_read+2)^0,f,c
 17290  003AE8  362F               	rlcf	(??_sdc_disk_read+3)^0,f,c
 17291  003AEA  2EE8               	decfsz	wreg,f,c
 17292  003AEC  D7F9               	goto	u10875
 17293  003AEE  C02C  F061         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 17294  003AF2  C02D  F062         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 17295  003AF6  C02E  F063         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 17296  003AFA  C02F  F064         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 17297                           
 17298                           ;diskio.c: 455: if(sector != 1)
 17299  003AFE  0427               	decf	sdc_disk_read@sector^0,w,c
 17300  003B00  1028               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 17301  003B02  1029               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 17302  003B04  102A               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 17303  003B06  B4D8               	btfsc	status,2,c
 17304  003B08  D01C               	goto	l9211
 17305                           
 17306                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 17307  003B0A  0E0A               	movlw	10
 17308  003B0C  ECA1  F027         	call	_dummy_clocks
 17309                           
 17310                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 17311  003B10  C061  F01E         	movff	sdc_disk_read@start_add,command@arg
 17312  003B14  C062  F01F         	movff	sdc_disk_read@start_add+1,command@arg+1
 17313  003B18  C063  F020         	movff	sdc_disk_read@start_add+2,command@arg+2
 17314  003B1C  C064  F021         	movff	sdc_disk_read@start_add+3,command@arg+3
 17315  003B20  0E00               	movlw	0
 17316  003B22  6E22               	movwf	command@CRC^0,c
 17317  003B24  0E52               	movlw	82
 17318  003B26  EC92  F025         	call	_command
 17319                           
 17320                           ;diskio.c: 459: proceed();
 17321  003B2A  ECF3  F029         	call	_proceed	;wreg free
 17322  003B2E                     l9205:
 17323                           
 17324                           ;diskio.c: 461: buff = response();
 17325  003B2E  ECED  F029         	call	_response	;wreg free
 17326  003B32  0100               	movlb	0	; () banked
 17327  003B34  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 17328                           
 17329                           ; BSR set to: 0
 17330                           ;diskio.c: 462: }while(buff!=0X00);
 17331  003B36  5167               	movf	sdc_disk_read@buff& (0+255),w,b
 17332  003B38  A4D8               	btfss	status,2,c
 17333  003B3A  D7F9               	goto	l9205
 17334  003B3C                     u10890:
 17335                           
 17336                           ; BSR set to: 0
 17337                           ;diskio.c: 463: proceed();
 17338  003B3C  ECF3  F029         	call	_proceed	;wreg free
 17339                           
 17340                           ;diskio.c: 464: }
 17341  003B40  D01E               	goto	l9223
 17342  003B42                     l9211:
 17343                           
 17344                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 17345  003B42  0E0A               	movlw	10
 17346  003B44  ECA1  F027         	call	_dummy_clocks
 17347                           
 17348                           ;diskio.c: 468: command(0X51,sector ,0X00);
 17349  003B48  C027  F01E         	movff	sdc_disk_read@sector,command@arg
 17350  003B4C  C028  F01F         	movff	sdc_disk_read@sector+1,command@arg+1
 17351  003B50  C029  F020         	movff	sdc_disk_read@sector+2,command@arg+2
 17352  003B54  C02A  F021         	movff	sdc_disk_read@sector+3,command@arg+3
 17353  003B58  0E00               	movlw	0
 17354  003B5A  6E22               	movwf	command@CRC^0,c
 17355  003B5C  0E51               	movlw	81
 17356  003B5E  EC92  F025         	call	_command
 17357                           
 17358                           ;diskio.c: 469: proceed();
 17359  003B62  ECF3  F029         	call	_proceed	;wreg free
 17360  003B66                     l9215:
 17361                           
 17362                           ;diskio.c: 471: buff = response();
 17363  003B66  ECED  F029         	call	_response	;wreg free
 17364  003B6A  0100               	movlb	0	; () banked
 17365  003B6C  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;diskio.c: 472: }while(buff!=0X00);
 17369  003B6E  5167               	movf	sdc_disk_read@buff& (0+255),w,b
 17370  003B70  B4D8               	btfsc	status,2,c
 17371  003B72  D7E4               	goto	u10890
 17372  003B74  D7F8               	goto	l9215
 17373  003B76                     l9221:
 17374                           
 17375                           ; BSR set to: 0
 17376                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 17377  003B76  ECED  F029         	call	_response	;wreg free
 17378  003B7A  0100               	movlb	0	; () banked
 17379  003B7C  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 17380  003B7E                     l9223:
 17381  003B7E  0EFE               	movlw	254
 17382  003B80  0100               	movlb	0	; () banked
 17383  003B82  1967               	xorwf	sdc_disk_read@buff& (0+255),w,b
 17384  003B84  A4D8               	btfss	status,2,c
 17385  003B86  D7F7               	goto	l9221
 17386                           
 17387                           ; BSR set to: 0
 17388                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 17389  003B88  0E00               	movlw	0
 17390  003B8A  6F66               	movwf	(sdc_disk_read@length+1)& (0+255),b
 17391  003B8C  0E00               	movlw	0
 17392  003B8E  6F65               	movwf	sdc_disk_read@length& (0+255),b
 17393                           
 17394                           ;diskio.c: 484: while ( length < 512 )
 17395  003B90  D00C               	goto	l9231
 17396  003B92                     l9227:
 17397                           
 17398                           ; BSR set to: 0
 17399                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 17400  003B92  5165               	movf	sdc_disk_read@length& (0+255),w,b
 17401  003B94  2425               	addwf	sdc_disk_read@p_buff^0,w,c
 17402  003B96  6ED9               	movwf	fsr2l,c
 17403  003B98  5166               	movf	(sdc_disk_read@length+1)& (0+255),w,b
 17404  003B9A  2026               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 17405  003B9C  6EDA               	movwf	fsr2h,c
 17406  003B9E  ECED  F029         	call	_response	;wreg free
 17407  003BA2  6EDF               	movwf	indf2,c
 17408                           
 17409                           ;diskio.c: 487: length++;
 17410  003BA4  0100               	movlb	0	; () banked
 17411  003BA6  4B65               	infsnz	sdc_disk_read@length& (0+255),f,b
 17412  003BA8  2B66               	incf	(sdc_disk_read@length+1)& (0+255),f,b
 17413  003BAA                     l9231:
 17414                           
 17415                           ; BSR set to: 0
 17416  003BAA  BF66               	btfsc	(sdc_disk_read@length+1)& (0+255),7,b
 17417  003BAC  D7F2               	goto	l9227
 17418  003BAE  0E02               	movlw	2
 17419  003BB0  5D66               	subwf	(sdc_disk_read@length+1)& (0+255),w,b
 17420  003BB2  A0D8               	btfss	status,0,c
 17421  003BB4  D7EE               	goto	l9227
 17422                           
 17423                           ; BSR set to: 0
 17424                           ;diskio.c: 491: dummy_clocks(10);
 17425                           
 17426                           ; BSR set to: 0
 17427  003BB6  0E0A               	movlw	10
 17428  003BB8  ECA1  F027         	call	_dummy_clocks
 17429                           
 17430                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 17431  003BBC  0E00               	movlw	0
 17432  003BBE  6E1E               	movwf	command@arg^0,c
 17433  003BC0  0E00               	movlw	0
 17434  003BC2  6E1F               	movwf	(command@arg+1)^0,c
 17435  003BC4  0E00               	movlw	0
 17436  003BC6  6E20               	movwf	(command@arg+2)^0,c
 17437  003BC8  0E00               	movlw	0
 17438  003BCA  6E21               	movwf	(command@arg+3)^0,c
 17439  003BCC  0E00               	movlw	0
 17440  003BCE  6E22               	movwf	command@CRC^0,c
 17441  003BD0  0E4C               	movlw	76
 17442  003BD2  EC92  F025         	call	_command
 17443                           
 17444                           ;diskio.c: 494: proceed();
 17445  003BD6  ECF3  F029         	call	_proceed	;wreg free
 17446  003BDA                     l9241:
 17447                           
 17448                           ;diskio.c: 496: buff = response();
 17449  003BDA  ECED  F029         	call	_response	;wreg free
 17450  003BDE  0100               	movlb	0	; () banked
 17451  003BE0  6F67               	movwf	sdc_disk_read@buff& (0+255),b
 17452                           
 17453                           ; BSR set to: 0
 17454                           ;diskio.c: 497: }while(buff!=0xFF);
 17455  003BE2  2967               	incf	sdc_disk_read@buff& (0+255),w,b
 17456  003BE4  A4D8               	btfss	status,2,c
 17457  003BE6  D7F9               	goto	l9241
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;diskio.c: 500: return RES_OK;
 17461                           
 17462                           ; BSR set to: 0
 17463  003BE8  0E00               	movlw	0
 17464                           
 17465                           ; BSR set to: 0
 17466  003BEA  0012               	return		;funcret
 17467  003BEC                     __end_of_sdc_disk_read:
 17468                           	callstack 0
 17469                           
 17470 ;; *************** function _response *****************
 17471 ;; Defined at:
 17472 ;;		line 59 in file "bibliotecas/SDCard.c"
 17473 ;; Parameters:    Size  Location     Type
 17474 ;;		None
 17475 ;; Auto vars:     Size  Location     Type
 17476 ;;  buff            1   24[COMRAM] unsigned char 
 17477 ;; Return value:  Size  Location     Type
 17478 ;;                  1    wreg      unsigned char 
 17479 ;; Registers used:
 17480 ;;		wreg, status,2, cstack
 17481 ;; Tracked objects:
 17482 ;;		On entry : 0/0
 17483 ;;		On exit  : 0/0
 17484 ;;		Unchanged: 0/0
 17485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17486 ;;      Params:         0       0       0       0       0       0       0       0       0
 17487 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17488 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17489 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17490 ;;Total ram usage:        1 bytes
 17491 ;; Hardware stack levels used:    1
 17492 ;; Hardware stack levels required when called:    4
 17493 ;; This function calls:
 17494 ;;		_leitura_SPI
 17495 ;; This function is called by:
 17496 ;;		_sdc_reset
 17497 ;;		_sdc_disk_initialize
 17498 ;;		_sdc_disk_read
 17499 ;;		_sdc_disk_write
 17500 ;; This function uses a non-reentrant model
 17501 ;;
 17502                           
 17503                           	psect	text78
 17504  0053DA                     __ptext78:
 17505                           	callstack 0
 17506  0053DA                     _response:
 17507                           	callstack 16
 17508                           
 17509                           ;SDCard.c: 61: unsigned char buff;;SDCard.c: 62: LATBbits.LATB4 = 0;
 17510                           
 17511                           ; BSR set to: 0
 17512                           ;incstack = 0
 17513  0053DA  988A               	bcf	138,4,c	;volatile
 17514                           
 17515                           ;SDCard.c: 63: buff= leitura_SPI();
 17516  0053DC  ECF9  F029         	call	_leitura_SPI	;wreg free
 17517  0053E0  6E19               	movwf	response@buff^0,c
 17518                           
 17519                           ;SDCard.c: 64: return buff;
 17520  0053E2  5019               	movf	response@buff^0,w,c
 17521  0053E4  0012               	return		;funcret
 17522  0053E6                     __end_of_response:
 17523                           	callstack 0
 17524                           
 17525 ;; *************** function _proceed *****************
 17526 ;; Defined at:
 17527 ;;		line 92 in file "bibliotecas/SDCard.c"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;		None
 17530 ;; Auto vars:     Size  Location     Type
 17531 ;;		None
 17532 ;; Return value:  Size  Location     Type
 17533 ;;                  1    wreg      void 
 17534 ;; Registers used:
 17535 ;;		wreg, cstack
 17536 ;; Tracked objects:
 17537 ;;		On entry : 0/0
 17538 ;;		On exit  : 0/0
 17539 ;;		Unchanged: 0/0
 17540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17541 ;;      Params:         0       0       0       0       0       0       0       0       0
 17542 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17544 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17545 ;;Total ram usage:        0 bytes
 17546 ;; Hardware stack levels used:    1
 17547 ;; Hardware stack levels required when called:    4
 17548 ;; This function calls:
 17549 ;;		_escreve_SPI
 17550 ;; This function is called by:
 17551 ;;		_sdc_reset
 17552 ;;		_sdc_disk_initialize
 17553 ;;		_sdc_disk_read
 17554 ;;		_sdc_disk_write
 17555 ;; This function uses a non-reentrant model
 17556 ;;
 17557                           
 17558                           	psect	text79
 17559  0053E6                     __ptext79:
 17560                           	callstack 0
 17561  0053E6                     _proceed:
 17562                           	callstack 16
 17563                           
 17564                           ;SDCard.c: 94: LATBbits.LATB4 = 0;
 17565                           
 17566                           ;incstack = 0
 17567  0053E6  988A               	bcf	138,4,c	;volatile
 17568                           
 17569                           ;SDCard.c: 95: escreve_SPI(0xFF);
 17570  0053E8  0EFF               	movlw	255
 17571  0053EA  ECD7  F029         	call	_escreve_SPI
 17572                           
 17573                           ;SDCard.c: 96: LATBbits.LATB4 = 1;
 17574  0053EE  888A               	bsf	138,4,c	;volatile
 17575  0053F0  0012               	return		;funcret
 17576  0053F2                     __end_of_proceed:
 17577                           	callstack 0
 17578                           
 17579 ;; *************** function _command *****************
 17580 ;; Defined at:
 17581 ;;		line 125 in file "bibliotecas/SDCard.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;  CMD             1    wreg     unsigned char 
 17584 ;;  arg             4   29[COMRAM] unsigned long 
 17585 ;;  CRC             1   33[COMRAM] unsigned char 
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;  CMD             1   34[COMRAM] unsigned char 
 17588 ;;  argument        1   35[COMRAM] unsigned char 
 17589 ;; Return value:  Size  Location     Type
 17590 ;;                  1    wreg      void 
 17591 ;; Registers used:
 17592 ;;		wreg, status,2, status,0, cstack
 17593 ;; Tracked objects:
 17594 ;;		On entry : 0/0
 17595 ;;		On exit  : 0/0
 17596 ;;		Unchanged: 0/0
 17597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17598 ;;      Params:         5       0       0       0       0       0       0       0       0
 17599 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17600 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17601 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17602 ;;Total ram usage:        7 bytes
 17603 ;; Hardware stack levels used:    1
 17604 ;; Hardware stack levels required when called:    5
 17605 ;; This function calls:
 17606 ;;		_dummy_clocks
 17607 ;;		_escreve_SPI
 17608 ;;		_wait_ready
 17609 ;; This function is called by:
 17610 ;;		_sdc_reset
 17611 ;;		_sdc_disk_initialize
 17612 ;;		_sdc_disk_read
 17613 ;;		_sdc_disk_write
 17614 ;; This function uses a non-reentrant model
 17615 ;;
 17616                           
 17617                           	psect	text80
 17618  004B24                     __ptext80:
 17619                           	callstack 0
 17620  004B24                     _command:
 17621                           	callstack 15
 17622                           
 17623                           ;incstack = 0
 17624                           ;command@CMD stored from wreg
 17625  004B24  6E23               	movwf	command@CMD^0,c
 17626                           
 17627                           ;SDCard.c: 127: unsigned char argument;;SDCard.c: 129: if (wait_ready() != 0xFF)
 17628  004B26  ECF7  F027         	call	_wait_ready	;wreg free
 17629  004B2A  0AFF               	xorlw	255
 17630  004B2C  A4D8               	btfss	status,2,c
 17631  004B2E  D004               	goto	l583
 17632  004B30  D008               	goto	u10860
 17633  004B32                     l9155:
 17634                           
 17635                           ;SDCard.c: 132: {;SDCard.c: 133: dummy_clocks(10);
 17636  004B32  0E0A               	movlw	10
 17637  004B34  ECA1  F027         	call	_dummy_clocks
 17638  004B38                     l583:
 17639  004B38  ECF7  F027         	call	_wait_ready	;wreg free
 17640  004B3C  0AFF               	xorlw	255
 17641  004B3E  A4D8               	btfss	status,2,c
 17642  004B40  D7F8               	goto	l9155
 17643  004B42                     u10860:
 17644                           
 17645                           ;SDCard.c: 134: };SDCard.c: 135: };SDCard.c: 136: escreve_SPI(0xFF);
 17646  004B42  0EFF               	movlw	255
 17647  004B44  ECD7  F029         	call	_escreve_SPI
 17648                           
 17649                           ;SDCard.c: 137: escreve_SPI(CMD);
 17650  004B48  5023               	movf	command@CMD^0,w,c
 17651  004B4A  ECD7  F029         	call	_escreve_SPI
 17652                           
 17653                           ;SDCard.c: 138: argument = arg>>24;
 17654  004B4E  C021  F024         	movff	command@arg+3,command@argument
 17655                           
 17656                           ;SDCard.c: 139: escreve_SPI(argument);
 17657  004B52  5024               	movf	command@argument^0,w,c
 17658  004B54  ECD7  F029         	call	_escreve_SPI
 17659                           
 17660                           ;SDCard.c: 140: argument = arg>>16;
 17661  004B58  C020  F024         	movff	command@arg+2,command@argument
 17662                           
 17663                           ;SDCard.c: 141: escreve_SPI(argument);
 17664  004B5C  5024               	movf	command@argument^0,w,c
 17665  004B5E  ECD7  F029         	call	_escreve_SPI
 17666                           
 17667                           ;SDCard.c: 142: argument = arg>>8;
 17668  004B62  C01F  F024         	movff	command@arg+1,command@argument
 17669                           
 17670                           ;SDCard.c: 143: escreve_SPI(argument);
 17671  004B66  5024               	movf	command@argument^0,w,c
 17672  004B68  ECD7  F029         	call	_escreve_SPI
 17673                           
 17674                           ;SDCard.c: 144: argument = arg;
 17675  004B6C  C01E  F024         	movff	command@arg,command@argument
 17676                           
 17677                           ;SDCard.c: 145: escreve_SPI(argument);
 17678  004B70  5024               	movf	command@argument^0,w,c
 17679  004B72  ECD7  F029         	call	_escreve_SPI
 17680                           
 17681                           ;SDCard.c: 146: escreve_SPI(CRC);
 17682  004B76  5022               	movf	command@CRC^0,w,c
 17683  004B78  ECD7  F029         	call	_escreve_SPI
 17684  004B7C  0012               	return		;funcret
 17685  004B7E                     __end_of_command:
 17686                           	callstack 0
 17687                           
 17688 ;; *************** function _wait_ready *****************
 17689 ;; Defined at:
 17690 ;;		line 105 in file "bibliotecas/SDCard.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;		None
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;  msg            10    0        unsigned char [10]
 17695 ;;  timeout         4   24[COMRAM] unsigned long 
 17696 ;;  res             1   28[COMRAM] unsigned char 
 17697 ;; Return value:  Size  Location     Type
 17698 ;;                  1    wreg      unsigned char 
 17699 ;; Registers used:
 17700 ;;		wreg, status,2, status,0, cstack
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17706 ;;      Params:         0       0       0       0       0       0       0       0       0
 17707 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17708 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17709 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17710 ;;Total ram usage:        5 bytes
 17711 ;; Hardware stack levels used:    1
 17712 ;; Hardware stack levels required when called:    4
 17713 ;; This function calls:
 17714 ;;		_leitura_SPI
 17715 ;; This function is called by:
 17716 ;;		_command
 17717 ;; This function uses a non-reentrant model
 17718 ;;
 17719                           
 17720                           	psect	text81
 17721  004FEE                     __ptext81:
 17722                           	callstack 0
 17723  004FEE                     _wait_ready:
 17724                           	callstack 15
 17725                           
 17726                           ;SDCard.c: 107: BYTE res;;SDCard.c: 108: DWORD timeout = 0x7FFF;
 17727                           
 17728                           ;incstack = 0
 17729  004FEE  0EFF               	movlw	255
 17730  004FF0  6E19               	movwf	wait_ready@timeout^0,c
 17731  004FF2  0E7F               	movlw	127
 17732  004FF4  6E1A               	movwf	(wait_ready@timeout+1)^0,c
 17733  004FF6  0E00               	movlw	0
 17734  004FF8  6E1B               	movwf	(wait_ready@timeout+2)^0,c
 17735  004FFA  0E00               	movlw	0
 17736  004FFC  6E1C               	movwf	(wait_ready@timeout+3)^0,c
 17737  004FFE                     l9141:
 17738                           
 17739                           ;SDCard.c: 112: res = leitura_SPI();
 17740  004FFE  ECF9  F029         	call	_leitura_SPI	;wreg free
 17741  005002  6E1D               	movwf	wait_ready@res^0,c
 17742                           
 17743                           ;SDCard.c: 113: while ((res != 0xFF) && (--timeout));
 17744  005004  281D               	incf	wait_ready@res^0,w,c
 17745  005006  B4D8               	btfsc	status,2,c
 17746  005008  D00B               	goto	u10840
 17747  00500A  0619               	decf	wait_ready@timeout^0,f,c
 17748  00500C  0E00               	movlw	0
 17749  00500E  5A1A               	subwfb	(wait_ready@timeout+1)^0,f,c
 17750  005010  5A1B               	subwfb	(wait_ready@timeout+2)^0,f,c
 17751  005012  5A1C               	subwfb	(wait_ready@timeout+3)^0,f,c
 17752  005014  5019               	movf	wait_ready@timeout^0,w,c
 17753  005016  101A               	iorwf	(wait_ready@timeout+1)^0,w,c
 17754  005018  101B               	iorwf	(wait_ready@timeout+2)^0,w,c
 17755  00501A  101C               	iorwf	(wait_ready@timeout+3)^0,w,c
 17756  00501C  A4D8               	btfss	status,2,c
 17757  00501E  D7EF               	goto	l9141
 17758  005020                     u10840:
 17759                           
 17760                           ;SDCard.c: 115: return res;
 17761  005020  501D               	movf	wait_ready@res^0,w,c
 17762  005022  0012               	return		;funcret
 17763  005024                     __end_of_wait_ready:
 17764                           	callstack 0
 17765                           
 17766 ;; *************** function _escreve_SPI *****************
 17767 ;; Defined at:
 17768 ;;		line 97 in file "bibliotecas/SPI.c"
 17769 ;; Parameters:    Size  Location     Type
 17770 ;;  dado            1    wreg     unsigned char 
 17771 ;; Auto vars:     Size  Location     Type
 17772 ;;  dado            1   25[COMRAM] unsigned char 
 17773 ;;  TempVar         1    0        unsigned char 
 17774 ;; Return value:  Size  Location     Type
 17775 ;;                  1    wreg      void 
 17776 ;; Registers used:
 17777 ;;		wreg
 17778 ;; Tracked objects:
 17779 ;;		On entry : 0/0
 17780 ;;		On exit  : 0/0
 17781 ;;		Unchanged: 0/0
 17782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17783 ;;      Params:         0       0       0       0       0       0       0       0       0
 17784 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17786 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17787 ;;Total ram usage:        2 bytes
 17788 ;; Hardware stack levels used:    1
 17789 ;; Hardware stack levels required when called:    3
 17790 ;; This function calls:
 17791 ;;		Nothing
 17792 ;; This function is called by:
 17793 ;;		_sdc_disk_write
 17794 ;;		_proceed
 17795 ;;		_command
 17796 ;; This function uses a non-reentrant model
 17797 ;;
 17798                           
 17799                           	psect	text82
 17800  0053AE                     __ptext82:
 17801                           	callstack 0
 17802  0053AE                     _escreve_SPI:
 17803                           	callstack 16
 17804                           
 17805                           ;incstack = 0
 17806                           ;escreve_SPI@dado stored from wreg
 17807  0053AE  6E1A               	movwf	escreve_SPI@dado^0,c
 17808  0053B0  50C9               	movf	201,w,c	;volatile
 17809                           
 17810                           ;SPI.c: 101: PIR1bits.SSPIF = 0;
 17811  0053B2  969E               	bcf	158,3,c	;volatile
 17812                           
 17813                           ;SPI.c: 103: SSPBUF = dado;
 17814  0053B4  C01A  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 17815  0053B8                     l665:
 17816  0053B8  B69E               	btfsc	158,3,c	;volatile
 17817  0053BA  0012               	return	
 17818  0053BC  D7FD               	goto	l665
 17819  0053BE                     __end_of_escreve_SPI:
 17820                           	callstack 0
 17821                           
 17822 ;; *************** function _dummy_clocks *****************
 17823 ;; Defined at:
 17824 ;;		line 74 in file "bibliotecas/SDCard.c"
 17825 ;; Parameters:    Size  Location     Type
 17826 ;;  n               1    wreg     unsigned char 
 17827 ;; Auto vars:     Size  Location     Type
 17828 ;;  n               1   26[COMRAM] unsigned char 
 17829 ;;  i               2   27[COMRAM] unsigned int 
 17830 ;; Return value:  Size  Location     Type
 17831 ;;                  1    wreg      void 
 17832 ;; Registers used:
 17833 ;;		wreg, status,2, status,0, cstack
 17834 ;; Tracked objects:
 17835 ;;		On entry : 0/0
 17836 ;;		On exit  : 0/0
 17837 ;;		Unchanged: 0/0
 17838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17839 ;;      Params:         0       0       0       0       0       0       0       0       0
 17840 ;;      Locals:         3       0       0       0       0       0       0       0       0
 17841 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17842 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17843 ;;Total ram usage:        5 bytes
 17844 ;; Hardware stack levels used:    1
 17845 ;; Hardware stack levels required when called:    4
 17846 ;; This function calls:
 17847 ;;		_leitura_SPI
 17848 ;; This function is called by:
 17849 ;;		_sdc_disk_initialize
 17850 ;;		_sdc_disk_read
 17851 ;;		_sdc_disk_write
 17852 ;;		_command
 17853 ;; This function uses a non-reentrant model
 17854 ;;
 17855                           
 17856                           	psect	text83
 17857  004F42                     __ptext83:
 17858                           	callstack 0
 17859  004F42                     _dummy_clocks:
 17860                           	callstack 16
 17861                           
 17862                           ;incstack = 0
 17863                           ;dummy_clocks@n stored from wreg
 17864  004F42  6E1B               	movwf	dummy_clocks@n^0,c
 17865                           
 17866                           ;SDCard.c: 76: unsigned int i;;SDCard.c: 77: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 17867  004F44  0E10               	movlw	16
 17868  004F46  6E19               	movwf	??_dummy_clocks^0,c
 17869  004F48  0E94               	movlw	148
 17870  004F4A                     u16017:
 17871  004F4A  2EE8               	decfsz	wreg,f,c
 17872  004F4C  D7FE               	bra	u16017
 17873  004F4E  2E19               	decfsz	??_dummy_clocks^0,f,c
 17874  004F50  D7FC               	bra	u16017
 17875  004F52  D000               	nop2	
 17876                           
 17877                           ;SDCard.c: 78: for(i=0;i<n;i++)
 17878  004F54  0E00               	movlw	0
 17879  004F56  6E1D               	movwf	(dummy_clocks@i+1)^0,c
 17880  004F58  0E00               	movlw	0
 17881  004F5A  6E1C               	movwf	dummy_clocks@i^0,c
 17882  004F5C  D006               	goto	l9133
 17883  004F5E                     l567:
 17884                           
 17885                           ;SDCard.c: 79: {;SDCard.c: 80: LATBbits.LATB4 = 1;
 17886  004F5E  888A               	bsf	138,4,c	;volatile
 17887                           
 17888                           ;SDCard.c: 81: leitura_SPI();
 17889  004F60  ECF9  F029         	call	_leitura_SPI	;wreg free
 17890                           
 17891                           ;SDCard.c: 82: LATBbits.LATB4 = 0;
 17892  004F64  988A               	bcf	138,4,c	;volatile
 17893  004F66  4A1C               	infsnz	dummy_clocks@i^0,f,c
 17894  004F68  2A1D               	incf	(dummy_clocks@i+1)^0,f,c
 17895  004F6A                     l9133:
 17896  004F6A  501B               	movf	dummy_clocks@n^0,w,c
 17897  004F6C  6E19               	movwf	??_dummy_clocks^0,c
 17898  004F6E  6A1A               	clrf	(??_dummy_clocks+1)^0,c
 17899  004F70  5019               	movf	??_dummy_clocks^0,w,c
 17900  004F72  5C1C               	subwf	dummy_clocks@i^0,w,c
 17901  004F74  501A               	movf	(??_dummy_clocks+1)^0,w,c
 17902  004F76  581D               	subwfb	(dummy_clocks@i+1)^0,w,c
 17903  004F78  B0D8               	btfsc	status,0,c
 17904  004F7A  0012               	return	
 17905  004F7C  D7F0               	goto	l567
 17906  004F7E                     __end_of_dummy_clocks:
 17907                           	callstack 0
 17908                           
 17909 ;; *************** function _leitura_SPI *****************
 17910 ;; Defined at:
 17911 ;;		line 82 in file "bibliotecas/SPI.c"
 17912 ;; Parameters:    Size  Location     Type
 17913 ;;		None
 17914 ;; Auto vars:     Size  Location     Type
 17915 ;;		None
 17916 ;; Return value:  Size  Location     Type
 17917 ;;                  1    wreg      unsigned char 
 17918 ;; Registers used:
 17919 ;;		wreg, status,2
 17920 ;; Tracked objects:
 17921 ;;		On entry : 0/0
 17922 ;;		On exit  : 0/0
 17923 ;;		Unchanged: 0/0
 17924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17925 ;;      Params:         0       0       0       0       0       0       0       0       0
 17926 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17927 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17928 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17929 ;;Total ram usage:        0 bytes
 17930 ;; Hardware stack levels used:    1
 17931 ;; Hardware stack levels required when called:    3
 17932 ;; This function calls:
 17933 ;;		Nothing
 17934 ;; This function is called by:
 17935 ;;		_sdc_disk_write
 17936 ;;		_response
 17937 ;;		_dummy_clocks
 17938 ;;		_wait_ready
 17939 ;; This function uses a non-reentrant model
 17940 ;;
 17941                           
 17942                           	psect	text84
 17943  0053F2                     __ptext84:
 17944                           	callstack 0
 17945  0053F2                     _leitura_SPI:
 17946                           	callstack 16
 17947                           
 17948                           ;SPI.c: 84: SSPBUF = 0xFF;
 17949                           
 17950                           ;incstack = 0
 17951  0053F2  68C9               	setf	201,c	;volatile
 17952                           
 17953                           ;SPI.c: 85: SSPSTATbits.BF = 0;
 17954  0053F4  90C7               	bcf	199,0,c	;volatile
 17955  0053F6                     l659:
 17956  0053F6  A0C7               	btfss	199,0,c	;volatile
 17957  0053F8  D7FE               	goto	l659
 17958                           
 17959                           ;SPI.c: 87: return (SSPBUF);
 17960  0053FA  50C9               	movf	201,w,c	;volatile
 17961  0053FC  0012               	return		;funcret
 17962  0053FE                     __end_of_leitura_SPI:
 17963                           	callstack 0
 17964                           
 17965 ;; *************** function _disk_ioctl *****************
 17966 ;; Defined at:
 17967 ;;		line 198 in file "bibliotecas/diskio.c"
 17968 ;; Parameters:    Size  Location     Type
 17969 ;;  pdrv            1    wreg     unsigned char 
 17970 ;;  cmd             1   24[COMRAM] unsigned char 
 17971 ;;  buff            2   25[COMRAM] PTR void 
 17972 ;;		 -> NULL(0), 
 17973 ;; Auto vars:     Size  Location     Type
 17974 ;;  pdrv            1   27[COMRAM] unsigned char 
 17975 ;;  result          2    0        int 
 17976 ;;  res             1   28[COMRAM] enum E25
 17977 ;; Return value:  Size  Location     Type
 17978 ;;                  1    wreg      enum E25
 17979 ;; Registers used:
 17980 ;;		wreg, status,2, status,0
 17981 ;; Tracked objects:
 17982 ;;		On entry : 3F/0
 17983 ;;		On exit  : 0/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17986 ;;      Params:         3       0       0       0       0       0       0       0       0
 17987 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17988 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17989 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17990 ;;Total ram usage:        5 bytes
 17991 ;; Hardware stack levels used:    1
 17992 ;; Hardware stack levels required when called:    3
 17993 ;; This function calls:
 17994 ;;		Nothing
 17995 ;; This function is called by:
 17996 ;;		_sync
 17997 ;; This function uses a non-reentrant model
 17998 ;;
 17999                           
 18000                           	psect	text85
 18001  0052BC                     __ptext85:
 18002                           	callstack 0
 18003  0052BC                     _disk_ioctl:
 18004                           	callstack 21
 18005                           
 18006                           ;incstack = 0
 18007                           ;disk_ioctl@pdrv stored from wreg
 18008  0052BC  6E1C               	movwf	disk_ioctl@pdrv^0,c
 18009                           
 18010                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 18011  0052BE  D002               	goto	l10051
 18012  0052C0                     l68:
 18013                           
 18014                           ;diskio.c: 212: return res;
 18015  0052C0  501D               	movf	disk_ioctl@res^0,w,c
 18016  0052C2  0012               	return	
 18017  0052C4                     l10051:
 18018  0052C4  501C               	movf	disk_ioctl@pdrv^0,w,c
 18019                           
 18020                           ; Switch size 1, requested type "simple"
 18021                           ; Number of cases is 3, Range of values is 0 to 2
 18022                           ; switch strategies available:
 18023                           ; Name         Instructions Cycles
 18024                           ; simple_byte           10     6 (average)
 18025                           ;	Chosen strategy is simple_byte
 18026  0052C6  0A00               	xorlw	0	; case 0
 18027  0052C8  B4D8               	btfsc	status,2,c
 18028  0052CA  D7FA               	goto	l68
 18029  0052CC  0A01               	xorlw	1	; case 1
 18030  0052CE  B4D8               	btfsc	status,2,c
 18031  0052D0  D7F7               	goto	l68
 18032  0052D2  0A03               	xorlw	3	; case 2
 18033  0052D4  B4D8               	btfsc	status,2,c
 18034  0052D6  D7F4               	goto	l68
 18035                           
 18036                           ;diskio.c: 227: return RES_PARERR;
 18037  0052D8  0E04               	movlw	4
 18038  0052DA  0012               	return		;funcret
 18039  0052DC                     __end_of_disk_ioctl:
 18040                           	callstack 0
 18041                           
 18042 ;; *************** function _get_fattime *****************
 18043 ;; Defined at:
 18044 ;;		line 810 in file "bibliotecas/tff.c"
 18045 ;; Parameters:    Size  Location     Type
 18046 ;;		None
 18047 ;; Auto vars:     Size  Location     Type
 18048 ;;  f_time         10   32[COMRAM] struct .
 18049 ;; Return value:  Size  Location     Type
 18050 ;;                  4   28[COMRAM] unsigned long 
 18051 ;; Registers used:
 18052 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18053 ;; Tracked objects:
 18054 ;;		On entry : 3F/0
 18055 ;;		On exit  : 3F/0
 18056 ;;		Unchanged: 0/0
 18057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18058 ;;      Params:         4       0       0       0       0       0       0       0       0
 18059 ;;      Locals:        10       0       0       0       0       0       0       0       0
 18060 ;;      Temps:          0      38       0       0       0       0       0       0       0
 18061 ;;      Totals:        14      38       0       0       0       0       0       0       0
 18062 ;;Total ram usage:       52 bytes
 18063 ;; Hardware stack levels used:    1
 18064 ;; Hardware stack levels required when called:    4
 18065 ;; This function calls:
 18066 ;;		_GPSDay
 18067 ;;		_GPSHour
 18068 ;;		_GPSMinute
 18069 ;;		_GPSMonth
 18070 ;;		_GPSSecond
 18071 ;;		_GPSyear
 18072 ;; This function is called by:
 18073 ;;		_f_open
 18074 ;;		_f_sync
 18075 ;; This function uses a non-reentrant model
 18076 ;;
 18077                           
 18078                           	psect	text86
 18079  003722                     __ptext86:
 18080                           	callstack 0
 18081  003722                     _get_fattime:
 18082                           	callstack 22
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = GPSHour() - 3;
 18086                           
 18087                           ;incstack = 0
 18088  003722  ECD6  F028         	call	_GPSHour	;wreg free
 18089  003726  0EFD               	movlw	253
 18090  003728  2419               	addwf	?_GPSHour^0,w,c
 18091  00372A  6E21               	movwf	get_fattime@f_time^0,c
 18092  00372C  0EFF               	movlw	255
 18093  00372E  201A               	addwfc	(?_GPSHour+1)^0,w,c
 18094  003730  6E22               	movwf	(get_fattime@f_time+1)^0,c
 18095                           
 18096                           ;tff.c: 815: f_time.min = GPSMinute();
 18097  003732  EC2C  F029         	call	_GPSMinute	;wreg free
 18098  003736  C019  F023         	movff	?_GPSMinute,get_fattime@f_time+2
 18099  00373A  C01A  F024         	movff	?_GPSMinute+1,get_fattime@f_time+3
 18100                           
 18101                           ;tff.c: 816: f_time.seg = GPSSecond();
 18102  00373E  EC0A  F029         	call	_GPSSecond	;wreg free
 18103  003742  C019  F025         	movff	?_GPSSecond,get_fattime@f_time+4
 18104  003746  C01A  F026         	movff	?_GPSSecond+1,get_fattime@f_time+5
 18105                           
 18106                           ;tff.c: 817: f_time.ano = GPSyear() + 2000;
 18107  00374A  ECF9  F028         	call	_GPSyear	;wreg free
 18108  00374E  0ED0               	movlw	208
 18109  003750  2419               	addwf	?_GPSyear^0,w,c
 18110  003752  6E29               	movwf	(get_fattime@f_time+8)^0,c
 18111  003754  0E07               	movlw	7
 18112  003756  201A               	addwfc	(?_GPSyear+1)^0,w,c
 18113  003758  6E2A               	movwf	(get_fattime@f_time+9)^0,c
 18114                           
 18115                           ;tff.c: 818: f_time.mes = GPSMonth();
 18116  00375A  EC1B  F029         	call	_GPSMonth	;wreg free
 18117  00375E  5019               	movf	?_GPSMonth^0,w,c
 18118  003760  6E28               	movwf	(get_fattime@f_time+7)^0,c
 18119                           
 18120                           ;tff.c: 819: f_time.dia = GPSDay();
 18121  003762  EC3D  F029         	call	_GPSDay	;wreg free
 18122  003766  5019               	movf	?_GPSDay^0,w,c
 18123  003768  6E27               	movwf	(get_fattime@f_time+6)^0,c
 18124                           
 18125                           ; BSR set to: 1
 18126                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 18127  00376A  90D8               	bcf	status,0,c
 18128  00376C  3026               	rrcf	(get_fattime@f_time+5)^0,w,c
 18129  00376E  0100               	movlb	0	; () banked
 18130  003770  6F61               	movwf	(??_get_fattime+1)& (0+255),b
 18131  003772  3025               	rrcf	(get_fattime@f_time+4)^0,w,c
 18132  003774  6F60               	movwf	??_get_fattime& (0+255),b
 18133  003776  5023               	movf	(get_fattime@f_time+2)^0,w,c
 18134  003778  6F62               	movwf	(??_get_fattime+2)& (0+255),b
 18135  00377A  5024               	movf	(get_fattime@f_time+3)^0,w,c
 18136  00377C  6F63               	movwf	(??_get_fattime+3)& (0+255),b
 18137  00377E  6B64               	clrf	(??_get_fattime+4)& (0+255),b
 18138  003780  6B65               	clrf	(??_get_fattime+5)& (0+255),b
 18139  003782  0E05               	movlw	5
 18140  003784                     u12365:
 18141  003784  90D8               	bcf	status,0,c
 18142  003786  3762               	rlcf	(??_get_fattime+2)& (0+255),f,b
 18143  003788  3763               	rlcf	(??_get_fattime+3)& (0+255),f,b
 18144  00378A  3764               	rlcf	(??_get_fattime+4)& (0+255),f,b
 18145  00378C  3765               	rlcf	(??_get_fattime+5)& (0+255),f,b
 18146  00378E  2EE8               	decfsz	wreg,f,c
 18147  003790  D7F9               	goto	u12365
 18148  003792  5021               	movf	get_fattime@f_time^0,w,c
 18149  003794  6F66               	movwf	(??_get_fattime+6)& (0+255),b
 18150  003796  5022               	movf	(get_fattime@f_time+1)^0,w,c
 18151  003798  6F67               	movwf	(??_get_fattime+7)& (0+255),b
 18152  00379A  6B68               	clrf	(??_get_fattime+8)& (0+255),b
 18153  00379C  6B69               	clrf	(??_get_fattime+9)& (0+255),b
 18154  00379E  0E0B               	movlw	11
 18155  0037A0                     u12375:
 18156  0037A0  90D8               	bcf	status,0,c
 18157  0037A2  3766               	rlcf	(??_get_fattime+6)& (0+255),f,b
 18158  0037A4  3767               	rlcf	(??_get_fattime+7)& (0+255),f,b
 18159  0037A6  3768               	rlcf	(??_get_fattime+8)& (0+255),f,b
 18160  0037A8  3769               	rlcf	(??_get_fattime+9)& (0+255),f,b
 18161  0037AA  2EE8               	decfsz	wreg,f,c
 18162  0037AC  D7F9               	goto	u12375
 18163  0037AE  C027  F06A         	movff	get_fattime@f_time+6,??_get_fattime+10
 18164  0037B2  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 18165  0037B4  6B6C               	clrf	(??_get_fattime+12)& (0+255),b
 18166  0037B6  6B6D               	clrf	(??_get_fattime+13)& (0+255),b
 18167  0037B8  C06B  F06D         	movff	??_get_fattime+11,??_get_fattime+13
 18168  0037BC  C06A  F06C         	movff	??_get_fattime+10,??_get_fattime+12
 18169  0037C0  6B6B               	clrf	(??_get_fattime+11)& (0+255),b
 18170  0037C2  6B6A               	clrf	(??_get_fattime+10)& (0+255),b
 18171  0037C4  C028  F06E         	movff	get_fattime@f_time+7,??_get_fattime+14
 18172  0037C8  6B6F               	clrf	(??_get_fattime+15)& (0+255),b
 18173  0037CA  6B70               	clrf	(??_get_fattime+16)& (0+255),b
 18174  0037CC  6B71               	clrf	(??_get_fattime+17)& (0+255),b
 18175  0037CE  0E15               	movlw	21
 18176  0037D0                     u12385:
 18177  0037D0  90D8               	bcf	status,0,c
 18178  0037D2  376E               	rlcf	(??_get_fattime+14)& (0+255),f,b
 18179  0037D4  376F               	rlcf	(??_get_fattime+15)& (0+255),f,b
 18180  0037D6  3770               	rlcf	(??_get_fattime+16)& (0+255),f,b
 18181  0037D8  3771               	rlcf	(??_get_fattime+17)& (0+255),f,b
 18182  0037DA  2EE8               	decfsz	wreg,f,c
 18183  0037DC  D7F9               	goto	u12385
 18184  0037DE  0EC4               	movlw	196
 18185  0037E0  2429               	addwf	(get_fattime@f_time+8)^0,w,c
 18186  0037E2  6F72               	movwf	(??_get_fattime+18)& (0+255),b
 18187  0037E4  0EFF               	movlw	255
 18188  0037E6  202A               	addwfc	(get_fattime@f_time+9)^0,w,c
 18189  0037E8  6F73               	movwf	(??_get_fattime+19)& (0+255),b
 18190  0037EA  6B74               	clrf	(??_get_fattime+20)& (0+255),b
 18191  0037EC  6B75               	clrf	(??_get_fattime+21)& (0+255),b
 18192  0037EE  0E19               	movlw	25
 18193  0037F0                     u12395:
 18194  0037F0  90D8               	bcf	status,0,c
 18195  0037F2  3772               	rlcf	(??_get_fattime+18)& (0+255),f,b
 18196  0037F4  3773               	rlcf	(??_get_fattime+19)& (0+255),f,b
 18197  0037F6  3774               	rlcf	(??_get_fattime+20)& (0+255),f,b
 18198  0037F8  3775               	rlcf	(??_get_fattime+21)& (0+255),f,b
 18199  0037FA  2EE8               	decfsz	wreg,f,c
 18200  0037FC  D7F9               	goto	u12395
 18201  0037FE  516E               	movf	(??_get_fattime+14)& (0+255),w,b
 18202  003800  1172               	iorwf	(??_get_fattime+18)& (0+255),w,b
 18203  003802  6F76               	movwf	(??_get_fattime+22)& (0+255),b
 18204  003804  516F               	movf	(??_get_fattime+15)& (0+255),w,b
 18205  003806  1173               	iorwf	(??_get_fattime+19)& (0+255),w,b
 18206  003808  6F77               	movwf	(??_get_fattime+23)& (0+255),b
 18207  00380A  5170               	movf	(??_get_fattime+16)& (0+255),w,b
 18208  00380C  1174               	iorwf	(??_get_fattime+20)& (0+255),w,b
 18209  00380E  6F78               	movwf	(??_get_fattime+24)& (0+255),b
 18210  003810  5171               	movf	(??_get_fattime+17)& (0+255),w,b
 18211  003812  1175               	iorwf	(??_get_fattime+21)& (0+255),w,b
 18212  003814  6F79               	movwf	(??_get_fattime+25)& (0+255),b
 18213  003816  516A               	movf	(??_get_fattime+10)& (0+255),w,b
 18214  003818  1176               	iorwf	(??_get_fattime+22)& (0+255),w,b
 18215  00381A  6F7A               	movwf	(??_get_fattime+26)& (0+255),b
 18216  00381C  516B               	movf	(??_get_fattime+11)& (0+255),w,b
 18217  00381E  1177               	iorwf	(??_get_fattime+23)& (0+255),w,b
 18218  003820  6F7B               	movwf	(??_get_fattime+27)& (0+255),b
 18219  003822  516C               	movf	(??_get_fattime+12)& (0+255),w,b
 18220  003824  1178               	iorwf	(??_get_fattime+24)& (0+255),w,b
 18221  003826  6F7C               	movwf	(??_get_fattime+28)& (0+255),b
 18222  003828  516D               	movf	(??_get_fattime+13)& (0+255),w,b
 18223  00382A  1179               	iorwf	(??_get_fattime+25)& (0+255),w,b
 18224  00382C  6F7D               	movwf	(??_get_fattime+29)& (0+255),b
 18225  00382E  5166               	movf	(??_get_fattime+6)& (0+255),w,b
 18226  003830  117A               	iorwf	(??_get_fattime+26)& (0+255),w,b
 18227  003832  6F7E               	movwf	(??_get_fattime+30)& (0+255),b
 18228  003834  5167               	movf	(??_get_fattime+7)& (0+255),w,b
 18229  003836  117B               	iorwf	(??_get_fattime+27)& (0+255),w,b
 18230  003838  6F7F               	movwf	(??_get_fattime+31)& (0+255),b
 18231  00383A  5168               	movf	(??_get_fattime+8)& (0+255),w,b
 18232  00383C  117C               	iorwf	(??_get_fattime+28)& (0+255),w,b
 18233  00383E  6F80               	movwf	(??_get_fattime+32)& (0+255),b
 18234  003840  5169               	movf	(??_get_fattime+9)& (0+255),w,b
 18235  003842  117D               	iorwf	(??_get_fattime+29)& (0+255),w,b
 18236  003844  6F81               	movwf	(??_get_fattime+33)& (0+255),b
 18237  003846  5162               	movf	(??_get_fattime+2)& (0+255),w,b
 18238  003848  117E               	iorwf	(??_get_fattime+30)& (0+255),w,b
 18239  00384A  6F82               	movwf	(??_get_fattime+34)& (0+255),b
 18240  00384C  5163               	movf	(??_get_fattime+3)& (0+255),w,b
 18241  00384E  117F               	iorwf	(??_get_fattime+31)& (0+255),w,b
 18242  003850  6F83               	movwf	(??_get_fattime+35)& (0+255),b
 18243  003852  5164               	movf	(??_get_fattime+4)& (0+255),w,b
 18244  003854  1180               	iorwf	(??_get_fattime+32)& (0+255),w,b
 18245  003856  6F84               	movwf	(??_get_fattime+36)& (0+255),b
 18246  003858  5165               	movf	(??_get_fattime+5)& (0+255),w,b
 18247  00385A  1181               	iorwf	(??_get_fattime+33)& (0+255),w,b
 18248  00385C  6F85               	movwf	(??_get_fattime+37)& (0+255),b
 18249  00385E  5160               	movf	??_get_fattime& (0+255),w,b
 18250  003860  1182               	iorwf	(??_get_fattime+34)& (0+255),w,b
 18251  003862  6E1D               	movwf	?_get_fattime^0,c
 18252  003864  5161               	movf	(??_get_fattime+1)& (0+255),w,b
 18253  003866  1183               	iorwf	(??_get_fattime+35)& (0+255),w,b
 18254  003868  6E1E               	movwf	(?_get_fattime+1)^0,c
 18255  00386A  0E00               	movlw	0
 18256  00386C  1184               	iorwf	(??_get_fattime+36)& (0+255),w,b
 18257  00386E  6E1F               	movwf	(?_get_fattime+2)^0,c
 18258  003870  0E00               	movlw	0
 18259  003872  1185               	iorwf	(??_get_fattime+37)& (0+255),w,b
 18260  003874  6E20               	movwf	(?_get_fattime+3)^0,c
 18261                           
 18262                           ; BSR set to: 0
 18263  003876  0012               	return		;funcret
 18264  003878                     __end_of_get_fattime:
 18265                           	callstack 0
 18266                           
 18267 ;; *************** function _GPSyear *****************
 18268 ;; Defined at:
 18269 ;;		line 167 in file "bibliotecas/GPS.c"
 18270 ;; Parameters:    Size  Location     Type
 18271 ;;		None
 18272 ;; Auto vars:     Size  Location     Type
 18273 ;;		None
 18274 ;; Return value:  Size  Location     Type
 18275 ;;                  2   24[COMRAM] unsigned int 
 18276 ;; Registers used:
 18277 ;;		wreg, status,2, status,0, prodl, prodh
 18278 ;; Tracked objects:
 18279 ;;		On entry : 3F/1
 18280 ;;		On exit  : 3F/1
 18281 ;;		Unchanged: 0/0
 18282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18283 ;;      Params:         2       0       0       0       0       0       0       0       0
 18284 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18285 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18286 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18287 ;;Total ram usage:        4 bytes
 18288 ;; Hardware stack levels used:    1
 18289 ;; Hardware stack levels required when called:    3
 18290 ;; This function calls:
 18291 ;;		Nothing
 18292 ;; This function is called by:
 18293 ;;		_get_fattime
 18294 ;; This function uses a non-reentrant model
 18295 ;;
 18296                           
 18297                           	psect	text87
 18298  0051F2                     __ptext87:
 18299                           	callstack 0
 18300  0051F2                     _GPSyear:
 18301                           	callstack 22
 18302                           
 18303                           ; BSR set to: 1
 18304                           ;GPS.c: 169: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;incstack = 0
 18308  0051F2  51DA               	movf	(_rawDate+4)& (0+255),w,b
 18309  0051F4  0D0A               	mullw	10
 18310  0051F6  CFF3 F01B          	movff	prodl,??_GPSyear
 18311  0051FA  CFF4 F01C          	movff	prodh,??_GPSyear+1
 18312  0051FE  51DB               	movf	(_rawDate+5)& (0+255),w,b
 18313  005200  261B               	addwf	??_GPSyear^0,f,c
 18314  005202  0E00               	movlw	0
 18315  005204  221C               	addwfc	(??_GPSyear+1)^0,f,c
 18316  005206  0EF0               	movlw	240
 18317  005208  241B               	addwf	??_GPSyear^0,w,c
 18318  00520A  6E19               	movwf	?_GPSyear^0,c
 18319  00520C  0EFD               	movlw	253
 18320  00520E  201C               	addwfc	(??_GPSyear+1)^0,w,c
 18321  005210  6E1A               	movwf	(?_GPSyear+1)^0,c
 18322                           
 18323                           ; BSR set to: 1
 18324  005212  0012               	return		;funcret
 18325  005214                     __end_of_GPSyear:
 18326                           	callstack 0
 18327                           
 18328 ;; *************** function _GPSSecond *****************
 18329 ;; Defined at:
 18330 ;;		line 146 in file "bibliotecas/GPS.c"
 18331 ;; Parameters:    Size  Location     Type
 18332 ;;		None
 18333 ;; Auto vars:     Size  Location     Type
 18334 ;;		None
 18335 ;; Return value:  Size  Location     Type
 18336 ;;                  2   24[COMRAM] unsigned int 
 18337 ;; Registers used:
 18338 ;;		wreg, status,2, status,0, prodl, prodh
 18339 ;; Tracked objects:
 18340 ;;		On entry : 3F/1
 18341 ;;		On exit  : 3F/1
 18342 ;;		Unchanged: 0/0
 18343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18344 ;;      Params:         2       0       0       0       0       0       0       0       0
 18345 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18346 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18347 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18348 ;;Total ram usage:        4 bytes
 18349 ;; Hardware stack levels used:    1
 18350 ;; Hardware stack levels required when called:    3
 18351 ;; This function calls:
 18352 ;;		Nothing
 18353 ;; This function is called by:
 18354 ;;		_get_fattime
 18355 ;; This function uses a non-reentrant model
 18356 ;;
 18357                           
 18358                           	psect	text88
 18359  005214                     __ptext88:
 18360                           	callstack 0
 18361  005214                     _GPSSecond:
 18362                           	callstack 22
 18363                           
 18364                           ; BSR set to: 1
 18365                           ;GPS.c: 148: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 18366                           
 18367                           ; BSR set to: 1
 18368                           ;incstack = 0
 18369  005214  51C8               	movf	(_rawTime+4)& (0+255),w,b
 18370  005216  0D0A               	mullw	10
 18371  005218  CFF3 F01B          	movff	prodl,??_GPSSecond
 18372  00521C  CFF4 F01C          	movff	prodh,??_GPSSecond+1
 18373  005220  51C9               	movf	(_rawTime+5)& (0+255),w,b
 18374  005222  261B               	addwf	??_GPSSecond^0,f,c
 18375  005224  0E00               	movlw	0
 18376  005226  221C               	addwfc	(??_GPSSecond+1)^0,f,c
 18377  005228  0EF0               	movlw	240
 18378  00522A  241B               	addwf	??_GPSSecond^0,w,c
 18379  00522C  6E19               	movwf	?_GPSSecond^0,c
 18380  00522E  0EFD               	movlw	253
 18381  005230  201C               	addwfc	(??_GPSSecond+1)^0,w,c
 18382  005232  6E1A               	movwf	(?_GPSSecond+1)^0,c
 18383                           
 18384                           ; BSR set to: 1
 18385  005234  0012               	return		;funcret
 18386  005236                     __end_of_GPSSecond:
 18387                           	callstack 0
 18388                           
 18389 ;; *************** function _GPSMonth *****************
 18390 ;; Defined at:
 18391 ;;		line 163 in file "bibliotecas/GPS.c"
 18392 ;; Parameters:    Size  Location     Type
 18393 ;;		None
 18394 ;; Auto vars:     Size  Location     Type
 18395 ;;		None
 18396 ;; Return value:  Size  Location     Type
 18397 ;;                  2   24[COMRAM] unsigned int 
 18398 ;; Registers used:
 18399 ;;		wreg, status,2, status,0, prodl, prodh
 18400 ;; Tracked objects:
 18401 ;;		On entry : 3F/1
 18402 ;;		On exit  : 3F/1
 18403 ;;		Unchanged: 0/0
 18404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18405 ;;      Params:         2       0       0       0       0       0       0       0       0
 18406 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18407 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18408 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18409 ;;Total ram usage:        4 bytes
 18410 ;; Hardware stack levels used:    1
 18411 ;; Hardware stack levels required when called:    3
 18412 ;; This function calls:
 18413 ;;		Nothing
 18414 ;; This function is called by:
 18415 ;;		_get_fattime
 18416 ;; This function uses a non-reentrant model
 18417 ;;
 18418                           
 18419                           	psect	text89
 18420  005236                     __ptext89:
 18421                           	callstack 0
 18422  005236                     _GPSMonth:
 18423                           	callstack 22
 18424                           
 18425                           ; BSR set to: 1
 18426                           ;GPS.c: 165: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 18427                           
 18428                           ; BSR set to: 1
 18429                           ;incstack = 0
 18430  005236  51D8               	movf	(_rawDate+2)& (0+255),w,b
 18431  005238  0D0A               	mullw	10
 18432  00523A  CFF3 F01B          	movff	prodl,??_GPSMonth
 18433  00523E  CFF4 F01C          	movff	prodh,??_GPSMonth+1
 18434  005242  51D9               	movf	(_rawDate+3)& (0+255),w,b
 18435  005244  261B               	addwf	??_GPSMonth^0,f,c
 18436  005246  0E00               	movlw	0
 18437  005248  221C               	addwfc	(??_GPSMonth+1)^0,f,c
 18438  00524A  0EF0               	movlw	240
 18439  00524C  241B               	addwf	??_GPSMonth^0,w,c
 18440  00524E  6E19               	movwf	?_GPSMonth^0,c
 18441  005250  0EFD               	movlw	253
 18442  005252  201C               	addwfc	(??_GPSMonth+1)^0,w,c
 18443  005254  6E1A               	movwf	(?_GPSMonth+1)^0,c
 18444                           
 18445                           ; BSR set to: 1
 18446  005256  0012               	return		;funcret
 18447  005258                     __end_of_GPSMonth:
 18448                           	callstack 0
 18449                           
 18450 ;; *************** function _GPSMinute *****************
 18451 ;; Defined at:
 18452 ;;		line 150 in file "bibliotecas/GPS.c"
 18453 ;; Parameters:    Size  Location     Type
 18454 ;;		None
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;		None
 18457 ;; Return value:  Size  Location     Type
 18458 ;;                  2   24[COMRAM] unsigned int 
 18459 ;; Registers used:
 18460 ;;		wreg, status,2, status,0, prodl, prodh
 18461 ;; Tracked objects:
 18462 ;;		On entry : 3F/1
 18463 ;;		On exit  : 3F/1
 18464 ;;		Unchanged: 0/0
 18465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18466 ;;      Params:         2       0       0       0       0       0       0       0       0
 18467 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18468 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18469 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18470 ;;Total ram usage:        4 bytes
 18471 ;; Hardware stack levels used:    1
 18472 ;; Hardware stack levels required when called:    3
 18473 ;; This function calls:
 18474 ;;		Nothing
 18475 ;; This function is called by:
 18476 ;;		_get_fattime
 18477 ;; This function uses a non-reentrant model
 18478 ;;
 18479                           
 18480                           	psect	text90
 18481  005258                     __ptext90:
 18482                           	callstack 0
 18483  005258                     _GPSMinute:
 18484                           	callstack 22
 18485                           
 18486                           ; BSR set to: 1
 18487                           ;GPS.c: 152: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 18488                           
 18489                           ; BSR set to: 1
 18490                           ;incstack = 0
 18491  005258  51C6               	movf	(_rawTime+2)& (0+255),w,b
 18492  00525A  0D0A               	mullw	10
 18493  00525C  CFF3 F01B          	movff	prodl,??_GPSMinute
 18494  005260  CFF4 F01C          	movff	prodh,??_GPSMinute+1
 18495  005264  51C7               	movf	(_rawTime+3)& (0+255),w,b
 18496  005266  261B               	addwf	??_GPSMinute^0,f,c
 18497  005268  0E00               	movlw	0
 18498  00526A  221C               	addwfc	(??_GPSMinute+1)^0,f,c
 18499  00526C  0EF0               	movlw	240
 18500  00526E  241B               	addwf	??_GPSMinute^0,w,c
 18501  005270  6E19               	movwf	?_GPSMinute^0,c
 18502  005272  0EFD               	movlw	253
 18503  005274  201C               	addwfc	(??_GPSMinute+1)^0,w,c
 18504  005276  6E1A               	movwf	(?_GPSMinute+1)^0,c
 18505                           
 18506                           ; BSR set to: 1
 18507  005278  0012               	return		;funcret
 18508  00527A                     __end_of_GPSMinute:
 18509                           	callstack 0
 18510                           
 18511 ;; *************** function _GPSHour *****************
 18512 ;; Defined at:
 18513 ;;		line 154 in file "bibliotecas/GPS.c"
 18514 ;; Parameters:    Size  Location     Type
 18515 ;;		None
 18516 ;; Auto vars:     Size  Location     Type
 18517 ;;		None
 18518 ;; Return value:  Size  Location     Type
 18519 ;;                  2   24[COMRAM] unsigned int 
 18520 ;; Registers used:
 18521 ;;		wreg, status,2, status,0, prodl, prodh
 18522 ;; Tracked objects:
 18523 ;;		On entry : 3F/0
 18524 ;;		On exit  : 3F/1
 18525 ;;		Unchanged: 0/0
 18526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18527 ;;      Params:         2       0       0       0       0       0       0       0       0
 18528 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18529 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18530 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18531 ;;Total ram usage:        4 bytes
 18532 ;; Hardware stack levels used:    1
 18533 ;; Hardware stack levels required when called:    3
 18534 ;; This function calls:
 18535 ;;		Nothing
 18536 ;; This function is called by:
 18537 ;;		_get_fattime
 18538 ;; This function uses a non-reentrant model
 18539 ;;
 18540                           
 18541                           	psect	text91
 18542  0051AC                     __ptext91:
 18543                           	callstack 0
 18544  0051AC                     _GPSHour:
 18545                           	callstack 22
 18546                           
 18547                           ; BSR set to: 0
 18548                           ;GPS.c: 156: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 18549                           
 18550                           ; BSR set to: 1
 18551                           ;incstack = 0
 18552  0051AC  0101               	movlb	1	; () banked
 18553  0051AE  51C4               	movf	_rawTime& (0+255),w,b
 18554  0051B0  0D0A               	mullw	10
 18555  0051B2  CFF3 F01B          	movff	prodl,??_GPSHour
 18556  0051B6  CFF4 F01C          	movff	prodh,??_GPSHour+1
 18557  0051BA  51C5               	movf	(_rawTime+1)& (0+255),w,b
 18558  0051BC  261B               	addwf	??_GPSHour^0,f,c
 18559  0051BE  0E00               	movlw	0
 18560  0051C0  221C               	addwfc	(??_GPSHour+1)^0,f,c
 18561  0051C2  0EF0               	movlw	240
 18562  0051C4  241B               	addwf	??_GPSHour^0,w,c
 18563  0051C6  6E19               	movwf	?_GPSHour^0,c
 18564  0051C8  0EFD               	movlw	253
 18565  0051CA  201C               	addwfc	(??_GPSHour+1)^0,w,c
 18566  0051CC  6E1A               	movwf	(?_GPSHour+1)^0,c
 18567                           
 18568                           ; BSR set to: 1
 18569  0051CE  0012               	return		;funcret
 18570  0051D0                     __end_of_GPSHour:
 18571                           	callstack 0
 18572                           
 18573 ;; *************** function _GPSDay *****************
 18574 ;; Defined at:
 18575 ;;		line 159 in file "bibliotecas/GPS.c"
 18576 ;; Parameters:    Size  Location     Type
 18577 ;;		None
 18578 ;; Auto vars:     Size  Location     Type
 18579 ;;		None
 18580 ;; Return value:  Size  Location     Type
 18581 ;;                  2   24[COMRAM] unsigned int 
 18582 ;; Registers used:
 18583 ;;		wreg, status,2, status,0, prodl, prodh
 18584 ;; Tracked objects:
 18585 ;;		On entry : 3F/1
 18586 ;;		On exit  : 3F/1
 18587 ;;		Unchanged: 0/0
 18588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18589 ;;      Params:         2       0       0       0       0       0       0       0       0
 18590 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18591 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18592 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18593 ;;Total ram usage:        4 bytes
 18594 ;; Hardware stack levels used:    1
 18595 ;; Hardware stack levels required when called:    3
 18596 ;; This function calls:
 18597 ;;		Nothing
 18598 ;; This function is called by:
 18599 ;;		_get_fattime
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text92
 18604  00527A                     __ptext92:
 18605                           	callstack 0
 18606  00527A                     _GPSDay:
 18607                           	callstack 22
 18608                           
 18609                           ; BSR set to: 1
 18610                           ;GPS.c: 161: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 18611                           
 18612                           ; BSR set to: 1
 18613                           ;incstack = 0
 18614  00527A  51D6               	movf	_rawDate& (0+255),w,b
 18615  00527C  0D0A               	mullw	10
 18616  00527E  CFF3 F01B          	movff	prodl,??_GPSDay
 18617  005282  CFF4 F01C          	movff	prodh,??_GPSDay+1
 18618  005286  51D7               	movf	(_rawDate+1)& (0+255),w,b
 18619  005288  261B               	addwf	??_GPSDay^0,f,c
 18620  00528A  0E00               	movlw	0
 18621  00528C  221C               	addwfc	(??_GPSDay+1)^0,f,c
 18622  00528E  0EF0               	movlw	240
 18623  005290  241B               	addwf	??_GPSDay^0,w,c
 18624  005292  6E19               	movwf	?_GPSDay^0,c
 18625  005294  0EFD               	movlw	253
 18626  005296  201C               	addwfc	(??_GPSDay+1)^0,w,c
 18627  005298  6E1A               	movwf	(?_GPSDay+1)^0,c
 18628                           
 18629                           ; BSR set to: 1
 18630  00529A  0012               	return		;funcret
 18631  00529C                     __end_of_GPSDay:
 18632                           	callstack 0
 18633                           
 18634 ;; *************** function _desliga_uart *****************
 18635 ;; Defined at:
 18636 ;;		line 219 in file "bibliotecas/uart.c"
 18637 ;; Parameters:    Size  Location     Type
 18638 ;;		None
 18639 ;; Auto vars:     Size  Location     Type
 18640 ;;		None
 18641 ;; Return value:  Size  Location     Type
 18642 ;;                  1    wreg      void 
 18643 ;; Registers used:
 18644 ;;		wreg, status,2
 18645 ;; Tracked objects:
 18646 ;;		On entry : 3F/0
 18647 ;;		On exit  : 3F/0
 18648 ;;		Unchanged: 3F/0
 18649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18650 ;;      Params:         0       0       0       0       0       0       0       0       0
 18651 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18652 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18653 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18654 ;;Total ram usage:        0 bytes
 18655 ;; Hardware stack levels used:    1
 18656 ;; Hardware stack levels required when called:    3
 18657 ;; This function calls:
 18658 ;;		Nothing
 18659 ;; This function is called by:
 18660 ;;		_escrita_sdcard
 18661 ;; This function uses a non-reentrant model
 18662 ;;
 18663                           
 18664                           	psect	text93
 18665  0053CC                     __ptext93:
 18666                           	callstack 0
 18667  0053CC                     _desliga_uart:
 18668                           	callstack 24
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;uart.c: 221: TRISCbits.RC6 = 1;
 18672                           
 18673                           ; BSR set to: 1
 18674                           ;incstack = 0
 18675  0053CC  8C94               	bsf	148,6,c	;volatile
 18676                           
 18677                           ;uart.c: 222: TRISCbits.RC7 = 1;
 18678  0053CE  8E94               	bsf	148,7,c	;volatile
 18679                           
 18680                           ; BSR set to: 0
 18681                           ;uart.c: 225: TXSTA = 0x00;
 18682  0053D0  0E00               	movlw	0
 18683  0053D2  6EAC               	movwf	172,c	;volatile
 18684                           
 18685                           ;uart.c: 227: RCSTA = 0x00;
 18686  0053D4  0E00               	movlw	0
 18687  0053D6  6EAB               	movwf	171,c	;volatile
 18688                           
 18689                           ; BSR set to: 0
 18690  0053D8  0012               	return		;funcret
 18691  0053DA                     __end_of_desliga_uart:
 18692                           	callstack 0
 18693                           
 18694 ;; *************** function _desliga_SPI *****************
 18695 ;; Defined at:
 18696 ;;		line 68 in file "bibliotecas/SPI.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;		None
 18699 ;; Auto vars:     Size  Location     Type
 18700 ;;		None
 18701 ;; Return value:  Size  Location     Type
 18702 ;;                  1    wreg      void 
 18703 ;; Registers used:
 18704 ;;		wreg, status,2
 18705 ;; Tracked objects:
 18706 ;;		On entry : 0/0
 18707 ;;		On exit  : 0/0
 18708 ;;		Unchanged: 0/0
 18709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18710 ;;      Params:         0       0       0       0       0       0       0       0       0
 18711 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18712 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18713 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18714 ;;Total ram usage:        0 bytes
 18715 ;; Hardware stack levels used:    1
 18716 ;; Hardware stack levels required when called:    3
 18717 ;; This function calls:
 18718 ;;		Nothing
 18719 ;; This function is called by:
 18720 ;;		_escrita_sdcard
 18721 ;; This function uses a non-reentrant model
 18722 ;;
 18723                           
 18724                           	psect	text94
 18725  0053FE                     __ptext94:
 18726                           	callstack 0
 18727  0053FE                     _desliga_SPI:
 18728                           	callstack 24
 18729                           
 18730                           ;SPI.c: 70: SSPSTAT = 0x00;
 18731                           
 18732                           ; BSR set to: 0
 18733                           ;incstack = 0
 18734  0053FE  0E00               	movlw	0
 18735  005400  6EC7               	movwf	199,c	;volatile
 18736                           
 18737                           ;SPI.c: 71: SSPCON1 = 0x00;
 18738  005402  0E00               	movlw	0
 18739  005404  6EC6               	movwf	198,c	;volatile
 18740                           
 18741                           ;SPI.c: 72: SSPCON1bits.SSPEN = 0;
 18742  005406  9AC6               	bcf	198,5,c	;volatile
 18743  005408  0012               	return		;funcret
 18744  00540A                     __end_of_desliga_SPI:
 18745                           	callstack 0
 18746                           
 18747 ;; *************** function _dados_gps_to_sd *****************
 18748 ;; Defined at:
 18749 ;;		line 210 in file "bibliotecas/GPS.c"
 18750 ;; Parameters:    Size  Location     Type
 18751 ;;		None
 18752 ;; Auto vars:     Size  Location     Type
 18753 ;;		None
 18754 ;; Return value:  Size  Location     Type
 18755 ;;                  1    wreg      void 
 18756 ;; Registers used:
 18757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18758 ;; Tracked objects:
 18759 ;;		On entry : 0/0
 18760 ;;		On exit  : 0/0
 18761 ;;		Unchanged: 0/0
 18762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18763 ;;      Params:         0       0       0       0       0       0       0       0       0
 18764 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18766 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18767 ;;Total ram usage:        0 bytes
 18768 ;; Hardware stack levels used:    1
 18769 ;; Hardware stack levels required when called:    5
 18770 ;; This function calls:
 18771 ;;		_monta_sd
 18772 ;; This function is called by:
 18773 ;;		_main
 18774 ;; This function uses a non-reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text95
 18778  004F7E                     __ptext95:
 18779                           	callstack 0
 18780  004F7E                     _dados_gps_to_sd:
 18781                           	callstack 25
 18782                           
 18783                           ;GPS.c: 212: monta_sd(0, rawTime);
 18784                           
 18785                           ;incstack = 0
 18786  004F7E  0EC4               	movlw	low _rawTime
 18787  004F80  6E1D               	movwf	monta_sd@dado^0,c
 18788  004F82  0E01               	movlw	high _rawTime
 18789  004F84  6E1E               	movwf	(monta_sd@dado+1)^0,c
 18790  004F86  0E00               	movlw	0
 18791  004F88  EC08  F01F         	call	_monta_sd
 18792                           
 18793                           ;GPS.c: 213: monta_sd(1, rawDate);
 18794  004F8C  0ED6               	movlw	low _rawDate
 18795  004F8E  6E1D               	movwf	monta_sd@dado^0,c
 18796  004F90  0E01               	movlw	high _rawDate
 18797  004F92  6E1E               	movwf	(monta_sd@dado+1)^0,c
 18798  004F94  0E01               	movlw	1
 18799  004F96  EC08  F01F         	call	_monta_sd
 18800                           
 18801                           ;GPS.c: 214: monta_sd(2, rawLatitude);
 18802  004F9A  0EE5               	movlw	low _rawLatitude
 18803  004F9C  6E1D               	movwf	monta_sd@dado^0,c
 18804  004F9E  0E02               	movlw	high _rawLatitude
 18805  004FA0  6E1E               	movwf	(monta_sd@dado+1)^0,c
 18806  004FA2  0E02               	movlw	2
 18807  004FA4  EC08  F01F         	call	_monta_sd
 18808                           
 18809                           ;GPS.c: 215: monta_sd(3, rawLongitude);
 18810  004FA8  0ED8               	movlw	low _rawLongitude
 18811  004FAA  6E1D               	movwf	monta_sd@dado^0,c
 18812  004FAC  0E02               	movlw	high _rawLongitude
 18813  004FAE  6E1E               	movwf	(monta_sd@dado+1)^0,c
 18814  004FB0  0E03               	movlw	3
 18815  004FB2  EC08  F01F         	call	_monta_sd
 18816  004FB6  0012               	return		;funcret
 18817  004FB8                     __end_of_dados_gps_to_sd:
 18818                           	callstack 0
 18819                           
 18820 ;; *************** function _monta_sd *****************
 18821 ;; Defined at:
 18822 ;;		line 301 in file "bibliotecas/SDCard.c"
 18823 ;; Parameters:    Size  Location     Type
 18824 ;;  index           1    wreg     unsigned char 
 18825 ;;  dado            2   28[COMRAM] PTR unsigned char 
 18826 ;;		 -> rawDate(7), rawLongitude(13), rawLatitude(13), rawTime(11), 
 18827 ;; Auto vars:     Size  Location     Type
 18828 ;;  index           1   30[COMRAM] unsigned char 
 18829 ;;  i               1   32[COMRAM] unsigned char 
 18830 ;;  size            1   31[COMRAM] unsigned char 
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  1    wreg      void 
 18833 ;; Registers used:
 18834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/0
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18840 ;;      Params:         2       0       0       0       0       0       0       0       0
 18841 ;;      Locals:         3       0       0       0       0       0       0       0       0
 18842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18843 ;;      Totals:         5       0       0       0       0       0       0       0       0
 18844 ;;Total ram usage:        5 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:    4
 18847 ;; This function calls:
 18848 ;;		_strlen
 18849 ;; This function is called by:
 18850 ;;		_dados_gps_to_sd
 18851 ;; This function uses a non-reentrant model
 18852 ;;
 18853                           
 18854                           	psect	text96
 18855  003E10                     __ptext96:
 18856                           	callstack 0
 18857  003E10                     _monta_sd:
 18858                           	callstack 25
 18859                           
 18860                           ;incstack = 0
 18861                           ;monta_sd@index stored from wreg
 18862  003E10  6E1F               	movwf	monta_sd@index^0,c
 18863                           
 18864                           ;SDCard.c: 303: unsigned char i, size;;SDCard.c: 304: size = strlen(dado);
 18865  003E12  C01D  F019         	movff	monta_sd@dado,strlen@s
 18866  003E16  C01E  F01A         	movff	monta_sd@dado+1,strlen@s+1
 18867  003E1A  EC9B  F028         	call	_strlen	;wreg free
 18868  003E1E  5019               	movf	?_strlen^0,w,c
 18869  003E20  6E20               	movwf	monta_sd@size^0,c
 18870                           
 18871                           ;SDCard.c: 305: switch(index)
 18872  003E22  D06B               	goto	l11443
 18873  003E24                     l11375:
 18874                           
 18875                           ;SDCard.c: 308: for(i=0; i<6;i++)
 18876  003E24  0E00               	movlw	0
 18877  003E26  6E21               	movwf	monta_sd@i^0,c
 18878  003E28                     l11381:
 18879                           
 18880                           ;SDCard.c: 309: {;SDCard.c: 310: string_dado.hora[i] = *dado;
 18881  003E28  C01D  FFD9         	movff	monta_sd@dado,fsr2l
 18882  003E2C  C01E  FFDA         	movff	monta_sd@dado+1,fsr2h
 18883  003E30  0E81               	movlw	low (_string_dado+7)
 18884  003E32  2421               	addwf	monta_sd@i^0,w,c
 18885  003E34  6EE1               	movwf	fsr1l,c
 18886  003E36  6AE2               	clrf	fsr1h,c
 18887  003E38  0E02               	movlw	high (_string_dado+7)
 18888  003E3A  22E2               	addwfc	fsr1h,f,c
 18889  003E3C  CFDF FFE7          	movff	indf2,indf1
 18890                           
 18891                           ;SDCard.c: 311: dado++;
 18892  003E40  4A1D               	infsnz	monta_sd@dado^0,f,c
 18893  003E42  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 18894  003E44  2A21               	incf	monta_sd@i^0,f,c
 18895  003E46  0E05               	movlw	5
 18896  003E48  6421               	cpfsgt	monta_sd@i^0,c
 18897  003E4A  D7EE               	goto	l11381
 18898  003E4C  0012               	return	
 18899  003E4E                     l11389:
 18900                           
 18901                           ;SDCard.c: 316: for(i=0; i<6;i++)
 18902  003E4E  0E00               	movlw	0
 18903  003E50  6E21               	movwf	monta_sd@i^0,c
 18904  003E52                     l11395:
 18905                           
 18906                           ;SDCard.c: 317: {;SDCard.c: 318: string_dado.data[i] = *dado;
 18907  003E52  C01D  FFD9         	movff	monta_sd@dado,fsr2l
 18908  003E56  C01E  FFDA         	movff	monta_sd@dado+1,fsr2h
 18909  003E5A  0E7A               	movlw	low _string_dado
 18910  003E5C  2421               	addwf	monta_sd@i^0,w,c
 18911  003E5E  6EE1               	movwf	fsr1l,c
 18912  003E60  6AE2               	clrf	fsr1h,c
 18913  003E62  0E02               	movlw	high _string_dado
 18914  003E64  22E2               	addwfc	fsr1h,f,c
 18915  003E66  CFDF FFE7          	movff	indf2,indf1
 18916                           
 18917                           ;SDCard.c: 319: dado++;
 18918  003E6A  4A1D               	infsnz	monta_sd@dado^0,f,c
 18919  003E6C  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 18920  003E6E  2A21               	incf	monta_sd@i^0,f,c
 18921  003E70  0E05               	movlw	5
 18922  003E72  6421               	cpfsgt	monta_sd@i^0,c
 18923  003E74  D7EE               	goto	l11395
 18924  003E76  0012               	return	
 18925  003E78                     l11403:
 18926                           
 18927                           ;SDCard.c: 330: for(i=0; i<13;i++)
 18928  003E78  0E00               	movlw	0
 18929  003E7A  6E21               	movwf	monta_sd@i^0,c
 18930  003E7C                     l11409:
 18931                           
 18932                           ;SDCard.c: 331: {;SDCard.c: 332: string_dado.lt[i] = *dado;
 18933  003E7C  C01D  FFD9         	movff	monta_sd@dado,fsr2l
 18934  003E80  C01E  FFDA         	movff	monta_sd@dado+1,fsr2h
 18935  003E84  0E8C               	movlw	low (_string_dado+18)
 18936  003E86  2421               	addwf	monta_sd@i^0,w,c
 18937  003E88  6EE1               	movwf	fsr1l,c
 18938  003E8A  6AE2               	clrf	fsr1h,c
 18939  003E8C  0E02               	movlw	high (_string_dado+18)
 18940  003E8E  22E2               	addwfc	fsr1h,f,c
 18941  003E90  CFDF FFE7          	movff	indf2,indf1
 18942                           
 18943                           ;SDCard.c: 333: dado++;
 18944  003E94  4A1D               	infsnz	monta_sd@dado^0,f,c
 18945  003E96  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 18946  003E98  2A21               	incf	monta_sd@i^0,f,c
 18947  003E9A  0E0C               	movlw	12
 18948  003E9C  6421               	cpfsgt	monta_sd@i^0,c
 18949  003E9E  D7EE               	goto	l11409
 18950  003EA0  0012               	return	
 18951  003EA2                     l11417:
 18952                           
 18953                           ;SDCard.c: 339: for(i=0; i<13;i++)
 18954  003EA2  0E00               	movlw	0
 18955  003EA4  6E21               	movwf	monta_sd@i^0,c
 18956  003EA6                     l11423:
 18957                           
 18958                           ;SDCard.c: 340: {;SDCard.c: 341: string_dado.lo[i] = *dado;
 18959  003EA6  C01D  FFD9         	movff	monta_sd@dado,fsr2l
 18960  003EAA  C01E  FFDA         	movff	monta_sd@dado+1,fsr2h
 18961  003EAE  0E99               	movlw	low (_string_dado+31)
 18962  003EB0  2421               	addwf	monta_sd@i^0,w,c
 18963  003EB2  6EE1               	movwf	fsr1l,c
 18964  003EB4  6AE2               	clrf	fsr1h,c
 18965  003EB6  0E02               	movlw	high (_string_dado+31)
 18966  003EB8  22E2               	addwfc	fsr1h,f,c
 18967  003EBA  CFDF FFE7          	movff	indf2,indf1
 18968                           
 18969                           ;SDCard.c: 342: dado++;
 18970  003EBE  4A1D               	infsnz	monta_sd@dado^0,f,c
 18971  003EC0  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 18972  003EC2  2A21               	incf	monta_sd@i^0,f,c
 18973  003EC4  0E0C               	movlw	12
 18974  003EC6  6421               	cpfsgt	monta_sd@i^0,c
 18975  003EC8  D7EE               	goto	l11423
 18976  003ECA  0012               	return	
 18977  003ECC                     l11431:
 18978                           
 18979                           ;SDCard.c: 348: for(i=0; i<size;i++)
 18980  003ECC  0E00               	movlw	0
 18981  003ECE  6E21               	movwf	monta_sd@i^0,c
 18982  003ED0  D00F               	goto	l11439
 18983  003ED2                     l11433:
 18984                           
 18985                           ;SDCard.c: 349: {;SDCard.c: 350: string_dado.lo[i] = *dado;
 18986  003ED2  C01D  FFD9         	movff	monta_sd@dado,fsr2l
 18987  003ED6  C01E  FFDA         	movff	monta_sd@dado+1,fsr2h
 18988  003EDA  0E99               	movlw	low (_string_dado+31)
 18989  003EDC  2421               	addwf	monta_sd@i^0,w,c
 18990  003EDE  6EE1               	movwf	fsr1l,c
 18991  003EE0  6AE2               	clrf	fsr1h,c
 18992  003EE2  0E02               	movlw	high (_string_dado+31)
 18993  003EE4  22E2               	addwfc	fsr1h,f,c
 18994  003EE6  CFDF FFE7          	movff	indf2,indf1
 18995                           
 18996                           ;SDCard.c: 351: dado++;
 18997  003EEA  4A1D               	infsnz	monta_sd@dado^0,f,c
 18998  003EEC  2A1E               	incf	(monta_sd@dado+1)^0,f,c
 18999  003EEE  2A21               	incf	monta_sd@i^0,f,c
 19000  003EF0                     l11439:
 19001  003EF0  5020               	movf	monta_sd@size^0,w,c
 19002  003EF2  5C21               	subwf	monta_sd@i^0,w,c
 19003  003EF4  B0D8               	btfsc	status,0,c
 19004  003EF6  0012               	return	
 19005  003EF8  D7EC               	goto	l11433
 19006  003EFA                     l11443:
 19007  003EFA  501F               	movf	monta_sd@index^0,w,c
 19008                           
 19009                           ; Switch size 1, requested type "simple"
 19010                           ; Number of cases is 5, Range of values is 0 to 4
 19011                           ; switch strategies available:
 19012                           ; Name         Instructions Cycles
 19013                           ; simple_byte           16     9 (average)
 19014                           ;	Chosen strategy is simple_byte
 19015  003EFC  0A00               	xorlw	0	; case 0
 19016  003EFE  B4D8               	btfsc	status,2,c
 19017  003F00  D791               	goto	l11375
 19018  003F02  0A01               	xorlw	1	; case 1
 19019  003F04  B4D8               	btfsc	status,2,c
 19020  003F06  D7A3               	goto	l11389
 19021  003F08  0A03               	xorlw	3	; case 2
 19022  003F0A  B4D8               	btfsc	status,2,c
 19023  003F0C  D7B5               	goto	l11403
 19024  003F0E  0A01               	xorlw	1	; case 3
 19025  003F10  B4D8               	btfsc	status,2,c
 19026  003F12  D7C7               	goto	l11417
 19027  003F14  0A07               	xorlw	7	; case 4
 19028  003F16  A4D8               	btfss	status,2,c
 19029  003F18  0012               	return	
 19030  003F1A  D7D8               	goto	l11431
 19031  003F1C                     __end_of_monta_sd:
 19032                           	callstack 0
 19033                           
 19034 ;; *************** function _strlen *****************
 19035 ;; Defined at:
 19036 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 19037 ;; Parameters:    Size  Location     Type
 19038 ;;  s               2   24[COMRAM] PTR const unsigned char 
 19039 ;;		 -> rawDate(7), rawLongitude(13), rawLatitude(13), rawTime(11), 
 19040 ;; Auto vars:     Size  Location     Type
 19041 ;;  cp              2   26[COMRAM] PTR const unsigned char 
 19042 ;;		 -> rawDate(7), rawLongitude(13), rawLatitude(13), rawTime(11), 
 19043 ;; Return value:  Size  Location     Type
 19044 ;;                  2   24[COMRAM] unsigned int 
 19045 ;; Registers used:
 19046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19047 ;; Tracked objects:
 19048 ;;		On entry : 0/0
 19049 ;;		On exit  : 0/0
 19050 ;;		Unchanged: 0/0
 19051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19052 ;;      Params:         2       0       0       0       0       0       0       0       0
 19053 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19055 ;;      Totals:         4       0       0       0       0       0       0       0       0
 19056 ;;Total ram usage:        4 bytes
 19057 ;; Hardware stack levels used:    1
 19058 ;; Hardware stack levels required when called:    3
 19059 ;; This function calls:
 19060 ;;		Nothing
 19061 ;; This function is called by:
 19062 ;;		_monta_sd
 19063 ;; This function uses a non-reentrant model
 19064 ;;
 19065                           
 19066                           	psect	text97
 19067  005136                     __ptext97:
 19068                           	callstack 0
 19069  005136                     _strlen:
 19070                           	callstack 25
 19071                           
 19072                           ;incstack = 0
 19073  005136  C019  F01B         	movff	strlen@s,strlen@cp
 19074  00513A  C01A  F01C         	movff	strlen@s+1,strlen@cp+1
 19075  00513E  D002               	goto	l11321
 19076  005140                     l11319:
 19077  005140  4A1B               	infsnz	strlen@cp^0,f,c
 19078  005142  2A1C               	incf	(strlen@cp+1)^0,f,c
 19079  005144                     l11321:
 19080  005144  C01B  FFD9         	movff	strlen@cp,fsr2l
 19081  005148  C01C  FFDA         	movff	strlen@cp+1,fsr2h
 19082  00514C  50DF               	movf	indf2,w,c
 19083  00514E  A4D8               	btfss	status,2,c
 19084  005150  D7F7               	goto	l11319
 19085  005152  5019               	movf	strlen@s^0,w,c
 19086  005154  5C1B               	subwf	strlen@cp^0,w,c
 19087  005156  6E19               	movwf	?_strlen^0,c
 19088  005158  501A               	movf	(strlen@s+1)^0,w,c
 19089  00515A  581C               	subwfb	(strlen@cp+1)^0,w,c
 19090  00515C  6E1A               	movwf	(?_strlen+1)^0,c
 19091  00515E  0012               	return		;funcret
 19092  005160                     __end_of_strlen:
 19093                           	callstack 0
 19094                           
 19095 ;; *************** function _isr *****************
 19096 ;; Defined at:
 19097 ;;		line 105 in file "main.c"
 19098 ;; Parameters:    Size  Location     Type
 19099 ;;		None
 19100 ;; Auto vars:     Size  Location     Type
 19101 ;;  cont            1   23[COMRAM] unsigned char 
 19102 ;; Return value:  Size  Location     Type
 19103 ;;                  1    wreg      void 
 19104 ;; Registers used:
 19105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19106 ;; Tracked objects:
 19107 ;;		On entry : 0/0
 19108 ;;		On exit  : 0/0
 19109 ;;		Unchanged: 0/0
 19110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19111 ;;      Params:         0       0       0       0       0       0       0       0       0
 19112 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19113 ;;      Temps:         12       0       0       0       0       0       0       0       0
 19114 ;;      Totals:        13       0       0       0       0       0       0       0       0
 19115 ;;Total ram usage:       13 bytes
 19116 ;; Hardware stack levels used:    1
 19117 ;; Hardware stack levels required when called:    2
 19118 ;; This function calls:
 19119 ;;		_GPSRead
 19120 ;;		_recebe_dado_uart
 19121 ;;		i2_write_timer_zero
 19122 ;; This function is called by:
 19123 ;;		Interrupt level 2
 19124 ;; This function uses a non-reentrant model
 19125 ;;
 19126                           
 19127                           	psect	intcode
 19128  000008                     __pintcode:
 19129                           	callstack 0
 19130  000008                     _isr:
 19131                           	callstack 13
 19132                           
 19133                           ;incstack = 0
 19134  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19135  00000A  EDF6  F01D         	call	int_func,f	;refresh shadow registers
 19136                           
 19137                           	psect	intcode_body
 19138  003BEC                     __pintcode_body:
 19139                           	callstack 13
 19140  003BEC                     int_func:
 19141                           	callstack 13
 19142  003BEC  0006               	pop		; remove dummy address from shadow register refresh
 19143  003BEE  CFE1 F00E          	movff	fsr1l,??_isr+2
 19144  003BF2  CFE2 F00F          	movff	fsr1h,??_isr+3
 19145  003BF6  CFD9 F010          	movff	fsr2l,??_isr+4
 19146  003BFA  CFDA F011          	movff	fsr2h,??_isr+5
 19147  003BFE  CFF3 F012          	movff	prodl,??_isr+6
 19148  003C02  CFF4 F013          	movff	prodh,??_isr+7
 19149  003C06  CFF6 F014          	movff	tblptrl,??_isr+8
 19150  003C0A  CFF7 F015          	movff	tblptrh,??_isr+9
 19151  003C0E  CFF8 F016          	movff	tblptru,??_isr+10
 19152  003C12  CFF5 F017          	movff	tablat,??_isr+11
 19153                           
 19154                           ;main.c: 107: unsigned char cont;;main.c: 110: if (PIE1bits.RCIE && PIR1bits.RCIF)
 19155  003C16  BA9D               	btfsc	157,5,c	;volatile
 19156  003C18  AA9E               	btfss	158,5,c	;volatile
 19157  003C1A  D014               	goto	i2l12225
 19158                           
 19159                           ;main.c: 111: {;main.c: 112: PIR1bits.RCIF = 0;
 19160  003C1C  9A9E               	bcf	158,5,c	;volatile
 19161                           
 19162                           ;main.c: 113: data_uart_recebe = recebe_dado_uart();
 19163  003C1E  ECC6  F029         	call	_recebe_dado_uart	;wreg free
 19164  003C22  6E3F               	movwf	_data_uart_recebe^0,c
 19165                           
 19166                           ;main.c: 114: GPSRead(data_uart_recebe);
 19167  003C24  503F               	movf	_data_uart_recebe^0,w,c
 19168  003C26  ECA3  F011         	call	_GPSRead
 19169                           
 19170                           ;main.c: 115: PORTBbits.RB2 = !PORTBbits.RB2;
 19171  003C2A  B481               	btfsc	129,2,c	;volatile
 19172  003C2C  D003               	goto	i2u1581_40
 19173  003C2E  6A0C               	clrf	??_isr^0,c
 19174  003C30  2A0C               	incf	??_isr^0,f,c
 19175  003C32  D001               	goto	i2u1582_48
 19176  003C34                     i2u1581_40:
 19177  003C34  6A0C               	clrf	??_isr^0,c
 19178  003C36                     i2u1582_48:
 19179  003C36  460C               	rlncf	??_isr^0,f,c
 19180  003C38  460C               	rlncf	??_isr^0,f,c
 19181  003C3A  5081               	movf	129,w,c	;volatile
 19182  003C3C  180C               	xorwf	??_isr^0,w,c
 19183  003C3E  0BFB               	andlw	-5
 19184  003C40  180C               	xorwf	??_isr^0,w,c
 19185  003C42  6E81               	movwf	129,c	;volatile
 19186  003C44                     i2l12225:
 19187                           
 19188                           ;main.c: 116: };main.c: 119: unsigned char cont;;main.c: 121: if (TMR0IF && T0IF)
 19189  003C44  B4F2               	btfsc	4082,2,c	;volatile
 19190  003C46  A4F2               	btfss	4082,2,c	;volatile
 19191  003C48  D043               	goto	i2l12263
 19192                           
 19193                           ;main.c: 122: {;main.c: 123: INTCONbits.TMR0IF = 0;
 19194  003C4A  94F2               	bcf	242,2,c	;volatile
 19195                           
 19196                           ;main.c: 124: sinaliza_int_timer = 1;
 19197  003C4C  0E01               	movlw	1
 19198  003C4E  6E3E               	movwf	_sinaliza_int_timer^0,c
 19199                           
 19200                           ;main.c: 126: for(cont= 0; cont<4;cont++)
 19201  003C50  0E00               	movlw	0
 19202  003C52  6E18               	movwf	isr@cont^0,c
 19203  003C54                     i2l12237:
 19204                           
 19205                           ;main.c: 127: {;main.c: 128: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 19206  003C54  5018               	movf	isr@cont^0,w,c
 19207  003C56  0D02               	mullw	2
 19208  003C58  0E00               	movlw	low _tempo_tarefa
 19209  003C5A  24F3               	addwf	243,w,c
 19210  003C5C  6ED9               	movwf	fsr2l,c
 19211  003C5E  0E01               	movlw	high _tempo_tarefa
 19212  003C60  20F4               	addwfc	prodh,w,c
 19213  003C62  6EDA               	movwf	fsr2h,c
 19214  003C64  50DE               	movf	postinc2,w,c
 19215  003C66  10DE               	iorwf	postinc2,w,c
 19216  003C68  B4D8               	btfsc	status,2,c
 19217  003C6A  D00B               	goto	i2l12241
 19218  003C6C  5018               	movf	isr@cont^0,w,c
 19219  003C6E  0D02               	mullw	2
 19220  003C70  0E00               	movlw	low _tempo_tarefa
 19221  003C72  24F3               	addwf	243,w,c
 19222  003C74  6ED9               	movwf	fsr2l,c
 19223  003C76  0E01               	movlw	high _tempo_tarefa
 19224  003C78  20F4               	addwfc	prodh,w,c
 19225  003C7A  6EDA               	movwf	fsr2h,c
 19226  003C7C  06DE               	decf	postinc2,f,c
 19227  003C7E  0E00               	movlw	0
 19228  003C80  5ADD               	subwfb	postdec2,f,c
 19229  003C82                     i2l12241:
 19230  003C82  2A18               	incf	isr@cont^0,f,c
 19231  003C84  0E03               	movlw	3
 19232  003C86  6418               	cpfsgt	isr@cont^0,c
 19233  003C88  D7E5               	goto	i2l12237
 19234                           
 19235                           ;main.c: 130: };main.c: 131: if(time_sd > 0) time_sd--;
 19236  003C8A  5037               	movf	_time_sd^0,w,c
 19237  003C8C  1038               	iorwf	(_time_sd+1)^0,w,c
 19238  003C8E  B4D8               	btfsc	status,2,c
 19239  003C90  D003               	goto	i2l12249
 19240  003C92  0637               	decf	_time_sd^0,f,c
 19241  003C94  A0D8               	btfss	status,0,c
 19242  003C96  0638               	decf	(_time_sd+1)^0,f,c
 19243  003C98                     i2l12249:
 19244                           
 19245                           ;main.c: 132: if(time_atualizacao > 0) time_atualizacao--;
 19246  003C98  5035               	movf	_time_atualizacao^0,w,c
 19247  003C9A  1036               	iorwf	(_time_atualizacao+1)^0,w,c
 19248  003C9C  B4D8               	btfsc	status,2,c
 19249  003C9E  D003               	goto	i2l12253
 19250  003CA0  0635               	decf	_time_atualizacao^0,f,c
 19251  003CA2  A0D8               	btfss	status,0,c
 19252  003CA4  0636               	decf	(_time_atualizacao+1)^0,f,c
 19253  003CA6                     i2l12253:
 19254                           
 19255                           ;main.c: 133: if(tarefa_em_execucao == 1)
 19256  003CA6  043D               	decf	_tarefa_em_execucao^0,w,c	;volatile
 19257  003CA8  A4D8               	btfss	status,2,c
 19258  003CAA  D00C               	goto	i2l12261
 19259                           
 19260                           ;main.c: 134: {;main.c: 135: timeout_tarefa--;
 19261  003CAC  0101               	movlb	1	; () banked
 19262  003CAE  0718               	decf	_timeout_tarefa& (0+255),f,b
 19263  003CB0  A0D8               	btfss	status,0,c
 19264  003CB2  0719               	decf	(_timeout_tarefa+1)& (0+255),f,b
 19265                           
 19266                           ; BSR set to: 1
 19267                           ;main.c: 136: if(!timeout_tarefa)
 19268  003CB4  5118               	movf	_timeout_tarefa& (0+255),w,b
 19269  003CB6  1119               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 19270  003CB8  A4D8               	btfss	status,2,c
 19271  003CBA  D004               	goto	i2l12261
 19272                           
 19273                           ; BSR set to: 1
 19274                           ;main.c: 137: {;main.c: 139: PCLATH = 0;
 19275  003CBC  0E00               	movlw	0
 19276  003CBE  6EFA               	movwf	250,c	;volatile
 19277                           
 19278                           ;main.c: 140: PCL = 0;
 19279  003CC0  0E00               	movlw	0
 19280  003CC2  6EF9               	movwf	249,c	;volatile
 19281  003CC4                     i2l12261:
 19282                           
 19283                           ;main.c: 141: };main.c: 142: };main.c: 146: write_timer_zero(0x45);
 19284  003CC4  0E00               	movlw	0
 19285  003CC6  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 19286  003CC8  0E45               	movlw	69
 19287  003CCA  6E01               	movwf	i2write_timer_zero@timer0^0,c
 19288  003CCC  EC19  F02A         	call	i2_write_timer_zero	;wreg free
 19289  003CD0                     i2l12263:
 19290                           
 19291                           ;main.c: 147: };main.c: 149: if (INT0IF && INT0IE)
 19292  003CD0  B2F2               	btfsc	4082,1,c	;volatile
 19293  003CD2  A8F2               	btfss	4082,4,c	;volatile
 19294  003CD4  D001               	goto	i2l1356
 19295                           
 19296                           ;main.c: 150: {;main.c: 151: INT0IF = 0;
 19297  003CD6  92F2               	bcf	4082,1,c	;volatile
 19298  003CD8                     i2l1356:
 19299  003CD8  C017  FFF5         	movff	??_isr+11,tablat
 19300  003CDC  C016  FFF8         	movff	??_isr+10,tblptru
 19301  003CE0  C015  FFF7         	movff	??_isr+9,tblptrh
 19302  003CE4  C014  FFF6         	movff	??_isr+8,tblptrl
 19303  003CE8  C013  FFF4         	movff	??_isr+7,prodh
 19304  003CEC  C012  FFF3         	movff	??_isr+6,prodl
 19305  003CF0  C011  FFDA         	movff	??_isr+5,fsr2h
 19306  003CF4  C010  FFD9         	movff	??_isr+4,fsr2l
 19307  003CF8  C00F  FFE2         	movff	??_isr+3,fsr1h
 19308  003CFC  C00E  FFE1         	movff	??_isr+2,fsr1l
 19309  003D00  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19310  003D02  0011               	retfie		f
 19311  003D04                     __end_of_isr:
 19312                           	callstack 0
 19313                           
 19314 ;; *************** function i2_write_timer_zero *****************
 19315 ;; Defined at:
 19316 ;;		line 134 in file "bibliotecas/hardware.c"
 19317 ;; Parameters:    Size  Location     Type
 19318 ;;  timer0          2    0[COMRAM] unsigned int 
 19319 ;; Auto vars:     Size  Location     Type
 19320 ;;		None
 19321 ;; Return value:  Size  Location     Type
 19322 ;;                  1    wreg      void 
 19323 ;; Registers used:
 19324 ;;		None
 19325 ;; Tracked objects:
 19326 ;;		On entry : 0/0
 19327 ;;		On exit  : 0/0
 19328 ;;		Unchanged: 0/0
 19329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19330 ;;      Params:         2       0       0       0       0       0       0       0       0
 19331 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19332 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19333 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19334 ;;Total ram usage:        2 bytes
 19335 ;; Hardware stack levels used:    1
 19336 ;; This function calls:
 19337 ;;		Nothing
 19338 ;; This function is called by:
 19339 ;;		_isr
 19340 ;; This function uses a non-reentrant model
 19341 ;;
 19342                           
 19343                           	psect	text99
 19344  005432                     __ptext99:
 19345                           	callstack 0
 19346  005432                     i2_write_timer_zero:
 19347                           	callstack 14
 19348                           
 19349                           ;hardware.c: 142: TMR0 = timer0;
 19350                           
 19351                           ;incstack = 0
 19352  005432  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 19353  005436  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 19354  00543A  0012               	return		;funcret
 19355  00543C                     __end_ofi2_write_timer_zero:
 19356                           	callstack 0
 19357                           
 19358 ;; *************** function _recebe_dado_uart *****************
 19359 ;; Defined at:
 19360 ;;		line 138 in file "bibliotecas/uart.c"
 19361 ;; Parameters:    Size  Location     Type
 19362 ;;		None
 19363 ;; Auto vars:     Size  Location     Type
 19364 ;;		None
 19365 ;; Return value:  Size  Location     Type
 19366 ;;                  1    wreg      unsigned char 
 19367 ;; Registers used:
 19368 ;;		wreg, status,2
 19369 ;; Tracked objects:
 19370 ;;		On entry : 0/0
 19371 ;;		On exit  : 0/0
 19372 ;;		Unchanged: 0/0
 19373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19374 ;;      Params:         0       0       0       0       0       0       0       0       0
 19375 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19376 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19377 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19378 ;;Total ram usage:        0 bytes
 19379 ;; Hardware stack levels used:    1
 19380 ;; This function calls:
 19381 ;;		Nothing
 19382 ;; This function is called by:
 19383 ;;		_isr
 19384 ;; This function uses a non-reentrant model
 19385 ;;
 19386                           
 19387                           	psect	text100
 19388  00538C                     __ptext100:
 19389                           	callstack 0
 19390  00538C                     _recebe_dado_uart:
 19391                           	callstack 14
 19392                           
 19393                           ;uart.c: 140: while(RCIF==0);
 19394                           
 19395                           ;incstack = 0
 19396  00538C  AA9E               	btfss	3998,5,c	;volatile
 19397  00538E  D7FE               	goto	_recebe_dado_uart
 19398                           
 19399                           ;uart.c: 141: if(RCSTAbits.OERR)
 19400  005390  A2AB               	btfss	171,1,c	;volatile
 19401  005392  D003               	goto	i2l8957
 19402                           
 19403                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 19404  005394  98AB               	bcf	4011,4,c	;volatile
 19405                           
 19406                           ;uart.c: 144: __nop();
 19407  005396  F000               	nop	
 19408                           
 19409                           ;uart.c: 145: CREN=1;
 19410  005398  88AB               	bsf	4011,4,c	;volatile
 19411  00539A                     i2l8957:
 19412                           
 19413                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 19414  00539A  50AE               	movf	174,w,c	;volatile
 19415  00539C  0012               	return		;funcret
 19416  00539E                     __end_of_recebe_dado_uart:
 19417                           	callstack 0
 19418                           
 19419 ;; *************** function _GPSRead *****************
 19420 ;; Defined at:
 19421 ;;		line 43 in file "bibliotecas/GPS.c"
 19422 ;; Parameters:    Size  Location     Type
 19423 ;;  buff            1    wreg     unsigned char 
 19424 ;; Auto vars:     Size  Location     Type
 19425 ;;  buff            1    9[COMRAM] unsigned char 
 19426 ;;  c               1   10[COMRAM] unsigned char 
 19427 ;; Return value:  Size  Location     Type
 19428 ;;                  2  346[None  ] int 
 19429 ;; Registers used:
 19430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19431 ;; Tracked objects:
 19432 ;;		On entry : 0/0
 19433 ;;		On exit  : 0/0
 19434 ;;		Unchanged: 0/0
 19435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19436 ;;      Params:         0       0       0       0       0       0       0       0       0
 19437 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19439 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19440 ;;Total ram usage:        2 bytes
 19441 ;; Hardware stack levels used:    1
 19442 ;; Hardware stack levels required when called:    1
 19443 ;; This function calls:
 19444 ;;		_strcmp
 19445 ;;		_stringcpy
 19446 ;; This function is called by:
 19447 ;;		_isr
 19448 ;; This function uses a non-reentrant model
 19449 ;;
 19450                           
 19451                           	psect	text101
 19452  002346                     __ptext101:
 19453                           	callstack 0
 19454  002346                     _GPSRead:
 19455                           	callstack 13
 19456                           
 19457                           ;incstack = 0
 19458                           ;GPSRead@buff stored from wreg
 19459  002346  6E0A               	movwf	GPSRead@buff^0,c
 19460                           
 19461                           ;GPS.c: 45: uint8_t c = buff;
 19462  002348  C00A  F00B         	movff	GPSRead@buff,GPSRead@c
 19463                           
 19464                           ;GPS.c: 47: switch(c) {
 19465  00234C  D153               	goto	i2l12063
 19466  00234E                     i2l11945:
 19467                           
 19468                           ;GPS.c: 49: if(SentenceType == 1)
 19469  00234E  0444               	decf	_SentenceType^0,w,c
 19470  002350  A4D8               	btfss	status,2,c
 19471  002352  D005               	goto	i2l11949
 19472                           
 19473                           ;GPS.c: 50: GPRMC_ok = 1;
 19474  002354  0E00               	movlw	0
 19475  002356  0100               	movlb	0	; () banked
 19476  002358  6FFC               	movwf	(_GPRMC_ok+1)& (0+255),b
 19477  00235A  0E01               	movlw	1
 19478  00235C  6FFB               	movwf	_GPRMC_ok& (0+255),b
 19479  00235E                     i2l11949:
 19480                           
 19481                           ;GPS.c: 51: if(SentenceType == 2)
 19482  00235E  0E02               	movlw	2
 19483  002360  1844               	xorwf	_SentenceType^0,w,c
 19484  002362  A4D8               	btfss	status,2,c
 19485  002364  D005               	goto	i2l11953
 19486                           
 19487                           ;GPS.c: 52: GPGGA_ok = 1;
 19488  002366  0E00               	movlw	0
 19489  002368  0101               	movlb	1	; () banked
 19490  00236A  6F1D               	movwf	(_GPGGA_ok+1)& (0+255),b
 19491  00236C  0E01               	movlw	1
 19492  00236E  6F1C               	movwf	_GPGGA_ok& (0+255),b
 19493  002370                     i2l11953:
 19494                           
 19495                           ;GPS.c: 53: if(GPRMC_ok && GPGGA_ok) {
 19496  002370  0100               	movlb	0	; () banked
 19497  002372  51FB               	movf	_GPRMC_ok& (0+255),w,b
 19498  002374  11FC               	iorwf	(_GPRMC_ok+1)& (0+255),w,b
 19499  002376  B4D8               	btfsc	status,2,c
 19500  002378  0012               	return	
 19501                           
 19502                           ; BSR set to: 0
 19503  00237A  0101               	movlb	1	; () banked
 19504  00237C  511C               	movf	_GPGGA_ok& (0+255),w,b
 19505  00237E  111D               	iorwf	(_GPGGA_ok+1)& (0+255),w,b
 19506  002380  B4D8               	btfsc	status,2,c
 19507  002382  0012               	return	
 19508                           
 19509                           ; BSR set to: 1
 19510                           ;GPS.c: 54: GPRMC_ok = GPGGA_ok = 0;
 19511  002384  0E00               	movlw	0
 19512  002386  6F1D               	movwf	(_GPGGA_ok+1)& (0+255),b
 19513  002388  0E00               	movlw	0
 19514  00238A  6F1C               	movwf	_GPGGA_ok& (0+255),b
 19515  00238C  C11C  F0FB         	movff	_GPGGA_ok,_GPRMC_ok
 19516  002390  C11D  F0FC         	movff	_GPGGA_ok+1,_GPRMC_ok+1
 19517  002394  0012               	return	
 19518  002396                     i2l11961:
 19519                           
 19520                           ;GPS.c: 60: Term = char_number = 0;
 19521  002396  0E00               	movlw	0
 19522  002398  6E45               	movwf	_char_number^0,c
 19523  00239A  C045  F043         	movff	_char_number,_Term
 19524                           
 19525                           ;GPS.c: 61: break;
 19526  00239E  0012               	return	
 19527  0023A0                     i2l11963:
 19528                           
 19529                           ;GPS.c: 64: buffer[char_number] = '\0';
 19530  0023A0  0EB8               	movlw	low _buffer
 19531  0023A2  2445               	addwf	_char_number^0,w,c
 19532  0023A4  6ED9               	movwf	fsr2l,c
 19533  0023A6  6ADA               	clrf	fsr2h,c
 19534  0023A8  0E01               	movlw	high _buffer
 19535  0023AA  22DA               	addwfc	fsr2h,f,c
 19536  0023AC  0E00               	movlw	0
 19537  0023AE  6EDF               	movwf	indf2,c
 19538                           
 19539                           ;GPS.c: 65: if(Term == 0) {
 19540  0023B0  5043               	movf	_Term^0,w,c
 19541  0023B2  A4D8               	btfss	status,2,c
 19542  0023B4  D030               	goto	i2l11979
 19543                           
 19544                           ;GPS.c: 66: stringcpy(buffer, sentence, 0);
 19545  0023B6  0EB8               	movlw	low _buffer
 19546  0023B8  6E01               	movwf	stringcpy@str1^0,c
 19547  0023BA  0E01               	movlw	high _buffer
 19548  0023BC  6E02               	movwf	(stringcpy@str1+1)^0,c
 19549  0023BE  0EE9               	movlw	low _sentence
 19550  0023C0  6E03               	movwf	stringcpy@str2^0,c
 19551  0023C2  0E01               	movlw	high _sentence
 19552  0023C4  6E04               	movwf	(stringcpy@str2+1)^0,c
 19553  0023C6  0E00               	movlw	0
 19554  0023C8  6E06               	movwf	(stringcpy@dir+1)^0,c
 19555  0023CA  0E00               	movlw	0
 19556  0023CC  6E05               	movwf	stringcpy@dir^0,c
 19557  0023CE  ECF9  F026         	call	_stringcpy	;wreg free
 19558                           
 19559                           ;GPS.c: 67: if(strcmp(sentence, "GPRMC") == 0)
 19560  0023D2  0EE9               	movlw	low _sentence
 19561  0023D4  6E01               	movwf	strcmp@s1^0,c
 19562  0023D6  0E01               	movlw	high _sentence
 19563  0023D8  6E02               	movwf	(strcmp@s1+1)^0,c
 19564  0023DA  0E58               	movlw	low STR_5
 19565  0023DC  6E03               	movwf	strcmp@s2^0,c
 19566  0023DE  0E62               	movlw	high STR_5
 19567  0023E0  6E04               	movwf	(strcmp@s2+1)^0,c
 19568  0023E2  EC8C  F026         	call	_strcmp	;wreg free
 19569  0023E6  5001               	movf	?_strcmp^0,w,c
 19570  0023E8  1002               	iorwf	(?_strcmp+1)^0,w,c
 19571  0023EA  A4D8               	btfss	status,2,c
 19572  0023EC  D002               	goto	i2l11973
 19573                           
 19574                           ;GPS.c: 68: SentenceType = 1;
 19575  0023EE  0E01               	movlw	1
 19576  0023F0  D011               	goto	L7
 19577  0023F2                     i2l11973:
 19578                           
 19579                           ;GPS.c: 69: else if(strcmp(sentence, "GPGGA") == 0)
 19580  0023F2  0EE9               	movlw	low _sentence
 19581  0023F4  6E01               	movwf	strcmp@s1^0,c
 19582  0023F6  0E01               	movlw	high _sentence
 19583  0023F8  6E02               	movwf	(strcmp@s1+1)^0,c
 19584  0023FA  0E52               	movlw	low STR_6
 19585  0023FC  6E03               	movwf	strcmp@s2^0,c
 19586  0023FE  0E62               	movlw	high STR_6
 19587  002400  6E04               	movwf	(strcmp@s2+1)^0,c
 19588  002402  EC8C  F026         	call	_strcmp	;wreg free
 19589  002406  5001               	movf	?_strcmp^0,w,c
 19590  002408  1002               	iorwf	(?_strcmp+1)^0,w,c
 19591  00240A  A4D8               	btfss	status,2,c
 19592  00240C  D002               	goto	i2l11977
 19593                           
 19594                           ;GPS.c: 70: SentenceType = 2;
 19595  00240E  0E02               	movlw	2
 19596  002410  D001               	goto	L7
 19597  002412                     i2l11977:
 19598                           
 19599                           ;GPS.c: 71: else;GPS.c: 72: SentenceType = 3;
 19600  002412  0E03               	movlw	3
 19601  002414                     L7:
 19602  002414  6E44               	movwf	_SentenceType^0,c
 19603  002416                     i2l11979:
 19604                           
 19605                           ;GPS.c: 73: };GPS.c: 76: if(Term == 1 && SentenceType == 1) {
 19606  002416  0443               	decf	_Term^0,w,c
 19607  002418  A4D8               	btfss	status,2,c
 19608  00241A  D011               	goto	i2l11985
 19609  00241C  0444               	decf	_SentenceType^0,w,c
 19610  00241E  A4D8               	btfss	status,2,c
 19611  002420  D00E               	goto	i2l11985
 19612                           
 19613                           ;GPS.c: 77: stringcpy(buffer, rawTime, 0);
 19614  002422  0EB8               	movlw	low _buffer
 19615  002424  6E01               	movwf	stringcpy@str1^0,c
 19616  002426  0E01               	movlw	high _buffer
 19617  002428  6E02               	movwf	(stringcpy@str1+1)^0,c
 19618  00242A  0EC4               	movlw	low _rawTime
 19619  00242C  6E03               	movwf	stringcpy@str2^0,c
 19620  00242E  0E01               	movlw	high _rawTime
 19621  002430  6E04               	movwf	(stringcpy@str2+1)^0,c
 19622  002432  0E00               	movlw	0
 19623  002434  6E06               	movwf	(stringcpy@dir+1)^0,c
 19624  002436  0E00               	movlw	0
 19625  002438  6E05               	movwf	stringcpy@dir^0,c
 19626  00243A  ECF9  F026         	call	_stringcpy	;wreg free
 19627  00243E                     i2l11985:
 19628                           
 19629                           ;GPS.c: 78: };GPS.c: 81: if((Term == 3) && (SentenceType == 1)) {
 19630  00243E  0E03               	movlw	3
 19631  002440  1843               	xorwf	_Term^0,w,c
 19632  002442  A4D8               	btfss	status,2,c
 19633  002444  D011               	goto	i2l11991
 19634  002446  0444               	decf	_SentenceType^0,w,c
 19635  002448  A4D8               	btfss	status,2,c
 19636  00244A  D00E               	goto	i2l11991
 19637                           
 19638                           ;GPS.c: 82: stringcpy(buffer, rawLatitude, 1);
 19639  00244C  0EB8               	movlw	low _buffer
 19640  00244E  6E01               	movwf	stringcpy@str1^0,c
 19641  002450  0E01               	movlw	high _buffer
 19642  002452  6E02               	movwf	(stringcpy@str1+1)^0,c
 19643  002454  0EE5               	movlw	low _rawLatitude
 19644  002456  6E03               	movwf	stringcpy@str2^0,c
 19645  002458  0E02               	movlw	high _rawLatitude
 19646  00245A  6E04               	movwf	(stringcpy@str2+1)^0,c
 19647  00245C  0E00               	movlw	0
 19648  00245E  6E06               	movwf	(stringcpy@dir+1)^0,c
 19649  002460  0E01               	movlw	1
 19650  002462  6E05               	movwf	stringcpy@dir^0,c
 19651  002464  ECF9  F026         	call	_stringcpy	;wreg free
 19652  002468                     i2l11991:
 19653                           
 19654                           ;GPS.c: 83: };GPS.c: 85: if((Term == 4) && (SentenceType == 1)) {
 19655  002468  0E04               	movlw	4
 19656  00246A  1843               	xorwf	_Term^0,w,c
 19657  00246C  A4D8               	btfss	status,2,c
 19658  00246E  D00D               	goto	i2l12001
 19659  002470  0444               	decf	_SentenceType^0,w,c
 19660  002472  A4D8               	btfss	status,2,c
 19661  002474  D00A               	goto	i2l12001
 19662                           
 19663                           ;GPS.c: 86: if(buffer[0] == 'N')
 19664  002476  0E4E               	movlw	78
 19665  002478  0101               	movlb	1	; () banked
 19666  00247A  19B8               	xorwf	_buffer& (0+255),w,b
 19667  00247C  A4D8               	btfss	status,2,c
 19668  00247E  D002               	goto	i2l11999
 19669                           
 19670                           ; BSR set to: 1
 19671                           ;GPS.c: 87: rawLatitude[0] = '0';
 19672  002480  0E30               	movlw	48
 19673  002482  D001               	goto	L8
 19674  002484                     i2l11999:
 19675                           
 19676                           ; BSR set to: 1
 19677                           ;GPS.c: 88: else;GPS.c: 89: rawLatitude[0] = '-';
 19678  002484  0E2D               	movlw	45
 19679  002486                     L8:
 19680  002486  0102               	movlb	2	; () banked
 19681  002488  6FE5               	movwf	_rawLatitude& (0+255),b
 19682  00248A                     i2l12001:
 19683                           
 19684                           ;GPS.c: 90: };GPS.c: 93: if((Term == 5) && (SentenceType == 1)) {
 19685  00248A  0E05               	movlw	5
 19686  00248C  1843               	xorwf	_Term^0,w,c
 19687  00248E  A4D8               	btfss	status,2,c
 19688  002490  D011               	goto	i2l12007
 19689  002492  0444               	decf	_SentenceType^0,w,c
 19690  002494  A4D8               	btfss	status,2,c
 19691  002496  D00E               	goto	i2l12007
 19692                           
 19693                           ;GPS.c: 94: stringcpy(buffer, rawLongitude, 1);
 19694  002498  0EB8               	movlw	low _buffer
 19695  00249A  6E01               	movwf	stringcpy@str1^0,c
 19696  00249C  0E01               	movlw	high _buffer
 19697  00249E  6E02               	movwf	(stringcpy@str1+1)^0,c
 19698  0024A0  0ED8               	movlw	low _rawLongitude
 19699  0024A2  6E03               	movwf	stringcpy@str2^0,c
 19700  0024A4  0E02               	movlw	high _rawLongitude
 19701  0024A6  6E04               	movwf	(stringcpy@str2+1)^0,c
 19702  0024A8  0E00               	movlw	0
 19703  0024AA  6E06               	movwf	(stringcpy@dir+1)^0,c
 19704  0024AC  0E01               	movlw	1
 19705  0024AE  6E05               	movwf	stringcpy@dir^0,c
 19706  0024B0  ECF9  F026         	call	_stringcpy	;wreg free
 19707  0024B4                     i2l12007:
 19708                           
 19709                           ;GPS.c: 95: };GPS.c: 97: if((Term == 6) && (SentenceType == 1)) {
 19710  0024B4  0E06               	movlw	6
 19711  0024B6  1843               	xorwf	_Term^0,w,c
 19712  0024B8  A4D8               	btfss	status,2,c
 19713  0024BA  D00D               	goto	i2l12017
 19714  0024BC  0444               	decf	_SentenceType^0,w,c
 19715  0024BE  A4D8               	btfss	status,2,c
 19716  0024C0  D00A               	goto	i2l12017
 19717                           
 19718                           ;GPS.c: 98: if(buffer[0] == 'E')
 19719  0024C2  0E45               	movlw	69
 19720  0024C4  0101               	movlb	1	; () banked
 19721  0024C6  19B8               	xorwf	_buffer& (0+255),w,b
 19722  0024C8  A4D8               	btfss	status,2,c
 19723  0024CA  D002               	goto	i2l12015
 19724                           
 19725                           ; BSR set to: 1
 19726                           ;GPS.c: 99: rawLongitude[0] = '0';
 19727  0024CC  0E30               	movlw	48
 19728  0024CE  D001               	goto	L9
 19729  0024D0                     i2l12015:
 19730                           
 19731                           ; BSR set to: 1
 19732                           ;GPS.c: 100: else;GPS.c: 101: rawLongitude[0] = '-';
 19733  0024D0  0E2D               	movlw	45
 19734  0024D2                     L9:
 19735  0024D2  0102               	movlb	2	; () banked
 19736  0024D4  6FD8               	movwf	_rawLongitude& (0+255),b
 19737  0024D6                     i2l12017:
 19738                           
 19739                           ;GPS.c: 102: };GPS.c: 105: if((Term == 7) && (SentenceType == 1)) {
 19740  0024D6  0E07               	movlw	7
 19741  0024D8  1843               	xorwf	_Term^0,w,c
 19742  0024DA  A4D8               	btfss	status,2,c
 19743  0024DC  D011               	goto	i2l12023
 19744  0024DE  0444               	decf	_SentenceType^0,w,c
 19745  0024E0  A4D8               	btfss	status,2,c
 19746  0024E2  D00E               	goto	i2l12023
 19747                           
 19748                           ;GPS.c: 106: stringcpy(buffer, rawSpeed, 0);
 19749  0024E4  0EB8               	movlw	low _buffer
 19750  0024E6  6E01               	movwf	stringcpy@str1^0,c
 19751  0024E8  0E01               	movlw	high _buffer
 19752  0024EA  6E02               	movwf	(stringcpy@str1+1)^0,c
 19753  0024EC  0EE3               	movlw	low _rawSpeed
 19754  0024EE  6E03               	movwf	stringcpy@str2^0,c
 19755  0024F0  0E01               	movlw	high _rawSpeed
 19756  0024F2  6E04               	movwf	(stringcpy@str2+1)^0,c
 19757  0024F4  0E00               	movlw	0
 19758  0024F6  6E06               	movwf	(stringcpy@dir+1)^0,c
 19759  0024F8  0E00               	movlw	0
 19760  0024FA  6E05               	movwf	stringcpy@dir^0,c
 19761  0024FC  ECF9  F026         	call	_stringcpy	;wreg free
 19762  002500                     i2l12023:
 19763                           
 19764                           ;GPS.c: 107: };GPS.c: 110: if((Term == 8) && (SentenceType == 1)) {
 19765  002500  0E08               	movlw	8
 19766  002502  1843               	xorwf	_Term^0,w,c
 19767  002504  A4D8               	btfss	status,2,c
 19768  002506  D011               	goto	i2l12029
 19769  002508  0444               	decf	_SentenceType^0,w,c
 19770  00250A  A4D8               	btfss	status,2,c
 19771  00250C  D00E               	goto	i2l12029
 19772                           
 19773                           ;GPS.c: 111: stringcpy(buffer, rawCourse, 0);
 19774  00250E  0EB8               	movlw	low _buffer
 19775  002510  6E01               	movwf	stringcpy@str1^0,c
 19776  002512  0E01               	movlw	high _buffer
 19777  002514  6E02               	movwf	(stringcpy@str1+1)^0,c
 19778  002516  0EDD               	movlw	low _rawCourse
 19779  002518  6E03               	movwf	stringcpy@str2^0,c
 19780  00251A  0E01               	movlw	high _rawCourse
 19781  00251C  6E04               	movwf	(stringcpy@str2+1)^0,c
 19782  00251E  0E00               	movlw	0
 19783  002520  6E06               	movwf	(stringcpy@dir+1)^0,c
 19784  002522  0E00               	movlw	0
 19785  002524  6E05               	movwf	stringcpy@dir^0,c
 19786  002526  ECF9  F026         	call	_stringcpy	;wreg free
 19787  00252A                     i2l12029:
 19788                           
 19789                           ;GPS.c: 112: };GPS.c: 115: if(Term == 9 && SentenceType == 1) {
 19790  00252A  0E09               	movlw	9
 19791  00252C  1843               	xorwf	_Term^0,w,c
 19792  00252E  A4D8               	btfss	status,2,c
 19793  002530  D011               	goto	i2l12035
 19794  002532  0444               	decf	_SentenceType^0,w,c
 19795  002534  A4D8               	btfss	status,2,c
 19796  002536  D00E               	goto	i2l12035
 19797                           
 19798                           ;GPS.c: 116: stringcpy(buffer, rawDate, 0);
 19799  002538  0EB8               	movlw	low _buffer
 19800  00253A  6E01               	movwf	stringcpy@str1^0,c
 19801  00253C  0E01               	movlw	high _buffer
 19802  00253E  6E02               	movwf	(stringcpy@str1+1)^0,c
 19803  002540  0ED6               	movlw	low _rawDate
 19804  002542  6E03               	movwf	stringcpy@str2^0,c
 19805  002544  0E01               	movlw	high _rawDate
 19806  002546  6E04               	movwf	(stringcpy@str2+1)^0,c
 19807  002548  0E00               	movlw	0
 19808  00254A  6E06               	movwf	(stringcpy@dir+1)^0,c
 19809  00254C  0E00               	movlw	0
 19810  00254E  6E05               	movwf	stringcpy@dir^0,c
 19811  002550  ECF9  F026         	call	_stringcpy	;wreg free
 19812  002554                     i2l12035:
 19813                           
 19814                           ;GPS.c: 117: };GPS.c: 120: if((Term == 7) && (SentenceType == 2)) {
 19815  002554  0E07               	movlw	7
 19816  002556  1843               	xorwf	_Term^0,w,c
 19817  002558  A4D8               	btfss	status,2,c
 19818  00255A  D012               	goto	i2l12041
 19819  00255C  0E02               	movlw	2
 19820  00255E  1844               	xorwf	_SentenceType^0,w,c
 19821  002560  A4D8               	btfss	status,2,c
 19822  002562  D00E               	goto	i2l12041
 19823                           
 19824                           ;GPS.c: 121: stringcpy(buffer, rawSatellites, 0);
 19825  002564  0EB8               	movlw	low _buffer
 19826  002566  6E01               	movwf	stringcpy@str1^0,c
 19827  002568  0E01               	movlw	high _buffer
 19828  00256A  6E02               	movwf	(stringcpy@str1+1)^0,c
 19829  00256C  0EEF               	movlw	low _rawSatellites
 19830  00256E  6E03               	movwf	stringcpy@str2^0,c
 19831  002570  0E01               	movlw	high _rawSatellites
 19832  002572  6E04               	movwf	(stringcpy@str2+1)^0,c
 19833  002574  0E00               	movlw	0
 19834  002576  6E06               	movwf	(stringcpy@dir+1)^0,c
 19835  002578  0E00               	movlw	0
 19836  00257A  6E05               	movwf	stringcpy@dir^0,c
 19837  00257C  ECF9  F026         	call	_stringcpy	;wreg free
 19838  002580                     i2l12041:
 19839                           
 19840                           ;GPS.c: 122: };GPS.c: 125: if((Term == 9) && (SentenceType == 2)) {
 19841  002580  0E09               	movlw	9
 19842  002582  1843               	xorwf	_Term^0,w,c
 19843  002584  A4D8               	btfss	status,2,c
 19844  002586  D012               	goto	i2l12047
 19845  002588  0E02               	movlw	2
 19846  00258A  1844               	xorwf	_SentenceType^0,w,c
 19847  00258C  A4D8               	btfss	status,2,c
 19848  00258E  D00E               	goto	i2l12047
 19849                           
 19850                           ;GPS.c: 126: stringcpy(buffer, rawAltitude, 0);
 19851  002590  0EB8               	movlw	low _buffer
 19852  002592  6E01               	movwf	stringcpy@str1^0,c
 19853  002594  0E01               	movlw	high _buffer
 19854  002596  6E02               	movwf	(stringcpy@str1+1)^0,c
 19855  002598  0ECF               	movlw	low _rawAltitude
 19856  00259A  6E03               	movwf	stringcpy@str2^0,c
 19857  00259C  0E01               	movlw	high _rawAltitude
 19858  00259E  6E04               	movwf	(stringcpy@str2+1)^0,c
 19859  0025A0  0E00               	movlw	0
 19860  0025A2  6E06               	movwf	(stringcpy@dir+1)^0,c
 19861  0025A4  0E00               	movlw	0
 19862  0025A6  6E05               	movwf	stringcpy@dir^0,c
 19863  0025A8  ECF9  F026         	call	_stringcpy	;wreg free
 19864  0025AC                     i2l12047:
 19865                           
 19866                           ;GPS.c: 127: };GPS.c: 130: if((Term == 6) && (SentenceType == 2)) {
 19867  0025AC  0E06               	movlw	6
 19868  0025AE  1843               	xorwf	_Term^0,w,c
 19869  0025B0  A4D8               	btfss	status,2,c
 19870  0025B2  D012               	goto	i2l12053
 19871  0025B4  0E02               	movlw	2
 19872  0025B6  1844               	xorwf	_SentenceType^0,w,c
 19873  0025B8  A4D8               	btfss	status,2,c
 19874  0025BA  D00E               	goto	i2l12053
 19875                           
 19876                           ;GPS.c: 131: stringcpy(buffer, rawFix, 0);
 19877  0025BC  0EB8               	movlw	low _buffer
 19878  0025BE  6E01               	movwf	stringcpy@str1^0,c
 19879  0025C0  0E01               	movlw	high _buffer
 19880  0025C2  6E02               	movwf	(stringcpy@str1+1)^0,c
 19881  0025C4  0EF2               	movlw	low _rawFix
 19882  0025C6  6E03               	movwf	stringcpy@str2^0,c
 19883  0025C8  0E01               	movlw	high _rawFix
 19884  0025CA  6E04               	movwf	(stringcpy@str2+1)^0,c
 19885  0025CC  0E00               	movlw	0
 19886  0025CE  6E06               	movwf	(stringcpy@dir+1)^0,c
 19887  0025D0  0E00               	movlw	0
 19888  0025D2  6E05               	movwf	stringcpy@dir^0,c
 19889  0025D4  ECF9  F026         	call	_stringcpy	;wreg free
 19890  0025D8                     i2l12053:
 19891                           
 19892                           ;GPS.c: 133: };GPS.c: 134: Term++;
 19893  0025D8  2A43               	incf	_Term^0,f,c
 19894                           
 19895                           ;GPS.c: 135: char_number = 0;
 19896  0025DA  0E00               	movlw	0
 19897  0025DC  6E45               	movwf	_char_number^0,c
 19898                           
 19899                           ;GPS.c: 136: break;
 19900  0025DE  0012               	return	
 19901  0025E0                     i2l12057:
 19902                           
 19903                           ;GPS.c: 139: buffer[char_number++] = c;
 19904  0025E0  0EB8               	movlw	low _buffer
 19905  0025E2  2445               	addwf	_char_number^0,w,c
 19906  0025E4  6ED9               	movwf	fsr2l,c
 19907  0025E6  6ADA               	clrf	fsr2h,c
 19908  0025E8  0E01               	movlw	high _buffer
 19909  0025EA  22DA               	addwfc	fsr2h,f,c
 19910  0025EC  C00B  FFDF         	movff	GPSRead@c,indf2
 19911  0025F0  2A45               	incf	_char_number^0,f,c
 19912                           
 19913                           ;GPS.c: 140: break;
 19914  0025F2  0012               	return	
 19915  0025F4                     i2l12063:
 19916  0025F4  500B               	movf	GPSRead@c^0,w,c
 19917                           
 19918                           ; Switch size 1, requested type "simple"
 19919                           ; Number of cases is 3, Range of values is 13 to 44
 19920                           ; switch strategies available:
 19921                           ; Name         Instructions Cycles
 19922                           ; simple_byte           10     6 (average)
 19923                           ;	Chosen strategy is simple_byte
 19924  0025F6  0A0D               	xorlw	13	; case 13
 19925  0025F8  B4D8               	btfsc	status,2,c
 19926  0025FA  D6A9               	goto	i2l11945
 19927  0025FC  0A29               	xorlw	41	; case 36
 19928  0025FE  B4D8               	btfsc	status,2,c
 19929  002600  D6CA               	goto	i2l11961
 19930  002602  0A08               	xorlw	8	; case 44
 19931  002604  B4D8               	btfsc	status,2,c
 19932  002606  D6CC               	goto	i2l11963
 19933  002608  D7EB               	goto	i2l12057
 19934  00260A                     __end_of_GPSRead:
 19935                           	callstack 0
 19936                           
 19937 ;; *************** function _stringcpy *****************
 19938 ;; Defined at:
 19939 ;;		line 34 in file "bibliotecas/GPS.c"
 19940 ;; Parameters:    Size  Location     Type
 19941 ;;  str1            2    0[COMRAM] PTR unsigned char 
 19942 ;;		 -> buffer(12), 
 19943 ;;  str2            2    2[COMRAM] PTR unsigned char 
 19944 ;;		 -> rawFix(2), rawAltitude(7), rawSatellites(3), rawDate(7), 
 19945 ;;		 -> rawCourse(6), rawSpeed(6), rawLongitude(13), rawLatitude(13), 
 19946 ;;		 -> rawTime(11), sentence(6), 
 19947 ;;  dir             2    4[COMRAM] int 
 19948 ;; Auto vars:     Size  Location     Type
 19949 ;;  chr             1    8[COMRAM] unsigned char 
 19950 ;; Return value:  Size  Location     Type
 19951 ;;                  1    wreg      void 
 19952 ;; Registers used:
 19953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19954 ;; Tracked objects:
 19955 ;;		On entry : 0/0
 19956 ;;		On exit  : 0/0
 19957 ;;		Unchanged: 0/0
 19958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19959 ;;      Params:         6       0       0       0       0       0       0       0       0
 19960 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19961 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19962 ;;      Totals:         9       0       0       0       0       0       0       0       0
 19963 ;;Total ram usage:        9 bytes
 19964 ;; Hardware stack levels used:    1
 19965 ;; This function calls:
 19966 ;;		Nothing
 19967 ;; This function is called by:
 19968 ;;		_GPSRead
 19969 ;; This function uses a non-reentrant model
 19970 ;;
 19971                           
 19972                           	psect	text102
 19973  004DF2                     __ptext102:
 19974                           	callstack 0
 19975  004DF2                     _stringcpy:
 19976                           	callstack 13
 19977                           
 19978                           ;GPS.c: 36: uint8_t chr = 0;
 19979                           
 19980                           ;incstack = 0
 19981  004DF2  0E00               	movlw	0
 19982  004DF4  6E09               	movwf	stringcpy@chr^0,c
 19983  004DF6                     i2l11357:
 19984                           
 19985                           ;GPS.c: 39: str2[chr + dir] = str1[chr];
 19986  004DF6  5009               	movf	stringcpy@chr^0,w,c
 19987  004DF8  2401               	addwf	stringcpy@str1^0,w,c
 19988  004DFA  6ED9               	movwf	fsr2l,c
 19989  004DFC  0E00               	movlw	0
 19990  004DFE  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 19991  004E00  6EDA               	movwf	fsr2h,c
 19992  004E02  5009               	movf	stringcpy@chr^0,w,c
 19993  004E04  2403               	addwf	stringcpy@str2^0,w,c
 19994  004E06  6E07               	movwf	??_stringcpy^0,c
 19995  004E08  0E00               	movlw	0
 19996  004E0A  2004               	addwfc	(stringcpy@str2+1)^0,w,c
 19997  004E0C  6E08               	movwf	(??_stringcpy+1)^0,c
 19998  004E0E  5005               	movf	stringcpy@dir^0,w,c
 19999  004E10  2407               	addwf	??_stringcpy^0,w,c
 20000  004E12  6EE1               	movwf	fsr1l,c
 20001  004E14  5006               	movf	(stringcpy@dir+1)^0,w,c
 20002  004E16  2008               	addwfc	(??_stringcpy+1)^0,w,c
 20003  004E18  6EE2               	movwf	fsr1h,c
 20004  004E1A  CFDF FFE7          	movff	indf2,indf1
 20005                           
 20006                           ;GPS.c: 40: } while(str1[chr++] != '\0');
 20007  004E1E  2A09               	incf	stringcpy@chr^0,f,c
 20008  004E20  0409               	decf	stringcpy@chr^0,w,c
 20009  004E22  6E07               	movwf	??_stringcpy^0,c
 20010  004E24  5007               	movf	??_stringcpy^0,w,c
 20011  004E26  2401               	addwf	stringcpy@str1^0,w,c
 20012  004E28  6ED9               	movwf	fsr2l,c
 20013  004E2A  0E00               	movlw	0
 20014  004E2C  2002               	addwfc	(stringcpy@str1+1)^0,w,c
 20015  004E2E  6EDA               	movwf	fsr2h,c
 20016  004E30  50DF               	movf	indf2,w,c
 20017  004E32  B4D8               	btfsc	status,2,c
 20018  004E34  0012               	return	
 20019  004E36  D7DF               	goto	i2l11357
 20020  004E38                     __end_of_stringcpy:
 20021                           	callstack 0
 20022                           
 20023 ;; *************** function _strcmp *****************
 20024 ;; Defined at:
 20025 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcmp.c"
 20026 ;; Parameters:    Size  Location     Type
 20027 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 20028 ;;		 -> sentence(6), 
 20029 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 20030 ;;		 -> STR_6(6), STR_5(6), 
 20031 ;; Auto vars:     Size  Location     Type
 20032 ;;  r               1    6[COMRAM] char 
 20033 ;; Return value:  Size  Location     Type
 20034 ;;                  2    0[COMRAM] int 
 20035 ;; Registers used:
 20036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20037 ;; Tracked objects:
 20038 ;;		On entry : 0/0
 20039 ;;		On exit  : 0/0
 20040 ;;		Unchanged: 0/0
 20041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20042 ;;      Params:         4       0       0       0       0       0       0       0       0
 20043 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20044 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20045 ;;      Totals:         7       0       0       0       0       0       0       0       0
 20046 ;;Total ram usage:        7 bytes
 20047 ;; Hardware stack levels used:    1
 20048 ;; This function calls:
 20049 ;;		Nothing
 20050 ;; This function is called by:
 20051 ;;		_GPSRead
 20052 ;; This function uses a non-reentrant model
 20053 ;;
 20054                           
 20055                           	psect	text103
 20056  004D18                     __ptext103:
 20057                           	callstack 0
 20058  004D18                     _strcmp:
 20059                           	callstack 13
 20060                           
 20061                           ;incstack = 0
 20062  004D18  D004               	goto	i2l11365
 20063  004D1A                     i2l11363:
 20064  004D1A  4A01               	infsnz	strcmp@s1^0,f,c
 20065  004D1C  2A02               	incf	(strcmp@s1+1)^0,f,c
 20066  004D1E  4A03               	infsnz	strcmp@s2^0,f,c
 20067  004D20  2A04               	incf	(strcmp@s2+1)^0,f,c
 20068  004D22                     i2l11365:
 20069  004D22  C003  FFF6         	movff	strcmp@s2,tblptrl
 20070  004D26  C004  FFF7         	movff	strcmp@s2+1,tblptrh
 20071  004D2A                     	if	0	;tblptru may be non-zero
 20072  004D2A                     	endif
 20073  004D2A                     	if	0	;tblptru may be non-zero
 20074  004D2A                     	endif
 20075  004D2A  0008               	tblrd		*
 20076  004D2C  CFF5 F005          	movff	tablat,??_strcmp
 20077  004D30  C001  FFD9         	movff	strcmp@s1,fsr2l
 20078  004D34  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 20079  004D38  50DF               	movf	indf2,w,c
 20080  004D3A  6E06               	movwf	(??_strcmp+1)^0,c
 20081  004D3C  5005               	movf	??_strcmp^0,w,c
 20082  004D3E  5C06               	subwf	(??_strcmp+1)^0,w,c
 20083  004D40  6E07               	movwf	strcmp@r^0,c
 20084  004D42  5007               	movf	strcmp@r^0,w,c
 20085  004D44  A4D8               	btfss	status,2,c
 20086  004D46  D007               	goto	i2u1421_40
 20087  004D48  C001  FFD9         	movff	strcmp@s1,fsr2l
 20088  004D4C  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 20089  004D50  50DF               	movf	indf2,w,c
 20090  004D52  A4D8               	btfss	status,2,c
 20091  004D54  D7E2               	goto	i2l11363
 20092  004D56                     i2u1421_40:
 20093  004D56  5007               	movf	strcmp@r^0,w,c
 20094  004D58  6E01               	movwf	?_strcmp^0,c
 20095  004D5A  6A02               	clrf	(?_strcmp+1)^0,c
 20096  004D5C  BE01               	btfsc	?_strcmp^0,7,c
 20097  004D5E  0602               	decf	(?_strcmp+1)^0,f,c
 20098  004D60  0012               	return		;funcret
 20099  004D62                     __end_of_strcmp:
 20100                           	callstack 0
 20101                           
 20102                           	psect	text104
 20103  000000                     __ptext104:
 20104                           	callstack 0
 20105                           
 20106                           	psect	rparam
 20107  0000                     
 20108                           	psect	temp
 20109  000047                     btemp:
 20110                           	callstack 0
 20111  000047                     	ds	1
 20112  0000                     int$flags	set	btemp
 20113  0000                     wtemp8	set	btemp+1
 20114  0000                     ttemp5	set	btemp+1
 20115  0000                     ttemp6	set	btemp+4
 20116  0000                     ttemp7	set	btemp+8
 20117                           
 20118                           	psect	idloc
 20119                           
 20120                           ;Config register IDLOC0 @ 0x200000
 20121                           ;	unspecified, using default values
 20122  200000                     	org	2097152
 20123  200000  FF                 	db	255
 20124                           
 20125                           ;Config register IDLOC1 @ 0x200001
 20126                           ;	unspecified, using default values
 20127  200001                     	org	2097153
 20128  200001  FF                 	db	255
 20129                           
 20130                           ;Config register IDLOC2 @ 0x200002
 20131                           ;	unspecified, using default values
 20132  200002                     	org	2097154
 20133  200002  FF                 	db	255
 20134                           
 20135                           ;Config register IDLOC3 @ 0x200003
 20136                           ;	unspecified, using default values
 20137  200003                     	org	2097155
 20138  200003  FF                 	db	255
 20139                           
 20140                           ;Config register IDLOC4 @ 0x200004
 20141                           ;	unspecified, using default values
 20142  200004                     	org	2097156
 20143  200004  FF                 	db	255
 20144                           
 20145                           ;Config register IDLOC5 @ 0x200005
 20146                           ;	unspecified, using default values
 20147  200005                     	org	2097157
 20148  200005  FF                 	db	255
 20149                           
 20150                           ;Config register IDLOC6 @ 0x200006
 20151                           ;	unspecified, using default values
 20152  200006                     	org	2097158
 20153  200006  FF                 	db	255
 20154                           
 20155                           ;Config register IDLOC7 @ 0x200007
 20156                           ;	unspecified, using default values
 20157  200007                     	org	2097159
 20158  200007  FF                 	db	255
 20159                           
 20160                           	psect	config
 20161                           
 20162                           ;Config register CONFIG1L @ 0x300000
 20163                           ;	unspecified, using default values
 20164                           ;	PLL Prescaler Selection bits
 20165                           ;	PLLDIV = 0x0, unprogrammed default
 20166                           ;	System Clock Postscaler Selection bits
 20167                           ;	CPUDIV = 0x0, unprogrammed default
 20168                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 20169                           ;	USBDIV = 0x0, unprogrammed default
 20170  300000                     	org	3145728
 20171  300000  00                 	db	0
 20172                           
 20173                           ;Config register CONFIG1H @ 0x300001
 20174                           ;	unspecified, using default values
 20175                           ;	Oscillator Selection bits
 20176                           ;	FOSC = 0x5, unprogrammed default
 20177                           ;	Fail-Safe Clock Monitor Enable bit
 20178                           ;	FCMEN = 0x0, unprogrammed default
 20179                           ;	Internal/External Oscillator Switchover bit
 20180                           ;	IESO = 0x0, unprogrammed default
 20181  300001                     	org	3145729
 20182  300001  05                 	db	5
 20183                           
 20184                           ;Config register CONFIG2L @ 0x300002
 20185                           ;	unspecified, using default values
 20186                           ;	Power-up Timer Enable bit
 20187                           ;	PWRT = 0x1, unprogrammed default
 20188                           ;	Brown-out Reset Enable bits
 20189                           ;	BOR = 0x3, unprogrammed default
 20190                           ;	Brown-out Reset Voltage bits
 20191                           ;	BORV = 0x3, unprogrammed default
 20192                           ;	USB Voltage Regulator Enable bit
 20193                           ;	VREGEN = 0x0, unprogrammed default
 20194  300002                     	org	3145730
 20195  300002  1F                 	db	31
 20196                           
 20197                           ;Config register CONFIG2H @ 0x300003
 20198                           ;	unspecified, using default values
 20199                           ;	Watchdog Timer Enable bit
 20200                           ;	WDT = 0x1, unprogrammed default
 20201                           ;	Watchdog Timer Postscale Select bits
 20202                           ;	WDTPS = 0xF, unprogrammed default
 20203  300003                     	org	3145731
 20204  300003  1F                 	db	31
 20205                           
 20206                           ; Padding undefined space
 20207  300004                     	org	3145732
 20208  300004  FF                 	db	255
 20209                           
 20210                           ;Config register CONFIG3H @ 0x300005
 20211                           ;	unspecified, using default values
 20212                           ;	CCP2 MUX bit
 20213                           ;	CCP2MX = 0x1, unprogrammed default
 20214                           ;	PORTB A/D Enable bit
 20215                           ;	PBADEN = 0x1, unprogrammed default
 20216                           ;	Low-Power Timer 1 Oscillator Enable bit
 20217                           ;	LPT1OSC = 0x0, unprogrammed default
 20218                           ;	MCLR Pin Enable bit
 20219                           ;	MCLRE = 0x1, unprogrammed default
 20220  300005                     	org	3145733
 20221  300005  83                 	db	131
 20222                           
 20223                           ;Config register CONFIG4L @ 0x300006
 20224                           ;	unspecified, using default values
 20225                           ;	Stack Full/Underflow Reset Enable bit
 20226                           ;	STVREN = 0x1, unprogrammed default
 20227                           ;	Single-Supply ICSP Enable bit
 20228                           ;	LVP = 0x1, unprogrammed default
 20229                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 20230                           ;	ICPRT = 0x0, unprogrammed default
 20231                           ;	Extended Instruction Set Enable bit
 20232                           ;	XINST = 0x0, unprogrammed default
 20233                           ;	Background Debugger Enable bit
 20234                           ;	DEBUG = 0x1, unprogrammed default
 20235  300006                     	org	3145734
 20236  300006  85                 	db	133
 20237                           
 20238                           ; Padding undefined space
 20239  300007                     	org	3145735
 20240  300007  FF                 	db	255
 20241                           
 20242                           ;Config register CONFIG5L @ 0x300008
 20243                           ;	unspecified, using default values
 20244                           ;	Code Protection bit
 20245                           ;	CP0 = 0x1, unprogrammed default
 20246                           ;	Code Protection bit
 20247                           ;	CP1 = 0x1, unprogrammed default
 20248                           ;	Code Protection bit
 20249                           ;	CP2 = 0x1, unprogrammed default
 20250                           ;	Code Protection bit
 20251                           ;	CP3 = 0x1, unprogrammed default
 20252  300008                     	org	3145736
 20253  300008  0F                 	db	15
 20254                           
 20255                           ;Config register CONFIG5H @ 0x300009
 20256                           ;	unspecified, using default values
 20257                           ;	Boot Block Code Protection bit
 20258                           ;	CPB = 0x1, unprogrammed default
 20259                           ;	Data EEPROM Code Protection bit
 20260                           ;	CPD = 0x1, unprogrammed default
 20261  300009                     	org	3145737
 20262  300009  C0                 	db	192
 20263                           
 20264                           ;Config register CONFIG6L @ 0x30000A
 20265                           ;	unspecified, using default values
 20266                           ;	Write Protection bit
 20267                           ;	WRT0 = 0x1, unprogrammed default
 20268                           ;	Write Protection bit
 20269                           ;	WRT1 = 0x1, unprogrammed default
 20270                           ;	Write Protection bit
 20271                           ;	WRT2 = 0x1, unprogrammed default
 20272                           ;	Write Protection bit
 20273                           ;	WRT3 = 0x1, unprogrammed default
 20274  30000A                     	org	3145738
 20275  30000A  0F                 	db	15
 20276                           
 20277                           ;Config register CONFIG6H @ 0x30000B
 20278                           ;	unspecified, using default values
 20279                           ;	Configuration Register Write Protection bit
 20280                           ;	WRTC = 0x1, unprogrammed default
 20281                           ;	Boot Block Write Protection bit
 20282                           ;	WRTB = 0x1, unprogrammed default
 20283                           ;	Data EEPROM Write Protection bit
 20284                           ;	WRTD = 0x1, unprogrammed default
 20285  30000B                     	org	3145739
 20286  30000B  E0                 	db	224
 20287                           
 20288                           ;Config register CONFIG7L @ 0x30000C
 20289                           ;	unspecified, using default values
 20290                           ;	Table Read Protection bit
 20291                           ;	EBTR0 = 0x1, unprogrammed default
 20292                           ;	Table Read Protection bit
 20293                           ;	EBTR1 = 0x1, unprogrammed default
 20294                           ;	Table Read Protection bit
 20295                           ;	EBTR2 = 0x1, unprogrammed default
 20296                           ;	Table Read Protection bit
 20297                           ;	EBTR3 = 0x1, unprogrammed default
 20298  30000C                     	org	3145740
 20299  30000C  0F                 	db	15
 20300                           
 20301                           ;Config register CONFIG7H @ 0x30000D
 20302                           ;	unspecified, using default values
 20303                           ;	Boot Block Table Read Protection bit
 20304                           ;	EBTRB = 0x1, unprogrammed default
 20305  30000D                     	org	3145741
 20306  30000D  40                 	db	64
 20307                           tosu	equ	0xFFF
 20308                           tosh	equ	0xFFE
 20309                           tosl	equ	0xFFD
 20310                           stkptr	equ	0xFFC
 20311                           pclatu	equ	0xFFB
 20312                           pclath	equ	0xFFA
 20313                           pcl	equ	0xFF9
 20314                           tblptru	equ	0xFF8
 20315                           tblptrh	equ	0xFF7
 20316                           tblptrl	equ	0xFF6
 20317                           tablat	equ	0xFF5
 20318                           prodh	equ	0xFF4
 20319                           prodl	equ	0xFF3
 20320                           indf0	equ	0xFEF
 20321                           postinc0	equ	0xFEE
 20322                           postdec0	equ	0xFED
 20323                           preinc0	equ	0xFEC
 20324                           plusw0	equ	0xFEB
 20325                           fsr0h	equ	0xFEA
 20326                           fsr0l	equ	0xFE9
 20327                           wreg	equ	0xFE8
 20328                           indf1	equ	0xFE7
 20329                           postinc1	equ	0xFE6
 20330                           postdec1	equ	0xFE5
 20331                           preinc1	equ	0xFE4
 20332                           plusw1	equ	0xFE3
 20333                           fsr1h	equ	0xFE2
 20334                           fsr1l	equ	0xFE1
 20335                           bsr	equ	0xFE0
 20336                           indf2	equ	0xFDF
 20337                           postinc2	equ	0xFDE
 20338                           postdec2	equ	0xFDD
 20339                           preinc2	equ	0xFDC
 20340                           plusw2	equ	0xFDB
 20341                           fsr2h	equ	0xFDA
 20342                           fsr2l	equ	0xFD9
 20343                           status	equ	0xFD8

Data Sizes:
    Strings     373
    Constant    34
    Data        130
    BSS         935
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      70
    BANK0           160    150     158
    BANK1           256      0     251
    BANK2           256      0     242
    BANK3           256     34      34
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3442	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), verifica_fence_externo(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[7]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), rawTime(BANK1[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[7]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), rawTime(BANK1[11]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 59
		 -> string_dado.data(BANK2[7]), string_dado(BANK2[59]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 6
		 -> sentence(BANK1[6]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_21(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 124
		 -> poligono_ext.point_long_min(BANK1[6]), poligono_ext.fence_long_min(BANK1[6]), poligono_ext.point_lat_min(BANK1[6]), poligono_ext.fence_lat_min(BANK1[6]), 
		 -> poligono_ext.fence_lat_deg(BANK1[5]), poligono_ext.point_lat_deg(BANK1[5]), poligono_ext.fence_long_deg(BANK1[6]), poligono_ext.point_long_deg(BANK1[6]), 
		 -> poligono_ext(BANK1[124]), 

    point_buff_gps_long	PTR unsigned char  size(2) Largest target is 13
		 -> NULL(NULL[0]), rawLongitude(BANK2[13]), 

    point_buff_gps_lat	PTR unsigned char  size(2) Largest target is 13
		 -> NULL(NULL[0]), rawLatitude(BANK2[13]), 

    verifica_fence_externo@p_buff_gps_long	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK2[13]), 

    verifica_fence_externo@p_buff_gps_lat	PTR unsigned char  size(2) Largest target is 13
		 -> rawLatitude(BANK2[13]), 

    p_tarefas	PTR FTN()void [4] size(2) Largest target is 1
		 -> troca_de_tela(), verifica_fence_externo(), disparo_gravacao(), verifica_dados_operacionais(), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_14(CODE[35]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 59
		 -> fprintf@s(BANK3[16]), ?_fprintf(BANK0[2]), STR_19(CODE[16]), STR_18(CODE[27]), 
		 -> STR_17(CODE[17]), STR_16(CODE[16]), STR_15(CODE[16]), string_dado(BANK2[59]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_20(CODE[13]), filename(BANK2[15]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_20(CODE[13]), filename(BANK2[15]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_20(CODE[13]), filename(BANK2[15]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1371_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[7]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), rawTime(BANK1[11]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 15
		 -> filename(BANK2[15]), 

    escrita_sdcard@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    S707_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S707_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__Longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK2[13]), 

    sp__Latitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLatitude(BANK2[13]), 

    stringcpy@str1	PTR unsigned char  size(2) Largest target is 12
		 -> buffer(BANK1[12]), 

    stringcpy@str2	PTR unsigned char  size(2) Largest target is 13
		 -> rawFix(BANK1[2]), rawAltitude(BANK1[7]), rawSatellites(BANK1[3]), rawDate(BANK1[7]), 
		 -> rawCourse(BANK1[6]), rawSpeed(BANK1[6]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), 
		 -> rawTime(BANK1[11]), sentence(BANK1[6]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_33(CODE[2]), STR_32(CODE[7]), STR_31(CODE[14]), STR_30(CODE[8]), 
		 -> STR_29(CODE[17]), STR_28(CODE[8]), STR_27(CODE[16]), STR_26(CODE[4]), 
		 -> STR_25(CODE[4]), STR_24(CODE[5]), STR_23(CODE[5]), mensagem_inicial@msg_dois(BANK0[17]), 
		 -> mensagem_inicial@msg_linha_um(BANK0[17]), NULL(NULL[0]), STR_12(CODE[9]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[14]), STR_8(CODE[21]), STR_7(CODE[15]), 
		 -> rawFix(BANK1[2]), rawLongitude(BANK2[13]), rawLatitude(BANK2[13]), escreve_inteiro_lcd@texto(BANK0[7]), 
		 -> STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[11]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_uart@valor_final(COMRAM[7]), escreve_inteiro_lcd@texto(BANK0[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_fence_externo->_atoi
    _atoi->___wmul
    _troca_de_tela->_escreve_inteiro_lcd
    _escreve_inteiro_lcd->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _escreve_cmd_lcd->_delay
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _make_dirfile->_memset
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_GPSDay
    _get_fattime->_GPSHour
    _get_fattime->_GPSMinute
    _get_fattime->_GPSMonth
    _get_fattime->_GPSSecond
    _get_fattime->_GPSyear
    _dados_gps_to_sd->_monta_sd
    _monta_sd->_strlen

Critical Paths under _isr in COMRAM

    _isr->_GPSRead
    _GPSRead->_stringcpy

Critical Paths under _main in BANK0

    _main->_escalonador
    _troca_de_tela->_escreve_inteiro_lcd
    _disparo_gravacao->_escrita_sdcard
    _escrita_sdcard->_fprintf
    _inicializa_uart->_configura_baudrate_uart
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _check_fs->_disk_read
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_close->_f_sync
    _f_sync->_move_window
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _disk_read->_sdc_disk_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    _escrita_sdcard->_fprintf

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  446881
                    _dados_gps_to_sd
                        _escalonador
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    7123
                                             30 COMRAM     2     2      0
                                              0 BANK0     34    34      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             27 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  436569
                                            147 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
             _verifica_fence_externo *
 ---------------------------------------------------------------------------------
 (2) _verifica_fence_externo                             136   136      0    5859
                                             37 COMRAM     6     6      0
                                              0 BANK0    129   129      0
                           _Latitude
                          _Longitude
                               _atoi
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2514
                                             30 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        2     2      0   14248
                                             47 COMRAM     2     2      0
                           _Latitude
                          _Longitude
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                  9     7      2    7205
                                             45 COMRAM     2     0      2
                                              0 BANK0      7     7      0
              _escreve_frase_ram_lcd
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 6     1      5    3556
                                             39 COMRAM     6     1      5
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 8     3      5    2843
                                             31 COMRAM     8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     972
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1161
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             26 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _Longitude                                            2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Latitude                                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                     0     0      0  416239
                     _escrita_sdcard
 ---------------------------------------------------------------------------------
 (3) _escrita_sdcard                                       5     5      0  416239
                                            144 BANK0      3     3      0
                        _desliga_SPI
                       _desliga_uart
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                                _fix
                            _fprintf
                     _inicializa_SPI
                    _inicializa_uart
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4     289
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4     323
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             38 COMRAM    12     8      4
                                              0 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                             24 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _fprintf                                             56    36     20  128186
                                            122 BANK0     22     2     20
                                              0 BANK3     34    34      0
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (5) _fputs                                                7     3      4   61783
                                            115 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                7     3      4   61290
                                            108 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (7) _f_write                                             30    24      6   60478
                                             78 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) _fix                                                  2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _f_open                                              44    39      5  200664
                                             96 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (5) _trace_path                                          20    15      5   38428
                                             71 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (6) _make_dirfile                                        11     9      2    2102
                                             32 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _reserve_direntry                                    18    16      2   76553
                                             78 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (6) _next_dir_entry                                      12    11      1   18602
                                             59 BANK0     12    11      1
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (8) _clust2sect                                          11     7      4    1435
                                             36 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _remove_chain                                         8     6      2   33394
                                             64 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     970
                                             24 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _auto_mount                                          46    44      2   32813
                                             25 BANK0     46    44      2
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6    1008
                                             24 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _disk_initialize                                      4     4      0   21374
                                             44 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (7) _sdc_disk_initialize                                 13    13      0   21244
                                             43 COMRAM     1     1      0
                                              0 BANK0     12    12      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (8) _sdc_reset                                           20    20      0   10188
                                             36 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3537
                                             27 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             26 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    3029
                                             27 COMRAM     2     0      2
              _escreve_caractere_lcd
                                _fix (ARG)
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             26 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _check_fs                                             8     4      4    6616
                                             48 COMRAM     2     2      0
                                             19 BANK0      6     2      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (6) _memcmp                                               8     2      6     701
                                             24 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     516
                                             24 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _f_mount                                              3     1      2     290
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _f_lseek                                             33    27      6   54910
                                             78 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (8) _create_chain                                        14    12      2   34457
                                             64 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _put_cluster                                         24    20      4   16663
                                             40 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _get_cluster                                         21    19      2   16353
                                             48 COMRAM     2     0      2
                                             40 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1392
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     901
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _f_close                                              3     1      2   30425
                                             49 BANK0      3     1      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (5) _f_sync                                               9     7      2   30002
                                             40 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (8) _validate                                             6     2      4    1178
                                             30 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (9) _disk_status                                          4     4      0     226
                                             26 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_status                                     4     4      0      34
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _sync                                                 2     2      0   14103
                                             48 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (8) _move_window                                         21    17      4   13765
                                             19 BANK0     21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (9) _disk_write                                          12     5      7    6087
                                             47 COMRAM     1     1      0
                                              8 BANK0     11     4      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_write                                     19    12      7    4623
                                             36 COMRAM    11     4      7
                                              0 BANK0      8     8      0
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (9) _disk_read                                           12     5      7    5608
                                             47 COMRAM     1     1      0
                                              8 BANK0     11     4      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (10) _sdc_disk_read                                      24    17      7    4459
                                             36 COMRAM    11     4      7
                                              0 BANK0      8     8      0
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (11) _response                                            1     1      0      34
                                             24 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (11) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (11) _command                                             7     2      5    3412
                                             29 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (12) _wait_ready                                         15    15      0      99
                                             24 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _escreve_SPI                                         2     2      0      34
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _dummy_clocks                                        5     5      0      68
                                             24 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _disk_ioctl                                           7     4      3     304
                                             24 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (5) _get_fattime                                         52    48      4     389
                                             28 COMRAM    14    10      4
                                              0 BANK0     38    38      0
                             _GPSDay
                            _GPSHour
                          _GPSMinute
                           _GPSMonth
                          _GPSSecond
                            _GPSyear
 ---------------------------------------------------------------------------------
 (6) _GPSyear                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSSecond                                            4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSMonth                                             4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSMinute                                            4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSHour                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _GPSDay                                               4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dados_gps_to_sd                                      0     0      0    1310
                           _monta_sd
 ---------------------------------------------------------------------------------
 (2) _monta_sd                                             5     3      2    1310
                                             28 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     220
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _isr                                                13    13      0    3687
                                             11 COMRAM    13    13      0
                            _GPSRead
                   _recebe_dado_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (17) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _GPSRead                                             2     2      0    3509
                                              9 COMRAM     2     2      0
                             _strcmp
                          _stringcpy
 ---------------------------------------------------------------------------------
 (18) _stringcpy                                           9     3      6    2920
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (18) _strcmp                                              7     3      4     493
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dados_gps_to_sd
     _monta_sd
       _strlen
   _escalonador
     _disparo_gravacao *
       _escrita_sdcard
         _desliga_SPI
         _desliga_uart
         _f_close
           _f_sync
             _get_fattime
               _GPSDay
               _GPSHour
               _GPSMinute
               _GPSMonth
               _GPSSecond
               _GPSyear
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _sync
               _disk_ioctl
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
         _f_lseek
           ___lldiv
           _create_chain
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _put_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
           _get_cluster
             ___wmul
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
           _validate
             _disk_status
               _sdc_disk_status
         _f_mount
         _f_open
           _auto_mount
             ___lldiv
             ___lmul
             _check_fs
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memcmp
             _disk_initialize
               _sdc_disk_initialize
                 _command
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _wait_ready
                     _leitura_SPI
                 _dummy_clocks
                   _leitura_SPI
                 _escreve_frase_ram_lcd
                   _escreve_caractere_lcd
                     _delay
                   _fix (ARG)
                 _posicao_cursor_lcd
                   _endereco_cursor_lcd
                     _delay
                 _proceed
                   _escreve_SPI
                 _response
                   _leitura_SPI
                 _sdc_reset
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                     _fix (ARG)
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _disk_status
               _sdc_disk_status
             _memset
           _get_fattime
             _GPSDay
             _GPSHour
             _GPSMinute
             _GPSMonth
             _GPSSecond
             _GPSyear
           _memcpy
           _memset
           _move_window
             _disk_read
               _sdc_disk_read
                 _command
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _wait_ready
                     _leitura_SPI
                 _dummy_clocks
                   _leitura_SPI
                 _proceed
                   _escreve_SPI
                 _response
                   _leitura_SPI
             _disk_write
               _sdc_disk_write
                 _command
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _wait_ready
                     _leitura_SPI
                 _dummy_clocks
                   _leitura_SPI
                 _escreve_SPI
                 _leitura_SPI
                 _proceed
                   _escreve_SPI
                 _response
                   _leitura_SPI
           _remove_chain
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _put_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
           _reserve_direntry
             _clust2sect
               ___lmul
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _disk_write
               _sdc_disk_write
                 _command
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _wait_ready
                     _leitura_SPI
                 _dummy_clocks
                   _leitura_SPI
                 _escreve_SPI
                 _leitura_SPI
                 _proceed
                   _escreve_SPI
                 _response
                   _leitura_SPI
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _next_dir_entry
               _clust2sect
                 ___lmul
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
           _trace_path
             _clust2sect
               ___lmul
             _make_dirfile
               _memset
             _memcmp
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _next_dir_entry
               _clust2sect
                 ___lmul
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
         _fix
         _fprintf
           ___lldiv
           ___llmod
           ___wmul
           _fputc
             _f_write
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memcpy
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _fputs
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
         _strcat
         _strcpy
     _troca_de_tela *
       _Latitude
       _Longitude
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
         _fix (ARG)
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
           _fix (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
       _fix
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
     _verifica_dados_operacionais *
     _verifica_fence_externo *
       _Latitude
       _Longitude
       _atoi
         ___wmul
         _isdigit
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
       _fix (ARG)
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _GPSRead
     _strcmp
     _stringcpy
   _recebe_dado_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     22      22      11       13.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F2       9       94.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     96      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      46       1       74.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F3      20        0.0%
DATA                 0      0     513       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Apr 27 15:36:32 2022

                     next_dir_entry@idx 00A5                __end_of_mensagem_inicial 48AC  
                   next_dir_entry@clust 00A3                             _SSPSTATbits 000FC7  
                      ??_init_interrupt 0019                                      l68 52C0  
          __size_of_escreve_inteiro_lcd 0036                                      _fs 0322  
                   ___wmul@multiplicand 001B                             _put_cluster 2AF0  
                      disk_write@sector 006A                            ?_escalonador 0001  
                        create_chain@fs 00A6                        disk_write@result 0070  
                      ?_inicializa_uart 0001                                     l200 45E8  
                                   l201 45F0                                     l202 45F2  
                                   l203 45FA                                     l220 49CC  
                                   l204 45FC                                     l221 49D4  
                                   l213 49A0                                     l205 4604  
                                   l222 49D6                                     l206 4606  
                                   l223 49DE                                     l215 49AA  
                __size_of_troca_de_tela 033C                                     l144 305A  
                                   l224 49E0                                     l232 4AD0  
                                   l225 49E8                                     l217 49B4  
                                   l250 48F0                                     l242 48BC  
                                   l226 49EA                                     l218 49B6  
                                   l251 48F2                                     l219 49CA  
                                   l252 48FA                                     l244 48C6  
                                   l181 52FE                                     l253 48FC  
                                   l254 4904                                     l246 48D0  
                                   l183 5304                                     l255 4906  
                                   l191 45B2                                     l256 490E  
                                   l248 48DA                                     l257 4910  
                                   l249 48DC                                     l193 45BC  
                                   l195 45C6                                     l197 45D0  
                                   l198 45D2                                     l199 45E6  
                                   l567 4F5E                                     l583 4B38  
                                   l665 53B8                                     l659 53F6  
                                   l772 337A                                     l933 0E5A  
                                   l846 3704                                     l775 3372  
                                   l849 36B2                                     l963 1E08  
                                   l973 1F4A                                     l958 1DDC  
                                   _PCL 000FF9                                     _PR2 000FCB  
                                   _fil 019C                        ??_init_oscilador 0019  
                                   _fix 5428                                     _isr 0008  
                          disk_read@res 0072                                     prod 000FF3  
                        ??_create_chain 00A2                                     tosl 000FFD  
                                   wreg 000FE8               __size_of_write_timer_zero 000A  
                       create_chain@mcl 00A4                         create_chain@ncl 00AC  
                       create_chain@scl 00AA                 ??_escreve_frase_ram_lcd 001E  
                                  l1100 4F14                                    l1051 146E  
                                  l1133 1808                                    l1150 1956  
                                  l1047 125E                                    l2007 4C1C  
                                  l2017 4EF8                                    l2205 3FE0  
                                  l2223 4464                                    l1444 05F2  
                                  l1470 06EE                                    l1519 1BF6  
                                  l1480 06FA                                    l1464 06A2  
                                  l1555 47AA                                    l1499 19DA  
                                  l1936 4AB4                                    ?_fix 0019  
                                  l9211 3B42                                    ?_isr 0001  
                                  l9133 4F6A                                    l9141 4FFE  
                                  l9221 3B76                                    l9205 3B2E  
                                  l9301 30A2                                    l9231 3BAA  
                                  l9215 3B66                                    l9223 3B7E  
                                  l9241 3BDA                                    l6665 50EA  
                                  l9155 4B32                                    l9227 3B92  
                                  l9331 311A                                    l9315 30CA  
                                  l9341 4922                                    l9261 2FAA  
                                  l6669 50FA                                    l6909 365C  
                                  l6951 36A2                                    l9345 494E  
                                  l7593 4D86                                    l9601 4B06  
                                  l9283 3020                                    l9523 3232  
                                  l9515 31AE                                    l9531 3280  
                                  l9443 49AC                                    l9603 4B20  
                                  l6955 36AA                                    l6947 369A  
                                  l6939 368A                                    l9349 4952  
                                  l9365 4974                                    l9269 2FFC  
                                  l9373 4CCE                                    l9541 32D4  
                                  l9429 53AA                                    l9621 2DA0  
                                  l7589 4D6E                                    l9613 4C50  
                                  l9519 322A                                    l9703 2CC0  
                                  l7599 4DA6                                    l9471 48BE  
                                  l9439 49A2                                    l9377 4CFA  
                                  l9553 505A                                    l9641 2ECE  
                                  l9609 4C28                                    l6977 36E4  
                                  l6969 36CC                                    l6889 35F2  
                                  l9395 4CFE                                    l9555 5062  
                                  l9571 506E                                    l9731 4BA2  
                                  l9475 48C8                                    l6987 3702  
                                  l6979 36E6                                    l9645 2EEE  
                                  l9717 2D26                                    l9741 4540  
                                  l9901 20AA                                    l6997 371E  
                                  l9559 5066                                    l9655 2F54  
                                  l9719 2D42                                    l9831 341E  
                                  l9727 4B8E                                    l9479 48D2  
                                  l9657 2F6E                                    l9681 2BEA  
                                  l9673 2B76                                    l9665 2B16  
                                  l9817 33E4                                    l9593 4AF8  
                                  l9585 4ADC                                    l9737 4522  
                                  l9905 20B6                   _escreve_caractere_lcd 48AC  
                                  l9835 345A                                    l9915 20EA  
                                  l7995 52F2                                    l9861 4DDE  
                                  l9589 4AEA                                    l9925 210E  
                                  l9679 2BB6                                    l9783 335C  
                                  l9775 3332                                    l9759 459A  
                                  l9847 4108                                    STR_1 6211  
                                  STR_2 61BE                                    l9873 4E8E  
                                  l9881 4EAE                                    STR_3 6230  
                                  STR_4 6206                                    l9867 4DEE  
                                  l9699 2C96                                    l9787 3382  
                                  STR_5 6258                                    STR_6 6252  
                                  l9949 2192                                    STR_7 61CE  
                                  STR_8 6147                                    l9799 33B0  
                                  l9983 221E                                    l9895 2094  
                                  STR_9 61EB                                    l9993 224A  
                                  l9977 220E                          timer_dois@flag 0042  
                                  _BRGH 007D62                         __end_of_GPSRead 260A  
                                  _CREN 007D5C                                    _T0IF 007F92  
                          ?_escreve_SPI 0001                         __end_of_GPSHour 51D0  
                                  _LATB 000F8A                                    _PIE1 000F9D  
                                  _RCIF 007CF5                                    u6860 3628  
                                  u6880 3638                                    u6867 361E  
                                  _TMR0 000FD6                                    _TMR2 000FCC  
                                  _SPEN 007D5F                                    _TXEN 007D65  
                                  _SYNC 007D64                            trace_path@dj 00A7  
                          trace_path@fn 00A8                            trace_path@ds 00B8  
                          trace_path@fs 00B4                           ?_make_dirfile 0021  
                       __end_of_GPSyear 5214                                    _Term 0043  
                                  _flag 00F6                                    _atoi 3F1C  
                                  _main 50B4                                    _fsid 011A  
                                  _itoa 5024                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0047  
                                  _utoa 43EC                                    _sync 4C78  
                         disk_ioctl@cmd 0019                           disk_read@buff 0068  
                         disk_ioctl@res 001D                           disk_read@pdrv 006F  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 000E                 ?_verifica_fence_externo 0001  
             sdc_disk_initialize@buff_i 0067                            ___param_bank 000000  
             sdc_disk_initialize@count1 0063               sdc_disk_initialize@count2 0069  
                           _string_dado 027A                                   ??_fix 001B  
                                 ??_isr 000C                 __size_of_escrita_sdcard 012C  
                    __size_of_GPSMinute 0022                      __size_of_GPSSecond 0022  
      __size_of_configura_baudrate_uart 010C                                   l10003 2272  
                                 l10201 0C64                                   l10051 52C4  
                                 l10019 22D0                                   l10211 5164  
                                 l10131 0872                                   l11021 1482  
                                 l10037 2334                                   l10029 22F8  
                                 l10213 516A                                   l10205 0C76  
                                 l10133 0892                                   l11101 1712  
                                 l10143 08EA                                   l10119 07B8  
                                 l11033 14CA                                   l11025 148C  
                                 l11009 1422                                   l10153 09CE  
                                 l10161 0A22                                   l11201 1964  
                                 l10401 4BEA                                   l11035 14DE  
                                 l11043 154E                                   l11051 15E2  
                                 l10083 4482                                   l10091 44F8  
                                 l10171 0A9E                                   l11107 173E  
                                 l11211 19CC                                   l10403 4BF2  
                                 l10245 4CAE                                   l10309 4736  
                                 l10229 516E                                   l11205 1982  
                                 l11141 17F0                                   l11125 179E  
                                 l10413 4C12                                   l10421 4ECE  
                                 l10335 475C                                   l10183 0B58  
                                 l11135 17E0                                   l11119 176A  
                                 l11071 167A                                   l11303 396E  
                                 l10423 4ED6                                   l11321 5144  
                                 l10337 4768                                   l10089 44F0  
                                 l10505 276E                                   l10169 0A90  
                                 l11161 1850                                   l11145 17FC  
                                 l11305 397E                                   l11241 45C8  
                                 l11233 45B4                                   l11403 3E78  
                                 l10347 479C                                   l11059 1648  
                                 l10443 437A                                   l10435 435A  
                                 l10267 34DC                                   l10283 35B2  
                                 l10603 2A84                                   l10523 27D8  
                                 l10187 0BD4                                   l10195 0C08  
                                 l11163 1868                                   l11155 182C  
                                 l11067 1670                                   l10371 4040  
                                 l11331 3F22                                   l10293 46EC  
                                 l10453 43BC                                   l10613 2ABE  
                                 l10541 2810                                   l10517 27BC  
                                 l10509 277A                                   l11173 1890  
                                 l10373 404C                                   l10365 401E  
                                 l11309 3998                                   l11237 45BE  
                                 l10429 4EEE                                   l11341 3F62  
                                 l11501 0120                                   l11319 5140  
                                 l11431 3ECC                                   l11423 3EA6  
                                 l10631 0CF0                                   l10623 0C98  
                                 l10455 43C4                                   l10535 27FC  
                                 l10527 27E4                                   l11183 18CA  
                                 l11087 16D0                                   l10391 40A4  
                                 l10383 4080                                   l10359 4006  
                                 l11511 013C                                   l11433 3ED2  
                                 l11417 3EA2                                   l11409 3E7C  
                                 l10297 46F0                                   l10641 0D14  
                                 l10625 0C9E                                   l10561 2920  
                                 l10801 4AA6                                   l11177 189C  
                                 l11097 16FC                                   l11345 3F78  
                                 l11329 3F1E                                   l11513 0140  
                                 l11443 3EFA                                   l10731 10B8  
                                 l10491 26E8                                   l10483 26CE  
                                 l10387 408E                                   l11381 3E28  
                                 l10725 10A2                                   l10717 0F94  
                                 l10581 29B6                                   l10557 28E8  
                                 l11197 1944                                   l11349 3FAE  
                                 l11613 041C                                   l11605 03F2  
                                 l11621 0490                                   l11517 0148  
                                 l11525 01B4                                   l11461 0074  
                                 l11439 3EF0                                   l11375 3E24  
                                 l10655 0D40                                   l10591 29F6  
                                 l10567 2948                                   l10559 290E  
                                 l10479 26CA                                   l10807 43F4  
                                 l11623 0494                                   l11551 0308  
                                 l12183 416E                                   l10577 29B2  
                                 l10497 2710                                   l10921 1F28  
                                 l11297 38E0                                   l10817 4426  
                                 l11641 058E                                   l11609 0414  
                                 l11545 02EC                                   l11395 3E52  
                                 l10763 3AC4                                   l10659 0D44  
                                 l10907 1EA4                                   l10843 503C  
                                 l11651 05C2                                   l11635 0580  
                                 l11571 034A                                   l11483 00A0  
                                 l11491 0114                                   l11467 0078  
                                 l11547 02EE                                   l12195 4204  
                                 l12283 50CC                                   l11389 3E4E  
                                 l10749 3A10                                   l10677 0D7C  
                                 l10669 0D72                                   l10941 1F5E  
                                 l10909 1ED0                                   l10773 4680  
                                 l11709 06D6                                   l11557 030C  
                                 l11637 0582                                   l11477 0094  
                                 l11805 1B54                                   l10695 0E12  
                                 l10687 0DF0                                   l10775 4688  
                                 l11719 06E4                                   l11575 0352  
                                 l11567 0328                                   l11583 03C6  
                                 l11479 0098                                   l11807 1B58  
                                 l11743 1A12                                   l10793 4A72  
                                 l10769 463A                                   l10785 3DF6  
                                 l11681 063E                                   l11585 03CA  
                                 l11841 1BF0                                   l11761 1A68  
                                 l12289 50DA                                   l10859 1D48  
                                 l10795 4A7E                                   l10971 5098  
                                 l11691 0672                                   l11659 05F8  
                                 l11595 03D6                                   l11827 1BA6  
                                 l11763 1A6C                                   l10981 4E5E  
                                 l11669 0626                                   l11829 1BAA  
                                 l10975 4E42                                   l11679 0634  
                                 l11855 1C56                                   l10889 1DE4  
                                 l10977 4E46                                   l10969 5090  
                                 l11881 1CEE                                   l10979 4E56  
                                 l11699 06A8                                   l11779 1AD2  
                                 l11885 1CF4                         __end_of___aldiv 40B6  
                                 ?_atoi 001F                                   ?_main 0001  
                                 ?_itoa 0028                                   STR_10 6226  
                                 STR_11 621C                                   STR_12 623A  
                                 STR_20 61F9                                   STR_21 6275  
                                 STR_13 6268                                   STR_30 6243  
                                 STR_22 6279                                   STR_14 6109  
                                 STR_23 6263                                   STR_31 61DD  
                                 STR_15 619E                                   STR_24 625E  
                                 STR_32 624B                                   STR_16 61AE  
                                 STR_33 627C                                   STR_25 6271  
                                 STR_17 616D                                   STR_26 626D  
                                 STR_18 612C                                   STR_19 618E  
                                 STR_27 617E                                   STR_28 6243  
                                 STR_29 615C                            ?_leitura_SPI 0001  
                       __end_of___lldiv 47BC                                   ?_utoa 0020  
                                 ?_sync 0001                                   u11020 3128  
                                 u12000 44E0                                   u11210 316C  
                                 u11300 4C70                                   u11230 31AA  
                                 u12007 44D6                                   u11320 2D6A  
                                 _T0CON 000FD5                                   u11307 4C66  
                                 u11420 2B72                                   u12220 0C10  
                                 u13030 0E0E                                   u12310 3558  
                                 u11415 2B46                                   u12135 0936  
                                 u12240 4CAA                                   u11520 4560  
                                 u12400 4F0A                                   u11345 2DD0  
                       __end_of___llmod 4AC6                                   u11610 33A6  
                                 u12330 46EC                                   u11290 4C48  
                                 u13130 465A                                   u13300 1D44  
                                 u11365 2E4A                                   u11445 2C16  
                                 u13205 3D92                                   u12430 476C  
                                 u13070 109E                                   u13150 46A8  
                                 u12175 0A0E                                   u13215 3DCA  
                                 u10840 5020                                   u11720 4DDA  
                                 u11560 331C                                   u13080 10B6  
                                 u12600 43D0                                   u12280 34D8  
                                 u13400 1EA0                                   u13240 4A82  
                                 u12520 4BF6                                   u15000 19E8  
                                 _T2CON 000FCA                                   u11297 4C3E  
                                 u13065 0FAC                                   u13137 4650  
                                 u11570 3328                                   u11810 2130  
                                 u12610 43E8                                   u11395 2EDA  
                                 u11475 2CA2                                   u10860 4B42  
                                 u11580 3352                                   u12620 26B4  
                                 u12365 3784                                   u13157 469E  
                                 u14301 0052                                   u14070 4628  
                                 u12550 4EDA                                   u12375 37A0  
                                 u13095 113C                                   u12295 34E8  
                                 u13175 3D16                                   u11680 3448  
                                 u11920 229A                                   u12800 29A4  
                                 u13440 1F46                                   u12480 4050  
                                 u14160 3F72                                   u14320 0086  
                                 u15040 1A76                                   u12385 37D0  
                                 u13185 3D4E                                   u14081 4FC2  
                                 u10890 3B3C                                   u11850 21C2  
                                 u11770 20C6                                   u12570 4376  
                                 u13370 1E04                                   u15210 1CAA  
                                 u15050 1A7E                                   u12395 37F0  
                                 u10875 3AE0                                   u12627 26AA  
                                 u11780 20D6                                   u12900 0CE4  
                                 u15220 1CE2                                   u10965 2FD0  
                                 u11870 21CE                                   u11790 20E2  
                                 u12590 43AA                                   u12830 29F2  
                                 u15230 1CFC                                   u16007 2278  
                                 u11791 20E0                                   u14271 001C  
                                 u13640 14EA                                   u11960 2310  
                                 u13800 17DE                                   u14440 01CA  
                                 u15240 1CFE                                   u15160 1C02  
                                 u16017 4F4A                                   u12665 272C  
                                 u14281 002E                                   u11970 2342  
                                 u12770 2944                                   u13730 16C6  
                                 u14610 04AA                                   u15218 1CAC  
                                 u10995 3076                                   u12907 0CDA  
                                 u14291 0040                                   u13660 1562  
                                 u11980 44AE                                   u14540 03E4  
                                 u14380 012E                                   u15228 1CE4  
                                 u15180 1C20                                   u13565 12D2  
                                 u13670 15A8                                   u13910 1924  
                                 u14710 060C                                   u14470 031A  
                                 u15190 1C42                                   u12960 0D3C  
                                 u12880 0CBE                                   u13760 174C  
                                 u14640 05A6                                   u12785 2964  
                                 u14810 0668                                   u14730 0622  
                                 u13675 159E                                   u11987 44A4  
                                 u14820 066C                                   u14660 05BC  
                                 u15188 1C22                                   u14830 067E  
                                 u14670 05CE                                   u15198 1C44  
                                 u12887 0CB4                                   u13960 19A4  
                                 u14840 068A                                   u14680 05DA  
                                 u14790 0652                                   u14960 06F6  
                                 u14880 06C0                                   u15770 4844  
                                 u15780 485C                                   u14990 19E2  
                                 u15758 41C2                                   u15759 41D6  
                       __end_of___lwdiv 4C26                                   u15947 4898  
                                 u15957 42D4                                   u15967 42F0  
                                 u15977 430C                                   u15987 2062  
                                 u15997 21D4                         __end_of___lwmod 4F02  
                      __end_of_GPSMonth 5258                                   _RCREG 000FAE  
                                 _RCSTA 000FAB                                   _SPBRG 000FAF  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _TRISE 000F96                         __end_of_f_close 5136  
                         trace_path@dir 00AB                                   _TXSTA 000FAC  
                                 _FatFs 0039                         __end_of_f_lseek 165A  
                   ___lmul@multiplicand 001D              __size_of_config_timer_dois 000E  
                       __end_of_f_mount 4DAA                         __end_of_f_write 0C88  
            __size_of_config_timer_zero 001A                           get_cluster@bc 0097  
                         get_cluster@fs 0099                           get_cluster@wc 0091  
                       __end_of_command 4B7E                                   _delay 52FA  
                       clust2sect@clust 0025                         __end_of_fprintf 19D8  
                                 _fputc 4F02                                   _fputs 462E  
                       __end_of_isdigit 52FA                __size_of_escreve_cmd_lcd 008C  
                                 atoi@a 0024                                   atoi@s 001F  
                        ??_make_dirfile 0023                          disk_ioctl@buff 001A  
                                 pclath 000FFA                          disk_read@count 006E  
                                 tablat 000FF5                          disk_ioctl@pdrv 001C  
                      ?_dados_gps_to_sd 0001                         __end_of_proceed 53F2  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 ttemp5 0048                                   ttemp6 004B  
                                 ttemp7 004F                                   utoa@c 0027  
                                 utoa@v 0025                                   status 000FD8  
                         _troca_de_tela 19D8                                   wtemp8 0048  
                         disk_write@res 0072          __end_of_verifica_fence_externo 06FE  
                       __initialization 420E                     disk_initialize@pdrv 002D  
                   disk_initialize@stat 002E                            __end_of_atoi 3FEA  
                          __end_of_main 50E0                            clust2sect@fs 002E  
                          __end_of_itoa 5056                            __end_of_utoa 4480  
                          __end_of_sync 4CCA                      _inicializa_tarefas 49F8  
                       escalonador@cont 00F5                        __end_of_Latitude 5428  
                   reserve_direntry@dir 00AF                       create_chain@clust 00A0  
                           auto_mount@p 009D                       create_chain@cstat 00A8  
                         sdc_reset@buff 002B                                  ??_atoi 0021  
                                ??_main 0033                                  ??_itoa 002D  
                                ??_utoa 0025                                  ??_sync 0031  
                         __activetblptr 000002                     ?_inicializa_tarefas 0001  
                  __end_of_desliga_uart 53DA                               ??_GPSRead 000A  
                             ??_GPSHour 001B                          _next_dir_entry 3464  
                  __size_of_desliga_SPI 000C                       get_fattime@f_time 0021  
                             ??_GPSyear 001B                        ??_sdc_disk_write 002C  
                                ?_delay 0001                  ?_escreve_caractere_lcd 0001  
                                _ADCON1 000FC1                                  ?_fputc 00CC  
                      ___llmod@dividend 0019                                  ?_fputs 00D3  
                    auto_mount@bootsect 0095                                  _INT0IE 007F94  
                                _INT0IF 007F91                           ?_dummy_clocks 0001  
                     __end_of_GPSMinute 527A                       __end_of_GPSSecond 5236  
                                i2l1356 3CD8                                  _PCLATH 000FFA  
                                _INTCON 000FF2                                  _GPSDay 527A  
                                i2l8957 539A                 __size_of_inicializa_SPI 0020  
                        ?_troca_de_tela 0001                                  _TMR0IF 007F92  
                    auto_mount@maxclust 0091                __end_of_recebe_dado_uart 539E  
                                _SPPCFG 000F63                                  _SPPCON 000F65  
                                _SSPBUF 000FC9                __size_of_sdc_disk_status 0010  
                      __end_of_check_fs 473A                    ??_inicializa_tarefas 0019  
                     ?_disparo_gravacao 0001                          trace_path@dptr 00B9  
                        trace_path@path 00A9                  reserve_direntry@sector 00B4  
              __size_of_disk_initialize 0026              __end_of_posicao_cursor_lcd 4B24  
                    ??_disparo_gravacao 0033                          auto_mount@path 0079  
                          ?_move_window 0073                    __end_of_create_chain 3464  
                          _dado_arquivo 02B5                  __size_of_init_hardware 0016  
                        auto_mount@stat 00A0                    __size_of_get_fattime 0156  
                          put_cluster@p 009C            ?_verifica_dados_operacionais 0001  
                  __size_of_get_cluster 0222                                  ___lmul 4B7E  
                             ??___aldiv 0021                    __size_of_disk_status 0030  
                                ___wmul 5186                      __size_of_Longitude 000A  
                             ??___lldiv 0021                                  _f_open 1D14  
                             ??___llmod 0021                               ??___lwdiv 001D  
                                _f_sync 39A4                               ??___lwmod 001D  
                                _buffer 01B8                                  _estado 0040  
                                _memcmp 4480                                  _memcpy 4E7C  
                      __end_of_init_lcd 4350                                  _memset 50E0  
                             ??_f_close 0033                                  _rawFix 01F2  
                                clear_0 4268                                  clear_1 427A  
                                clear_2 4286                                  clear_3 4292  
                                clear_4 429E                               ??_f_lseek 00B4  
                             ??_f_mount 001B                configura_baudrate_uart@x 0060  
                             ??_f_write 00B4                                  _strcat 4E38  
                                _strcmp 4D18                     _sdc_disk_initialize 2046  
                             ??_command 0023                             GPSRead@buff 000A  
                                _strcpy 5086                                  _strlen 5136  
                      put_cluster@clust 0088                                  fputc@c 00D0  
                    get_cluster@fatsect 0093                        __end_of_monta_sd 3F1C  
              __end_of_reserve_direntry 2AF0                        __end_of_validate 4DF2  
                __end_of_next_dir_entry 35C8                               ??_fprintf 00EE  
                          __pdataCOMRAM 0046                                  fputs@n 00D8  
                             ??_isdigit 0019                    __size_of_escalonador 00A6  
                      __end_of_response 53E6                            __mediumconst 60E6  
                       disk_read@sector 006A                         disk_read@result 0070  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                               ??_proceed 001B  
                      _write_timer_zero 540A                                  sync@fs 0031  
             escreve_caractere_lcd@data 001B                          ??_dummy_clocks 0019  
                   _escreve_inteiro_lcd 4FB8                         sdc_disk_write@j 0065  
                            __accesstop 0060                 __end_of__initialization 42A4  
                  ?_sdc_disk_initialize 0001                          disk_write@buff 0068  
                        disk_write@pdrv 006F                    __size_of_escreve_SPI 0010  
                         ___rparam_used 000001                       ??_escreve_cmd_lcd 001B  
                             ?_GPSMonth 0019                          __pcstackCOMRAM 0001  
           __end_of_endereco_cursor_lcd 49F8                            __pidataBANK1 5444  
                          __pidataBANK2 47BC                       ?_mensagem_inicial 0001  
               _configura_baudrate_uart 3D04                           __end_of_delay 5318  
                        _escrita_sdcard 3878                           __end_of_fputc 4F42  
                         __end_of_fputs 46B8                    ?_escreve_inteiro_lcd 002E  
         ??_verifica_dados_operacionais 0019                      ??_mensagem_inicial 001F  
                  __end_of_make_dirfile 3722                            ?_put_cluster 0088  
                     reserve_direntry@c 00BB                       reserve_direntry@n 00B8  
                    _tarefa_em_execucao 003D              __end_ofi2_write_timer_zero 543C  
                       ?_next_dir_entry 009B                  __size_of_sdc_disk_read 0124  
       configura_baudrate_uart@baudrate 0027                    reserve_direntry@dptr 00B9  
                  __size_of_leitura_SPI 000C                           _init_hardware 534E  
                          auto_mount@fs 00A5                      __size_of_disk_read 0070  
                               ??_delay 0019                          sdc_reset@count 0029  
 verifica_fence_externo@fence_diff_long 0060                                 ??_fputc 0033  
                               ??_fputs 00D7                         ??_troca_de_tela 0030  
                     __end_of_Longitude 541E            mensagem_inicial@msg_linha_um 0060  
                            __pbssBANK0 00F6                              __pbssBANK1 0100  
                            __pbssBANK2 027A          __size_of_escreve_frase_ram_lcd 0052  
                               ?_GPSDay 0019           __end_of_escreve_frase_ram_lcd 4C78  
                 ??_sdc_disk_initialize 002C                               ?_Latitude 0019  
             escreve_inteiro_uart@F3215 0273                              ??_GPSMonth 001B  
                __end_of_escrita_sdcard 39A4                      __size_of_sdc_reset 0090  
                    troca_de_tela@state 003C                                 ?___lmul 0019  
                     ??_sdc_disk_status 0019                           make_dirfile@a 0029  
                         make_dirfile@b 0027                           make_dirfile@c 002B  
                         make_dirfile@n 002A                           make_dirfile@t 0028  
                               ?___wmul 0019                   mensagem_inicial@F3640 60E7  
                 mensagem_inicial@F3638 60F8                   ??_escreve_inteiro_lcd 0030  
                               ?_f_open 00C0                                 ?_f_sync 0088  
                     ??_disk_initialize 002D                   __size_of_desliga_uart 000E  
                               ?_memcmp 0019                                 ?_memcpy 0019  
                               ?_memset 0019                          ___lmul@product 0021  
    verifica_fence_externo@temp_var_deg 00D7                                 ?_strcat 0019  
                               ?_strcmp 0001                                 ?_strcpy 0019  
                               ?_strlen 0019                                 i2l12001 248A  
                               i2l12023 2500                                 i2l12015 24D0  
                               i2l12007 24B4                                 i2l12041 2580  
                               i2l12017 24D6                                 i2l12035 2554  
                               i2l12053 25D8                                 i2l12029 252A  
                               i2l12047 25AC                                 i2l12063 25F4  
                               i2l12057 25E0                                 i2l12241 3C82  
                               i2l12225 3C44                                 i2l11363 4D1A  
                               i2l11365 4D22                                 i2l11357 4DF6  
                               i2l12261 3CC4                                 i2l12253 3CA6  
                               i2l12237 3C54                                 i2l12263 3CD0  
                               i2l12249 3C98                                 i2l11961 2396  
                               i2l11953 2370                                 i2l11945 234E  
                               i2l11963 23A0                                 i2l11973 23F2  
                               i2l11949 235E                                 i2l11991 2468  
                               i2l11985 243E                                 i2l11977 2412  
                               i2l11979 2416                                 i2l11999 2484  
                               _INTCON2 000FF1                                 _INTCON3 000FF0  
                        ?_init_hardware 0001                               ?_check_fs 0073  
                            _disk_ioctl 52BC                                 _GPSRead 2346  
                               _GPSHour 51AC                              _disk_write 4CCA  
                               _GPSyear 51F2                          remove_chain@fs 00A6  
  __size_of_verifica_dados_operacionais 0002                                 _SSPCON1 000FC6  
              __size_of_inicializa_uart 0022                                 _SSPSTAT 000FC7  
                            _clust2sect 40B6  verifica_fence_externo@point_index_long 00DC  
                        _inicializa_SPI 529C                         trace_path@clust 00B6  
                       __size_of_GPSDay 0022                              ??_Latitude 001B  
                         ?_remove_chain 00A0                   __size_of_create_chain 018C  
                             ?_init_lcd 0001                      __size_of_stringcpy 0046  
                         _sdc_disk_read 3AC8                            _desliga_uart 53CC  
                            _auto_mount 0C88                                 __Hparam 0000  
             ??_configura_baudrate_uart 002B                                 __Lparam 0000  
                             ?_monta_sd 001D                               ?_validate 001F  
                 escrita_sdcard@fix_gps 00F1                         ?_escrita_sdcard 0001  
                     __end_of_disk_read 498E                           put_cluster@bc 009A  
                             ?_response 0001                           put_cluster@fs 009E  
                               ___aldiv 3FEA                              f_close@res 0093  
                       __size_of___lmul 0056                                 ___lldiv 473A  
                       __size_of___wmul 0026                                 ___llmod 4A60  
                  __size_of_move_window 01AA                              check_fs@fs 0077  
                               ___lwdiv 4BD4                                 ___lwmod 4EC0  
                       __size_of_f_open 0332                         __size_of_f_sync 0124  
                  __end_of_dummy_clocks 4F7E                                 _f_close 510C  
                               __pcinit 420E                         __size_of_memcmp 0092  
                       __size_of_memcpy 0044                         __size_of_memset 002C  
                               _f_lseek 11D0                              _init_ports 5318  
                               __ramtop 0800                                 _f_mount 4D62  
                               __ptext0 50B4                                 __ptext1 4836  
                               __ptext2 42B2                                 __ptext3 534E  
                               __ptext4 5318                                 __ptext5 543C  
                               __ptext6 537A                                 __ptext7 5334  
                               __ptext8 540A                                 __ptext9 53BE  
                               _f_write 06FE                                 _command 4B24  
                             _T0CONbits 000FD5                     auto_mount@totalsect 0099  
                       __size_of_strcat 0044                         __size_of_strcmp 004A  
                       __size_of_strcpy 002E                         __size_of_strlen 002A  
           endereco_cursor_lcd@endereco 001B                                 _fprintf 165A  
                          __size_of_fix 000A                                 _rawDate 01D6  
                               _isdigit 52DC                            __size_of_isr 3CFC  
               ??_escreve_caractere_lcd 001B                              ??_check_fs 0031  
                               _rawTime 01C4                        ___aldiv@dividend 0019  
                          stringcpy@chr 0009                            stringcpy@dir 0005  
                               _time_sd 0037                            _create_chain 32D8  
                               _proceed 53E6                 __size_of_init_interrupt 0012  
                    _point_buff_gps_lat 0033                       __end_of_sdc_reset 45A2  
                __end_of_inicializa_SPI 52BC                              f_lseek@ofs 00B0  
                        __pintcode_body 3BEC                              f_lseek@res 00C4  
                  end_of_initialization 42A4                              f_open@mode 00C4  
                            f_open@path 00C2                          ??_remove_chain 00A2  
                               isr@cont 0018                                 memcmp@n 001D  
                               memcpy@d 0020                                 memcpy@n 001D  
                               memcpy@s 0022                 __size_of_init_oscilador 0008  
                               fputc@bw 00D1                                 itoa@buf 0028  
                               memset@c 001B                                 itoa@val 0029  
                               memset@n 001D                                 memset@p 001F  
                         __Lmediumconst 60E6                              ??_init_lcd 001C  
                               int_func 3BEC                       ?_recebe_dado_uart 0001  
                       disk_status@pdrv 001D                         disk_status@stat 001E  
                        ?_sdc_disk_read 0025                               i2u1421_40 4D56  
                             i2u1581_40 3C34                               _GPSMinute 5258  
                             _GPSSecond 5214                               i2u1582_48 3C36  
                write_timer_zero@timer0 0019                         ___lldiv@divisor 001D  
                         _rawSatellites 01EF                              f_mount@drv 001B  
                    ??_recebe_dado_uart 0001                         ___lldiv@counter 0025  
                            ??_monta_sd 001F             verifica_fence_externo@F3660 0268  
           verifica_fence_externo@F3645 0230             verifica_fence_externo@F3662 025C  
           verifica_fence_externo@F3648 0200                              ??_validate 0023  
                 __size_of_make_dirfile 015A                __size_of_dados_gps_to_sd 003A  
                            ??_response 0019                               _RCSTAbits 000FAB  
              __end_of_write_timer_zero 5414                        ___aldiv@quotient 0023  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                                 utoa@buf 0020  
                               utoa@val 0021                              _wait_ready 4FEE  
                               strcmp@r 0007                                 strlen@s 0019  
                             _PORTBbits 000F81               __size_of_disparo_gravacao 0016  
                             _PORTDbits 000F83                               _PORTEbits 000F84  
                       ??_init_hardware 001B             verifica_fence_externo@count 00DE  
                            _trace_path 260A                      _posicao_cursor_lcd 4AC6  
                     __end_of_stringcpy 4E38             verifica_fence_externo@point 00DF  
                         ??_desliga_SPI 0019                    __size_of_put_cluster 0266  
       __end_of_configura_baudrate_uart 3E10                             ?_disk_ioctl 0019  
                     ?_reserve_direntry 00AE                              f_write@btw 00B1  
                            f_write@res 00C0                               _TRISBbits 000F93  
                           ?_disk_write 0068                               _TRISCbits 000F94  
                             _TRISDbits 000F95                        next_dir_entry@dj 009B  
                       _escreve_cmd_lcd 45A2                      ??_reserve_direntry 00B0  
                   ?_posicao_cursor_lcd 001C                         ?_inicializa_SPI 0001  
                       disk_write@count 006E                             ?_clust2sect 0025  
                      _put_cluster$1528 0092                        _put_cluster$1529 0094  
                            command@CMD 0023                              command@CRC 0022  
                            command@arg 001E                            _make_dirfile 35C8  
                        __end_of_GPSDay 529C                           ??_get_fattime 0060  
                     ??_inicializa_uart 0033             __size_of_inicializa_tarefas 0068  
                            ?_GPSMinute 0019                              ?_GPSSecond 0019  
                         ??_get_cluster 0088                           ??_disk_status 001B  
                           ?_auto_mount 0079                       _make_dirfile$1638 0025  
                       command@argument 0024                    ??_posicao_cursor_lcd 001D  
                     __size_of_GPSMonth 0022                          __end_of___lmul 4BD4  
                      ??_next_dir_entry 009C                          __end_of___wmul 51AC  
                        __end_of_f_open 2046                           __pidataCOMRAM 544E  
                         ??_escalonador 00F3                             ?_init_ports 0001  
                        __end_of_f_sync 3AC8                          __end_of_memcmp 4512  
                        __end_of_memcpy 4EC0                          __end_of_memset 510C  
                        __end_of_strcat 4E7C                          __end_of_strcmp 4D62  
                        __end_of_strcpy 50B4                          __end_of_strlen 5160  
                      _time_atualizacao 0035                     start_initialization 420E  
                           __end_of_fix 5432                             __end_of_isr 3D04  
             __size_of_mensagem_inicial 0076                      reserve_direntry@dj 00AE  
                    reserve_direntry@fs 00BE                     __end_of_desliga_SPI 540A  
                         ??_escreve_SPI 0019                ??_verifica_fence_externo 0026  
                              ??_GPSDay 001B                         _sdc_disk_status 539E  
                       ??_sdc_disk_read 002C                       auto_mount@fatsize 00A1  
                    i2_write_timer_zero 5432                         ___llmod@divisor 001D  
                             _Longitude 5414                         _disk_initialize 5160  
                       ___llmod@counter 0021                       __size_of_Latitude 000A  
                 reserve_direntry@clust 00BC                 __size_of_sdc_disk_write 01B6  
                      _data_uart_recebe 003F                       wait_ready@timeout 0019  
                 __size_of_dummy_clocks 003C                           auto_mount@fmt 009F  
                   __size_of_disk_ioctl 0020                     ?i2_write_timer_zero 0001  
                   __size_of_disk_write 004E                                ??___lmul 0021  
                            fprintf@fil 00DA                              fprintf@arp 031C  
                              ??___wmul 001D                              fprintf@res 0310  
                            fprintf@val 0318                              fprintf@str 00DC  
                   __end_of_get_fattime 3878                                ??_f_open 00C5  
                              ??_f_sync 0033                             ?_wait_ready 0001  
                           __pdataBANK1 01F4                             __pdataBANK2 0200  
                   __end_of_get_cluster 2F78                                ??_memcmp 001F  
                   __end_of_disk_status 5086                                ??_memcpy 001F  
                   __size_of_clust2sect 00B2                                ??_memset 001F  
                sdc_disk_read@start_add 0061                    __end_of_remove_chain 43EC  
                     ??_dados_gps_to_sd 0022                 sdc_disk_initialize@buff 006B  
                         ??_leitura_SPI 0019                 __end_of_escreve_cmd_lcd 462E  
                              ??_strcat 001D                                ??_strcmp 0005  
                              ??_strcpy 001D                                ??_strlen 001B  
               sdc_disk_initialize@stat 0062                             ?_trace_path 00A7  
                          _fprintf$2131 0312            __size_of_endereco_cursor_lcd 006A  
                           __pbssBIGRAM 0322                           monta_sd@index 001F  
                           __pbssCOMRAM 0033                         _trace_path$1685 00B0  
                       _trace_path$1687 00B2                                ?_GPSRead 0001  
                              ?_GPSHour 0019                           __pcstackBANK0 0060  
                         __pcstackBANK3 0300                          _init_interrupt 537A  
                   __size_of_auto_mount 0548                    ??i2_write_timer_zero 0003  
                   __end_of_escalonador 420E             __end_of_sdc_disk_initialize 2346  
                              ?_GPSyear 0019                       __size_of_check_fs 0082  
                          _isdigit$3080 001A                            check_fs@sect 0073  
                           _char_number 0045                            _dummy_clocks 4F42  
                        _init_oscilador 543C                   __end_of_troca_de_tela 1D14  
                              GPSRead@c 000B                        ??_escrita_sdcard 00F0  
                   __size_of_init_ports 001C                              ?_Longitude 0019  
                 _escreve_frase_ram_lcd 4C26                             ??_GPSMinute 001B  
                           ??_GPSSecond 001B                               _data_buff 011E  
                             _data_hoje 0041             __end_of_escreve_inteiro_lcd 4FEE  
                   __end_of_escreve_SPI 53BE                       __size_of_init_lcd 009E  
                      ___lwdiv@dividend 0019                       delay@contador_int 001A  
                     delay@contador_ext 0019     __end_of_verifica_dados_operacionais 544E  
           _verifica_dados_operacionais 544C                               __pintcode 0008  
                         __pmediumconst 60E6     verifica_fence_externo@temp_buff_lat 00C8  
                              ?___aldiv 0019                               __ptext100 538C  
                             __ptext101 2346                               __ptext102 4DF2  
                             __ptext103 4D18                               __ptext104 0000  
                     __size_of_monta_sd 010C                                ?___lldiv 0019  
                              ?___llmod 0019                       __size_of_validate 0048  
                              ?___lwdiv 0019                                ?___lwmod 0019  
                     __size_of_response 000C                                ?_f_close 0091  
                             _disk_read 491E                      _sinaliza_int_timer 003E  
                              ?_f_lseek 00AE                                ?_f_mount 0019  
                      _disparo_gravacao 5364                                ?_f_write 00AE  
                              ?_command 001E   verifica_fence_externo@point_index_lat 00DB  
                __end_of_init_interrupt 538C                                ?_fprintf 00DA  
                              ?_isdigit 0001                             _desliga_SPI 53FE  
                   sdc_disk_read@p_buff 0025                 troca_de_tela@last_state 003B  
                   sdc_disk_read@length 0065                     sdc_disk_read@sector 0027  
               __end_of_sdc_disk_status 53AE          __size_of_escreve_caractere_lcd 0072  
         __end_of_escreve_caractere_lcd 491E                                ?_proceed 0001  
                             f_close@fp 0091                     __end_of_leitura_SPI 53FE  
                      ___lwdiv@quotient 001E                          __size_of_delay 001E  
               __end_of_disk_initialize 5186                  __end_of_init_oscilador 5444  
                        __size_of_fputc 0040                          __size_of_fputs 008A  
                   make_dirfile@dirname 0022                              validate@id 0021  
                            validate@fs 001F                               _p_tarefas 0110  
                             _rawCourse 01DD         __size_of_verifica_fence_externo 06EC  
                      make_dirfile@path 0021                                _GPGGA_ok 011C  
                             _sdc_reset 4512                     __size_of_wait_ready 0036  
                       ___aldiv@divisor 001D                         ___aldiv@counter 0021  
                        ___wmul@product 001D                                _LATBbits 000F8A  
                             f_lseek@fp 00AE                                _LATCbits 000F8B  
                              _GPRMC_ok 00FB                               f_open@dir 00DC  
                             f_open@res 00DB                                _PIE1bits 000F9D  
                           _get_fattime 3722                            _rawLongitude 02D8  
                   __size_of_trace_path 0278                             _get_cluster 2D56  
                              _GPSMonth 5236                             _disk_status 5056  
                         ??_move_window 0077                               f_mount@fs 0019  
                              _PIR1bits 000F9E                           move_window@fs 0086  
                     ?_write_timer_zero 0019                         remove_chain@nxt 00A4  
                             f_sync@dir 008F                               f_sync@res 008E  
                             f_sync@tim 008A                posicao_cursor_lcd@coluna 001C  
                            ?_disk_read 0068                      ??_write_timer_zero 001B  
                             f_write@cc 00C6              posicao_cursor_lcd@endereco 001E  
                             f_write@bw 00B3                               f_write@fp 00AE  
             __size_of_recebe_dado_uart 0012                             _escalonador 4168  
                     ___wmul@multiplier 0019                        ?_escreve_cmd_lcd 0001  
           escreve_frase_ram_lcd@buffer 001C                        ??_inicializa_SPI 0019  
                       ?_init_interrupt 0001                            ??_disk_ioctl 001C  
                          ??_disk_write 0030                            f_lseek@clust 00CD  
                       _inicializa_uart 51D0                            f_lseek@csize 00C9  
                          f_lseek@ifptr 00C5                               _stringcpy 4DF2  
                      __size_of_GPSRead 02C4                        _mensagem_inicial 4836  
                      __size_of_GPSHour 0024                         ?_init_oscilador 0001  
                          ??_clust2sect 0029                        __size_of_GPSyear 0022  
                     ___lmul@multiplier 0019                               copy_data0 4222  
                             copy_data1 4242                             _escreve_SPI 53AE  
                            ?_sdc_reset 0001                     sdc_reset@count_nosd 0027  
                              _Latitude 541E                ?_configura_baudrate_uart 0027  
                ?_escreve_frase_ram_lcd 001C                             ??_Longitude 001B  
                      auto_mount@chk_wp 007A                       move_window@sector 0073  
                        _sdc_disk_write 2F78               __size_of_reserve_direntry 026E  
              escreve_inteiro_lcd@F3223 01F4                            ??_auto_mount 007B  
                              __Hrparam 0000                               memcpy@tmp 001F  
                              __Lrparam 0000                               fprintf@cc 031D  
                    __end_of_disk_ioctl 52DC                   __size_of_remove_chain 009C  
                        put_cluster@val 008A                        get_cluster@clust 0031  
                    __end_of_disk_write 4D18                 verifica_fence_externo@i 00E0  
               verifica_fence_externo@j 00DD                            _SentenceType 0044  
                      __size_of___aldiv 00CC                  sdc_disk_initialize@ocr 0068  
                          monta_sd@dado 001D                  _verifica_fence_externo 0012  
                      __size_of___lldiv 0082                        __size_of___llmod 0066  
                         ??_put_cluster 008C                        __size_of___lwdiv 0052  
                          monta_sd@size 0020                        __size_of___lwmod 0042  
                          ??_init_ports 0019                     __end_of_move_window 32D8  
                    __end_of_clust2sect 4168                escreve_inteiro_lcd@valor 002E  
                      __size_of_f_close 002A                escreve_inteiro_lcd@texto 0060  
                      __size_of_f_lseek 048A                        __size_of_f_mount 0048  
                           _leitura_SPI 53F2                        __size_of_f_write 058A  
                      __size_of_command 005A                   __end_of_init_hardware 5364  
                              _check_fs 46B8                              strcat@from 001B  
                      __size_of_fprintf 037E                        __size_of_isdigit 001E  
                       ___lwdiv@divisor 001B                        ?_sdc_disk_status 0001  
                            ?_stringcpy 0001                         ___lwdiv@counter 001D  
                    __end_of_auto_mount 11D0                                __ptext10 49F8  
                              __ptext11 4168                                __ptext20 43EC  
                              __ptext12 19D8                                __ptext21 4EC0  
                              __ptext13 5364                                __ptext30 3D04  
                              __ptext22 4BD4                                __ptext14 544C  
                              __ptext31 3FEA                                __ptext23 45A2  
                              __ptext15 0012                                __ptext40 260A  
                              __ptext32 529C                                __ptext24 5414  
                              __ptext16 3F1C                                __ptext41 35C8  
                              __ptext33 165A                                __ptext25 541E  
                              __ptext17 52DC                                __ptext50 2046  
                              __ptext42 2882                                __ptext34 462E  
                              __ptext26 3878                                __ptext18 4FB8  
                              __ptext51 4512                                __ptext43 3464  
                              __ptext35 4F02                                __ptext27 5086  
                              __ptext19 5024                                __ptext60 4D62  
                              __ptext52 4AC6                                __ptext44 40B6  
                              __ptext36 06FE                                __ptext28 4E38  
                              __ptext61 11D0                                __ptext53 498E  
                              __ptext45 4350                                __ptext37 4A60  
                              __ptext29 51D0                                __ptext70 5056  
                              __ptext62 32D8                                __ptext54 4C26  
                              __ptext46 4E7C                                __ptext38 5428  
                              __ptext71 539E                                __ptext63 2AF0  
                              __ptext55 48AC                                __ptext47 0C88  
                              __ptext39 1D14                                __ptext80 4B24  
                              __ptext72 4C78                                __ptext64 2D56  
                              __ptext56 52FA                                __ptext48 50E0  
                              __ptext81 4FEE                                __ptext73 312E  
                              __ptext65 5186                                __ptext57 46B8  
                              __ptext49 5160                                __ptext90 5258  
                              __ptext82 53AE                                __ptext74 4CCA  
                              __ptext66 473A                                __ptext58 4480  
                              __ptext91 51AC                                __ptext83 4F42  
                              __ptext75 2F78                                __ptext67 510C  
                              __ptext59 4B7E                                __ptext92 527A  
                              __ptext84 53F2                                __ptext76 491E  
                              __ptext68 39A4                                __ptext93 53CC  
                              __ptext85 52BC                                __ptext77 3AC8  
                              __ptext69 4DAA                                __ptext94 53FE  
                              __ptext86 3722                                __ptext78 53DA  
                              __ptext95 4F7E                                __ptext87 51F2  
                              __ptext79 53E6                                __ptext96 3E10  
                              __ptext88 5214                                __ptext97 5136  
                              __ptext89 5236                                __ptext99 5432  
                      __size_of_proceed 000C                                _filename 02C9  
                           _rawAltitude 01CF                        ?_disk_initialize 0001  
                        _timeout_tarefa 0118                      sdc_disk_read@count 002B  
                            strcpy@from 001B                     escrita_sdcard@f_fix 00FD  
            __end_of_inicializa_tarefas 4A60                i2write_timer_zero@timer0 0001  
                __end_of_sdc_disk_write 312E                               monta_sd@i 0021  
                           _rawLatitude 02E5                                _init_lcd 42B2  
                         __size_of_atoi 00CE                           __size_of_main 002C  
                          _remove_chain 4350                           __size_of_itoa 0032  
                         __size_of_utoa 0094                           __size_of_sync 0052  
  verifica_fence_externo@fence_diff_lat 0090                     _endereco_cursor_lcd 498E  
                    __end_of_init_ports 5334                                _rawSpeed 01E3  
                         dummy_clocks@i 001C                                f_open@dj 00DE  
                         dummy_clocks@n 001B                                f_open@fn 00C9  
                              f_open@fp 00C0                                f_open@dw 00D7  
                              f_open@rs 00D5                         _dados_gps_to_sd 4F7E  
                              _monta_sd 3E10                                _validate 4DAA  
                              _sentence 01E9                            move_window@n 0081  
                         stringcpy@str1 0001                           stringcpy@str2 0003  
                              _response 53DA                                f_sync@fp 0088  
                   _point_buff_gps_long 00F9             __size_of_posicao_cursor_lcd 005E  
                              int$flags 0047                 posicao_cursor_lcd@linha 001D  
                              atoi@sign 0023                            ??_wait_ready 0019  
                           ??_disk_read 0030                 __end_of_inicializa_uart 51F2  
                          ??_trace_path 00AC                    ?_endereco_cursor_lcd 0001  
                    put_cluster@fatsect 0096                              _INTCONbits 000FF2  
                              memcmp@s1 0019                                memcmp@s2 001B  
                      move_window@wsect 0082                                memcpy@d1 0019  
                              memcpy@s1 001B                     __end_of_put_cluster 2D56  
                              fprintf@c 0321                                fprintf@f 0316  
                              fprintf@i 031F                                fprintf@r 0317  
                              fprintf@s 0300                                fprintf@w 0314  
                              fputc@chr 00CC                                itoa@base 002B  
                              fputc@fil 00CE                                isdigit@c 001B  
                              memset@p1 0019                       _config_timer_dois 53BE  
                          _tempo_backup 0108                                fputs@fil 00D5  
                              fputs@str 00D3                       _config_timer_zero 5334  
                          _poligono_ext 0120                           wait_ready@res 001D  
                              intlevel2 0000                      ?_config_timer_dois 0001  
              mensagem_inicial@msg_dois 0071                             ??_sdc_reset 0025  
                    ?_config_timer_zero 0001                            _tempo_tarefa 0100  
                       ?_sdc_disk_write 0025                        ___lwmod@dividend 0019  
                    __end_of_wait_ready 5024                __end_of_disparo_gravacao 537A  
                      ___lldiv@dividend 0019                       sdc_disk_read@buff 0067  
                 __end_of_sdc_disk_read 3BEC                     sdc_disk_status@pdrv 001A  
                         ?_desliga_uart 0001                     ??_config_timer_dois 0019  
                            _OSCCONbits 000FD3                      __end_of_trace_path 2882  
                   ??_config_timer_zero 001B                             _move_window 312E  
  verifica_fence_externo@temp_buff_long 00BC                    sdc_disk_write@count1 0062  
                  sdc_disk_write@p_buff 0025                        _recebe_dado_uart 538C  
                              utoa@base 0023                    sdc_disk_write@sector 0027  
                 ??_endereco_cursor_lcd 001B                            response@buff 0019  
                              strcat@cp 001D                                strcat@to 0019  
                              strcmp@s1 0001                                strcmp@s2 0003  
                          ?_desliga_SPI 0001                        ___lldiv@quotient 0021  
                       ___lwmod@divisor 001B                                strcpy@cp 001D  
                              strlen@cp 001B                                strcpy@to 0019  
                       ___lwmod@counter 001D                       remove_chain@clust 00A0  
             __end_of_config_timer_dois 53CC                            ___aldiv@sign 0022  
                         ?_create_chain 00A0               __end_of_config_timer_zero 534E  
                           ??_stringcpy 0007             __size_ofi2_write_timer_zero 000A  
                           _SSPCON1bits 000FC6                 __size_of_next_dir_entry 0164  
                escreve_cmd_lcd@comando 001B                     sdc_disk_write@count 002B  
         sdc_disk_initialize@crc_number 0065                 __end_of_dados_gps_to_sd 4FB8  
                    sdc_disk_write@buff 0067            __size_of_sdc_disk_initialize 0300  
                          f_write@clust 00C8                          ??_desliga_uart 0019  
                    leitura_sdcard@size 0046                            f_write@wbuff 00C1  
                          ?_get_fattime 001D                        _reserve_direntry 2882  
                           f_write@buff 00B0                       sdc_disk_write@res 0064  
                          ?_get_cluster 0031                             f_write@sect 00C2  
                           f_write@wcnt 00CA                            ?_disk_status 0001  
         __end_ofmensagem_inicial@F3640 60F8           __end_ofmensagem_inicial@F3638 6109  
                       escreve_SPI@dado 001A  
