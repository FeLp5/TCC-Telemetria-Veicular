

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Jun 19 14:20:30 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   154                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   155                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   162                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   163                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   164                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   165  0000                     
   166                           ; Version 2.30
   167                           ; Generated 26/08/2020 GMT
   168                           ; 
   169                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution. Publication is not required when
   183                           ;        this file is used in an embedded application.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F4550 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202                           	psect	idataBANK0
   203  005C6C                     __pidataBANK0:
   204                           	callstack 0
   205                           
   206                           ;initializer for leitura_sdcard@size
   207  005C6C  58                 	db	88
   208                           
   209                           	psect	idataBANK1
   210  005BCA                     __pidataBANK1:
   211                           	callstack 0
   212                           
   213                           ;initializer for escreve_inteiro_uart@F3215
   214  005BCA  30                 	db	48
   215  005BCB  30                 	db	48
   216  005BCC  30                 	db	48
   217  005BCD  30                 	db	48
   218  005BCE  30                 	db	48
   219  005BCF  30                 	db	48
   220  005BD0  00                 	db	0
   221                           
   222                           ;initializer for escreve_inteiro_lcd@F3223
   223  005BD1  30                 	db	48
   224  005BD2  30                 	db	48
   225  005BD3  30                 	db	48
   226  005BD4  30                 	db	48
   227  005BD5  30                 	db	48
   228  005BD6  30                 	db	48
   229  005BD7  00                 	db	0
   230                           
   231                           	psect	idataBANK2
   232  004D1C                     __pidataBANK2:
   233                           	callstack 0
   234                           
   235                           ;initializer for _dados_long
   236  004D1C  30                 	db	48
   237  004D1D  30                 	db	48
   238  004D1E  30                 	db	48
   239  004D1F  30                 	db	48
   240  004D20  30                 	db	48
   241  004D21  30                 	db	48
   242  004D22  30                 	db	48
   243  004D23  30                 	db	48
   244  004D24  30                 	db	48
   245  004D25  30                 	db	48
   246  004D26  30                 	db	48
   247  004D27  30                 	db	48
   248  004D28  30                 	db	48
   249  004D29  30                 	db	48
   250  004D2A  30                 	db	48
   251  004D2B  30                 	db	48
   252  004D2C  30                 	db	48
   253  004D2D  30                 	db	48
   254  004D2E  30                 	db	48
   255  004D2F  30                 	db	48
   256  004D30  30                 	db	48
   257  004D31  30                 	db	48
   258  004D32  30                 	db	48
   259  004D33  30                 	db	48
   260  004D34  30                 	db	48
   261  004D35  30                 	db	48
   262  004D36  30                 	db	48
   263  004D37  30                 	db	48
   264  004D38  30                 	db	48
   265  004D39  30                 	db	48
   266  004D3A  30                 	db	48
   267  004D3B  30                 	db	48
   268  004D3C  30                 	db	48
   269  004D3D  30                 	db	48
   270  004D3E  30                 	db	48
   271  004D3F  30                 	db	48
   272                           
   273                           ;initializer for _dados_lat
   274  004D40  30                 	db	48
   275  004D41  30                 	db	48
   276  004D42  30                 	db	48
   277  004D43  30                 	db	48
   278  004D44  30                 	db	48
   279  004D45  30                 	db	48
   280  004D46  30                 	db	48
   281  004D47  30                 	db	48
   282  004D48  30                 	db	48
   283  004D49  30                 	db	48
   284  004D4A  00                 	db	0
   285  004D4B  30                 	db	48
   286  004D4C  30                 	db	48
   287  004D4D  30                 	db	48
   288  004D4E  30                 	db	48
   289  004D4F  30                 	db	48
   290  004D50  30                 	db	48
   291  004D51  30                 	db	48
   292  004D52  30                 	db	48
   293  004D53  30                 	db	48
   294  004D54  30                 	db	48
   295  004D55  00                 	db	0
   296  004D56  30                 	db	48
   297  004D57  30                 	db	48
   298  004D58  30                 	db	48
   299  004D59  30                 	db	48
   300  004D5A  30                 	db	48
   301  004D5B  30                 	db	48
   302  004D5C  30                 	db	48
   303  004D5D  30                 	db	48
   304  004D5E  30                 	db	48
   305  004D5F  30                 	db	48
   306  004D60  00                 	db	0
   307                           
   308                           ;initializer for _dados_data
   309  004D61  30                 	db	48
   310  004D62  30                 	db	48
   311  004D63  30                 	db	48
   312  004D64  30                 	db	48
   313  004D65  30                 	db	48
   314  004D66  30                 	db	48
   315  004D67  30                 	db	48
   316  004D68  30                 	db	48
   317  004D69  30                 	db	48
   318  004D6A  30                 	db	48
   319  004D6B  30                 	db	48
   320  004D6C  30                 	db	48
   321  004D6D  30                 	db	48
   322  004D6E  30                 	db	48
   323  004D6F  30                 	db	48
   324  004D70  30                 	db	48
   325  004D71  30                 	db	48
   326  004D72  30                 	db	48
   327                           
   328                           ;initializer for _dados_hora
   329  004D73  30                 	db	48
   330  004D74  30                 	db	48
   331  004D75  30                 	db	48
   332  004D76  30                 	db	48
   333  004D77  30                 	db	48
   334  004D78  30                 	db	48
   335  004D79  30                 	db	48
   336  004D7A  30                 	db	48
   337  004D7B  30                 	db	48
   338  004D7C  30                 	db	48
   339  004D7D  30                 	db	48
   340  004D7E  30                 	db	48
   341  004D7F  30                 	db	48
   342  004D80  30                 	db	48
   343  004D81  30                 	db	48
   344  004D82  30                 	db	48
   345  004D83  30                 	db	48
   346  004D84  30                 	db	48
   347                           
   348                           	psect	mediumconst
   349  006100                     __pmediumconst:
   350                           	callstack 0
   351  006100  00                 	db	0
   352  006101                     mensagem_inicial@F3679:
   353                           	callstack 0
   354  006101  54                 	db	84
   355  006102  43                 	db	67
   356  006103  43                 	db	67
   357  006104  2D                 	db	45
   358  006105  2D                 	db	45
   359  006106  54                 	db	84
   360  006107  45                 	db	69
   361  006108  4C                 	db	76
   362  006109  45                 	db	69
   363  00610A  4D                 	db	77
   364  00610B  54                 	db	84
   365  00610C  52                 	db	82
   366  00610D  49                 	db	73
   367  00610E  41                 	db	65
   368  00610F  00                 	db	0
   369  006110  00                 	db	0
   370  006111  00                 	db	0
   371  006112                     __end_ofmensagem_inicial@F3679:
   372                           	callstack 0
   373  006112                     mensagem_inicial@F3677:
   374                           	callstack 0
   375  006112  46                 	db	70
   376  006113  41                 	db	65
   377  006114  54                 	db	84
   378  006115  45                 	db	69
   379  006116  43                 	db	67
   380  006117  20                 	db	32
   381  006118  53                 	db	83
   382  006119  54                 	db	84
   383  00611A  20                 	db	32
   384  00611B  41                 	db	65
   385  00611C  4E                 	db	78
   386  00611D  44                 	db	68
   387  00611E  52                 	db	82
   388  00611F  45                 	db	69
   389  006120  00                 	db	0
   390  006121  00                 	db	0
   391  006122  00                 	db	0
   392  006123                     __end_ofmensagem_inicial@F3677:
   393                           	callstack 0
   394  006123                     _fence_diff_long:
   395                           	callstack 0
   396  006123  2D                 	db	45
   397  006124  30                 	db	48
   398  006125  34                 	db	52
   399  006126  36                 	db	54
   400  006127  33                 	db	51
   401  006128  33                 	db	51
   402  006129  39                 	db	57
   403  00612A  34                 	db	52
   404  00612B  30                 	db	48
   405  00612C  35                 	db	53
   406  00612D  30                 	db	48
   407  00612E  2D                 	db	45
   408  00612F  30                 	db	48
   409  006130  34                 	db	52
   410  006131  36                 	db	54
   411  006132  32                 	db	50
   412  006133  39                 	db	57
   413  006134  34                 	db	52
   414  006135  31                 	db	49
   415  006136  34                 	db	52
   416  006137  37                 	db	55
   417  006138  34                 	db	52
   418  006139  2D                 	db	45
   419  00613A  30                 	db	48
   420  00613B  34                 	db	52
   421  00613C  36                 	db	54
   422  00613D  32                 	db	50
   423  00613E  39                 	db	57
   424  00613F  34                 	db	52
   425  006140  31                 	db	49
   426  006141  34                 	db	52
   427  006142  37                 	db	55
   428  006143  34                 	db	52
   429  006144  2D                 	db	45
   430  006145  30                 	db	48
   431  006146  34                 	db	52
   432  006147  36                 	db	54
   433  006148  33                 	db	51
   434  006149  33                 	db	51
   435  00614A  39                 	db	57
   436  00614B  34                 	db	52
   437  00614C  30                 	db	48
   438  00614D  35                 	db	53
   439  00614E  30                 	db	48
   440  00614F                     __end_of_fence_diff_long:
   441                           	callstack 0
   442  00614F                     _fence_diff_lat:
   443                           	callstack 0
   444  00614F  2D                 	db	45
   445  006150  32                 	db	50
   446  006151  33                 	db	51
   447  006152  33                 	db	51
   448  006153  36                 	db	54
   449  006154  34                 	db	52
   450  006155  36                 	db	54
   451  006156  36                 	db	54
   452  006157  35                 	db	53
   453  006158  33                 	db	51
   454  006159  2D                 	db	45
   455  00615A  32                 	db	50
   456  00615B  33                 	db	51
   457  00615C  33                 	db	51
   458  00615D  36                 	db	54
   459  00615E  34                 	db	52
   460  00615F  36                 	db	54
   461  006160  36                 	db	54
   462  006161  35                 	db	53
   463  006162  33                 	db	51
   464  006163  2D                 	db	45
   465  006164  32                 	db	50
   466  006165  33                 	db	51
   467  006166  34                 	db	52
   468  006167  31                 	db	49
   469  006168  38                 	db	56
   470  006169  39                 	db	57
   471  00616A  35                 	db	53
   472  00616B  37                 	db	55
   473  00616C  33                 	db	51
   474  00616D  2D                 	db	45
   475  00616E  32                 	db	50
   476  00616F  33                 	db	51
   477  006170  34                 	db	52
   478  006171  31                 	db	49
   479  006172  38                 	db	56
   480  006173  39                 	db	57
   481  006174  35                 	db	53
   482  006175  37                 	db	55
   483  006176  33                 	db	51
   484  006177                     __end_of_fence_diff_lat:
   485                           	callstack 0
   486  0000                     _TMR0	set	4054
   487  0000                     _PORTEbits	set	3972
   488  0000                     _PCL	set	4089
   489  0000                     _PCLATH	set	4090
   490  0000                     _PIE1bits	set	3997
   491  0000                     _RCSTA	set	4011
   492  0000                     _TXSTA	set	4012
   493  0000                     _RCREG	set	4014
   494  0000                     _RCSTAbits	set	4011
   495  0000                     _SPBRG	set	4015
   496  0000                     _PIR1bits	set	3998
   497  0000                     _SSPBUF	set	4041
   498  0000                     _SSPCON1bits	set	4038
   499  0000                     _SSPSTATbits	set	4039
   500  0000                     _SSPCON1	set	4038
   501  0000                     _SSPSTAT	set	4039
   502  0000                     _TRISCbits	set	3988
   503  0000                     _TRISBbits	set	3987
   504  0000                     _PORTBbits	set	3969
   505  0000                     _PR2	set	4043
   506  0000                     _TMR2	set	4044
   507  0000                     _T2CON	set	4042
   508  0000                     _OSCCONbits	set	4051
   509  0000                     _TRISE	set	3990
   510  0000                     _TRISC	set	3988
   511  0000                     _TRISA	set	3986
   512  0000                     _TRISD	set	3989
   513  0000                     _LATB	set	3978
   514  0000                     _TRISB	set	3987
   515  0000                     _ADCON1	set	4033
   516  0000                     _T0CONbits	set	4053
   517  0000                     _INTCONbits	set	4082
   518  0000                     _PIE1	set	3997
   519  0000                     _INTCON3	set	4080
   520  0000                     _INTCON2	set	4081
   521  0000                     _INTCON	set	4082
   522  0000                     _SPPCFG	set	3939
   523  0000                     _SPPCON	set	3941
   524  0000                     _T0CON	set	4053
   525  0000                     _PORTDbits	set	3971
   526  0000                     _TRISDbits	set	3989
   527  0000                     _LATBbits	set	3978
   528  0000                     _LATCbits	set	3979
   529  0000                     _INT0IE	set	32660
   530  0000                     _INT0IF	set	32657
   531  0000                     _T0IF	set	32658
   532  0000                     _TMR0IF	set	32658
   533  0000                     _RCIF	set	31989
   534  0000                     _TXEN	set	32101
   535  0000                     _CREN	set	32092
   536  0000                     _SPEN	set	32095
   537  0000                     _SYNC	set	32100
   538  0000                     _BRGH	set	32098
   539  006177  6F                 	db	111	;'o'
   540  006178  20                 	db	32
   541  006179  53                 	db	83	;'S'
   542  00617A  69                 	db	105	;'i'
   543  00617B  73                 	db	115	;'s'
   544  00617C  74                 	db	116	;'t'
   545  00617D  65                 	db	101	;'e'
   546  00617E  6D                 	db	109	;'m'
   547  00617F  61                 	db	97	;'a'
   548  006180  20                 	db	32
   549  006181  64                 	db	100	;'d'
   550  006182  65                 	db	101	;'e'
   551  006183  20                 	db	32
   552  006184  61                 	db	97	;'a'
   553  006185  72                 	db	114	;'r'
   554  006186  71                 	db	113	;'q'
   555  006187  75                 	db	117	;'u'
   556  006188  69                 	db	105	;'i'
   557  006189  76                 	db	118	;'v'
   558  00618A  6F                 	db	111	;'o'
   559  00618B  00                 	db	0
   560  00618C                     STR_2:
   561  00618C  49                 	db	73	;'I'
   562  00618D  6E                 	db	110	;'n'
   563  00618E  73                 	db	115	;'s'
   564  00618F  69                 	db	105	;'i'
   565  006190  72                 	db	114	;'r'
   566  006191  61                 	db	97	;'a'
   567  006192  20                 	db	32
   568  006193  6F                 	db	111	;'o'
   569  006194  20                 	db	32
   570  006195  43                 	db	67	;'C'
   571  006196  61                 	db	97	;'a'
   572  006197  72                 	db	114	;'r'
   573  006198  74                 	db	116	;'t'
   574  006199  61                 	db	97	;'a'
   575  00619A  6F                 	db	111	;'o'
   576  00619B  00                 	db	0
   577  00619C                     STR_12:
   578  00619C  76                 	db	118	;'v'
   579  00619D  25                 	db	37
   580  00619E  73                 	db	115	;'s'
   581  00619F  3B                 	db	59	;';'
   582  0061A0  6C                 	db	108	;'l'
   583  0061A1  74                 	db	116	;'t'
   584  0061A2  25                 	db	37
   585  0061A3  73                 	db	115	;'s'
   586  0061A4  3B                 	db	59	;';'
   587  0061A5  6C                 	db	108	;'l'
   588  0061A6  6F                 	db	111	;'o'
   589  0061A7  25                 	db	37
   590  0061A8  73                 	db	115	;'s'
   591  0061A9  3B                 	db	59	;';'
   592  0061AA  00                 	db	0
   593  0061AB  45                 	db	69	;'E'
   594  0061AC  72                 	db	114	;'r'
   595  0061AD  72                 	db	114	;'r'
   596  0061AE  6F                 	db	111	;'o'
   597  0061AF  20                 	db	32
   598  0061B0  61                 	db	97	;'a'
   599  0061B1  6F                 	db	111	;'o'
   600  0061B2  20                 	db	32
   601  0061B3  6D                 	db	109	;'m'
   602  0061B4  6F                 	db	111	;'o'
   603  0061B5  6E                 	db	110	;'n'
   604  0061B6  74                 	db	116	;'t'
   605  0061B7  61                 	db	97	;'a'
   606  0061B8  72                 	db	114	;'r'
   607  0061B9  00                 	db	0
   608  0061BA  45                 	db	69	;'E'
   609  0061BB  72                 	db	114	;'r'
   610  0061BC  72                 	db	114	;'r'
   611  0061BD  6F                 	db	111	;'o'
   612  0061BE  20                 	db	32
   613  0061BF  61                 	db	97	;'a'
   614  0061C0  6F                 	db	111	;'o'
   615  0061C1  20                 	db	32
   616  0061C2  63                 	db	99	;'c'
   617  0061C3  72                 	db	114	;'r'
   618  0061C4  69                 	db	105	;'i'
   619  0061C5  61                 	db	97	;'a'
   620  0061C6  72                 	db	114	;'r'
   621  0061C7  00                 	db	0
   622  0061C8  65                 	db	101	;'e'
   623  0061C9  78                 	db	120	;'x'
   624  0061CA  74                 	db	116	;'t'
   625  0061CB  66                 	db	102	;'f'
   626  0061CC  65                 	db	101	;'e'
   627  0061CD  6E                 	db	110	;'n'
   628  0061CE  63                 	db	99	;'c'
   629  0061CF  65                 	db	101	;'e'
   630  0061D0  2E                 	db	46
   631  0061D1  74                 	db	116	;'t'
   632  0061D2  78                 	db	120	;'x'
   633  0061D3  74                 	db	116	;'t'
   634  0061D4  00                 	db	0
   635  0061D5                     STR_19:
   636  0061D5  41                 	db	65	;'A'
   637  0061D6  47                 	db	71	;'G'
   638  0061D7  55                 	db	85	;'U'
   639  0061D8  41                 	db	65	;'A'
   640  0061D9  52                 	db	82	;'R'
   641  0061DA  44                 	db	68	;'D'
   642  0061DB  45                 	db	69	;'E'
   643  0061DC  2E                 	db	46
   644  0061DD  2E                 	db	46
   645  0061DE  2E                 	db	46
   646  0061DF  00                 	db	0
   647  0061E0                     STR_4:
   648  0061E0  4D                 	db	77	;'M'
   649  0061E1  4D                 	db	77	;'M'
   650  0061E2  43                 	db	67	;'C'
   651  0061E3  20                 	db	32
   652  0061E4  56                 	db	86	;'V'
   653  0061E5  65                 	db	101	;'e'
   654  0061E6  72                 	db	114	;'r'
   655  0061E7  2E                 	db	46
   656  0061E8  20                 	db	32
   657  0061E9  33                 	db	51	;'3'
   658  0061EA  00                 	db	0
   659  0061EB                     STR_1:
   660  0061EB  53                 	db	83	;'S'
   661  0061EC  65                 	db	101	;'e'
   662  0061ED  6D                 	db	109	;'m'
   663  0061EE  20                 	db	32
   664  0061EF  43                 	db	67	;'C'
   665  0061F0  61                 	db	97	;'a'
   666  0061F1  72                 	db	114	;'r'
   667  0061F2  74                 	db	116	;'t'
   668  0061F3  61                 	db	97	;'a'
   669  0061F4  6F                 	db	111	;'o'
   670  0061F5  00                 	db	0
   671  0061F6                     STR_13:
   672  0061F6  72                 	db	114	;'r'
   673  0061F7  30                 	db	48	;'0'
   674  0061F8  3B                 	db	59	;';'
   675  0061F9  63                 	db	99	;'c'
   676  0061FA  30                 	db	48	;'0'
   677  0061FB  3B                 	db	59	;';'
   678  0061FC  6B                 	db	107	;'k'
   679  0061FD  30                 	db	48	;'0'
   680  0061FE  3B                 	db	59	;';'
   681  0061FF  00                 	db	0
   682  006200                     STR_14:
   683  006200  68                 	db	104	;'h'
   684  006201  25                 	db	37
   685  006202  73                 	db	115	;'s'
   686  006203  3B                 	db	59	;';'
   687  006204  64                 	db	100	;'d'
   688  006205  4E                 	db	78	;'N'
   689  006206  2F                 	db	47
   690  006207  41                 	db	65	;'A'
   691  006208  3B                 	db	59	;';'
   692  006209  00                 	db	0
   693  00620A  56                 	db	86	;'V'
   694  00620B  65                 	db	101	;'e'
   695  00620C  72                 	db	114	;'r'
   696  00620D  69                 	db	105	;'i'
   697  00620E  66                 	db	102	;'f'
   698  00620F  69                 	db	105	;'i'
   699  006210  71                 	db	113	;'q'
   700  006211  75                 	db	117	;'u'
   701  006212  65                 	db	101	;'e'
   702  006213  00                 	db	0
   703  006214  6F                 	db	111	;'o'
   704  006215  20                 	db	32
   705  006216  61                 	db	97	;'a'
   706  006217  72                 	db	114	;'r'
   707  006218  71                 	db	113	;'q'
   708  006219  75                 	db	117	;'u'
   709  00621A  69                 	db	105	;'i'
   710  00621B  76                 	db	118	;'v'
   711  00621C  6F                 	db	111	;'o'
   712  00621D  00                 	db	0
   713  00621E                     STR_3:
   714  00621E  53                 	db	83	;'S'
   715  00621F  44                 	db	68	;'D'
   716  006220  20                 	db	32
   717  006221  56                 	db	86	;'V'
   718  006222  45                 	db	69	;'E'
   719  006223  52                 	db	82	;'R'
   720  006224  2E                 	db	46
   721  006225  20                 	db	32
   722  006226  31                 	db	49	;'1'
   723  006227  00                 	db	0
   724  006228                     STR_32:
   725  006228  42                 	db	66	;'B'
   726  006229  31                 	db	49	;'1'
   727  00622A  3A                 	db	58	;':'
   728  00622B  46                 	db	70	;'F'
   729  00622C  45                 	db	69	;'E'
   730  00622D  4E                 	db	78	;'N'
   731  00622E  43                 	db	67	;'C'
   732  00622F  45                 	db	69	;'E'
   733  006230  00                 	db	0
   734  006231  6F                 	db	111	;'o'
   735  006232  20                 	db	32
   736  006233  63                 	db	99	;'c'
   737  006234  61                 	db	97	;'a'
   738  006235  72                 	db	114	;'r'
   739  006236  74                 	db	116	;'t'
   740  006237  61                 	db	97	;'a'
   741  006238  6F                 	db	111	;'o'
   742  006239  00                 	db	0
   743  00623A                     STR_33:
   744  00623A  42                 	db	66	;'B'
   745  00623B  32                 	db	50	;'2'
   746  00623C  3A                 	db	58	;':'
   747  00623D  4C                 	db	76	;'L'
   748  00623E  54                 	db	84	;'T'
   749  00623F  4C                 	db	76	;'L'
   750  006240  4F                 	db	79	;'O'
   751  006241  00                 	db	0
   752  006242                     STR_25:
   753  006242  46                 	db	70	;'F'
   754  006243  45                 	db	69	;'E'
   755  006244  4E                 	db	78	;'N'
   756  006245  43                 	db	67	;'C'
   757  006246  45                 	db	69	;'E'
   758  006247  3A                 	db	58	;':'
   759  006248  00                 	db	0
   760  006249                     STR_22:
   761  006249  44                 	db	68	;'D'
   762  00624A  45                 	db	69	;'E'
   763  00624B  4E                 	db	78	;'N'
   764  00624C  54                 	db	84	;'T'
   765  00624D  52                 	db	82	;'R'
   766  00624E  4F                 	db	79	;'O'
   767  00624F  00                 	db	0
   768  006250                     STR_27:
   769  006250  46                 	db	70	;'F'
   770  006251  4F                 	db	79	;'O'
   771  006252  52                 	db	82	;'R'
   772  006253  41                 	db	65	;'A'
   773  006254  20                 	db	32
   774  006255  00                 	db	0
   775  006256                     STR_15:
   776  006256  66                 	db	102	;'f'
   777  006257  25                 	db	37
   778  006258  63                 	db	99	;'c'
   779  006259  3B                 	db	59	;';'
   780  00625A  0A                 	db	10
   781  00625B  00                 	db	0
   782  00625C                     STR_29:
   783  00625C  46                 	db	70	;'F'
   784  00625D  49                 	db	73	;'I'
   785  00625E  58                 	db	88	;'X'
   786  00625F  3A                 	db	58	;':'
   787  006260  00                 	db	0
   788  006261                     STR_23:
   789  006261  46                 	db	70	;'F'
   790  006262  4F                 	db	79	;'O'
   791  006263  52                 	db	82	;'R'
   792  006264  41                 	db	65	;'A'
   793  006265  00                 	db	0
   794  006266                     STR_11:
   795  006266  2E                 	db	46
   796  006267  74                 	db	116	;'t'
   797  006268  6C                 	db	108	;'l'
   798  006269  6D                 	db	109	;'m'
   799  00626A  00                 	db	0
   800  00626B                     STR_31:
   801  00626B  6C                 	db	108	;'l'
   802  00626C  6F                 	db	111	;'o'
   803  00626D  3A                 	db	58	;':'
   804  00626E  00                 	db	0
   805  00626F                     STR_30:
   806  00626F  6C                 	db	108	;'l'
   807  006270  74                 	db	116	;'t'
   808  006271  3A                 	db	58	;':'
   809  006272  00                 	db	0
   810  006273                     STR_17:
   811  006273  46                 	db	70	;'F'
   812  006274  41                 	db	65	;'A'
   813  006275  54                 	db	84	;'T'
   814  006276  00                 	db	0
   815  006277  0D                 	db	13
   816  006278  0A                 	db	10
   817  006279  00                 	db	0
   818  00627A                     STR_20:
   819  00627A  30                 	db	48	;'0'
   820  00627B  00                 	db	0
   821  00627C                     STR_24:
   822  00627C  7C                 	db	124
   823  00627D  00                 	db	0
   824  00627E  00                 	db	0	; dummy byte at the end
   825  0000                     
   826                           ; #config settings
   827                           
   828                           	psect	cinit
   829  004368                     __pcinit:
   830                           	callstack 0
   831  004368                     start_initialization:
   832                           	callstack 0
   833  004368                     __initialization:
   834                           	callstack 0
   835                           
   836                           ; Initialize objects allocated to BANK2 (105 bytes)
   837                           ; load TBLPTR registers with __pidataBANK2
   838  004368  0E1C               	movlw	low __pidataBANK2
   839  00436A  6EF6               	movwf	tblptrl,c
   840  00436C  0E4D               	movlw	high __pidataBANK2
   841  00436E  6EF7               	movwf	tblptrh,c
   842  004370  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   843  004372  6EF8               	movwf	tblptru,c
   844  004374  EE02  F07E         	lfsr	0,__pdataBANK2
   845  004378  EE10 F069          	lfsr	1,105
   846  00437C                     copy_data0:
   847  00437C  0009               	tblrd		*+
   848  00437E  CFF5 FFEE          	movff	tablat,postinc0
   849  004382  50E5               	movf	postdec1,w,c
   850  004384  50E1               	movf	fsr1l,w,c
   851  004386  E1FA               	bnz	copy_data0
   852                           
   853                           ; Initialize objects allocated to BANK1 (14 bytes)
   854                           ; load TBLPTR registers with __pidataBANK1
   855  004388  0ECA               	movlw	low __pidataBANK1
   856  00438A  6EF6               	movwf	tblptrl,c
   857  00438C  0E5B               	movlw	high __pidataBANK1
   858  00438E  6EF7               	movwf	tblptrh,c
   859  004390  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   860  004392  6EF8               	movwf	tblptru,c
   861  004394  EE01  F0EC         	lfsr	0,__pdataBANK1
   862  004398  EE10 F00E          	lfsr	1,14
   863  00439C                     copy_data1:
   864  00439C  0009               	tblrd		*+
   865  00439E  CFF5 FFEE          	movff	tablat,postinc0
   866  0043A2  50E5               	movf	postdec1,w,c
   867  0043A4  50E1               	movf	fsr1l,w,c
   868  0043A6  E1FA               	bnz	copy_data1
   869                           
   870                           ; Initialize objects allocated to BANK0 (1 bytes)
   871                           ; load TBLPTR registers with __pidataBANK0
   872  0043A8  0E6C               	movlw	low __pidataBANK0
   873  0043AA  6EF6               	movwf	tblptrl,c
   874  0043AC  0E5C               	movlw	high __pidataBANK0
   875  0043AE  6EF7               	movwf	tblptrh,c
   876  0043B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   877  0043B2  6EF8               	movwf	tblptru,c
   878  0043B4  0009               	tblrd		*+	;fetch initializer
   879  0043B6  CFF5 F0FF          	movff	tablat,__pdataBANK0
   880                           
   881                           ; Clear objects allocated to BIGRAM (544 bytes)
   882  0043BA  EE03  F096         	lfsr	0,__pbssBIGRAM
   883  0043BE  EE12 F020          	lfsr	1,544
   884  0043C2                     clear_0:
   885  0043C2  6AEE               	clrf	postinc0,c
   886  0043C4  50E5               	movf	postdec1,w,c
   887  0043C6  50E1               	movf	fsr1l,w,c
   888  0043C8  E1FC               	bnz	clear_0
   889  0043CA  50E2               	movf	fsr1h,w,c
   890  0043CC  E1FA               	bnz	clear_0
   891                           
   892                           ; Clear objects allocated to BANK3 (150 bytes)
   893  0043CE  EE03  F000         	lfsr	0,__pbssBANK3
   894  0043D2  0E96               	movlw	150
   895  0043D4                     clear_1:
   896  0043D4  6AEE               	clrf	postinc0,c
   897  0043D6  06E8               	decf	wreg,f,c
   898  0043D8  E1FD               	bnz	clear_1
   899                           
   900                           ; Clear objects allocated to BANK2 (126 bytes)
   901  0043DA  EE02  F000         	lfsr	0,__pbssBANK2
   902  0043DE  0E7E               	movlw	126
   903  0043E0                     clear_2:
   904  0043E0  6AEE               	clrf	postinc0,c
   905  0043E2  06E8               	decf	wreg,f,c
   906  0043E4  E1FD               	bnz	clear_2
   907                           
   908                           ; Clear objects allocated to BANK1 (236 bytes)
   909  0043E6  EE01  F000         	lfsr	0,__pbssBANK1
   910  0043EA  0EEC               	movlw	236
   911  0043EC                     clear_3:
   912  0043EC  6AEE               	clrf	postinc0,c
   913  0043EE  06E8               	decf	wreg,f,c
   914  0043F0  E1FD               	bnz	clear_3
   915                           
   916                           ; Clear objects allocated to BANK0 (24 bytes)
   917  0043F2  EE00  F0E7         	lfsr	0,__pbssBANK0
   918  0043F6  0E18               	movlw	24
   919  0043F8                     clear_4:
   920  0043F8  6AEE               	clrf	postinc0,c
   921  0043FA  06E8               	decf	wreg,f,c
   922  0043FC  E1FD               	bnz	clear_4
   923                           
   924                           ; Clear objects allocated to COMRAM (9 bytes)
   925  0043FE  EE00  F04D         	lfsr	0,__pbssCOMRAM
   926  004402  0E09               	movlw	9
   927  004404                     clear_5:
   928  004404  6AEE               	clrf	postinc0,c
   929  004406  06E8               	decf	wreg,f,c
   930  004408  E1FD               	bnz	clear_5
   931  00440A                     end_of_initialization:
   932                           	callstack 0
   933  00440A                     __end_of__initialization:
   934                           	callstack 0
   935  00440A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   936  00440C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   937  00440E  0100               	movlb	0
   938  004410  EFBE  F02B         	goto	_main	;jump to C main() function
   939                           
   940                           	psect	bssCOMRAM
   941  00004D                     __pbssCOMRAM:
   942                           	callstack 0
   943  00004D                     _FatFs:
   944                           	callstack 0
   945  00004D                     	ds	2
   946  00004F                     troca_de_tela@last_state:
   947                           	callstack 0
   948  00004F                     	ds	1
   949  000050                     troca_de_tela@state:
   950                           	callstack 0
   951  000050                     	ds	1
   952  000051                     verifica_dados_operacionais@contador_atual:
   953                           	callstack 0
   954  000051                     	ds	1
   955  000052                     _tarefa_em_execucao:
   956                           	callstack 0
   957  000052                     	ds	1
   958  000053                     escrita_sdcard@f_fix:
   959                           	callstack 0
   960  000053                     	ds	1
   961  000054                     _is_it_rmc_string:
   962                           	callstack 0
   963  000054                     	ds	1
   964  000055                     _is_it_gga_string:
   965                           	callstack 0
   966  000055                     	ds	1
   967                           
   968                           	psect	bssBANK0
   969  0000E7                     __pbssBANK0:
   970                           	callstack 0
   971  0000E7                     _fence_flag:
   972                           	callstack 0
   973  0000E7                     	ds	3
   974  0000EA                     _time_atualizacao:
   975                           	callstack 0
   976  0000EA                     	ds	2
   977  0000EC                     _rmc_index:
   978                           	callstack 0
   979  0000EC                     	ds	2
   980  0000EE                     _gga_index:
   981                           	callstack 0
   982  0000EE                     	ds	2
   983  0000F0                     verifica_dados_operacionais@contador_anterior:
   984                           	callstack 0
   985  0000F0                     	ds	1
   986  0000F1                     _flag_anomalia:
   987                           	callstack 0
   988  0000F1                     	ds	1
   989  0000F2                     _sinaliza_int_timer:
   990                           	callstack 0
   991  0000F2                     	ds	1
   992  0000F3                     _data_uart_recebe:
   993                           	callstack 0
   994  0000F3                     	ds	1
   995  0000F4                     _estado:
   996                           	callstack 0
   997  0000F4                     	ds	1
   998  0000F5                     _fence:
   999                           	callstack 0
  1000  0000F5                     	ds	1
  1001  0000F6                     _data_hoje:
  1002                           	callstack 0
  1003  0000F6                     	ds	1
  1004  0000F7                     	ds	1
  1005  0000F8                     _comma_counter_rmc:
  1006                           	callstack 0
  1007  0000F8                     	ds	1
  1008  0000F9                     _comma_counter_gga:
  1009                           	callstack 0
  1010  0000F9                     	ds	1
  1011  0000FA                     _E_W:
  1012                           	callstack 0
  1013  0000FA                     	ds	1
  1014  0000FB                     _n_s:
  1015                           	callstack 0
  1016  0000FB                     	ds	1
  1017  0000FC                     _Term:
  1018                           	callstack 0
  1019  0000FC                     	ds	1
  1020  0000FD                     _SentenceType:
  1021                           	callstack 0
  1022  0000FD                     	ds	1
  1023  0000FE                     _char_number:
  1024                           	callstack 0
  1025  0000FE                     	ds	1
  1026                           
  1027                           	psect	dataBANK0
  1028  0000FF                     __pdataBANK0:
  1029                           	callstack 0
  1030  0000FF                     	ds	1
  1031                           
  1032                           	psect	bssBANK1
  1033  000100                     __pbssBANK1:
  1034                           	callstack 0
  1035  000100                     _poligono_ext:
  1036                           	callstack 0
  1037  000100                     	ds	16
  1038  000110                     _dado:
  1039                           	callstack 0
  1040  000110                     	ds	10
  1041  00011A                     _rawAltitude:
  1042                           	callstack 0
  1043  00011A                     	ds	7
  1044  000121                     	ds	6
  1045  000127                     _dados_vel:
  1046                           	callstack 0
  1047  000127                     	ds	6
  1048  00012D                     _tempo_tarefa:
  1049                           	callstack 0
  1050  00012D                     	ds	6
  1051  000133                     _tempo_backup:
  1052                           	callstack 0
  1053  000133                     	ds	6
  1054  000139                     _p_tarefas:
  1055                           	callstack 0
  1056  000139                     	ds	6
  1057  00013F                     _rawCourse:
  1058                           	callstack 0
  1059  00013F                     	ds	6
  1060  000145                     _sentence:
  1061                           	callstack 0
  1062  000145                     	ds	6
  1063  00014B                     _gps_flag:
  1064                           	callstack 0
  1065  00014B                     	ds	6
  1066  000151                     verifica_dados_operacionais@velocidade_atual_int:
  1067                           	callstack 0
  1068  000151                     	ds	4
  1069  000155                     	ds	4
  1070  000159                     _rmc_code:
  1071                           	callstack 0
  1072  000159                     	ds	3
  1073  00015C                     _gga_code:
  1074                           	callstack 0
  1075  00015C                     	ds	3
  1076  00015F                     _rawSatellites:
  1077                           	callstack 0
  1078  00015F                     	ds	3
  1079  000162                     _temp_buff_lat:
  1080                           	callstack 0
  1081  000162                     	ds	2
  1082  000164                     _temp_buff_long:
  1083                           	callstack 0
  1084  000164                     	ds	2
  1085  000166                     verifica_dados_operacionais@velocidade_atual:
  1086                           	callstack 0
  1087  000166                     	ds	2
  1088  000168                     _point_buff_gps_long:
  1089                           	callstack 0
  1090  000168                     	ds	2
  1091  00016A                     _point_buff_gps_lat:
  1092                           	callstack 0
  1093  00016A                     	ds	2
  1094  00016C                     _time_recovery:
  1095                           	callstack 0
  1096  00016C                     	ds	2
  1097  00016E                     _time_sd:
  1098                           	callstack 0
  1099  00016E                     	ds	2
  1100  000170                     _timeout_tarefa:
  1101                           	callstack 0
  1102  000170                     	ds	2
  1103  000172                     _fsid:
  1104                           	callstack 0
  1105  000172                     	ds	2
  1106  000174                     _teste:
  1107                           	callstack 0
  1108  000174                     	ds	2
  1109  000176                     _GPGGA_ok:
  1110                           	callstack 0
  1111  000176                     	ds	2
  1112  000178                     _GPRMC_ok:
  1113                           	callstack 0
  1114  000178                     	ds	2
  1115  00017A                     _data_buff:
  1116                           	callstack 0
  1117  00017A                     	ds	2
  1118  00017C                     _fil:
  1119                           	callstack 0
  1120  00017C                     	ds	28
  1121  000198                     _lo:
  1122                           	callstack 0
  1123  000198                     	ds	13
  1124  0001A5                     _rawLongitude:
  1125                           	callstack 0
  1126  0001A5                     	ds	13
  1127  0001B2                     _lt:
  1128                           	callstack 0
  1129  0001B2                     	ds	12
  1130  0001BE                     _rawLatitude:
  1131                           	callstack 0
  1132  0001BE                     	ds	12
  1133  0001CA                     _hora:
  1134                           	callstack 0
  1135  0001CA                     	ds	7
  1136  0001D1                     _rawTime:
  1137                           	callstack 0
  1138  0001D1                     	ds	7
  1139  0001D8                     _data:
  1140                           	callstack 0
  1141  0001D8                     	ds	6
  1142  0001DE                     _vel:
  1143                           	callstack 0
  1144  0001DE                     	ds	6
  1145  0001E4                     _rawDate:
  1146                           	callstack 0
  1147  0001E4                     	ds	6
  1148  0001EA                     _rawFix:
  1149                           	callstack 0
  1150  0001EA                     	ds	2
  1151                           
  1152                           	psect	dataBANK1
  1153  0001EC                     __pdataBANK1:
  1154                           	callstack 0
  1155  0001EC                     	ds	7
  1156  0001F3                     escreve_inteiro_lcd@F3223:
  1157                           	callstack 0
  1158  0001F3                     	ds	7
  1159                           
  1160                           	psect	bssBANK2
  1161  000200                     __pbssBANK2:
  1162                           	callstack 0
  1163  000200                     _string_dado:
  1164                           	callstack 0
  1165  000200                     	ds	22
  1166  000216                     _gga_pointers:
  1167                           	callstack 0
  1168  000216                     	ds	20
  1169  00022A                     _rmc_pointers:
  1170                           	callstack 0
  1171  00022A                     	ds	12
  1172  000236                     _buffer:
  1173                           	callstack 0
  1174  000236                     	ds	12
  1175  000242                     _dado_arquivo:
  1176                           	callstack 0
  1177  000242                     	ds	20
  1178  000256                     _filename:
  1179                           	callstack 0
  1180  000256                     	ds	20
  1181  00026A                     _rawSpeed:
  1182                           	callstack 0
  1183  00026A                     	ds	20
  1184                           
  1185                           	psect	dataBANK2
  1186  00027E                     __pdataBANK2:
  1187                           	callstack 0
  1188  00027E                     _dados_long:
  1189                           	callstack 0
  1190  00027E                     	ds	36
  1191  0002A2                     _dados_lat:
  1192                           	callstack 0
  1193  0002A2                     	ds	33
  1194  0002C3                     _dados_data:
  1195                           	callstack 0
  1196  0002C3                     	ds	18
  1197  0002D5                     _dados_hora:
  1198                           	callstack 0
  1199  0002D5                     	ds	18
  1200                           
  1201                           	psect	bssBANK3
  1202  000300                     __pbssBANK3:
  1203                           	callstack 0
  1204  000300                     _gga_buffer:
  1205                           	callstack 0
  1206  000300                     	ds	80
  1207  000350                     _rmc_buffer:
  1208                           	callstack 0
  1209  000350                     	ds	70
  1210                           
  1211                           	psect	bssBIGRAM
  1212  000396                     __pbssBIGRAM:
  1213                           	callstack 0
  1214  000396                     _fs:
  1215                           	callstack 0
  1216  000396                     	ds	544
  1217                           
  1218                           	psect	cstackBANK2
  1219  0002E7                     __pcstackBANK2:
  1220                           	callstack 0
  1221  0002E7                     disparo_gravacao@velocidade:
  1222                           	callstack 0
  1223                           
  1224                           ; 12 bytes @ 0x0
  1225  0002E7                     	ds	12
  1226  0002F3                     disparo_gravacao@fix_gps:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0xC
  1230  0002F3                     	ds	2
  1231  0002F5                     disparo_gravacao@v_max:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0xE
  1235  0002F5                     	ds	2
  1236  0002F7                     disparo_gravacao@index_max:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x10
  1240  0002F7                     	ds	2
  1241  0002F9                     disparo_gravacao@i:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x12
  1245  0002F9                     	ds	1
  1246                           
  1247                           	psect	cstackBANK0
  1248  000060                     __pcstackBANK0:
  1249                           	callstack 0
  1250  000060                     ??_get_cluster:
  1251  000060                     ??_auto_mount:
  1252  000060                     put_cluster@clust:
  1253                           	callstack 0
  1254  000060                     f_sync@fp:
  1255                           	callstack 0
  1256  000060                     latitude_to_convert@latitude:
  1257                           	callstack 0
  1258  000060                     longitude_to_convert@longitude:
  1259                           	callstack 0
  1260                           
  1261                           ; 11 bytes @ 0x0
  1262  000060                     	ds	2
  1263  000062                     put_cluster@val:
  1264                           	callstack 0
  1265  000062                     f_sync@tim:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x2
  1269  000062                     	ds	2
  1270  000064                     ??_put_cluster:
  1271                           
  1272                           ; 1 bytes @ 0x4
  1273  000064                     	ds	2
  1274  000066                     f_sync@res:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0x6
  1278  000066                     	ds	1
  1279  000067                     f_sync@dir:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x7
  1283  000067                     	ds	2
  1284  000069                     latitude_to_convert@j:
  1285                           	callstack 0
  1286  000069                     get_cluster@wc:
  1287                           	callstack 0
  1288  000069                     f_close@fp:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x9
  1292  000069                     	ds	1
  1293  00006A                     latitude_to_convert@i:
  1294                           	callstack 0
  1295  00006A                     _put_cluster$1623:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0xA
  1299  00006A                     	ds	1
  1300  00006B                     longitude_to_convert@j:
  1301                           	callstack 0
  1302  00006B                     get_cluster@fatsect:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0xB
  1306  00006B                     	ds	1
  1307  00006C                     longitude_to_convert@i:
  1308                           	callstack 0
  1309  00006C                     _put_cluster$1624:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0xC
  1313  00006C                     	ds	2
  1314  00006E                     put_cluster@fatsect:
  1315                           	callstack 0
  1316                           
  1317                           ; 4 bytes @ 0xE
  1318  00006E                     	ds	1
  1319  00006F                     get_cluster@bc:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0xF
  1323  00006F                     	ds	2
  1324  000071                     get_cluster@fs:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x11
  1328  000071                     	ds	1
  1329  000072                     put_cluster@bc:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x12
  1333  000072                     	ds	1
  1334  000073                     ??_next_dir_entry:
  1335                           
  1336                           ; 1 bytes @ 0x13
  1337  000073                     	ds	1
  1338  000074                     put_cluster@p:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x14
  1342  000074                     	ds	2
  1343  000076                     put_cluster@fs:
  1344                           	callstack 0
  1345  000076                     auto_mount@maxclust:
  1346                           	callstack 0
  1347                           
  1348                           ; 4 bytes @ 0x16
  1349  000076                     	ds	2
  1350  000078                     ?_create_chain:
  1351                           	callstack 0
  1352  000078                     remove_chain@clust:
  1353                           	callstack 0
  1354  000078                     create_chain@clust:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x18
  1358  000078                     	ds	2
  1359  00007A                     next_dir_entry@clust:
  1360                           	callstack 0
  1361  00007A                     auto_mount@bootsect:
  1362                           	callstack 0
  1363                           
  1364                           ; 4 bytes @ 0x1A
  1365  00007A                     	ds	2
  1366  00007C                     remove_chain@nxt:
  1367                           	callstack 0
  1368  00007C                     create_chain@mcl:
  1369                           	callstack 0
  1370  00007C                     next_dir_entry@idx:
  1371                           	callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x1C
  1374  00007C                     	ds	2
  1375  00007E                     trace_path@dj:
  1376                           	callstack 0
  1377  00007E                     remove_chain@fs:
  1378                           	callstack 0
  1379  00007E                     create_chain@fs:
  1380                           	callstack 0
  1381  00007E                     auto_mount@totalsect:
  1382                           	callstack 0
  1383                           
  1384                           ; 4 bytes @ 0x1E
  1385  00007E                     	ds	1
  1386  00007F                     trace_path@fn:
  1387                           	callstack 0
  1388                           
  1389                           ; 1 bytes @ 0x1F
  1390  00007F                     	ds	1
  1391  000080                     create_chain@cstat:
  1392                           	callstack 0
  1393  000080                     trace_path@path:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x20
  1397  000080                     	ds	2
  1398  000082                     trace_path@dir:
  1399                           	callstack 0
  1400  000082                     create_chain@scl:
  1401                           	callstack 0
  1402  000082                     auto_mount@p:
  1403                           	callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x22
  1406  000082                     	ds	1
  1407  000083                     ??_trace_path:
  1408                           
  1409                           ; 1 bytes @ 0x23
  1410  000083                     	ds	1
  1411  000084                     auto_mount@fmt:
  1412                           	callstack 0
  1413  000084                     create_chain@ncl:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x24
  1417  000084                     	ds	1
  1418  000085                     auto_mount@stat:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x25
  1422  000085                     	ds	1
  1423  000086                     reserve_direntry@dj:
  1424                           	callstack 0
  1425  000086                     f_write@fp:
  1426                           	callstack 0
  1427  000086                     f_lseek@fp:
  1428                           	callstack 0
  1429  000086                     auto_mount@fatsize:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x26
  1433  000086                     	ds	1
  1434  000087                     reserve_direntry@dir:
  1435                           	callstack 0
  1436  000087                     _trace_path$1780:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x27
  1440  000087                     	ds	1
  1441  000088                     ??_reserve_direntry:
  1442  000088                     f_write@buff:
  1443                           	callstack 0
  1444  000088                     f_lseek@ofs:
  1445                           	callstack 0
  1446                           
  1447                           ; 4 bytes @ 0x28
  1448  000088                     	ds	1
  1449  000089                     _trace_path$1782:
  1450                           	callstack 0
  1451  000089                     f_write@btw:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x29
  1455  000089                     	ds	1
  1456  00008A                     auto_mount@fs:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x2A
  1460  00008A                     	ds	1
  1461  00008B                     f_write@bw:
  1462                           	callstack 0
  1463  00008B                     trace_path@fs:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x2B
  1467  00008B                     	ds	1
  1468  00008C                     ??_f_lseek:
  1469  00008C                     ??_f_write:
  1470  00008C                     reserve_direntry@sector:
  1471                           	callstack 0
  1472                           
  1473                           ; 4 bytes @ 0x2C
  1474  00008C                     	ds	1
  1475  00008D                     trace_path@clust:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x2D
  1479  00008D                     	ds	2
  1480  00008F                     trace_path@ds:
  1481                           	callstack 0
  1482                           
  1483                           ; 1 bytes @ 0x2F
  1484  00008F                     	ds	1
  1485  000090                     reserve_direntry@n:
  1486                           	callstack 0
  1487  000090                     trace_path@dptr:
  1488                           	callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x30
  1491  000090                     	ds	1
  1492  000091                     reserve_direntry@dptr:
  1493                           	callstack 0
  1494                           
  1495                           ; 2 bytes @ 0x31
  1496  000091                     	ds	2
  1497  000093                     reserve_direntry@c:
  1498                           	callstack 0
  1499                           
  1500                           ; 1 bytes @ 0x33
  1501  000093                     	ds	1
  1502  000094                     reserve_direntry@clust:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x34
  1506  000094                     	ds	2
  1507  000096                     reserve_direntry@fs:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x36
  1511  000096                     	ds	2
  1512  000098                     f_write@res:
  1513                           	callstack 0
  1514  000098                     f_open@fp:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x38
  1518  000098                     	ds	1
  1519  000099                     f_write@wbuff:
  1520                           	callstack 0
  1521                           
  1522                           ; 1 bytes @ 0x39
  1523  000099                     	ds	1
  1524  00009A                     f_open@path:
  1525                           	callstack 0
  1526  00009A                     f_write@sect:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x3A
  1530  00009A                     	ds	2
  1531  00009C                     f_open@mode:
  1532                           	callstack 0
  1533  00009C                     f_lseek@res:
  1534                           	callstack 0
  1535                           
  1536                           ; 1 bytes @ 0x3C
  1537  00009C                     	ds	1
  1538  00009D                     ??_f_open:
  1539  00009D                     f_lseek@ifptr:
  1540                           	callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x3D
  1543  00009D                     	ds	1
  1544  00009E                     f_write@cc:
  1545                           	callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x3E
  1548  00009E                     	ds	2
  1549  0000A0                     f_write@clust:
  1550                           	callstack 0
  1551                           
  1552                           ; 2 bytes @ 0x40
  1553  0000A0                     	ds	1
  1554  0000A1                     f_lseek@csize:
  1555                           	callstack 0
  1556  0000A1                     f_open@fn:
  1557                           	callstack 0
  1558                           
  1559                           ; 12 bytes @ 0x41
  1560  0000A1                     	ds	1
  1561  0000A2                     f_write@wcnt:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x42
  1565  0000A2                     	ds	2
  1566  0000A4                     ?_fputc:
  1567                           	callstack 0
  1568  0000A4                     fputc@chr:
  1569                           	callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x44
  1572  0000A4                     	ds	1
  1573  0000A5                     f_lseek@clust:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x45
  1577  0000A5                     	ds	1
  1578  0000A6                     fputc@fil:
  1579                           	callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x46
  1582  0000A6                     	ds	2
  1583  0000A8                     fputc@c:
  1584                           	callstack 0
  1585                           
  1586                           ; 1 bytes @ 0x48
  1587  0000A8                     	ds	1
  1588  0000A9                     fputc@bw:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x49
  1592  0000A9                     	ds	2
  1593  0000AB                     ?_fputs:
  1594                           	callstack 0
  1595  0000AB                     fputs@str:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x4B
  1599  0000AB                     	ds	2
  1600  0000AD                     f_open@rs:
  1601                           	callstack 0
  1602  0000AD                     fputs@fil:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x4D
  1606  0000AD                     	ds	2
  1607  0000AF                     fputs@n:
  1608                           	callstack 0
  1609  0000AF                     f_open@dw:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x4F
  1613  0000AF                     	ds	2
  1614  0000B1                     ?_fprintf:
  1615                           	callstack 0
  1616  0000B1                     fprintf@fil:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x51
  1620  0000B1                     	ds	2
  1621  0000B3                     f_open@res:
  1622                           	callstack 0
  1623  0000B3                     fprintf@str:
  1624                           	callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x53
  1627  0000B3                     	ds	1
  1628  0000B4                     f_open@dir:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x54
  1632  0000B4                     	ds	2
  1633  0000B6                     f_open@dj:
  1634                           	callstack 0
  1635                           
  1636                           ; 14 bytes @ 0x56
  1637  0000B6                     	ds	5
  1638  0000BB                     ??_fprintf:
  1639                           
  1640                           ; 1 bytes @ 0x5B
  1641  0000BB                     	ds	2
  1642  0000BD                     fprintf@s:
  1643                           	callstack 0
  1644                           
  1645                           ; 16 bytes @ 0x5D
  1646  0000BD                     	ds	16
  1647  0000CD                     fprintf@res:
  1648                           	callstack 0
  1649                           
  1650                           ; 2 bytes @ 0x6D
  1651  0000CD                     	ds	2
  1652  0000CF                     _fprintf$2226:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x6F
  1656  0000CF                     	ds	2
  1657  0000D1                     fprintf@w:
  1658                           	callstack 0
  1659                           
  1660                           ; 2 bytes @ 0x71
  1661  0000D1                     	ds	2
  1662  0000D3                     fprintf@f:
  1663                           	callstack 0
  1664                           
  1665                           ; 1 bytes @ 0x73
  1666  0000D3                     	ds	1
  1667  0000D4                     fprintf@r:
  1668                           	callstack 0
  1669                           
  1670                           ; 1 bytes @ 0x74
  1671  0000D4                     	ds	1
  1672  0000D5                     fprintf@val:
  1673                           	callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x75
  1676  0000D5                     	ds	4
  1677  0000D9                     fprintf@arp:
  1678                           	callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x79
  1681  0000D9                     	ds	1
  1682  0000DA                     fprintf@cc:
  1683                           	callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x7A
  1686  0000DA                     	ds	2
  1687  0000DC                     fprintf@i:
  1688                           	callstack 0
  1689                           
  1690                           ; 2 bytes @ 0x7C
  1691  0000DC                     	ds	2
  1692  0000DE                     fprintf@c:
  1693                           	callstack 0
  1694                           
  1695                           ; 1 bytes @ 0x7E
  1696  0000DE                     	ds	1
  1697  0000DF                     ??_disparo_gravacao:
  1698                           
  1699                           ; 1 bytes @ 0x7F
  1700  0000DF                     	ds	5
  1701  0000E4                     ??_escalonador:
  1702                           
  1703                           ; 1 bytes @ 0x84
  1704  0000E4                     	ds	2
  1705  0000E6                     escalonador@cont:
  1706                           	callstack 0
  1707                           
  1708                           ; 1 bytes @ 0x86
  1709  0000E6                     	ds	1
  1710                           
  1711                           	psect	cstackCOMRAM
  1712  000001                     __pcstackCOMRAM:
  1713                           	callstack 0
  1714  000001                     tratamento_uart@received_char:
  1715                           	callstack 0
  1716  000001                     i2write_timer_zero@timer0:
  1717                           	callstack 0
  1718                           
  1719                           ; 2 bytes @ 0x0
  1720  000001                     	ds	2
  1721  000003                     ??_isr:
  1722  000003                     
  1723                           ; 1 bytes @ 0x2
  1724  000003                     	ds	6
  1725  000009                     isr@cont:
  1726                           	callstack 0
  1727                           
  1728                           ; 1 bytes @ 0x8
  1729  000009                     	ds	1
  1730  00000A                     ??_dummy_clocks:
  1731  00000A                     ??_isdigit:
  1732  00000A                     ?_fix:
  1733                           	callstack 0
  1734  00000A                     ?_latitude:
  1735                           	callstack 0
  1736  00000A                     ?_longitude:
  1737                           	callstack 0
  1738  00000A                     ?_rawhora:
  1739                           	callstack 0
  1740  00000A                     ?_rawdata:
  1741                           	callstack 0
  1742  00000A                     ?_Speed:
  1743                           	callstack 0
  1744  00000A                     ?_strlen:
  1745                           	callstack 0
  1746  00000A                     ?_memcmp:
  1747                           	callstack 0
  1748  00000A                     ?_gps_segundos:
  1749                           	callstack 0
  1750  00000A                     ?_gps_minutos:
  1751                           	callstack 0
  1752  00000A                     ?_gps_hora:
  1753                           	callstack 0
  1754  00000A                     ?_gps_dia:
  1755                           	callstack 0
  1756  00000A                     ?_gps_mes:
  1757                           	callstack 0
  1758  00000A                     ?_gps_ano:
  1759                           	callstack 0
  1760  00000A                     ?___wmul:
  1761                           	callstack 0
  1762  00000A                     ?___lwdiv:
  1763                           	callstack 0
  1764  00000A                     ?___lwmod:
  1765                           	callstack 0
  1766  00000A                     ?___ftpack:
  1767                           	callstack 0
  1768  00000A                     ?___lmul:
  1769                           	callstack 0
  1770  00000A                     ?___lldiv:
  1771                           	callstack 0
  1772  00000A                     ?___aldiv:
  1773                           	callstack 0
  1774  00000A                     ?___llmod:
  1775                           	callstack 0
  1776  00000A                     disk_ioctl@cmd:
  1777                           	callstack 0
  1778  00000A                     delay@contador_ext:
  1779                           	callstack 0
  1780  00000A                     get_gpstime@index:
  1781                           	callstack 0
  1782  00000A                     get_latitude@index_lat:
  1783                           	callstack 0
  1784  00000A                     get_longitude@index_long:
  1785                           	callstack 0
  1786  00000A                     get_rawdate@index_date:
  1787                           	callstack 0
  1788  00000A                     get_rawspeed@index_speed:
  1789                           	callstack 0
  1790  00000A                     get_fix@index_fix:
  1791                           	callstack 0
  1792  00000A                     response@buff:
  1793                           	callstack 0
  1794  00000A                     recebe_dado_gps@flag_recebe:
  1795                           	callstack 0
  1796  00000A                     verifica_plausibilidade_long@posicao:
  1797                           	callstack 0
  1798  00000A                     verifica_plausibilidade_lat@posicao:
  1799                           	callstack 0
  1800  00000A                     write_timer_zero@timer0:
  1801                           	callstack 0
  1802  00000A                     data_nome@p_buff:
  1803                           	callstack 0
  1804  00000A                     hora_nome@p_buff:
  1805                           	callstack 0
  1806  00000A                     f_mount@fs:
  1807                           	callstack 0
  1808  00000A                     ___wmul@multiplier:
  1809                           	callstack 0
  1810  00000A                     ___lwdiv@dividend:
  1811                           	callstack 0
  1812  00000A                     ___lwmod@dividend:
  1813                           	callstack 0
  1814  00000A                     memcmp@s1:
  1815                           	callstack 0
  1816  00000A                     memcpy@d1:
  1817                           	callstack 0
  1818  00000A                     memset@p1:
  1819                           	callstack 0
  1820  00000A                     strcat@to:
  1821                           	callstack 0
  1822  00000A                     strlen@s:
  1823                           	callstack 0
  1824  00000A                     ___ftpack@arg:
  1825                           	callstack 0
  1826  00000A                     wait_ready@timeout:
  1827                           	callstack 0
  1828  00000A                     ___lmul@multiplier:
  1829                           	callstack 0
  1830  00000A                     ___lldiv@dividend:
  1831                           	callstack 0
  1832  00000A                     ___aldiv@dividend:
  1833                           	callstack 0
  1834  00000A                     ___llmod@dividend:
  1835                           	callstack 0
  1836                           
  1837                           ; 4 bytes @ 0x9
  1838  00000A                     	ds	1
  1839  00000B                     sdc_disk_status@pdrv:
  1840                           	callstack 0
  1841  00000B                     delay@contador_int:
  1842                           	callstack 0
  1843  00000B                     get_latitude@index:
  1844                           	callstack 0
  1845  00000B                     get_longitude@index:
  1846                           	callstack 0
  1847  00000B                     get_rawdate@index:
  1848                           	callstack 0
  1849  00000B                     get_rawspeed@index:
  1850                           	callstack 0
  1851  00000B                     get_fix@index:
  1852                           	callstack 0
  1853  00000B                     escreve_SPI@dado:
  1854                           	callstack 0
  1855  00000B                     recebe_dado_gps@timeout:
  1856                           	callstack 0
  1857  00000B                     _isdigit$3275:
  1858                           	callstack 0
  1859  00000B                     disk_ioctl@buff:
  1860                           	callstack 0
  1861                           
  1862                           ; 2 bytes @ 0xA
  1863  00000B                     	ds	1
  1864  00000C                     ??_gps_segundos:
  1865  00000C                     ??_gps_minutos:
  1866  00000C                     ??_gps_hora:
  1867  00000C                     ??_gps_dia:
  1868  00000C                     ??_gps_mes:
  1869  00000C                     ??_gps_ano:
  1870  00000C                     escreve_cmd_lcd@comando:
  1871                           	callstack 0
  1872  00000C                     endereco_cursor_lcd@endereco:
  1873                           	callstack 0
  1874  00000C                     escreve_caractere_lcd@data:
  1875                           	callstack 0
  1876  00000C                     dummy_clocks@n:
  1877                           	callstack 0
  1878  00000C                     data_nome@i:
  1879                           	callstack 0
  1880  00000C                     hora_nome@i:
  1881                           	callstack 0
  1882  00000C                     f_mount@drv:
  1883                           	callstack 0
  1884  00000C                     isdigit@c:
  1885                           	callstack 0
  1886  00000C                     ___wmul@multiplicand:
  1887                           	callstack 0
  1888  00000C                     ___lwdiv@divisor:
  1889                           	callstack 0
  1890  00000C                     ___lwmod@divisor:
  1891                           	callstack 0
  1892  00000C                     memcmp@s2:
  1893                           	callstack 0
  1894  00000C                     memcpy@s1:
  1895                           	callstack 0
  1896  00000C                     memset@c:
  1897                           	callstack 0
  1898  00000C                     strcat@from:
  1899                           	callstack 0
  1900  00000C                     strcpy@to:
  1901                           	callstack 0
  1902  00000C                     strlen@cp:
  1903                           	callstack 0
  1904                           
  1905                           ; 2 bytes @ 0xB
  1906  00000C                     	ds	1
  1907  00000D                     ??_init_lcd:
  1908  00000D                     disk_ioctl@pdrv:
  1909                           	callstack 0
  1910  00000D                     posicao_cursor_lcd@coluna:
  1911                           	callstack 0
  1912  00000D                     ___ftpack@exp:
  1913                           	callstack 0
  1914  00000D                     escreve_frase_ram_lcd@buffer:
  1915                           	callstack 0
  1916  00000D                     gps@flag_fix:
  1917                           	callstack 0
  1918  00000D                     dummy_clocks@i:
  1919                           	callstack 0
  1920                           
  1921                           ; 2 bytes @ 0xC
  1922  00000D                     	ds	1
  1923  00000E                     ?_get_fattime:
  1924                           	callstack 0
  1925  00000E                     disk_status@pdrv:
  1926                           	callstack 0
  1927  00000E                     disk_ioctl@res:
  1928                           	callstack 0
  1929  00000E                     posicao_cursor_lcd@linha:
  1930                           	callstack 0
  1931  00000E                     wait_ready@res:
  1932                           	callstack 0
  1933  00000E                     ___ftpack@sign:
  1934                           	callstack 0
  1935  00000E                     ___lwdiv@counter:
  1936                           	callstack 0
  1937  00000E                     ___lwmod@counter:
  1938                           	callstack 0
  1939  00000E                     ___wmul@product:
  1940                           	callstack 0
  1941  00000E                     memcmp@n:
  1942                           	callstack 0
  1943  00000E                     memcpy@n:
  1944                           	callstack 0
  1945  00000E                     memset@n:
  1946                           	callstack 0
  1947  00000E                     strcat@cp:
  1948                           	callstack 0
  1949  00000E                     strcpy@from:
  1950                           	callstack 0
  1951  00000E                     ___lmul@multiplicand:
  1952                           	callstack 0
  1953  00000E                     ___lldiv@divisor:
  1954                           	callstack 0
  1955  00000E                     ___aldiv@divisor:
  1956                           	callstack 0
  1957  00000E                     ___llmod@divisor:
  1958                           	callstack 0
  1959                           
  1960                           ; 4 bytes @ 0xD
  1961  00000E                     	ds	1
  1962  00000F                     ??___ftpack:
  1963  00000F                     disk_status@stat:
  1964                           	callstack 0
  1965  00000F                     posicao_cursor_lcd@endereco:
  1966                           	callstack 0
  1967  00000F                     ___lwdiv@quotient:
  1968                           	callstack 0
  1969  00000F                     command@arg:
  1970                           	callstack 0
  1971                           
  1972                           ; 4 bytes @ 0xE
  1973  00000F                     	ds	1
  1974  000010                     ??_memcmp:
  1975  000010                     ??_mensagem_inicial:
  1976  000010                     ?_atoi:
  1977                           	callstack 0
  1978  000010                     memcpy@tmp:
  1979                           	callstack 0
  1980  000010                     monta_sd@dado:
  1981                           	callstack 0
  1982  000010                     validate@fs:
  1983                           	callstack 0
  1984  000010                     memset@p:
  1985                           	callstack 0
  1986  000010                     strcpy@cp:
  1987                           	callstack 0
  1988  000010                     atoi@s:
  1989                           	callstack 0
  1990                           
  1991                           ; 3 bytes @ 0xF
  1992  000010                     	ds	1
  1993  000011                     utoa@buf:
  1994                           	callstack 0
  1995  000011                     memcpy@d:
  1996                           	callstack 0
  1997                           
  1998                           ; 2 bytes @ 0x10
  1999  000011                     	ds	1
  2000  000012                     ??_get_fattime:
  2001  000012                     make_dirfile@path:
  2002                           	callstack 0
  2003  000012                     ___aldiv@counter:
  2004                           	callstack 0
  2005  000012                     ___llmod@counter:
  2006                           	callstack 0
  2007  000012                     validate@id:
  2008                           	callstack 0
  2009  000012                     ___lmul@product:
  2010                           	callstack 0
  2011  000012                     ___lldiv@quotient:
  2012                           	callstack 0
  2013  000012                     mensagem_inicial@msg_linha_um:
  2014                           	callstack 0
  2015                           
  2016                           ; 17 bytes @ 0x11
  2017  000012                     	ds	1
  2018  000013                     ??_atoi:
  2019  000013                     command@CRC:
  2020                           	callstack 0
  2021  000013                     monta_sd@index:
  2022                           	callstack 0
  2023  000013                     make_dirfile@dirname:
  2024                           	callstack 0
  2025  000013                     ___aldiv@sign:
  2026                           	callstack 0
  2027  000013                     utoa@val:
  2028                           	callstack 0
  2029  000013                     memcpy@s:
  2030                           	callstack 0
  2031                           
  2032                           ; 2 bytes @ 0x12
  2033  000013                     	ds	1
  2034  000014                     ??_make_dirfile:
  2035  000014                     ??_validate:
  2036  000014                     command@CMD:
  2037                           	callstack 0
  2038  000014                     monta_sd@i:
  2039                           	callstack 0
  2040  000014                     ___aldiv@quotient:
  2041                           	callstack 0
  2042                           
  2043                           ; 4 bytes @ 0x13
  2044  000014                     	ds	1
  2045  000015                     command@argument:
  2046                           	callstack 0
  2047  000015                     atoi@sign:
  2048                           	callstack 0
  2049  000015                     utoa@base:
  2050                           	callstack 0
  2051                           
  2052                           ; 2 bytes @ 0x14
  2053  000015                     	ds	1
  2054  000016                     ?_atol:
  2055                           	callstack 0
  2056  000016                     ?_clust2sect:
  2057                           	callstack 0
  2058  000016                     ___lldiv@counter:
  2059                           	callstack 0
  2060  000016                     sdc_disk_read@p_buff:
  2061                           	callstack 0
  2062  000016                     sdc_disk_write@p_buff:
  2063                           	callstack 0
  2064  000016                     clust2sect@clust:
  2065                           	callstack 0
  2066  000016                     _make_dirfile$1733:
  2067                           	callstack 0
  2068  000016                     atoi@a:
  2069                           	callstack 0
  2070  000016                     atol@s:
  2071                           	callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x15
  2074  000016                     	ds	1
  2075  000017                     ultoa@buf:
  2076                           	callstack 0
  2077  000017                     utoa@v:
  2078                           	callstack 0
  2079                           
  2080                           ; 2 bytes @ 0x16
  2081  000017                     	ds	1
  2082  000018                     ?___awtoft:
  2083                           	callstack 0
  2084  000018                     make_dirfile@b:
  2085                           	callstack 0
  2086  000018                     sdc_reset@count_nosd:
  2087                           	callstack 0
  2088  000018                     ___awtoft@c:
  2089                           	callstack 0
  2090  000018                     sdc_disk_read@sector:
  2091                           	callstack 0
  2092  000018                     sdc_disk_write@sector:
  2093                           	callstack 0
  2094  000018                     configura_baudrate_uart@baudrate:
  2095                           	callstack 0
  2096  000018                     ultoa@val:
  2097                           	callstack 0
  2098                           
  2099                           ; 4 bytes @ 0x17
  2100  000018                     	ds	1
  2101  000019                     make_dirfile@t:
  2102                           	callstack 0
  2103  000019                     utoa@c:
  2104                           	callstack 0
  2105                           
  2106                           ; 1 bytes @ 0x18
  2107  000019                     	ds	1
  2108  00001A                     ??_atol:
  2109  00001A                     ??_clust2sect:
  2110  00001A                     make_dirfile@a:
  2111                           	callstack 0
  2112  00001A                     sdc_reset@count:
  2113                           	callstack 0
  2114  00001A                     itoa@buf:
  2115                           	callstack 0
  2116                           
  2117                           ; 2 bytes @ 0x19
  2118  00001A                     	ds	1
  2119  00001B                     make_dirfile@n:
  2120                           	callstack 0
  2121  00001B                     ___awtoft@sign:
  2122                           	callstack 0
  2123                           
  2124                           ; 1 bytes @ 0x1A
  2125  00001B                     	ds	1
  2126  00001C                     ??_configura_baudrate_uart:
  2127  00001C                     ?___ftmul:
  2128                           	callstack 0
  2129  00001C                     sdc_reset@buff:
  2130                           	callstack 0
  2131  00001C                     sdc_disk_read@count:
  2132                           	callstack 0
  2133  00001C                     sdc_disk_write@count:
  2134                           	callstack 0
  2135  00001C                     make_dirfile@c:
  2136                           	callstack 0
  2137  00001C                     itoa@val:
  2138                           	callstack 0
  2139  00001C                     ultoa@base:
  2140                           	callstack 0
  2141  00001C                     ___ftmul@f1:
  2142                           	callstack 0
  2143                           
  2144                           ; 3 bytes @ 0x1B
  2145  00001C                     	ds	1
  2146  00001D                     ??_sdc_disk_initialize:
  2147  00001D                     ??_sdc_disk_read:
  2148  00001D                     ??_sdc_disk_write:
  2149                           
  2150                           ; 1 bytes @ 0x1C
  2151  00001D                     	ds	1
  2152  00001E                     atol@sign:
  2153                           	callstack 0
  2154  00001E                     itoa@base:
  2155                           	callstack 0
  2156  00001E                     ultoa@v:
  2157                           	callstack 0
  2158                           
  2159                           ; 4 bytes @ 0x1D
  2160  00001E                     	ds	1
  2161  00001F                     clust2sect@fs:
  2162                           	callstack 0
  2163  00001F                     ___ftmul@f2:
  2164                           	callstack 0
  2165  00001F                     atol@a:
  2166                           	callstack 0
  2167                           
  2168                           ; 4 bytes @ 0x1E
  2169  00001F                     	ds	1
  2170  000020                     sdc_disk_initialize@stat:
  2171                           	callstack 0
  2172                           
  2173                           ; 1 bytes @ 0x1F
  2174  000020                     	ds	1
  2175  000021                     sdc_disk_initialize@count1:
  2176                           	callstack 0
  2177                           
  2178                           ; 2 bytes @ 0x20
  2179  000021                     	ds	1
  2180  000022                     ??___ftmul:
  2181  000022                     ultoa@c:
  2182                           	callstack 0
  2183  000022                     sdc_disk_read@start_add:
  2184                           	callstack 0
  2185                           
  2186                           ; 4 bytes @ 0x21
  2187  000022                     	ds	1
  2188  000023                     atol@c:
  2189                           	callstack 0
  2190  000023                     ltoa@buf:
  2191                           	callstack 0
  2192  000023                     sdc_disk_initialize@crc_number:
  2193                           	callstack 0
  2194  000023                     sdc_disk_write@count1:
  2195                           	callstack 0
  2196  000023                     mensagem_inicial@msg_dois:
  2197                           	callstack 0
  2198                           
  2199                           ; 17 bytes @ 0x22
  2200  000023                     	ds	1
  2201  000024                     ?_convert_to_int_point_lat:
  2202                           	callstack 0
  2203  000024                     ?_convert_to_int:
  2204                           	callstack 0
  2205  000024                     ?_convert_to_int_point_long:
  2206                           	callstack 0
  2207  000024                     configura_baudrate_uart@x:
  2208                           	callstack 0
  2209  000024                     convert_to_int@p_buff:
  2210                           	callstack 0
  2211  000024                     ltoa@val:
  2212                           	callstack 0
  2213                           
  2214                           ; 4 bytes @ 0x23
  2215  000024                     	ds	1
  2216  000025                     sdc_disk_initialize@buff_i:
  2217                           	callstack 0
  2218  000025                     sdc_disk_write@res:
  2219                           	callstack 0
  2220  000025                     ___ftmul@exp:
  2221                           	callstack 0
  2222                           
  2223                           ; 1 bytes @ 0x24
  2224  000025                     	ds	1
  2225  000026                     sdc_disk_initialize@ocr:
  2226                           	callstack 0
  2227  000026                     sdc_disk_read@length:
  2228                           	callstack 0
  2229  000026                     sdc_disk_write@j:
  2230                           	callstack 0
  2231  000026                     ___ftmul@f3_as_product:
  2232                           	callstack 0
  2233                           
  2234                           ; 3 bytes @ 0x25
  2235  000026                     	ds	1
  2236  000027                     sdc_disk_initialize@count2:
  2237                           	callstack 0
  2238                           
  2239                           ; 2 bytes @ 0x26
  2240  000027                     	ds	1
  2241  000028                     sdc_disk_read@buff:
  2242                           	callstack 0
  2243  000028                     sdc_disk_write@buff:
  2244                           	callstack 0
  2245  000028                     ltoa@base:
  2246                           	callstack 0
  2247  000028                     convert_to_int_point_lat@convert_str_lat:
  2248                           	callstack 0
  2249  000028                     convert_to_int_point_long@convert_str_long:
  2250                           	callstack 0
  2251                           
  2252                           ; 10 bytes @ 0x27
  2253  000028                     	ds	1
  2254  000029                     sdc_disk_initialize@buff:
  2255                           	callstack 0
  2256  000029                     ___ftmul@cntr:
  2257                           	callstack 0
  2258  000029                     disk_read@buff:
  2259                           	callstack 0
  2260  000029                     disk_write@buff:
  2261                           	callstack 0
  2262                           
  2263                           ; 2 bytes @ 0x28
  2264  000029                     	ds	1
  2265  00002A                     disk_initialize@pdrv:
  2266                           	callstack 0
  2267  00002A                     ___ftmul@sign:
  2268                           	callstack 0
  2269                           
  2270                           ; 1 bytes @ 0x29
  2271  00002A                     	ds	1
  2272  00002B                     ?___fttol:
  2273                           	callstack 0
  2274  00002B                     disk_initialize@stat:
  2275                           	callstack 0
  2276  00002B                     ___fttol@f1:
  2277                           	callstack 0
  2278  00002B                     disk_read@sector:
  2279                           	callstack 0
  2280  00002B                     disk_write@sector:
  2281                           	callstack 0
  2282  00002B                     escreve_inteiro_lcd@valor:
  2283                           	callstack 0
  2284                           
  2285                           ; 4 bytes @ 0x2A
  2286  00002B                     	ds	4
  2287  00002F                     ??___fttol:
  2288  00002F                     disk_read@count:
  2289                           	callstack 0
  2290  00002F                     disk_write@count:
  2291                           	callstack 0
  2292  00002F                     escreve_inteiro_lcd@texto:
  2293                           	callstack 0
  2294                           
  2295                           ; 7 bytes @ 0x2E
  2296  00002F                     	ds	1
  2297  000030                     ??_disk_read:
  2298  000030                     ??_disk_write:
  2299                           
  2300                           ; 1 bytes @ 0x2F
  2301  000030                     	ds	1
  2302  000031                     disk_read@pdrv:
  2303                           	callstack 0
  2304  000031                     disk_write@pdrv:
  2305                           	callstack 0
  2306                           
  2307                           ; 1 bytes @ 0x30
  2308  000031                     	ds	1
  2309  000032                     convert_to_int_point_long@j:
  2310                           	callstack 0
  2311  000032                     disk_read@result:
  2312                           	callstack 0
  2313  000032                     disk_write@result:
  2314                           	callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x31
  2317  000032                     	ds	1
  2318  000033                     convert_to_int_point_lat@j:
  2319                           	callstack 0
  2320  000033                     convert_to_int_point_long@i:
  2321                           	callstack 0
  2322                           
  2323                           ; 1 bytes @ 0x32
  2324  000033                     	ds	1
  2325  000034                     disk_read@res:
  2326                           	callstack 0
  2327  000034                     disk_write@res:
  2328                           	callstack 0
  2329  000034                     convert_to_int_point_lat@i:
  2330                           	callstack 0
  2331  000034                     ___fttol@sign1:
  2332                           	callstack 0
  2333                           
  2334                           ; 1 bytes @ 0x33
  2335  000034                     	ds	1
  2336  000035                     diferenca@index:
  2337                           	callstack 0
  2338  000035                     move_window@sector:
  2339                           	callstack 0
  2340  000035                     check_fs@sect:
  2341                           	callstack 0
  2342  000035                     ___fttol@lval:
  2343                           	callstack 0
  2344                           
  2345                           ; 4 bytes @ 0x34
  2346  000035                     	ds	1
  2347  000036                     ??_troca_de_tela:
  2348  000036                     diferenca@valor_lat:
  2349                           	callstack 0
  2350                           
  2351                           ; 4 bytes @ 0x35
  2352  000036                     	ds	1
  2353  000037                     troca_de_tela@fix_signal:
  2354                           	callstack 0
  2355                           
  2356                           ; 2 bytes @ 0x36
  2357  000037                     	ds	1
  2358  000038                     get_fattime@f_time:
  2359                           	callstack 0
  2360                           
  2361                           ; 10 bytes @ 0x37
  2362  000038                     	ds	1
  2363  000039                     ??_move_window:
  2364  000039                     ___fttol@exp1:
  2365                           	callstack 0
  2366                           
  2367                           ; 1 bytes @ 0x38
  2368  000039                     	ds	1
  2369  00003A                     diferenca@valor_long:
  2370                           	callstack 0
  2371                           
  2372                           ; 4 bytes @ 0x39
  2373  00003A                     	ds	1
  2374  00003B                     check_fs@fs:
  2375                           	callstack 0
  2376                           
  2377                           ; 2 bytes @ 0x3A
  2378  00003B                     	ds	2
  2379  00003D                     auto_mount@path:
  2380                           	callstack 0
  2381                           
  2382                           ; 1 bytes @ 0x3C
  2383  00003D                     	ds	1
  2384  00003E                     auto_mount@chk_wp:
  2385                           	callstack 0
  2386  00003E                     armazena_ltlo@buffer:
  2387                           	callstack 0
  2388                           
  2389                           ; 1 bytes @ 0x3D
  2390  00003E                     	ds	1
  2391  00003F                     armazena_ltlo@index:
  2392                           	callstack 0
  2393                           
  2394                           ; 1 bytes @ 0x3E
  2395  00003F                     	ds	1
  2396  000040                     armazena_ltlo@j:
  2397                           	callstack 0
  2398                           
  2399                           ; 1 bytes @ 0x3F
  2400  000040                     	ds	1
  2401  000041                     armazena_ltlo@i:
  2402                           	callstack 0
  2403                           
  2404                           ; 1 bytes @ 0x40
  2405  000041                     	ds	1
  2406  000042                     
  2407                           ; 1 bytes @ 0x41
  2408  000042                     	ds	1
  2409  000043                     ??_verifica_fence:
  2410  000043                     move_window@n:
  2411                           	callstack 0
  2412                           
  2413                           ; 1 bytes @ 0x42
  2414  000043                     	ds	1
  2415  000044                     ??_verifica_dados_operacionais:
  2416  000044                     move_window@wsect:
  2417                           	callstack 0
  2418                           
  2419                           ; 4 bytes @ 0x43
  2420  000044                     	ds	4
  2421  000048                     move_window@fs:
  2422                           	callstack 0
  2423                           
  2424                           ; 2 bytes @ 0x47
  2425  000048                     	ds	2
  2426  00004A                     ?_get_cluster:
  2427                           	callstack 0
  2428  00004A                     sync@fs:
  2429                           	callstack 0
  2430  00004A                     get_cluster@clust:
  2431                           	callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x49
  2434  00004A                     	ds	2
  2435  00004C                     ??_fputs:
  2436  00004C                     next_dir_entry@dj:
  2437                           	callstack 0
  2438  00004C                     f_close@res:
  2439                           	callstack 0
  2440                           
  2441                           ; 1 bytes @ 0x4B
  2442  00004C                     	ds	1
  2443  00004D                     
  2444                           ; 1 bytes @ 0x4C
  2445 ;;
  2446 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2447 ;;
  2448 ;; *************** function _main *****************
  2449 ;; Defined at:
  2450 ;;		line 221 in file "main.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels required when called:   18
  2470 ;; This function calls:
  2471 ;;		_escalonador
  2472 ;;		_gps
  2473 ;;		_inicializa_tarefas
  2474 ;;		_inicializa_uart
  2475 ;;		_init_hardware
  2476 ;;		_init_lcd
  2477 ;;		_mensagem_inicial
  2478 ;; This function is called by:
  2479 ;;		Startup code after reset
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text0
  2484  00577C                     __ptext0:
  2485                           	callstack 0
  2486  00577C                     _main:
  2487                           	callstack 13
  2488                           
  2489                           ;main.c: 223: init_hardware();
  2490                           
  2491                           ;incstack = 0
  2492  00577C  ECA7  F02D         	call	_init_hardware	;wreg free
  2493                           
  2494                           ;main.c: 224: T0CONbits.TMR0ON = 0;
  2495  005780  9ED5               	bcf	213,7,c	;volatile
  2496                           
  2497                           ;main.c: 225: init_lcd();
  2498  005782  EC01  F023         	call	_init_lcd	;wreg free
  2499                           
  2500                           ;main.c: 226: mensagem_inicial();
  2501  005786  EC50  F023         	call	_mensagem_inicial	;wreg free
  2502                           
  2503                           ;main.c: 227: inicializa_tarefas();
  2504  00578A  EC0C  F029         	call	_inicializa_tarefas	;wreg free
  2505                           
  2506                           ; BSR set to: 1
  2507                           ;main.c: 228: inicializa_uart();
  2508  00578E  ECCB  F02C         	call	_inicializa_uart	;wreg free
  2509                           
  2510                           ;main.c: 231: T0CONbits.TMR0ON = 1;
  2511  005792  8ED5               	bsf	213,7,c	;volatile
  2512  005794                     l13830:
  2513                           
  2514                           ;main.c: 233: {;main.c: 235: if ((sinaliza_int_timer == 1) && (3))
  2515  005794  0100               	movlb	0	; () banked
  2516  005796  05F2               	decf	_sinaliza_int_timer& (0+255),w,b
  2517  005798  A4D8               	btfss	status,2,c
  2518  00579A  D004               	goto	l13836
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;main.c: 236: {;main.c: 237: sinaliza_int_timer = 0;
  2522  00579C  0E00               	movlw	0
  2523  00579E  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;main.c: 238: escalonador();
  2527  0057A0  EC0A  F022         	call	_escalonador	;wreg free
  2528  0057A4                     l13836:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;main.c: 239: };main.c: 240: gps();
  2532  0057A4  EC28  F02B         	call	_gps	;wreg free
  2533  0057A8  D7F5               	goto	l13830
  2534  0057AA                     __end_of_main:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _mensagem_inicial *****************
  2538 ;; Defined at:
  2539 ;;		line 249 in file "main.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  msg_dois       17   34[COMRAM] const unsigned char [17]
  2544 ;;  msg_linha_um   17   17[COMRAM] const unsigned char [17]
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0
  2555 ;;      Locals:        34       0       0       0       0       0       0       0       0
  2556 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2557 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2558 ;;Total ram usage:       36 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    5
  2561 ;; This function calls:
  2562 ;;		_escreve_cmd_lcd
  2563 ;;		_escreve_frase_ram_lcd
  2564 ;;		_posicao_cursor_lcd
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text1
  2571  0046A0                     __ptext1:
  2572                           	callstack 0
  2573  0046A0                     _mensagem_inicial:
  2574                           	callstack 25
  2575                           
  2576                           ;main.c: 251: const unsigned char msg_linha_um[17] = "FATEC ST ANDRE";
  2577                           
  2578                           ;incstack = 0
  2579  0046A0  0E12               	movlw	low mensagem_inicial@F3677
  2580  0046A2  6EF6               	movwf	tblptrl,c
  2581  0046A4                     	if	1	;There is more than 1 active tblptr byte
  2582  0046A4  0E61               	movlw	high mensagem_inicial@F3677
  2583  0046A6  6EF7               	movwf	tblptrh,c
  2584  0046A8                     	endif
  2585  0046A8                     	if	1	;There are 3 active tblptr bytes
  2586  0046A8  0E00               	movlw	low (mensagem_inicial@F3677 shr (0+16))
  2587  0046AA  6EF8               	movwf	tblptru,c
  2588  0046AC                     	endif
  2589  0046AC  EE20  F012         	lfsr	2,mensagem_inicial@msg_linha_um
  2590  0046B0  0E10               	movlw	16
  2591  0046B2                     u16500:
  2592  0046B2  0009               	tblrd		*+
  2593  0046B4  CFF5 FFDE          	movff	tablat,postinc2
  2594  0046B8  06E8               	decf	wreg,f,c
  2595  0046BA  E2FB               	bc	u16500
  2596                           
  2597                           ;main.c: 252: const unsigned char msg_dois[17] = "TCC--TELEMTRIA";
  2598  0046BC  0E01               	movlw	low mensagem_inicial@F3679
  2599  0046BE  6EF6               	movwf	tblptrl,c
  2600  0046C0                     	if	1	;There is more than 1 active tblptr byte
  2601  0046C0  0E61               	movlw	high mensagem_inicial@F3679
  2602  0046C2  6EF7               	movwf	tblptrh,c
  2603  0046C4                     	endif
  2604  0046C4                     	if	1	;There are 3 active tblptr bytes
  2605  0046C4  0E00               	movlw	low (mensagem_inicial@F3679 shr (0+16))
  2606  0046C6  6EF8               	movwf	tblptru,c
  2607  0046C8                     	endif
  2608  0046C8  EE20  F023         	lfsr	2,mensagem_inicial@msg_dois
  2609  0046CC  0E10               	movlw	16
  2610  0046CE                     u16510:
  2611  0046CE  0009               	tblrd		*+
  2612  0046D0  CFF5 FFDE          	movff	tablat,postinc2
  2613  0046D4  06E8               	decf	wreg,f,c
  2614  0046D6  E2FB               	bc	u16510
  2615                           
  2616                           ;main.c: 254: posicao_cursor_lcd(1,0);
  2617  0046D8  0E00               	movlw	0
  2618  0046DA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2619  0046DC  0E01               	movlw	1
  2620  0046DE  EC58  F027         	call	_posicao_cursor_lcd
  2621                           
  2622                           ;main.c: 255: escreve_frase_ram_lcd(msg_linha_um);
  2623  0046E2  0E12               	movlw	low mensagem_inicial@msg_linha_um
  2624  0046E4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2625  0046E6  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2626  0046E8  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2627                           
  2628                           ;main.c: 257: posicao_cursor_lcd(2,0);
  2629  0046EC  0E00               	movlw	0
  2630  0046EE  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2631  0046F0  0E02               	movlw	2
  2632  0046F2  EC58  F027         	call	_posicao_cursor_lcd
  2633                           
  2634                           ;main.c: 258: escreve_frase_ram_lcd(msg_dois);
  2635  0046F6  0E23               	movlw	low mensagem_inicial@msg_dois
  2636  0046F8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2637  0046FA  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2638  0046FC  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2639                           
  2640                           ;main.c: 259: _delay((unsigned long)((1000)*(48000000/4000.0)));
  2641  004700  0E3D               	movlw	61
  2642  004702  6E11               	movwf	(??_mensagem_inicial+1)^0,c
  2643  004704  0EE1               	movlw	225
  2644  004706  6E10               	movwf	??_mensagem_inicial^0,c
  2645  004708  0E40               	movlw	64
  2646  00470A                     u16677:
  2647  00470A  2EE8               	decfsz	wreg,f,c
  2648  00470C  D7FE               	bra	u16677
  2649  00470E  2E10               	decfsz	??_mensagem_inicial^0,f,c
  2650  004710  D7FC               	bra	u16677
  2651  004712  2E11               	decfsz	(??_mensagem_inicial+1)^0,f,c
  2652  004714  D7FA               	bra	u16677
  2653                           
  2654                           ;main.c: 260: escreve_cmd_lcd(0b00000001);
  2655  004716  0E01               	movlw	1
  2656  004718  EC2B  F024         	call	_escreve_cmd_lcd
  2657                           
  2658                           ;main.c: 261: posicao_cursor_lcd(1,0);
  2659  00471C  0E00               	movlw	0
  2660  00471E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  2661  004720  0E01               	movlw	1
  2662  004722  EC58  F027         	call	_posicao_cursor_lcd
  2663                           
  2664                           ;main.c: 262: escreve_frase_ram_lcd("AGUARDE...");
  2665  004726  0ED5               	movlw	low STR_19
  2666  004728  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  2667  00472A  0E61               	movlw	high STR_19
  2668  00472C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  2669  00472E  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  2670  004732  0012               	return		;funcret
  2671  004734                     __end_of_mensagem_inicial:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _init_lcd *****************
  2675 ;; Defined at:
  2676 ;;		line 71 in file "bibliotecas/display_lcd.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2692 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2693 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2694 ;;Total ram usage:        1 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    4
  2697 ;; This function calls:
  2698 ;;		_delay
  2699 ;;		_escreve_cmd_lcd
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text2
  2706  004602                     __ptext2:
  2707                           	callstack 0
  2708  004602                     _init_lcd:
  2709                           	callstack 26
  2710                           
  2711                           ;display_lcd.c: 74: TRISDbits.RD2 = 0;
  2712                           
  2713                           ;incstack = 0
  2714  004602  9495               	bcf	149,2,c	;volatile
  2715                           
  2716                           ;display_lcd.c: 75: TRISDbits.RD1 = 0;
  2717  004604  9295               	bcf	149,1,c	;volatile
  2718                           
  2719                           ;display_lcd.c: 76: TRISDbits.RD0 = 0;
  2720  004606  9095               	bcf	149,0,c	;volatile
  2721                           
  2722                           ;display_lcd.c: 79: TRISDbits.RD4=0;
  2723  004608  9895               	bcf	149,4,c	;volatile
  2724                           
  2725                           ;display_lcd.c: 80: TRISDbits.RD5=0;
  2726  00460A  9A95               	bcf	149,5,c	;volatile
  2727                           
  2728                           ;display_lcd.c: 81: TRISDbits.RD6=0;
  2729  00460C  9C95               	bcf	149,6,c	;volatile
  2730                           
  2731                           ;display_lcd.c: 82: TRISDbits.RD7=0;
  2732  00460E  9E95               	bcf	149,7,c	;volatile
  2733                           
  2734                           ;display_lcd.c: 89: PORTDbits.RD2 = 0;
  2735  004610  9483               	bcf	131,2,c	;volatile
  2736                           
  2737                           ;display_lcd.c: 90: PORTDbits.RD1 = 0;
  2738  004612  9283               	bcf	131,1,c	;volatile
  2739                           
  2740                           ;display_lcd.c: 91: PORTDbits.RD0 = 0;
  2741  004614  9083               	bcf	131,0,c	;volatile
  2742                           
  2743                           ;display_lcd.c: 95: PORTDbits.RD7=0;
  2744  004616  9E83               	bcf	131,7,c	;volatile
  2745                           
  2746                           ;display_lcd.c: 96: PORTDbits.RD6=0;
  2747  004618  9C83               	bcf	131,6,c	;volatile
  2748                           
  2749                           ;display_lcd.c: 97: PORTDbits.RD5=1;
  2750  00461A  8A83               	bsf	131,5,c	;volatile
  2751                           
  2752                           ;display_lcd.c: 98: PORTDbits.RD4=1;
  2753  00461C  8883               	bsf	131,4,c	;volatile
  2754                           
  2755                           ;display_lcd.c: 103: _delay((unsigned long)((15)*(48000000/4000.0)));
  2756  00461E  0EEA               	movlw	234
  2757  004620  6E0D               	movwf	??_init_lcd^0,c
  2758  004622  0EC3               	movlw	195
  2759  004624                     u16687:
  2760  004624  2EE8               	decfsz	wreg,f,c
  2761  004626  D7FE               	bra	u16687
  2762  004628  2E0D               	decfsz	??_init_lcd^0,f,c
  2763  00462A  D7FC               	bra	u16687
  2764  00462C  F000               	nop	
  2765                           
  2766                           ;display_lcd.c: 107: PORTDbits.RD0 = 1;
  2767  00462E  8083               	bsf	131,0,c	;volatile
  2768                           
  2769                           ;display_lcd.c: 108: delay();
  2770  004630  EC61  F02D         	call	_delay	;wreg free
  2771                           
  2772                           ;display_lcd.c: 109: PORTDbits.RD0 = 0;
  2773  004634  9083               	bcf	131,0,c	;volatile
  2774                           
  2775                           ;display_lcd.c: 110: delay();
  2776  004636  EC61  F02D         	call	_delay	;wreg free
  2777                           
  2778                           ;display_lcd.c: 115: _delay((unsigned long)((5)*(48000000/4000.0)));
  2779  00463A  0E4E               	movlw	78
  2780  00463C  6E0D               	movwf	??_init_lcd^0,c
  2781  00463E  0EEB               	movlw	235
  2782  004640                     u16697:
  2783  004640  2EE8               	decfsz	wreg,f,c
  2784  004642  D7FE               	bra	u16697
  2785  004644  2E0D               	decfsz	??_init_lcd^0,f,c
  2786  004646  D7FC               	bra	u16697
  2787  004648  F000               	nop	
  2788                           
  2789                           ;display_lcd.c: 118: PORTDbits.RD0 = 1;
  2790  00464A  8083               	bsf	131,0,c	;volatile
  2791                           
  2792                           ;display_lcd.c: 119: delay();
  2793  00464C  EC61  F02D         	call	_delay	;wreg free
  2794                           
  2795                           ;display_lcd.c: 120: PORTDbits.RD0 = 0;
  2796  004650  9083               	bcf	131,0,c	;volatile
  2797                           
  2798                           ;display_lcd.c: 121: delay();
  2799  004652  EC61  F02D         	call	_delay	;wreg free
  2800                           
  2801                           ;display_lcd.c: 126: _delay((unsigned long)((5)*(48000000/4000.0)));
  2802  004656  0E4E               	movlw	78
  2803  004658  6E0D               	movwf	??_init_lcd^0,c
  2804  00465A  0EEB               	movlw	235
  2805  00465C                     u16707:
  2806  00465C  2EE8               	decfsz	wreg,f,c
  2807  00465E  D7FE               	bra	u16707
  2808  004660  2E0D               	decfsz	??_init_lcd^0,f,c
  2809  004662  D7FC               	bra	u16707
  2810  004664  F000               	nop	
  2811                           
  2812                           ;display_lcd.c: 129: PORTDbits.RD0 = 1;
  2813  004666  8083               	bsf	131,0,c	;volatile
  2814                           
  2815                           ;display_lcd.c: 130: delay();
  2816  004668  EC61  F02D         	call	_delay	;wreg free
  2817                           
  2818                           ;display_lcd.c: 131: PORTDbits.RD0 = 0;
  2819  00466C  9083               	bcf	131,0,c	;volatile
  2820                           
  2821                           ;display_lcd.c: 132: delay();
  2822  00466E  EC61  F02D         	call	_delay	;wreg free
  2823                           
  2824                           ;display_lcd.c: 135: PORTDbits.RD7=0;
  2825  004672  9E83               	bcf	131,7,c	;volatile
  2826                           
  2827                           ;display_lcd.c: 136: PORTDbits.RD6=0;
  2828  004674  9C83               	bcf	131,6,c	;volatile
  2829                           
  2830                           ;display_lcd.c: 137: PORTDbits.RD5=1;
  2831  004676  8A83               	bsf	131,5,c	;volatile
  2832                           
  2833                           ;display_lcd.c: 138: PORTDbits.RD4=0;
  2834  004678  9883               	bcf	131,4,c	;volatile
  2835                           
  2836                           ;display_lcd.c: 142: PORTDbits.RD0 = 1;
  2837  00467A  8083               	bsf	131,0,c	;volatile
  2838                           
  2839                           ;display_lcd.c: 143: delay();
  2840  00467C  EC61  F02D         	call	_delay	;wreg free
  2841                           
  2842                           ;display_lcd.c: 144: PORTDbits.RD0 = 0;
  2843  004680  9083               	bcf	131,0,c	;volatile
  2844                           
  2845                           ;display_lcd.c: 145: delay();
  2846  004682  EC61  F02D         	call	_delay	;wreg free
  2847                           
  2848                           ;display_lcd.c: 149: escreve_cmd_lcd(0b00101000);
  2849  004686  0E28               	movlw	40
  2850  004688  EC2B  F024         	call	_escreve_cmd_lcd
  2851                           
  2852                           ;display_lcd.c: 150: escreve_cmd_lcd(0b00000110);
  2853  00468C  0E06               	movlw	6
  2854  00468E  EC2B  F024         	call	_escreve_cmd_lcd
  2855                           
  2856                           ;display_lcd.c: 151: escreve_cmd_lcd(0b00001110);
  2857  004692  0E0E               	movlw	14
  2858  004694  EC2B  F024         	call	_escreve_cmd_lcd
  2859                           
  2860                           ;display_lcd.c: 152: escreve_cmd_lcd(0b00000001);
  2861  004698  0E01               	movlw	1
  2862  00469A  EC2B  F024         	call	_escreve_cmd_lcd
  2863  00469E  0012               	return		;funcret
  2864  0046A0                     __end_of_init_lcd:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _init_hardware *****************
  2868 ;; Defined at:
  2869 ;;		line 52 in file "bibliotecas/hardware.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    4
  2890 ;; This function calls:
  2891 ;;		_config_timer_dois
  2892 ;;		_config_timer_zero
  2893 ;;		_init_interrupt
  2894 ;;		_init_oscilador
  2895 ;;		_init_ports
  2896 ;; This function is called by:
  2897 ;;		_main
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text3
  2902  005B4E                     __ptext3:
  2903                           	callstack 0
  2904  005B4E                     _init_hardware:
  2905                           	callstack 26
  2906                           
  2907                           ;hardware.c: 55: init_oscilador();
  2908                           
  2909                           ;incstack = 0
  2910  005B4E  EC2D  F02E         	call	_init_oscilador	;wreg free
  2911                           
  2912                           ;hardware.c: 58: init_ports();
  2913  005B52  EC7F  F02D         	call	_init_ports	;wreg free
  2914                           
  2915                           ;hardware.c: 61: config_timer_zero();
  2916  005B56  EC8D  F02D         	call	_config_timer_zero	;wreg free
  2917                           
  2918                           ;hardware.c: 64: config_timer_dois();
  2919  005B5A  ECEC  F02D         	call	_config_timer_dois	;wreg free
  2920                           
  2921                           ;hardware.c: 67: init_interrupt();
  2922  005B5E  ECB2  F02D         	call	_init_interrupt	;wreg free
  2923  005B62  0012               	return		;funcret
  2924  005B64                     __end_of_init_hardware:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _init_ports *****************
  2928 ;; Defined at:
  2929 ;;		line 151 in file "bibliotecas/hardware.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2946 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2947 ;;Total ram usage:        0 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    2
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_init_hardware
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text4
  2958  005AFE                     __ptext4:
  2959                           	callstack 0
  2960  005AFE                     _init_ports:
  2961                           	callstack 27
  2962                           
  2963                           ;hardware.c: 153: ADCON1 = 0X0F;
  2964                           
  2965                           ;incstack = 0
  2966  005AFE  0E0F               	movlw	15
  2967  005B00  6EC1               	movwf	193,c	;volatile
  2968                           
  2969                           ;hardware.c: 154: TRISB = 0b00000001;
  2970  005B02  0E01               	movlw	1
  2971  005B04  6E93               	movwf	147,c	;volatile
  2972                           
  2973                           ;hardware.c: 155: LATB = 0xFF;
  2974  005B06  688A               	setf	138,c	;volatile
  2975                           
  2976                           ;hardware.c: 156: TRISD = 0x00;
  2977  005B08  0E00               	movlw	0
  2978  005B0A  6E95               	movwf	149,c	;volatile
  2979                           
  2980                           ;hardware.c: 157: TRISA = 0b00000111;
  2981  005B0C  0E07               	movlw	7
  2982  005B0E  6E92               	movwf	146,c	;volatile
  2983                           
  2984                           ;hardware.c: 158: TRISC = 0x01111111;
  2985  005B10  0E11               	movlw	17
  2986  005B12  6E94               	movwf	148,c	;volatile
  2987                           
  2988                           ;hardware.c: 159: TRISE = 0b00000111;
  2989  005B14  0E07               	movlw	7
  2990  005B16  6E96               	movwf	150,c	;volatile
  2991  005B18  0012               	return		;funcret
  2992  005B1A                     __end_of_init_ports:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _init_oscilador *****************
  2996 ;; Defined at:
  2997 ;;		line 169 in file "bibliotecas/hardware.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		None
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3014 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3015 ;;Total ram usage:        0 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    2
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_init_hardware
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text5
  3026  005C5A                     __ptext5:
  3027                           	callstack 0
  3028  005C5A                     _init_oscilador:
  3029                           	callstack 27
  3030                           
  3031                           ;hardware.c: 172: OSCCONbits.IRCF0 = 1;
  3032                           
  3033                           ;incstack = 0
  3034  005C5A  88D3               	bsf	211,4,c	;volatile
  3035                           
  3036                           ;hardware.c: 173: OSCCONbits.IRCF1 = 1;
  3037  005C5C  8AD3               	bsf	211,5,c	;volatile
  3038                           
  3039                           ;hardware.c: 174: OSCCONbits.IRCF2 = 1;
  3040  005C5E  8CD3               	bsf	211,6,c	;volatile
  3041  005C60  0012               	return		;funcret
  3042  005C62                     __end_of_init_oscilador:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _init_interrupt *****************
  3046 ;; Defined at:
  3047 ;;		line 94 in file "bibliotecas/hardware.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3064 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    2
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_init_hardware
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text6
  3076  005B64                     __ptext6:
  3077                           	callstack 0
  3078  005B64                     _init_interrupt:
  3079                           	callstack 27
  3080                           
  3081                           ;hardware.c: 96: INTCON = 0b10110000;
  3082                           
  3083                           ;incstack = 0
  3084  005B64  0EB0               	movlw	176
  3085  005B66  6EF2               	movwf	242,c	;volatile
  3086                           
  3087                           ;hardware.c: 97: INTCON2 = 0b00000000;
  3088  005B68  0E00               	movlw	0
  3089  005B6A  6EF1               	movwf	241,c	;volatile
  3090                           
  3091                           ;hardware.c: 98: INTCON3 = 0b00000000;
  3092  005B6C  0E00               	movlw	0
  3093  005B6E  6EF0               	movwf	240,c	;volatile
  3094                           
  3095                           ;hardware.c: 100: PIE1 = 0b00101000;
  3096  005B70  0E28               	movlw	40
  3097  005B72  6E9D               	movwf	157,c	;volatile
  3098  005B74  0012               	return		;funcret
  3099  005B76                     __end_of_init_interrupt:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function _config_timer_zero *****************
  3103 ;; Defined at:
  3104 ;;		line 79 in file "bibliotecas/hardware.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3118 ;;      Params:         0       0       0       0       0       0       0       0       0
  3119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3121 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3122 ;;Total ram usage:        0 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    3
  3125 ;; This function calls:
  3126 ;;		_write_timer_zero
  3127 ;; This function is called by:
  3128 ;;		_init_hardware
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text7
  3133  005B1A                     __ptext7:
  3134                           	callstack 0
  3135  005B1A                     _config_timer_zero:
  3136                           	callstack 26
  3137                           
  3138                           ;hardware.c: 81: T0CON = 0b11000101;
  3139                           
  3140                           ;incstack = 0
  3141  005B1A  0EC5               	movlw	197
  3142  005B1C  6ED5               	movwf	213,c	;volatile
  3143                           
  3144                           ;hardware.c: 82: SPPCON = 0b00000000;
  3145  005B1E  0E00               	movlw	0
  3146  005B20  6E65               	movwf	101,c	;volatile
  3147                           
  3148                           ;hardware.c: 83: SPPCFG = 0b00000000;
  3149  005B22  0E00               	movlw	0
  3150  005B24  6E63               	movwf	99,c	;volatile
  3151                           
  3152                           ;hardware.c: 84: write_timer_zero(0x45);
  3153  005B26  0E00               	movlw	0
  3154  005B28  6E0B               	movwf	(write_timer_zero@timer0+1)^0,c
  3155  005B2A  0E45               	movlw	69
  3156  005B2C  6E0A               	movwf	write_timer_zero@timer0^0,c
  3157  005B2E  EC05  F02E         	call	_write_timer_zero	;wreg free
  3158  005B32  0012               	return		;funcret
  3159  005B34                     __end_of_config_timer_zero:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _write_timer_zero *****************
  3163 ;; Defined at:
  3164 ;;		line 134 in file "bibliotecas/hardware.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  timer0          2    9[COMRAM] unsigned int 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		None
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3178 ;;      Params:         2       0       0       0       0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3181 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3182 ;;Total ram usage:        2 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    2
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_config_timer_zero
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text8
  3193  005C0A                     __ptext8:
  3194                           	callstack 0
  3195  005C0A                     _write_timer_zero:
  3196                           	callstack 26
  3197                           
  3198                           ;hardware.c: 142: TMR0 = timer0;
  3199                           
  3200                           ;incstack = 0
  3201  005C0A  C00A  FFD6         	movff	write_timer_zero@timer0,4054	;volatile
  3202  005C0E  C00B  FFD7         	movff	write_timer_zero@timer0+1,4055	;volatile
  3203  005C12  0012               	return		;funcret
  3204  005C14                     __end_of_write_timer_zero:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _config_timer_dois *****************
  3208 ;; Defined at:
  3209 ;;		line 198 in file "bibliotecas/hardware.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3226 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    2
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_init_hardware
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text9
  3238  005BD8                     __ptext9:
  3239                           	callstack 0
  3240  005BD8                     _config_timer_dois:
  3241                           	callstack 27
  3242                           
  3243                           ;hardware.c: 200: T2CON = 0b00000100;
  3244                           
  3245                           ;incstack = 0
  3246  005BD8  0E04               	movlw	4
  3247  005BDA  6ECA               	movwf	202,c	;volatile
  3248                           
  3249                           ;hardware.c: 201: TMR2 = 0;
  3250  005BDC  0E00               	movlw	0
  3251  005BDE  6ECC               	movwf	204,c	;volatile
  3252                           
  3253                           ;hardware.c: 202: PR2 = 0x01;
  3254  005BE0  0E01               	movlw	1
  3255  005BE2  6ECB               	movwf	203,c	;volatile
  3256  005BE4  0012               	return		;funcret
  3257  005BE6                     __end_of_config_timer_dois:
  3258                           	callstack 0
  3259                           
  3260 ;; *************** function _inicializa_tarefas *****************
  3261 ;; Defined at:
  3262 ;;		line 171 in file "main.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 3F/1
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3276 ;;      Params:         0       0       0       0       0       0       0       0       0
  3277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3279 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3280 ;;Total ram usage:        0 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    2
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text10
  3291  005218                     __ptext10:
  3292                           	callstack 0
  3293  005218                     _inicializa_tarefas:
  3294                           	callstack 28
  3295                           
  3296                           ;main.c: 174: p_tarefas[0] = verifica_dados_operacionais;
  3297                           
  3298                           ;incstack = 0
  3299  005218  0E0C               	movlw	low _verifica_dados_operacionais
  3300  00521A  0101               	movlb	1	; () banked
  3301  00521C  6F39               	movwf	_p_tarefas& (0+255),b
  3302  00521E  0E2F               	movlw	high _verifica_dados_operacionais
  3303  005220  6F3A               	movwf	(_p_tarefas+1)& (0+255),b
  3304                           
  3305                           ;main.c: 175: p_tarefas[1] = disparo_gravacao;
  3306  005222  0E10               	movlw	low _disparo_gravacao
  3307  005224  6F3B               	movwf	(_p_tarefas+2)& (0+255),b
  3308  005226  0E28               	movlw	high _disparo_gravacao
  3309  005228  6F3C               	movwf	(_p_tarefas+3)& (0+255),b
  3310                           
  3311                           ;main.c: 176: p_tarefas[2] = troca_de_tela;
  3312  00522A  0EFC               	movlw	low _troca_de_tela
  3313  00522C  6F3D               	movwf	(_p_tarefas+4)& (0+255),b
  3314  00522E  0E1B               	movlw	high _troca_de_tela
  3315  005230  6F3E               	movwf	(_p_tarefas+5)& (0+255),b
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;main.c: 180: tempo_backup[0] = 500;
  3319  005232  0E01               	movlw	1
  3320  005234  6F34               	movwf	(_tempo_backup+1)& (0+255),b
  3321  005236  0EF4               	movlw	244
  3322  005238  6F33               	movwf	_tempo_backup& (0+255),b
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;main.c: 181: tempo_backup[1] = 1000;
  3326  00523A  0E03               	movlw	3
  3327  00523C  6F36               	movwf	(_tempo_backup+3)& (0+255),b
  3328  00523E  0EE8               	movlw	232
  3329  005240  6F35               	movwf	(_tempo_backup+2)& (0+255),b
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;main.c: 182: tempo_backup[2] = 5000;
  3333  005242  0E13               	movlw	19
  3334  005244  6F38               	movwf	(_tempo_backup+5)& (0+255),b
  3335  005246  0E88               	movlw	136
  3336  005248  6F37               	movwf	(_tempo_backup+4)& (0+255),b
  3337                           
  3338                           ; BSR set to: 1
  3339                           ;main.c: 185: tempo_tarefa[0] = 500;
  3340  00524A  0E01               	movlw	1
  3341  00524C  6F2E               	movwf	(_tempo_tarefa+1)& (0+255),b
  3342  00524E  0EF4               	movlw	244
  3343  005250  6F2D               	movwf	_tempo_tarefa& (0+255),b
  3344                           
  3345                           ; BSR set to: 1
  3346                           ;main.c: 186: tempo_tarefa[1] = 1000;
  3347  005252  0E03               	movlw	3
  3348  005254  6F30               	movwf	(_tempo_tarefa+3)& (0+255),b
  3349  005256  0EE8               	movlw	232
  3350  005258  6F2F               	movwf	(_tempo_tarefa+2)& (0+255),b
  3351                           
  3352                           ; BSR set to: 1
  3353                           ;main.c: 187: tempo_tarefa[2] = 5000;
  3354  00525A  0E13               	movlw	19
  3355  00525C  6F32               	movwf	(_tempo_tarefa+5)& (0+255),b
  3356  00525E  0E88               	movlw	136
  3357  005260  6F31               	movwf	(_tempo_tarefa+4)& (0+255),b
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;main.c: 189: tarefa_em_execucao = 0;
  3361  005262  0E00               	movlw	0
  3362  005264  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3363                           
  3364                           ; BSR set to: 1
  3365  005266  0012               	return		;funcret
  3366  005268                     __end_of_inicializa_tarefas:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function _escalonador *****************
  3370 ;; Defined at:
  3371 ;;		line 200 in file "main.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  cont            1  134[BANK0 ] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 3F/0
  3382 ;;		On exit  : 3F/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0
  3386 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3387 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3388 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3389 ;;Total ram usage:        3 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:   17
  3392 ;; This function calls:
  3393 ;;		_disparo_gravacao
  3394 ;;		_troca_de_tela
  3395 ;;		_verifica_dados_operacionais
  3396 ;; This function is called by:
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text11
  3402  004414                     __ptext11:
  3403                           	callstack 0
  3404  004414                     _escalonador:
  3405                           	callstack 13
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;main.c: 202: unsigned char cont;;main.c: 203: for(cont = 0; cont<3;cont++)
  3409                           
  3410                           ; BSR set to: 1
  3411                           ;incstack = 0
  3412  004414  0E00               	movlw	0
  3413  004416  6FE6               	movwf	escalonador@cont& (0+255),b
  3414  004418                     l13800:
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;main.c: 204: {;main.c: 205: if((p_tarefas[cont]!= 0 ) && tempo_tarefa[cont] == 0)
  3418  004418  51E6               	movf	escalonador@cont& (0+255),w,b
  3419  00441A  0D02               	mullw	2
  3420  00441C  0E39               	movlw	low _p_tarefas
  3421  00441E  24F3               	addwf	243,w,c
  3422  004420  6ED9               	movwf	fsr2l,c
  3423  004422  0E01               	movlw	high _p_tarefas
  3424  004424  20F4               	addwfc	prodh,w,c
  3425  004426  6EDA               	movwf	fsr2h,c
  3426  004428  50DE               	movf	postinc2,w,c
  3427  00442A  10DE               	iorwf	postinc2,w,c
  3428  00442C  B4D8               	btfsc	status,2,c
  3429  00442E  D042               	goto	l13812
  3430                           
  3431                           ; BSR set to: 0
  3432  004430  51E6               	movf	escalonador@cont& (0+255),w,b
  3433  004432  0D02               	mullw	2
  3434  004434  0E2D               	movlw	low _tempo_tarefa
  3435  004436  24F3               	addwf	243,w,c
  3436  004438  6ED9               	movwf	fsr2l,c
  3437  00443A  0E01               	movlw	high _tempo_tarefa
  3438  00443C  20F4               	addwfc	prodh,w,c
  3439  00443E  6EDA               	movwf	fsr2h,c
  3440  004440  50DE               	movf	postinc2,w,c
  3441  004442  10DE               	iorwf	postinc2,w,c
  3442  004444  A4D8               	btfss	status,2,c
  3443  004446  D036               	goto	l13812
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;main.c: 206: {;main.c: 207: tarefa_em_execucao = 1;
  3447  004448  0E01               	movlw	1
  3448  00444A  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3449                           
  3450                           ;main.c: 208: timeout_tarefa = 65000;
  3451  00444C  0EFD               	movlw	253
  3452  00444E  0101               	movlb	1	; () banked
  3453  004450  6F71               	movwf	(_timeout_tarefa+1)& (0+255),b
  3454  004452  0EE8               	movlw	232
  3455  004454  6F70               	movwf	_timeout_tarefa& (0+255),b
  3456                           
  3457                           ; BSR set to: 1
  3458                           ;main.c: 209: p_tarefas[cont]();
  3459  004456  0100               	movlb	0	; () banked
  3460  004458  51E6               	movf	escalonador@cont& (0+255),w,b
  3461  00445A  0D02               	mullw	2
  3462  00445C  0E39               	movlw	low _p_tarefas
  3463  00445E  24F3               	addwf	243,w,c
  3464  004460  6ED9               	movwf	fsr2l,c
  3465  004462  0E01               	movlw	high _p_tarefas
  3466  004464  20F4               	addwfc	prodh,w,c
  3467  004466  6EDA               	movwf	fsr2h,c
  3468  004468  CFDE F0E4          	movff	postinc2,??_escalonador
  3469  00446C  CFDD F0E5          	movff	postdec2,??_escalonador+1
  3470  004470  D801               	call	u16648
  3471  004472  D009               	goto	u16649
  3472  004474                     u16648:
  3473  004474  0005               	push	
  3474  004476  6EFA               	movwf	pclath,c
  3475  004478  51E4               	movf	??_escalonador& (0+255),w,b
  3476  00447A  6EFD               	movwf	tosl,c
  3477  00447C  51E5               	movf	(??_escalonador+1)& (0+255),w,b
  3478  00447E  6EFE               	movwf	tosh,c
  3479  004480  6AFF               	clrf	tosu,c
  3480  004482  50FA               	movf	pclath,w,c
  3481  004484  0012               	return		;indir
  3482  004486                     u16649:
  3483                           
  3484                           ;main.c: 210: tarefa_em_execucao = 0;
  3485  004486  0E00               	movlw	0
  3486  004488  6E52               	movwf	_tarefa_em_execucao^0,c	;volatile
  3487                           
  3488                           ;main.c: 211: tempo_tarefa[cont] = tempo_backup[cont];
  3489  00448A  0100               	movlb	0	; () banked
  3490  00448C  51E6               	movf	escalonador@cont& (0+255),w,b
  3491  00448E  0D02               	mullw	2
  3492  004490  0E33               	movlw	low _tempo_backup
  3493  004492  24F3               	addwf	243,w,c
  3494  004494  6ED9               	movwf	fsr2l,c
  3495  004496  0E01               	movlw	high _tempo_backup
  3496  004498  20F4               	addwfc	prodh,w,c
  3497  00449A  6EDA               	movwf	fsr2h,c
  3498  00449C  51E6               	movf	escalonador@cont& (0+255),w,b
  3499  00449E  0D02               	mullw	2
  3500  0044A0  0E2D               	movlw	low _tempo_tarefa
  3501  0044A2  24F3               	addwf	243,w,c
  3502  0044A4  6EE1               	movwf	fsr1l,c
  3503  0044A6  0E01               	movlw	high _tempo_tarefa
  3504  0044A8  20F4               	addwfc	prodh,w,c
  3505  0044AA  6EE2               	movwf	fsr1h,c
  3506  0044AC  CFDE FFE6          	movff	postinc2,postinc1
  3507  0044B0  CFDD FFE5          	movff	postdec2,postdec1
  3508  0044B4                     l13812:
  3509                           
  3510                           ; BSR set to: 0
  3511  0044B4  2BE6               	incf	escalonador@cont& (0+255),f,b
  3512                           
  3513                           ; BSR set to: 0
  3514  0044B6  0E02               	movlw	2
  3515  0044B8  65E6               	cpfsgt	escalonador@cont& (0+255),b
  3516  0044BA  D7AE               	goto	l13800
  3517  0044BC  0012               	return	
  3518  0044BE                     __end_of_escalonador:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function _troca_de_tela *****************
  3522 ;; Defined at:
  3523 ;;		line 409 in file "main.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  fix_signal      2   54[COMRAM] PTR unsigned char 
  3528 ;;		 -> rawFix(2), 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 3F/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0
  3539 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3540 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3541 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3542 ;;Total ram usage:        3 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    6
  3545 ;; This function calls:
  3546 ;;		_escreve_caractere_lcd
  3547 ;;		_escreve_cmd_lcd
  3548 ;;		_escreve_frase_ram_lcd
  3549 ;;		_escreve_inteiro_lcd
  3550 ;;		_fix
  3551 ;;		_mostra_dados_display
  3552 ;;		_posicao_cursor_lcd
  3553 ;;		_recebe_dado_gps
  3554 ;; This function is called by:
  3555 ;;		_inicializa_tarefas
  3556 ;;		_escalonador
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text12
  3561  001BFC                     __ptext12:
  3562                           	callstack 0
  3563  001BFC                     _troca_de_tela:
  3564                           	callstack 23
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;main.c: 411: static unsigned char state = 0;;main.c: 412: static unsigned char last_sta
      +                          te = 0;;main.c: 413: unsigned char *fix_signal;;main.c: 415: if(!PORTEbits.RE0 || (state
      +                           == 1 ))
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;incstack = 0
  3571  001BFC  A084               	btfss	132,0,c	;volatile
  3572  001BFE  D003               	goto	u16140
  3573                           
  3574                           ; BSR set to: 0
  3575  001C00  0450               	decf	troca_de_tela@state^0,w,c
  3576  001C02  A4D8               	btfss	status,2,c
  3577  001C04  D0E2               	goto	l13420
  3578  001C06                     u16140:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;main.c: 416: {;main.c: 418: if(!time_atualizacao)
  3582  001C06  51EA               	movf	_time_atualizacao& (0+255),w,b
  3583  001C08  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3584  001C0A  A4D8               	btfss	status,2,c
  3585  001C0C  D061               	goto	l13380
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;main.c: 419: {;main.c: 420: if(!fence_flag[2].point)
  3589  001C0E  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3590  001C10  D00C               	goto	l13358
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;main.c: 421: {;main.c: 422: posicao_cursor_lcd(1,8);
  3594  001C12  0E08               	movlw	8
  3595  001C14  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3596  001C16  0E01               	movlw	1
  3597  001C18  EC58  F027         	call	_posicao_cursor_lcd
  3598                           
  3599                           ;main.c: 423: escreve_frase_ram_lcd("DENTRO");
  3600  001C1C  0E49               	movlw	low STR_22
  3601  001C1E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3602  001C20  0E62               	movlw	high STR_22
  3603  001C22  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3604  001C24  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3605                           
  3606                           ;main.c: 424: }
  3607  001C28  D03C               	goto	l13372
  3608  001C2A                     l13358:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;main.c: 425: else;main.c: 426: {;main.c: 427: posicao_cursor_lcd(1,8);
  3612  001C2A  0E08               	movlw	8
  3613  001C2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3614  001C2E  0E01               	movlw	1
  3615  001C30  EC58  F027         	call	_posicao_cursor_lcd
  3616                           
  3617                           ;main.c: 428: escreve_frase_ram_lcd("FORA");
  3618  001C34  0E61               	movlw	low STR_23
  3619  001C36  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3620  001C38  0E62               	movlw	high STR_23
  3621  001C3A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3622  001C3C  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3623                           
  3624                           ;main.c: 429: posicao_cursor_lcd(1,13);
  3625  001C40  0E0D               	movlw	13
  3626  001C42  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3627  001C44  0E01               	movlw	1
  3628  001C46  EC58  F027         	call	_posicao_cursor_lcd
  3629                           
  3630                           ;main.c: 430: escreve_inteiro_lcd(fence_flag[0].point);
  3631  001C4A  0100               	movlb	0	; () banked
  3632  001C4C  A1E7               	btfss	_fence_flag& (0+255),0,b
  3633  001C4E  D003               	goto	u16170
  3634  001C50  6A36               	clrf	??_troca_de_tela^0,c
  3635  001C52  2A36               	incf	??_troca_de_tela^0,f,c
  3636  001C54  D001               	goto	u16178
  3637  001C56                     u16170:
  3638  001C56  6A36               	clrf	??_troca_de_tela^0,c
  3639  001C58                     u16178:
  3640  001C58  5036               	movf	??_troca_de_tela^0,w,c
  3641  001C5A  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3642  001C5C  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3643  001C5E  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3644  001C60  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3645  001C62  ECB2  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3646                           
  3647                           ;main.c: 431: posicao_cursor_lcd(1,14);
  3648  001C66  0E0E               	movlw	14
  3649  001C68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3650  001C6A  0E01               	movlw	1
  3651  001C6C  EC58  F027         	call	_posicao_cursor_lcd
  3652                           
  3653                           ;main.c: 432: escreve_frase_ram_lcd("|");
  3654  001C70  0E7C               	movlw	low STR_24
  3655  001C72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3656  001C74  0E62               	movlw	high STR_24
  3657  001C76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3658  001C78  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3659                           
  3660                           ;main.c: 433: posicao_cursor_lcd(1,15);
  3661  001C7C  0E0F               	movlw	15
  3662  001C7E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3663  001C80  0E01               	movlw	1
  3664  001C82  EC58  F027         	call	_posicao_cursor_lcd
  3665                           
  3666                           ;main.c: 434: escreve_inteiro_lcd(fence_flag[1].point);
  3667  001C86  0100               	movlb	0	; () banked
  3668  001C88  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3669  001C8A  D003               	goto	u16180
  3670  001C8C  6A36               	clrf	??_troca_de_tela^0,c
  3671  001C8E  2A36               	incf	??_troca_de_tela^0,f,c
  3672  001C90  D001               	goto	u16188
  3673  001C92                     u16180:
  3674  001C92  6A36               	clrf	??_troca_de_tela^0,c
  3675  001C94                     u16188:
  3676  001C94  5036               	movf	??_troca_de_tela^0,w,c
  3677  001C96  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3678  001C98  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3679  001C9A  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3680  001C9C  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3681  001C9E  ECB2  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3682  001CA2                     l13372:
  3683                           
  3684                           ;main.c: 435: };main.c: 437: fix_signal = fix();
  3685  001CA2  EC23  F02E         	call	_fix	;wreg free
  3686  001CA6  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3687  001CAA  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3688                           
  3689                           ;main.c: 438: posicao_cursor_lcd(2,8);
  3690  001CAE  0E08               	movlw	8
  3691  001CB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3692  001CB2  0E02               	movlw	2
  3693  001CB4  EC58  F027         	call	_posicao_cursor_lcd
  3694                           
  3695                           ;main.c: 439: escreve_caractere_lcd(fix_signal[0]);
  3696  001CB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3697  001CBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3698  001CC0  50DF               	movf	indf2,w,c
  3699  001CC2  ECE9  F025         	call	_escreve_caractere_lcd
  3700                           
  3701                           ;main.c: 440: time_atualizacao = 10000;
  3702  001CC6  0E27               	movlw	39
  3703  001CC8  0100               	movlb	0	; () banked
  3704  001CCA  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3705  001CCC  0E10               	movlw	16
  3706  001CCE  6FEA               	movwf	_time_atualizacao& (0+255),b
  3707  001CD0                     l13380:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;main.c: 441: };main.c: 443: if(last_state != 1)
  3711  001CD0  044F               	decf	troca_de_tela@last_state^0,w,c
  3712  001CD2  B4D8               	btfsc	status,2,c
  3713  001CD4  D078               	goto	l13418
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;main.c: 444: {;main.c: 445: state = 1;
  3717  001CD6  0E01               	movlw	1
  3718  001CD8  6E50               	movwf	troca_de_tela@state^0,c
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;main.c: 446: escreve_cmd_lcd(0b00000001);
  3722  001CDA  0E01               	movlw	1
  3723  001CDC  EC2B  F024         	call	_escreve_cmd_lcd
  3724                           
  3725                           ;main.c: 447: posicao_cursor_lcd(1,0);
  3726  001CE0  0E00               	movlw	0
  3727  001CE2  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3728  001CE4  0E01               	movlw	1
  3729  001CE6  EC58  F027         	call	_posicao_cursor_lcd
  3730                           
  3731                           ;main.c: 448: escreve_frase_ram_lcd("FENCE:");
  3732  001CEA  0E42               	movlw	low STR_25
  3733  001CEC  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3734  001CEE  0E62               	movlw	high STR_25
  3735  001CF0  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3736  001CF2  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3737                           
  3738                           ;main.c: 450: if(!fence_flag[2].point)
  3739  001CF6  0100               	movlb	0	; () banked
  3740  001CF8  B1E9               	btfsc	(_fence_flag+2)& (0+255),0,b
  3741  001CFA  D00C               	goto	l13396
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;main.c: 451: {;main.c: 452: posicao_cursor_lcd(1,8);
  3745  001CFC  0E08               	movlw	8
  3746  001CFE  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3747  001D00  0E01               	movlw	1
  3748  001D02  EC58  F027         	call	_posicao_cursor_lcd
  3749                           
  3750                           ;main.c: 453: escreve_frase_ram_lcd("DENTRO");
  3751  001D06  0E49               	movlw	low STR_22
  3752  001D08  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3753  001D0A  0E62               	movlw	high STR_22
  3754  001D0C  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3755  001D0E  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3756                           
  3757                           ;main.c: 454: }
  3758  001D12  D03C               	goto	l13410
  3759  001D14                     l13396:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;main.c: 455: else;main.c: 456: {;main.c: 457: posicao_cursor_lcd(1,8);
  3763  001D14  0E08               	movlw	8
  3764  001D16  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3765  001D18  0E01               	movlw	1
  3766  001D1A  EC58  F027         	call	_posicao_cursor_lcd
  3767                           
  3768                           ;main.c: 458: escreve_frase_ram_lcd("FORA ");
  3769  001D1E  0E50               	movlw	low STR_27
  3770  001D20  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3771  001D22  0E62               	movlw	high STR_27
  3772  001D24  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3773  001D26  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3774                           
  3775                           ;main.c: 459: posicao_cursor_lcd(1,13);
  3776  001D2A  0E0D               	movlw	13
  3777  001D2C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3778  001D2E  0E01               	movlw	1
  3779  001D30  EC58  F027         	call	_posicao_cursor_lcd
  3780                           
  3781                           ;main.c: 460: escreve_inteiro_lcd(fence_flag[0].point);
  3782  001D34  0100               	movlb	0	; () banked
  3783  001D36  A1E7               	btfss	_fence_flag& (0+255),0,b
  3784  001D38  D003               	goto	u16210
  3785  001D3A  6A36               	clrf	??_troca_de_tela^0,c
  3786  001D3C  2A36               	incf	??_troca_de_tela^0,f,c
  3787  001D3E  D001               	goto	u16218
  3788  001D40                     u16210:
  3789  001D40  6A36               	clrf	??_troca_de_tela^0,c
  3790  001D42                     u16218:
  3791  001D42  5036               	movf	??_troca_de_tela^0,w,c
  3792  001D44  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3793  001D46  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3794  001D48  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3795  001D4A  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3796  001D4C  ECB2  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3797                           
  3798                           ;main.c: 461: posicao_cursor_lcd(1,14);
  3799  001D50  0E0E               	movlw	14
  3800  001D52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3801  001D54  0E01               	movlw	1
  3802  001D56  EC58  F027         	call	_posicao_cursor_lcd
  3803                           
  3804                           ;main.c: 462: escreve_frase_ram_lcd("|");
  3805  001D5A  0E7C               	movlw	low STR_24
  3806  001D5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3807  001D5E  0E62               	movlw	high STR_24
  3808  001D60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3809  001D62  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3810                           
  3811                           ;main.c: 463: posicao_cursor_lcd(1,15);
  3812  001D66  0E0F               	movlw	15
  3813  001D68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3814  001D6A  0E01               	movlw	1
  3815  001D6C  EC58  F027         	call	_posicao_cursor_lcd
  3816                           
  3817                           ;main.c: 464: escreve_inteiro_lcd(fence_flag[1].point);
  3818  001D70  0100               	movlb	0	; () banked
  3819  001D72  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  3820  001D74  D003               	goto	u16220
  3821  001D76  6A36               	clrf	??_troca_de_tela^0,c
  3822  001D78  2A36               	incf	??_troca_de_tela^0,f,c
  3823  001D7A  D001               	goto	u16228
  3824  001D7C                     u16220:
  3825  001D7C  6A36               	clrf	??_troca_de_tela^0,c
  3826  001D7E                     u16228:
  3827  001D7E  5036               	movf	??_troca_de_tela^0,w,c
  3828  001D80  6E2B               	movwf	escreve_inteiro_lcd@valor^0,c
  3829  001D82  6A2C               	clrf	(escreve_inteiro_lcd@valor+1)^0,c
  3830  001D84  6A2D               	clrf	(escreve_inteiro_lcd@valor+2)^0,c
  3831  001D86  6A2E               	clrf	(escreve_inteiro_lcd@valor+3)^0,c
  3832  001D88  ECB2  F02A         	call	_escreve_inteiro_lcd	;wreg free
  3833  001D8C                     l13410:
  3834                           
  3835                           ;main.c: 465: };main.c: 466: fix_signal = fix();
  3836  001D8C  EC23  F02E         	call	_fix	;wreg free
  3837  001D90  C00A  F037         	movff	?_fix,troca_de_tela@fix_signal
  3838  001D94  C00B  F038         	movff	?_fix+1,troca_de_tela@fix_signal+1
  3839                           
  3840                           ;main.c: 467: posicao_cursor_lcd(2,0);
  3841  001D98  0E00               	movlw	0
  3842  001D9A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3843  001D9C  0E02               	movlw	2
  3844  001D9E  EC58  F027         	call	_posicao_cursor_lcd
  3845                           
  3846                           ;main.c: 468: escreve_frase_ram_lcd("FIX:");
  3847  001DA2  0E5C               	movlw	low STR_29
  3848  001DA4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3849  001DA6  0E62               	movlw	high STR_29
  3850  001DA8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3851  001DAA  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3852                           
  3853                           ;main.c: 469: posicao_cursor_lcd(2,8);
  3854  001DAE  0E08               	movlw	8
  3855  001DB0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3856  001DB2  0E02               	movlw	2
  3857  001DB4  EC58  F027         	call	_posicao_cursor_lcd
  3858                           
  3859                           ;main.c: 470: escreve_caractere_lcd(fix_signal[0]);
  3860  001DB8  C037  FFD9         	movff	troca_de_tela@fix_signal,fsr2l
  3861  001DBC  C038  FFDA         	movff	troca_de_tela@fix_signal+1,fsr2h
  3862  001DC0  50DF               	movf	indf2,w,c
  3863  001DC2  ECE9  F025         	call	_escreve_caractere_lcd
  3864  001DC6                     l13418:
  3865                           
  3866                           ;main.c: 471: };main.c: 472: last_state = 1;
  3867  001DC6  0E01               	movlw	1
  3868  001DC8  6E4F               	movwf	troca_de_tela@last_state^0,c
  3869  001DCA                     l13420:
  3870                           
  3871                           ;main.c: 474: };main.c: 484: if(!PORTEbits.RE1 || (state == 2))
  3872  001DCA  A284               	btfss	132,1,c	;volatile
  3873  001DCC  D004               	goto	u16240
  3874  001DCE  0E02               	movlw	2
  3875  001DD0  1850               	xorwf	troca_de_tela@state^0,w,c
  3876  001DD2  A4D8               	btfss	status,2,c
  3877  001DD4  D033               	goto	l13452
  3878  001DD6                     u16240:
  3879                           
  3880                           ;main.c: 485: {;main.c: 486: if(!time_atualizacao)
  3881  001DD6  0100               	movlb	0	; () banked
  3882  001DD8  51EA               	movf	_time_atualizacao& (0+255),w,b
  3883  001DDA  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
  3884  001DDC  A4D8               	btfss	status,2,c
  3885  001DDE  D009               	goto	l13432
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;main.c: 487: {;main.c: 488: recebe_dado_gps();
  3889  001DE0  EC31  F02D         	call	_recebe_dado_gps	;wreg free
  3890                           
  3891                           ;main.c: 489: mostra_dados_display();
  3892  001DE4  ECEC  F02B         	call	_mostra_dados_display	;wreg free
  3893                           
  3894                           ;main.c: 490: time_atualizacao = 2000;
  3895  001DE8  0E07               	movlw	7
  3896  001DEA  0100               	movlb	0	; () banked
  3897  001DEC  6FEB               	movwf	(_time_atualizacao+1)& (0+255),b
  3898  001DEE  0ED0               	movlw	208
  3899  001DF0  6FEA               	movwf	_time_atualizacao& (0+255),b
  3900  001DF2                     l13432:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;main.c: 491: };main.c: 494: if(last_state != 2)
  3904  001DF2  0E02               	movlw	2
  3905  001DF4  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3906  001DF6  B4D8               	btfsc	status,2,c
  3907  001DF8  D01F               	goto	l13450
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;main.c: 495: {;main.c: 496: state = 2;
  3911  001DFA  0E02               	movlw	2
  3912  001DFC  6E50               	movwf	troca_de_tela@state^0,c
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;main.c: 497: escreve_cmd_lcd(0b00000001);
  3916  001DFE  0E01               	movlw	1
  3917  001E00  EC2B  F024         	call	_escreve_cmd_lcd
  3918                           
  3919                           ;main.c: 498: posicao_cursor_lcd(1,0);
  3920  001E04  0E00               	movlw	0
  3921  001E06  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3922  001E08  0E01               	movlw	1
  3923  001E0A  EC58  F027         	call	_posicao_cursor_lcd
  3924                           
  3925                           ;main.c: 499: escreve_frase_ram_lcd("lt:");
  3926  001E0E  0E6F               	movlw	low STR_30
  3927  001E10  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3928  001E12  0E62               	movlw	high STR_30
  3929  001E14  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3930  001E16  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3931                           
  3932                           ;main.c: 500: posicao_cursor_lcd(2,0);
  3933  001E1A  0E00               	movlw	0
  3934  001E1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3935  001E1E  0E02               	movlw	2
  3936  001E20  EC58  F027         	call	_posicao_cursor_lcd
  3937                           
  3938                           ;main.c: 501: escreve_frase_ram_lcd("lo:");
  3939  001E24  0E6B               	movlw	low STR_31
  3940  001E26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3941  001E28  0E62               	movlw	high STR_31
  3942  001E2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3943  001E2C  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3944                           
  3945                           ;main.c: 502: recebe_dado_gps();
  3946  001E30  EC31  F02D         	call	_recebe_dado_gps	;wreg free
  3947                           
  3948                           ;main.c: 503: mostra_dados_display();
  3949  001E34  ECEC  F02B         	call	_mostra_dados_display	;wreg free
  3950  001E38                     l13450:
  3951                           
  3952                           ;main.c: 504: };main.c: 505: last_state = 2;
  3953  001E38  0E02               	movlw	2
  3954  001E3A  6E4F               	movwf	troca_de_tela@last_state^0,c
  3955  001E3C                     l13452:
  3956                           
  3957                           ;main.c: 506: };main.c: 511: if(!state)
  3958  001E3C  5050               	movf	troca_de_tela@state^0,w,c
  3959  001E3E  A4D8               	btfss	status,2,c
  3960  001E40  0012               	return	
  3961                           
  3962                           ;main.c: 512: {;main.c: 513: if(last_state != 4)
  3963  001E42  0E04               	movlw	4
  3964  001E44  184F               	xorwf	troca_de_tela@last_state^0,w,c
  3965  001E46  B4D8               	btfsc	status,2,c
  3966  001E48  D019               	goto	l13462
  3967                           
  3968                           ;main.c: 514: {;main.c: 515: escreve_cmd_lcd(0b00000001);
  3969  001E4A  0E01               	movlw	1
  3970  001E4C  EC2B  F024         	call	_escreve_cmd_lcd
  3971                           
  3972                           ;main.c: 516: posicao_cursor_lcd(1,0);
  3973  001E50  0E00               	movlw	0
  3974  001E52  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3975  001E54  0E01               	movlw	1
  3976  001E56  EC58  F027         	call	_posicao_cursor_lcd
  3977                           
  3978                           ;main.c: 517: escreve_frase_ram_lcd("B1:FENCE");
  3979  001E5A  0E28               	movlw	low STR_32
  3980  001E5C  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3981  001E5E  0E62               	movlw	high STR_32
  3982  001E60  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3983  001E62  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3984                           
  3985                           ;main.c: 518: posicao_cursor_lcd(2,0);
  3986  001E66  0E00               	movlw	0
  3987  001E68  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  3988  001E6A  0E02               	movlw	2
  3989  001E6C  EC58  F027         	call	_posicao_cursor_lcd
  3990                           
  3991                           ;main.c: 519: escreve_frase_ram_lcd("B2:LTLO");
  3992  001E70  0E3A               	movlw	low STR_33
  3993  001E72  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  3994  001E74  0E62               	movlw	high STR_33
  3995  001E76  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  3996  001E78  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  3997  001E7C                     l13462:
  3998                           
  3999                           ;main.c: 521: };main.c: 522: last_state = 4;
  4000  001E7C  0E04               	movlw	4
  4001  001E7E  6E4F               	movwf	troca_de_tela@last_state^0,c
  4002  001E80  0012               	return		;funcret
  4003  001E82                     __end_of_troca_de_tela:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _disparo_gravacao *****************
  4007 ;; Defined at:
  4008 ;;		line 348 in file "main.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  velocidade     12    0[BANK2 ] PTR unsigned char [6]
  4013 ;;  index_max       2   16[BANK2 ] unsigned int 
  4014 ;;  v_max           2   14[BANK2 ] unsigned int 
  4015 ;;  fix_gps         2   12[BANK2 ] PTR unsigned char 
  4016 ;;		 -> rawFix(2), 
  4017 ;;  i               1   18[BANK2 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 3F/0
  4024 ;;		On exit  : 3F/1
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0
  4028 ;;      Locals:         0       0       0      19       0       0       0       0       0
  4029 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4030 ;;      Totals:         0       5       0      19       0       0       0       0       0
  4031 ;;Total ram usage:       24 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:   16
  4034 ;; This function calls:
  4035 ;;		___wmul
  4036 ;;		_atoi
  4037 ;;		_dados_gps_to_sd
  4038 ;;		_fix
  4039 ;;		_grava_sd
  4040 ;;		_itoa
  4041 ;;		_monta_sd
  4042 ;;		_recebe_dado_gps
  4043 ;;		_verifica_fence
  4044 ;; This function is called by:
  4045 ;;		_inicializa_tarefas
  4046 ;;		_escalonador
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text13
  4051  002810                     __ptext13:
  4052                           	callstack 0
  4053  002810                     _disparo_gravacao:
  4054                           	callstack 13
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;main.c: 353: unsigned char *velocidade[6];;main.c: 355: v_max = atoi(dados_vel[0]);
  4058                           
  4059                           ; BSR set to: 0
  4060                           
  4061                           ;incstack = 0
  4062  002810  C127  F0DF         	movff	_dados_vel,??_disparo_gravacao
  4063  002814  C128  F0E0         	movff	_dados_vel+1,??_disparo_gravacao+1
  4064  002818  6BE1               	clrf	(??_disparo_gravacao+2)& (0+255),b
  4065  00281A  C0DF  F010         	movff	??_disparo_gravacao,atoi@s
  4066  00281E  C0E0  F011         	movff	??_disparo_gravacao+1,atoi@s+1
  4067  002822  C0E1  F012         	movff	??_disparo_gravacao+2,atoi@s+2
  4068  002826  ECFA  F018         	call	_atoi	;wreg free
  4069  00282A  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4070  00282E  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4071                           
  4072                           ;main.c: 356: index_max = 0;
  4073  002832  0E00               	movlw	0
  4074  002834  0102               	movlb	2	; () banked
  4075  002836  6FF8               	movwf	(disparo_gravacao@index_max+1)& (0+255),b
  4076  002838  0E00               	movlw	0
  4077  00283A  6FF7               	movwf	disparo_gravacao@index_max& (0+255),b
  4078                           
  4079                           ; BSR set to: 2
  4080                           ;main.c: 357: if(!time_sd)
  4081  00283C  0101               	movlb	1	; () banked
  4082  00283E  516E               	movf	_time_sd& (0+255),w,b
  4083  002840  116F               	iorwf	(_time_sd+1)& (0+255),w,b
  4084  002842  A4D8               	btfss	status,2,c
  4085  002844  0012               	return	
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;main.c: 358: {;main.c: 359: verifica_fence();
  4089  002846  EC87  F027         	call	_verifica_fence	;wreg free
  4090                           
  4091                           ;main.c: 360: fix_gps = fix();
  4092  00284A  EC23  F02E         	call	_fix	;wreg free
  4093  00284E  C00A  F2F3         	movff	?_fix,disparo_gravacao@fix_gps
  4094  002852  C00B  F2F4         	movff	?_fix+1,disparo_gravacao@fix_gps+1
  4095                           
  4096                           ;main.c: 362: if(*fix_gps == '1')
  4097  002856  C2F3  FFD9         	movff	disparo_gravacao@fix_gps,fsr2l
  4098  00285A  C2F4  FFDA         	movff	disparo_gravacao@fix_gps+1,fsr2h
  4099  00285E  0E31               	movlw	49
  4100  002860  18DE               	xorwf	postinc2,w,c
  4101  002862  A4D8               	btfss	status,2,c
  4102  002864  D0DC               	goto	l13776
  4103                           
  4104                           ;main.c: 363: {;main.c: 364: if(v_max > 50)
  4105  002866  0102               	movlb	2	; () banked
  4106  002868  51F6               	movf	(disparo_gravacao@v_max+1)& (0+255),w,b
  4107  00286A  E104               	bnz	u16590
  4108  00286C  0E33               	movlw	51
  4109  00286E  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4110  002870  A0D8               	btfss	status,0,c
  4111  002872  D0C2               	goto	l13768
  4112  002874                     u16590:
  4113                           
  4114                           ; BSR set to: 2
  4115                           ;main.c: 365: {;main.c: 366: for(i=1; i<3; i++)
  4116  002874  0E01               	movlw	1
  4117  002876  6FF9               	movwf	disparo_gravacao@i& (0+255),b
  4118  002878                     l13746:
  4119                           
  4120                           ; BSR set to: 2
  4121                           ;main.c: 367: {;main.c: 368: if(v_max < atoi(dados_vel[i]))
  4122  002878  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4123  00287A  0D02               	mullw	2
  4124  00287C  0E27               	movlw	low _dados_vel
  4125  00287E  24F3               	addwf	243,w,c
  4126  002880  6ED9               	movwf	fsr2l,c
  4127  002882  0E01               	movlw	high _dados_vel
  4128  002884  20F4               	addwfc	prodh,w,c
  4129  002886  6EDA               	movwf	fsr2h,c
  4130  002888  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4131  00288C  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4132  002890  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4133  002894  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4134  002898  0100               	movlb	0	; () banked
  4135  00289A  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4136  00289C  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4137  0028A0  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4138  0028A4  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4139  0028A8  ECFA  F018         	call	_atoi	;wreg free
  4140  0028AC  5010               	movf	?_atoi^0,w,c
  4141  0028AE  0102               	movlb	2	; () banked
  4142  0028B0  5DF5               	subwf	disparo_gravacao@v_max& (0+255),w,b
  4143  0028B2  5011               	movf	(?_atoi+1)^0,w,c
  4144  0028B4  59F6               	subwfb	(disparo_gravacao@v_max+1)& (0+255),w,b
  4145  0028B6  B0D8               	btfsc	status,0,c
  4146  0028B8  D022               	goto	l13752
  4147                           
  4148                           ; BSR set to: 2
  4149                           ;main.c: 369: {;main.c: 370: v_max = atoi(dados_vel[i]);
  4150  0028BA  51F9               	movf	disparo_gravacao@i& (0+255),w,b
  4151  0028BC  0D02               	mullw	2
  4152  0028BE  0E27               	movlw	low _dados_vel
  4153  0028C0  24F3               	addwf	243,w,c
  4154  0028C2  6ED9               	movwf	fsr2l,c
  4155  0028C4  0E01               	movlw	high _dados_vel
  4156  0028C6  20F4               	addwfc	prodh,w,c
  4157  0028C8  6EDA               	movwf	fsr2h,c
  4158  0028CA  CFDE F0DF          	movff	postinc2,??_disparo_gravacao
  4159  0028CE  CFDD F0E0          	movff	postdec2,??_disparo_gravacao+1
  4160  0028D2  C0DF  F0E1         	movff	??_disparo_gravacao,??_disparo_gravacao+2
  4161  0028D6  C0E0  F0E2         	movff	??_disparo_gravacao+1,??_disparo_gravacao+3
  4162  0028DA  0100               	movlb	0	; () banked
  4163  0028DC  6BE3               	clrf	(??_disparo_gravacao+4)& (0+255),b
  4164  0028DE  C0E1  F010         	movff	??_disparo_gravacao+2,atoi@s
  4165  0028E2  C0E2  F011         	movff	??_disparo_gravacao+3,atoi@s+1
  4166  0028E6  C0E3  F012         	movff	??_disparo_gravacao+4,atoi@s+2
  4167  0028EA  ECFA  F018         	call	_atoi	;wreg free
  4168  0028EE  C010  F2F5         	movff	?_atoi,disparo_gravacao@v_max
  4169  0028F2  C011  F2F6         	movff	?_atoi+1,disparo_gravacao@v_max+1
  4170                           
  4171                           ;main.c: 371: index_max = i;
  4172  0028F6  C2F9  F2F7         	movff	disparo_gravacao@i,disparo_gravacao@index_max
  4173  0028FA  0102               	movlb	2	; () banked
  4174  0028FC  6BF8               	clrf	(disparo_gravacao@index_max+1)& (0+255),b
  4175  0028FE                     l13752:
  4176                           
  4177                           ; BSR set to: 2
  4178  0028FE  2BF9               	incf	disparo_gravacao@i& (0+255),f,b
  4179                           
  4180                           ; BSR set to: 2
  4181  002900  0E02               	movlw	2
  4182  002902  65F9               	cpfsgt	disparo_gravacao@i& (0+255),b
  4183  002904  D7B9               	goto	l13746
  4184                           
  4185                           ; BSR set to: 2
  4186                           ;main.c: 372: };main.c: 374: };main.c: 376: monta_sd(0, dados_hora[index_max]);
  4187  002906  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4188  00290A  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4189  00290E  0E00               	movlw	0
  4190  002910  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4191  002912  0E06               	movlw	6
  4192  002914  6E0C               	movwf	___wmul@multiplicand^0,c
  4193  002916  EC95  F02C         	call	___wmul	;wreg free
  4194  00291A  0ED5               	movlw	low _dados_hora
  4195  00291C  240A               	addwf	?___wmul^0,w,c
  4196  00291E  6E10               	movwf	monta_sd@dado^0,c
  4197  002920  0E02               	movlw	high _dados_hora
  4198  002922  200B               	addwfc	(?___wmul+1)^0,w,c
  4199  002924  6E11               	movwf	(monta_sd@dado+1)^0,c
  4200  002926  0E00               	movlw	0
  4201  002928  EC03  F00B         	call	_monta_sd
  4202                           
  4203                           ;main.c: 377: monta_sd(1, dados_data[index_max]);
  4204  00292C  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4205  002930  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4206  002934  0E00               	movlw	0
  4207  002936  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4208  002938  0E06               	movlw	6
  4209  00293A  6E0C               	movwf	___wmul@multiplicand^0,c
  4210  00293C  EC95  F02C         	call	___wmul	;wreg free
  4211  002940  0EC3               	movlw	low _dados_data
  4212  002942  240A               	addwf	?___wmul^0,w,c
  4213  002944  6E10               	movwf	monta_sd@dado^0,c
  4214  002946  0E02               	movlw	high _dados_data
  4215  002948  200B               	addwfc	(?___wmul+1)^0,w,c
  4216  00294A  6E11               	movwf	(monta_sd@dado+1)^0,c
  4217  00294C  0E01               	movlw	1
  4218  00294E  EC03  F00B         	call	_monta_sd
  4219                           
  4220                           ;main.c: 378: monta_sd(2, dados_lat[index_max]);
  4221  002952  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4222  002956  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4223  00295A  0E00               	movlw	0
  4224  00295C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4225  00295E  0E0B               	movlw	11
  4226  002960  6E0C               	movwf	___wmul@multiplicand^0,c
  4227  002962  EC95  F02C         	call	___wmul	;wreg free
  4228  002966  0EA2               	movlw	low _dados_lat
  4229  002968  240A               	addwf	?___wmul^0,w,c
  4230  00296A  6E10               	movwf	monta_sd@dado^0,c
  4231  00296C  0E02               	movlw	high _dados_lat
  4232  00296E  200B               	addwfc	(?___wmul+1)^0,w,c
  4233  002970  6E11               	movwf	(monta_sd@dado+1)^0,c
  4234  002972  0E02               	movlw	2
  4235  002974  EC03  F00B         	call	_monta_sd
  4236                           
  4237                           ;main.c: 379: monta_sd(3, dados_long[index_max]);
  4238  002978  C2F7  F00A         	movff	disparo_gravacao@index_max,___wmul@multiplier
  4239  00297C  C2F8  F00B         	movff	disparo_gravacao@index_max+1,___wmul@multiplier+1
  4240  002980  0E00               	movlw	0
  4241  002982  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4242  002984  0E0C               	movlw	12
  4243  002986  6E0C               	movwf	___wmul@multiplicand^0,c
  4244  002988  EC95  F02C         	call	___wmul	;wreg free
  4245  00298C  0E7E               	movlw	low _dados_long
  4246  00298E  240A               	addwf	?___wmul^0,w,c
  4247  002990  6E10               	movwf	monta_sd@dado^0,c
  4248  002992  0E02               	movlw	high _dados_long
  4249  002994  200B               	addwfc	(?___wmul+1)^0,w,c
  4250  002996  6E11               	movwf	(monta_sd@dado+1)^0,c
  4251  002998  0E03               	movlw	3
  4252  00299A  EC03  F00B         	call	_monta_sd
  4253                           
  4254                           ;main.c: 380: itoa(velocidade, dados_vel[index_max], 10);
  4255  00299E  0EE7               	movlw	low disparo_gravacao@velocidade
  4256  0029A0  6E1A               	movwf	itoa@buf^0,c
  4257  0029A2  0E02               	movlw	high disparo_gravacao@velocidade
  4258  0029A4  6E1B               	movwf	(itoa@buf+1)^0,c
  4259  0029A6  90D8               	bcf	status,0,c
  4260  0029A8  0102               	movlb	2	; () banked
  4261  0029AA  35F7               	rlcf	disparo_gravacao@index_max& (0+255),w,b
  4262  0029AC  6ED9               	movwf	fsr2l,c
  4263  0029AE  35F8               	rlcf	(disparo_gravacao@index_max+1)& (0+255),w,b
  4264  0029B0  6EDA               	movwf	fsr2h,c
  4265  0029B2  0E27               	movlw	low _dados_vel
  4266  0029B4  26D9               	addwf	fsr2l,f,c
  4267  0029B6  0E01               	movlw	high _dados_vel
  4268  0029B8  22DA               	addwfc	fsr2h,f,c
  4269  0029BA  CFDE F01C          	movff	postinc2,itoa@val
  4270  0029BE  CFDD F01D          	movff	postdec2,itoa@val+1
  4271  0029C2  0E00               	movlw	0
  4272  0029C4  6E1F               	movwf	(itoa@base+1)^0,c
  4273  0029C6  0E0A               	movlw	10
  4274  0029C8  6E1E               	movwf	itoa@base^0,c
  4275  0029CA  ECEF  F02A         	call	_itoa	;wreg free
  4276                           
  4277                           ;main.c: 381: monta_sd(7, velocidade);
  4278  0029CE  0EE7               	movlw	low disparo_gravacao@velocidade
  4279  0029D0  6E10               	movwf	monta_sd@dado^0,c
  4280  0029D2  0E02               	movlw	high disparo_gravacao@velocidade
  4281  0029D4  6E11               	movwf	(monta_sd@dado+1)^0,c
  4282  0029D6  0E07               	movlw	7
  4283  0029D8  EC03  F00B         	call	_monta_sd
  4284                           
  4285                           ;main.c: 383: dados_vel[0] = 50;
  4286  0029DC  0E00               	movlw	0
  4287  0029DE  0101               	movlb	1	; () banked
  4288  0029E0  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4289  0029E2  0E32               	movlw	50
  4290  0029E4  6F27               	movwf	_dados_vel& (0+255),b
  4291                           
  4292                           ; BSR set to: 1
  4293                           ;main.c: 384: dados_vel[1] = 50;
  4294  0029E6  0E00               	movlw	0
  4295  0029E8  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4296  0029EA  0E32               	movlw	50
  4297  0029EC  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4298                           
  4299                           ; BSR set to: 1
  4300                           ;main.c: 385: dados_vel[2] = 50;
  4301  0029EE  0E00               	movlw	0
  4302  0029F0  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4303  0029F2  0E32               	movlw	50
  4304  0029F4  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4305                           
  4306                           ;main.c: 386: }
  4307  0029F6  D011               	goto	l13774
  4308  0029F8                     l13768:
  4309                           
  4310                           ; BSR set to: 2
  4311                           ;main.c: 387: else;main.c: 388: {;main.c: 389: dados_vel[0] = 50;
  4312  0029F8  0E00               	movlw	0
  4313  0029FA  0101               	movlb	1	; () banked
  4314  0029FC  6F28               	movwf	(_dados_vel+1)& (0+255),b
  4315  0029FE  0E32               	movlw	50
  4316  002A00  6F27               	movwf	_dados_vel& (0+255),b
  4317                           
  4318                           ;main.c: 390: dados_vel[1] = 50;
  4319  002A02  0E00               	movlw	0
  4320  002A04  6F2A               	movwf	(_dados_vel+3)& (0+255),b
  4321  002A06  0E32               	movlw	50
  4322  002A08  6F29               	movwf	(_dados_vel+2)& (0+255),b
  4323                           
  4324                           ;main.c: 391: dados_vel[2] = 50;
  4325  002A0A  0E00               	movlw	0
  4326  002A0C  6F2C               	movwf	(_dados_vel+5)& (0+255),b
  4327  002A0E  0E32               	movlw	50
  4328  002A10  6F2B               	movwf	(_dados_vel+4)& (0+255),b
  4329                           
  4330                           ; BSR set to: 1
  4331                           ;main.c: 392: recebe_dado_gps();
  4332  002A12  EC31  F02D         	call	_recebe_dado_gps	;wreg free
  4333                           
  4334                           ;main.c: 393: dados_gps_to_sd();
  4335  002A16  ECF6  F026         	call	_dados_gps_to_sd	;wreg free
  4336  002A1A                     l13774:
  4337                           
  4338                           ;main.c: 394: };main.c: 395: grava_sd();
  4339  002A1A  EC9A  F02D         	call	_grava_sd	;wreg free
  4340  002A1E                     l13776:
  4341                           
  4342                           ;main.c: 396: };main.c: 397: time_sd = 28000;
  4343  002A1E  0E6D               	movlw	109
  4344  002A20  0101               	movlb	1	; () banked
  4345  002A22  6F6F               	movwf	(_time_sd+1)& (0+255),b
  4346  002A24  0E60               	movlw	96
  4347  002A26  6F6E               	movwf	_time_sd& (0+255),b
  4348                           
  4349                           ; BSR set to: 1
  4350  002A28  0012               	return		;funcret
  4351  002A2A                     __end_of_disparo_gravacao:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _verifica_dados_operacionais *****************
  4355 ;; Defined at:
  4356 ;;		line 307 in file "main.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 3F/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4373 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        6 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    9
  4377 ;; This function calls:
  4378 ;;		_Speed
  4379 ;;		___awtoft
  4380 ;;		___ftmul
  4381 ;;		___fttol
  4382 ;;		_atoi
  4383 ;;		_latitude
  4384 ;;		_longitude
  4385 ;;		_rawdata
  4386 ;;		_rawhora
  4387 ;;		_strcpy
  4388 ;;		_verifica_fence
  4389 ;; This function is called by:
  4390 ;;		_inicializa_tarefas
  4391 ;;		_escalonador
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text14
  4396  002F0C                     __ptext14:
  4397                           	callstack 0
  4398  002F0C                     _verifica_dados_operacionais:
  4399                           	callstack 20
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;main.c: 309: static unsigned char dado[6];;main.c: 310: static unsigned char contador_a
      +                          tual =0;;main.c: 311: static unsigned char contador_anterior =0;;main.c: 312: static uns
      +                          igned long int velocidade_media;;main.c: 313: static unsigned long int velocidade_atual_
      +                          int = 0;;main.c: 314: static unsigned char *velocidade_atual;;main.c: 315: verifica_fenc
      +                          e();
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;incstack = 0
  4406  002F0C  EC87  F027         	call	_verifica_fence	;wreg free
  4407                           
  4408                           ;main.c: 317: if(contador_atual >=3)
  4409  002F10  0E02               	movlw	2
  4410  002F12  6451               	cpfsgt	verifica_dados_operacionais@contador_atual^0,c
  4411  002F14  D005               	goto	l13268
  4412                           
  4413                           ;main.c: 318: {;main.c: 319: contador_atual = 0;
  4414  002F16  0E00               	movlw	0
  4415  002F18  6E51               	movwf	verifica_dados_operacionais@contador_atual^0,c
  4416                           
  4417                           ;main.c: 320: contador_anterior = contador_atual;
  4418  002F1A  0E00               	movlw	0
  4419  002F1C  0100               	movlb	0	; () banked
  4420  002F1E  6FF0               	movwf	verifica_dados_operacionais@contador_anterior& (0+255),b
  4421  002F20                     l13268:
  4422                           
  4423                           ;main.c: 321: };main.c: 323: velocidade_atual = Speed();
  4424  002F20  EC1E  F02E         	call	_Speed	;wreg free
  4425  002F24  C00A  F166         	movff	?_Speed,verifica_dados_operacionais@velocidade_atual
  4426  002F28  C00B  F167         	movff	?_Speed+1,verifica_dados_operacionais@velocidade_atual+1
  4427                           
  4428                           ;main.c: 324: velocidade_atual_int = ((atoi(velocidade_atual)*1.852));
  4429  002F2C  0E0E               	movlw	14
  4430  002F2E  6E1F               	movwf	___ftmul@f2^0,c
  4431  002F30  0EED               	movlw	237
  4432  002F32  6E20               	movwf	(___ftmul@f2+1)^0,c
  4433  002F34  0E3F               	movlw	63
  4434  002F36  6E21               	movwf	(___ftmul@f2+2)^0,c
  4435  002F38  C166  F010         	movff	verifica_dados_operacionais@velocidade_atual,atoi@s
  4436  002F3C  C167  F011         	movff	verifica_dados_operacionais@velocidade_atual+1,atoi@s+1
  4437  002F40  5010               	movf	atoi@s^0,w,c
  4438  002F42  1011               	iorwf	(atoi@s+1)^0,w,c
  4439  002F44  A4D8               	btfss	status,2,c
  4440  002F46  0E20               	movlw	32
  4441  002F48  6E12               	movwf	(atoi@s+2)^0,c
  4442  002F4A  ECFA  F018         	call	_atoi	;wreg free
  4443  002F4E  C010  F018         	movff	?_atoi,___awtoft@c
  4444  002F52  C011  F019         	movff	?_atoi+1,___awtoft@c+1
  4445  002F56  EC0C  F02B         	call	___awtoft	;wreg free
  4446  002F5A  C018  F01C         	movff	?___awtoft,___ftmul@f1
  4447  002F5E  C019  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  4448  002F62  C01A  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  4449  002F66  EC66  F01E         	call	___ftmul	;wreg free
  4450  002F6A  C01C  F02B         	movff	?___ftmul,___fttol@f1
  4451  002F6E  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  4452  002F72  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  4453  002F76  ECCC  F01F         	call	___fttol	;wreg free
  4454  002F7A  C02B  F151         	movff	?___fttol,verifica_dados_operacionais@velocidade_atual_int
  4455  002F7E  C02C  F152         	movff	?___fttol+1,verifica_dados_operacionais@velocidade_atual_int+1
  4456  002F82  C02D  F153         	movff	?___fttol+2,verifica_dados_operacionais@velocidade_atual_int+2
  4457  002F86  C02E  F154         	movff	?___fttol+3,verifica_dados_operacionais@velocidade_atual_int+3
  4458                           
  4459                           ;main.c: 325: if((velocidade_atual_int > dados_vel[2]) && contador_atual<3)
  4460  002F8A  0101               	movlb	1	; () banked
  4461  002F8C  512B               	movf	(_dados_vel+4)& (0+255),w,b
  4462  002F8E  6E44               	movwf	??_verifica_dados_operacionais^0,c
  4463  002F90  512C               	movf	(_dados_vel+5)& (0+255),w,b
  4464  002F92  6E45               	movwf	(??_verifica_dados_operacionais+1)^0,c
  4465  002F94  6A46               	clrf	(??_verifica_dados_operacionais+2)^0,c
  4466  002F96  6A47               	clrf	(??_verifica_dados_operacionais+3)^0,c
  4467  002F98  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4468  002F9A  5C44               	subwf	??_verifica_dados_operacionais^0,w,c
  4469  002F9C  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4470  002F9E  5845               	subwfb	(??_verifica_dados_operacionais+1)^0,w,c
  4471  002FA0  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4472  002FA2  5846               	subwfb	(??_verifica_dados_operacionais+2)^0,w,c
  4473  002FA4  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4474  002FA6  5847               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4475  002FA8  B0D8               	btfsc	status,0,c
  4476  002FAA  0012               	return	
  4477                           
  4478                           ; BSR set to: 1
  4479  002FAC  0E03               	movlw	3
  4480  002FAE  6051               	cpfslt	verifica_dados_operacionais@contador_atual^0,c
  4481  002FB0  0012               	return	
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;main.c: 326: {;main.c: 327: if(velocidade_atual_int > dados_vel[contador_anterior])
  4485  002FB2  0100               	movlb	0	; () banked
  4486  002FB4  51F0               	movf	verifica_dados_operacionais@contador_anterior& (0+255),w,b
  4487  002FB6  0D02               	mullw	2
  4488  002FB8  0E27               	movlw	low _dados_vel
  4489  002FBA  24F3               	addwf	243,w,c
  4490  002FBC  6ED9               	movwf	fsr2l,c
  4491  002FBE  0E01               	movlw	high _dados_vel
  4492  002FC0  20F4               	addwfc	prodh,w,c
  4493  002FC2  6EDA               	movwf	fsr2h,c
  4494  002FC4  CFDE F044          	movff	postinc2,??_verifica_dados_operacionais
  4495  002FC8  CFDD F045          	movff	postdec2,??_verifica_dados_operacionais+1
  4496  002FCC  5044               	movf	??_verifica_dados_operacionais^0,w,c
  4497  002FCE  6E46               	movwf	(??_verifica_dados_operacionais+2)^0,c
  4498  002FD0  5045               	movf	(??_verifica_dados_operacionais+1)^0,w,c
  4499  002FD2  6E47               	movwf	(??_verifica_dados_operacionais+3)^0,c
  4500  002FD4  6A48               	clrf	(??_verifica_dados_operacionais+4)^0,c
  4501  002FD6  6A49               	clrf	(??_verifica_dados_operacionais+5)^0,c
  4502  002FD8  0101               	movlb	1	; () banked
  4503  002FDA  5151               	movf	verifica_dados_operacionais@velocidade_atual_int& (0+255),w,b
  4504  002FDC  5C46               	subwf	(??_verifica_dados_operacionais+2)^0,w,c
  4505  002FDE  5152               	movf	(verifica_dados_operacionais@velocidade_atual_int+1)& (0+255),w,b
  4506  002FE0  5847               	subwfb	(??_verifica_dados_operacionais+3)^0,w,c
  4507  002FE2  5153               	movf	(verifica_dados_operacionais@velocidade_atual_int+2)& (0+255),w,b
  4508  002FE4  5848               	subwfb	(??_verifica_dados_operacionais+4)^0,w,c
  4509  002FE6  5154               	movf	(verifica_dados_operacionais@velocidade_atual_int+3)& (0+255),w,b
  4510  002FE8  5849               	subwfb	(??_verifica_dados_operacionais+5)^0,w,c
  4511  002FEA  B0D8               	btfsc	status,0,c
  4512  002FEC  D04C               	goto	l13288
  4513                           
  4514                           ; BSR set to: 1
  4515                           ;main.c: 328: {;main.c: 329: dados_vel[contador_atual] = velocidade_atual_int;
  4516  002FEE  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4517  002FF0  0D02               	mullw	2
  4518  002FF2  0E27               	movlw	low _dados_vel
  4519  002FF4  24F3               	addwf	243,w,c
  4520  002FF6  6ED9               	movwf	fsr2l,c
  4521  002FF8  0E01               	movlw	high _dados_vel
  4522  002FFA  20F4               	addwfc	prodh,w,c
  4523  002FFC  6EDA               	movwf	fsr2h,c
  4524  002FFE  C151  FFDE         	movff	verifica_dados_operacionais@velocidade_atual_int,postinc2
  4525  003002  C152  FFDD         	movff	verifica_dados_operacionais@velocidade_atual_int+1,postdec2
  4526                           
  4527                           ; BSR set to: 1
  4528                           ;main.c: 330: strcpy(dados_lat[contador_atual], latitude());
  4529  003006  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4530  003008  0D0B               	mullw	11
  4531  00300A  0EA2               	movlw	low _dados_lat
  4532  00300C  24F3               	addwf	243,w,c
  4533  00300E  6E0C               	movwf	strcpy@to^0,c
  4534  003010  0E02               	movlw	high _dados_lat
  4535  003012  20F4               	addwfc	prodh,w,c
  4536  003014  6E0D               	movwf	(strcpy@to+1)^0,c
  4537  003016  EC19  F02E         	call	_latitude	;wreg free
  4538  00301A  C00A  F00E         	movff	?_latitude,strcpy@from
  4539  00301E  C00B  F00F         	movff	?_latitude+1,strcpy@from+1
  4540  003022  ECD5  F02B         	call	_strcpy	;wreg free
  4541                           
  4542                           ;main.c: 331: strcpy(dados_long[contador_atual], longitude());
  4543  003026  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4544  003028  0D0C               	mullw	12
  4545  00302A  0E7E               	movlw	low _dados_long
  4546  00302C  24F3               	addwf	243,w,c
  4547  00302E  6E0C               	movwf	strcpy@to^0,c
  4548  003030  0E02               	movlw	high _dados_long
  4549  003032  20F4               	addwfc	prodh,w,c
  4550  003034  6E0D               	movwf	(strcpy@to+1)^0,c
  4551  003036  EC14  F02E         	call	_longitude	;wreg free
  4552  00303A  C00A  F00E         	movff	?_longitude,strcpy@from
  4553  00303E  C00B  F00F         	movff	?_longitude+1,strcpy@from+1
  4554  003042  ECD5  F02B         	call	_strcpy	;wreg free
  4555                           
  4556                           ;main.c: 332: strcpy(dados_hora[contador_atual], rawhora());
  4557  003046  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4558  003048  0D06               	mullw	6
  4559  00304A  0ED5               	movlw	low _dados_hora
  4560  00304C  24F3               	addwf	243,w,c
  4561  00304E  6E0C               	movwf	strcpy@to^0,c
  4562  003050  0E02               	movlw	high _dados_hora
  4563  003052  20F4               	addwfc	prodh,w,c
  4564  003054  6E0D               	movwf	(strcpy@to+1)^0,c
  4565  003056  EC0A  F02E         	call	_rawhora	;wreg free
  4566  00305A  C00A  F00E         	movff	?_rawhora,strcpy@from
  4567  00305E  C00B  F00F         	movff	?_rawhora+1,strcpy@from+1
  4568  003062  ECD5  F02B         	call	_strcpy	;wreg free
  4569                           
  4570                           ;main.c: 333: strcpy(dados_data[contador_atual], rawdata());
  4571  003066  5051               	movf	verifica_dados_operacionais@contador_atual^0,w,c
  4572  003068  0D06               	mullw	6
  4573  00306A  0EC3               	movlw	low _dados_data
  4574  00306C  24F3               	addwf	243,w,c
  4575  00306E  6E0C               	movwf	strcpy@to^0,c
  4576  003070  0E02               	movlw	high _dados_data
  4577  003072  20F4               	addwfc	prodh,w,c
  4578  003074  6E0D               	movwf	(strcpy@to+1)^0,c
  4579  003076  EC0F  F02E         	call	_rawdata	;wreg free
  4580  00307A  C00A  F00E         	movff	?_rawdata,strcpy@from
  4581  00307E  C00B  F00F         	movff	?_rawdata+1,strcpy@from+1
  4582  003082  ECD5  F02B         	call	_strcpy	;wreg free
  4583  003086                     l13288:
  4584                           
  4585                           ;main.c: 334: };main.c: 335: contador_anterior = contador_atual;
  4586  003086  C051  F0F0         	movff	verifica_dados_operacionais@contador_atual,verifica_dados_operacionais@contador_a
      +                          nterior
  4587                           
  4588                           ;main.c: 336: contador_atual++;
  4589  00308A  2A51               	incf	verifica_dados_operacionais@contador_atual^0,f,c
  4590  00308C  0012               	return		;funcret
  4591  00308E                     __end_of_verifica_dados_operacionais:
  4592                           	callstack 0
  4593                           
  4594 ;; *************** function _strcpy *****************
  4595 ;; Defined at:
  4596 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcpy.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  to              2   11[COMRAM] PTR unsigned char 
  4599 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4600 ;;  from            2   13[COMRAM] PTR const unsigned char 
  4601 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  cp              2   15[COMRAM] PTR unsigned char 
  4604 ;;		 -> dados_data(18), dados_hora(18), dados_long(36), dados_lat(33), 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2   11[COMRAM] PTR unsigned char 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/1
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4614 ;;      Params:         4       0       0       0       0       0       0       0       0
  4615 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4617 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4618 ;;Total ram usage:        6 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    2
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_verifica_dados_operacionais
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text15
  4629  0057AA                     __ptext15:
  4630                           	callstack 0
  4631  0057AA                     _strcpy:
  4632                           	callstack 26
  4633                           
  4634                           ;incstack = 0
  4635  0057AA  C00C  F010         	movff	strcpy@to,strcpy@cp
  4636  0057AE  C00D  F011         	movff	strcpy@to+1,strcpy@cp+1
  4637  0057B2  D004               	goto	l13244
  4638  0057B4                     l13242:
  4639  0057B4  4A10               	infsnz	strcpy@cp^0,f,c
  4640  0057B6  2A11               	incf	(strcpy@cp+1)^0,f,c
  4641  0057B8  4A0E               	infsnz	strcpy@from^0,f,c
  4642  0057BA  2A0F               	incf	(strcpy@from+1)^0,f,c
  4643  0057BC                     l13244:
  4644  0057BC  C00E  FFD9         	movff	strcpy@from,fsr2l
  4645  0057C0  C00F  FFDA         	movff	strcpy@from+1,fsr2h
  4646  0057C4  C010  FFE1         	movff	strcpy@cp,fsr1l
  4647  0057C8  C011  FFE2         	movff	strcpy@cp+1,fsr1h
  4648  0057CC  CFDF FFE7          	movff	indf2,indf1
  4649  0057D0  50E7               	movf	indf1,w,c
  4650  0057D2  B4D8               	btfsc	status,2,c
  4651  0057D4  0012               	return	
  4652  0057D6  D7EE               	goto	l13242
  4653  0057D8                     __end_of_strcpy:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _rawhora *****************
  4657 ;; Defined at:
  4658 ;;		line 668 in file "bibliotecas/GPS.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  2    9[COMRAM] PTR unsigned char 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/1
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4672 ;;      Params:         2       0       0       0       0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4675 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4676 ;;Total ram usage:        2 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    2
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_verifica_dados_operacionais
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text16
  4687  005C14                     __ptext16:
  4688                           	callstack 0
  4689  005C14                     _rawhora:
  4690                           	callstack 26
  4691                           
  4692                           ;GPS.c: 670: return rawTime;
  4693                           
  4694                           ;incstack = 0
  4695  005C14  0ED1               	movlw	low _rawTime
  4696  005C16  6E0A               	movwf	?_rawhora^0,c
  4697  005C18  0E01               	movlw	high _rawTime
  4698  005C1A  6E0B               	movwf	(?_rawhora+1)^0,c
  4699  005C1C  0012               	return		;funcret
  4700  005C1E                     __end_of_rawhora:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _rawdata *****************
  4704 ;; Defined at:
  4705 ;;		line 673 in file "bibliotecas/GPS.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  2    9[COMRAM] PTR unsigned char 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/1
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4719 ;;      Params:         2       0       0       0       0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4722 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4723 ;;Total ram usage:        2 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    2
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_verifica_dados_operacionais
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text17
  4734  005C1E                     __ptext17:
  4735                           	callstack 0
  4736  005C1E                     _rawdata:
  4737                           	callstack 26
  4738                           
  4739                           ;GPS.c: 675: return rawDate;
  4740                           
  4741                           ;incstack = 0
  4742  005C1E  0EE4               	movlw	low _rawDate
  4743  005C20  6E0A               	movwf	?_rawdata^0,c
  4744  005C22  0E01               	movlw	high _rawDate
  4745  005C24  6E0B               	movwf	(?_rawdata+1)^0,c
  4746  005C26  0012               	return		;funcret
  4747  005C28                     __end_of_rawdata:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function _longitude *****************
  4751 ;; Defined at:
  4752 ;;		line 663 in file "bibliotecas/GPS.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  2    9[COMRAM] PTR unsigned char 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/1
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4766 ;;      Params:         2       0       0       0       0       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4769 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:        2 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_verifica_dados_operacionais
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text18
  4781  005C28                     __ptext18:
  4782                           	callstack 0
  4783  005C28                     _longitude:
  4784                           	callstack 26
  4785                           
  4786                           ;GPS.c: 665: return rawLongitude;
  4787                           
  4788                           ;incstack = 0
  4789  005C28  0EA5               	movlw	low _rawLongitude
  4790  005C2A  6E0A               	movwf	?_longitude^0,c
  4791  005C2C  0E01               	movlw	high _rawLongitude
  4792  005C2E  6E0B               	movwf	(?_longitude+1)^0,c
  4793  005C30  0012               	return		;funcret
  4794  005C32                     __end_of_longitude:
  4795                           	callstack 0
  4796                           
  4797 ;; *************** function _latitude *****************
  4798 ;; Defined at:
  4799 ;;		line 658 in file "bibliotecas/GPS.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;		None
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2    9[COMRAM] PTR unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 3F/1
  4810 ;;		On exit  : 3F/1
  4811 ;;		Unchanged: 3F/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4813 ;;      Params:         2       0       0       0       0       0       0       0       0
  4814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4816 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4817 ;;Total ram usage:        2 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    2
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_verifica_dados_operacionais
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text19
  4828  005C32                     __ptext19:
  4829                           	callstack 0
  4830  005C32                     _latitude:
  4831                           	callstack 26
  4832                           
  4833                           ; BSR set to: 1
  4834                           ;GPS.c: 660: return rawLatitude;
  4835                           
  4836                           ;incstack = 0
  4837  005C32  0EBE               	movlw	low _rawLatitude
  4838  005C34  6E0A               	movwf	?_latitude^0,c
  4839  005C36  0E01               	movlw	high _rawLatitude
  4840  005C38  6E0B               	movwf	(?_latitude+1)^0,c
  4841                           
  4842                           ; BSR set to: 1
  4843  005C3A  0012               	return		;funcret
  4844  005C3C                     __end_of_latitude:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function ___fttol *****************
  4848 ;; Defined at:
  4849 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\fttol.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  f1              3   42[COMRAM] float 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  lval            4   52[COMRAM] unsigned long 
  4854 ;;  exp1            1   56[COMRAM] unsigned char 
  4855 ;;  sign1           1   51[COMRAM] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  4   42[COMRAM] long 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4865 ;;      Params:         4       0       0       0       0       0       0       0       0
  4866 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4867 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4868 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4869 ;;Total ram usage:       15 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    2
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_verifica_dados_operacionais
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text20
  4880  003F98                     __ptext20:
  4881                           	callstack 0
  4882  003F98                     ___fttol:
  4883                           	callstack 26
  4884                           
  4885                           ; BSR set to: 1
  4886                           ;incstack = 0
  4887  003F98  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4888  003F9C  6A30               	clrf	(??___fttol+1)^0,c
  4889  003F9E  6A31               	clrf	(??___fttol+2)^0,c
  4890  003FA0  342C               	rlcf	(___fttol@f1+1)^0,w,c
  4891  003FA2  362F               	rlcf	??___fttol^0,f,c
  4892  003FA4  E301               	bnc	u10461
  4893  003FA6  8030               	bsf	(??___fttol+1)^0,0,c
  4894  003FA8                     u10461:
  4895  003FA8  502F               	movf	??___fttol^0,w,c
  4896  003FAA  6E39               	movwf	___fttol@exp1^0,c
  4897  003FAC  5039               	movf	___fttol@exp1^0,w,c
  4898  003FAE  A4D8               	btfss	status,2,c
  4899  003FB0  D009               	goto	l9562
  4900  003FB2                     u10470:
  4901  003FB2  0E00               	movlw	0
  4902  003FB4  6E2B               	movwf	?___fttol^0,c
  4903  003FB6  0E00               	movlw	0
  4904  003FB8  6E2C               	movwf	(?___fttol+1)^0,c
  4905  003FBA  0E00               	movlw	0
  4906  003FBC  6E2D               	movwf	(?___fttol+2)^0,c
  4907  003FBE  0E00               	movlw	0
  4908  003FC0  6E2E               	movwf	(?___fttol+3)^0,c
  4909  003FC2  0012               	return	
  4910  003FC4                     l9562:
  4911  003FC4  0E17               	movlw	23
  4912  003FC6  6E2F               	movwf	??___fttol^0,c
  4913  003FC8  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4914  003FCC  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4915  003FD0  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4916  003FD4  282F               	incf	??___fttol^0,w,c
  4917  003FD6  6E33               	movwf	(??___fttol+4)^0,c
  4918  003FD8  D004               	goto	u10480
  4919  003FDA                     u10485:
  4920  003FDA  90D8               	bcf	status,0,c
  4921  003FDC  3232               	rrcf	(??___fttol+3)^0,f,c
  4922  003FDE  3231               	rrcf	(??___fttol+2)^0,f,c
  4923  003FE0  3230               	rrcf	(??___fttol+1)^0,f,c
  4924  003FE2                     u10480:
  4925  003FE2  2E33               	decfsz	(??___fttol+4)^0,f,c
  4926  003FE4  D7FA               	goto	u10485
  4927  003FE6  5030               	movf	(??___fttol+1)^0,w,c
  4928  003FE8  6E34               	movwf	___fttol@sign1^0,c
  4929  003FEA  8E2C               	bsf	(___fttol@f1+1)^0,7,c
  4930  003FEC  0EFF               	movlw	255
  4931  003FEE  162B               	andwf	___fttol@f1^0,f,c
  4932  003FF0  0EFF               	movlw	255
  4933  003FF2  162C               	andwf	(___fttol@f1+1)^0,f,c
  4934  003FF4  0E00               	movlw	0
  4935  003FF6  162D               	andwf	(___fttol@f1+2)^0,f,c
  4936  003FF8  502B               	movf	___fttol@f1^0,w,c
  4937  003FFA  6E35               	movwf	___fttol@lval^0,c
  4938  003FFC  502C               	movf	(___fttol@f1+1)^0,w,c
  4939  003FFE  6E36               	movwf	(___fttol@lval+1)^0,c
  4940  004000  502D               	movf	(___fttol@f1+2)^0,w,c
  4941  004002  6E37               	movwf	(___fttol@lval+2)^0,c
  4942  004004  6A38               	clrf	(___fttol@lval+3)^0,c
  4943  004006  0E8E               	movlw	142
  4944  004008  5E39               	subwf	___fttol@exp1^0,f,c
  4945  00400A  AE39               	btfss	___fttol@exp1^0,7,c
  4946  00400C  D00D               	goto	l9584
  4947  00400E  5039               	movf	___fttol@exp1^0,w,c
  4948  004010  0A80               	xorlw	128
  4949  004012  0F8F               	addlw	143
  4950  004014  A0D8               	btfss	status,0,c
  4951  004016  D7CD               	goto	u10470
  4952  004018                     l9580:
  4953  004018  90D8               	bcf	status,0,c
  4954  00401A  3238               	rrcf	(___fttol@lval+3)^0,f,c
  4955  00401C  3237               	rrcf	(___fttol@lval+2)^0,f,c
  4956  00401E  3236               	rrcf	(___fttol@lval+1)^0,f,c
  4957  004020  3235               	rrcf	___fttol@lval^0,f,c
  4958  004022  3E39               	incfsz	___fttol@exp1^0,f,c
  4959  004024  D7F9               	goto	l9580
  4960  004026  D00D               	goto	u10520
  4961  004028                     l9584:
  4962  004028  0E17               	movlw	23
  4963  00402A  6439               	cpfsgt	___fttol@exp1^0,c
  4964  00402C  D007               	goto	l9592
  4965  00402E  D7C1               	goto	u10470
  4966  004030                     l9590:
  4967  004030  90D8               	bcf	status,0,c
  4968  004032  3635               	rlcf	___fttol@lval^0,f,c
  4969  004034  3636               	rlcf	(___fttol@lval+1)^0,f,c
  4970  004036  3637               	rlcf	(___fttol@lval+2)^0,f,c
  4971  004038  3638               	rlcf	(___fttol@lval+3)^0,f,c
  4972  00403A  0639               	decf	___fttol@exp1^0,f,c
  4973  00403C                     l9592:
  4974  00403C  5039               	movf	___fttol@exp1^0,w,c
  4975  00403E  A4D8               	btfss	status,2,c
  4976  004040  D7F7               	goto	l9590
  4977  004042                     u10520:
  4978  004042  5034               	movf	___fttol@sign1^0,w,c
  4979  004044  B4D8               	btfsc	status,2,c
  4980  004046  D008               	goto	l9598
  4981  004048  1E38               	comf	(___fttol@lval+3)^0,f,c
  4982  00404A  1E37               	comf	(___fttol@lval+2)^0,f,c
  4983  00404C  1E36               	comf	(___fttol@lval+1)^0,f,c
  4984  00404E  6C35               	negf	___fttol@lval^0,c
  4985  004050  0E00               	movlw	0
  4986  004052  2236               	addwfc	(___fttol@lval+1)^0,f,c
  4987  004054  2237               	addwfc	(___fttol@lval+2)^0,f,c
  4988  004056  2238               	addwfc	(___fttol@lval+3)^0,f,c
  4989  004058                     l9598:
  4990  004058  C035  F02B         	movff	___fttol@lval,?___fttol
  4991  00405C  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4992  004060  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4993  004064  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4994  004068  0012               	return		;funcret
  4995  00406A                     __end_of___fttol:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function ___ftmul *****************
  4999 ;; Defined at:
  5000 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ftmul.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  f1              3   27[COMRAM] float 
  5003 ;;  f2              3   30[COMRAM] float 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  5006 ;;  sign            1   41[COMRAM] unsigned char 
  5007 ;;  cntr            1   40[COMRAM] unsigned char 
  5008 ;;  exp             1   36[COMRAM] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  3   27[COMRAM] float 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5018 ;;      Params:         6       0       0       0       0       0       0       0       0
  5019 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5020 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5021 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5022 ;;Total ram usage:       15 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    3
  5025 ;; This function calls:
  5026 ;;		___ftpack
  5027 ;; This function is called by:
  5028 ;;		_verifica_dados_operacionais
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text21
  5033  003CCC                     __ptext21:
  5034                           	callstack 0
  5035  003CCC                     ___ftmul:
  5036                           	callstack 25
  5037                           
  5038                           ;incstack = 0
  5039  003CCC  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  5040  003CD0  6A23               	clrf	(??___ftmul+1)^0,c
  5041  003CD2  6A24               	clrf	(??___ftmul+2)^0,c
  5042  003CD4  341D               	rlcf	(___ftmul@f1+1)^0,w,c
  5043  003CD6  3622               	rlcf	??___ftmul^0,f,c
  5044  003CD8  E301               	bnc	u10391
  5045  003CDA  8023               	bsf	(??___ftmul+1)^0,0,c
  5046  003CDC                     u10391:
  5047  003CDC  5022               	movf	??___ftmul^0,w,c
  5048  003CDE  6E25               	movwf	___ftmul@exp^0,c
  5049  003CE0  5025               	movf	___ftmul@exp^0,w,c
  5050  003CE2  A4D8               	btfss	status,2,c
  5051  003CE4  D007               	goto	l9502
  5052  003CE6  0E00               	movlw	0
  5053  003CE8  6E1C               	movwf	?___ftmul^0,c
  5054  003CEA  0E00               	movlw	0
  5055  003CEC  6E1D               	movwf	(?___ftmul+1)^0,c
  5056  003CEE  0E00               	movlw	0
  5057  003CF0  6E1E               	movwf	(?___ftmul+2)^0,c
  5058  003CF2  0012               	return	
  5059  003CF4                     l9502:
  5060  003CF4  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  5061  003CF8  6A23               	clrf	(??___ftmul+1)^0,c
  5062  003CFA  6A24               	clrf	(??___ftmul+2)^0,c
  5063  003CFC  3420               	rlcf	(___ftmul@f2+1)^0,w,c
  5064  003CFE  3622               	rlcf	??___ftmul^0,f,c
  5065  003D00  E301               	bnc	u10411
  5066  003D02  8023               	bsf	(??___ftmul+1)^0,0,c
  5067  003D04                     u10411:
  5068  003D04  5022               	movf	??___ftmul^0,w,c
  5069  003D06  6E2A               	movwf	___ftmul@sign^0,c
  5070  003D08  502A               	movf	___ftmul@sign^0,w,c
  5071  003D0A  A4D8               	btfss	status,2,c
  5072  003D0C  D007               	goto	l9508
  5073  003D0E  0E00               	movlw	0
  5074  003D10  6E1C               	movwf	?___ftmul^0,c
  5075  003D12  0E00               	movlw	0
  5076  003D14  6E1D               	movwf	(?___ftmul+1)^0,c
  5077  003D16  0E00               	movlw	0
  5078  003D18  6E1E               	movwf	(?___ftmul+2)^0,c
  5079  003D1A  0012               	return	
  5080  003D1C                     l9508:
  5081  003D1C  502A               	movf	___ftmul@sign^0,w,c
  5082  003D1E  0F7B               	addlw	123
  5083  003D20  2625               	addwf	___ftmul@exp^0,f,c
  5084  003D22  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  5085  003D26  5021               	movf	(___ftmul@f2+2)^0,w,c
  5086  003D28  1A2A               	xorwf	___ftmul@sign^0,f,c
  5087  003D2A  0E80               	movlw	128
  5088  003D2C  162A               	andwf	___ftmul@sign^0,f,c
  5089  003D2E  8E1D               	bsf	(___ftmul@f1+1)^0,7,c
  5090  003D30  8E20               	bsf	(___ftmul@f2+1)^0,7,c
  5091  003D32  0EFF               	movlw	255
  5092  003D34  161F               	andwf	___ftmul@f2^0,f,c
  5093  003D36  0EFF               	movlw	255
  5094  003D38  1620               	andwf	(___ftmul@f2+1)^0,f,c
  5095  003D3A  0E00               	movlw	0
  5096  003D3C  1621               	andwf	(___ftmul@f2+2)^0,f,c
  5097  003D3E  0E00               	movlw	0
  5098  003D40  6E26               	movwf	___ftmul@f3_as_product^0,c
  5099  003D42  0E00               	movlw	0
  5100  003D44  6E27               	movwf	(___ftmul@f3_as_product+1)^0,c
  5101  003D46  0E00               	movlw	0
  5102  003D48  6E28               	movwf	(___ftmul@f3_as_product+2)^0,c
  5103  003D4A  0E07               	movlw	7
  5104  003D4C  6E29               	movwf	___ftmul@cntr^0,c
  5105  003D4E                     l9522:
  5106  003D4E  A01C               	btfss	___ftmul@f1^0,0,c
  5107  003D50  D006               	goto	l9526
  5108  003D52  501F               	movf	___ftmul@f2^0,w,c
  5109  003D54  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5110  003D56  5020               	movf	(___ftmul@f2+1)^0,w,c
  5111  003D58  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5112  003D5A  5021               	movf	(___ftmul@f2+2)^0,w,c
  5113  003D5C  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5114  003D5E                     l9526:
  5115  003D5E  90D8               	bcf	status,0,c
  5116  003D60  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5117  003D62  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5118  003D64  321C               	rrcf	___ftmul@f1^0,f,c
  5119  003D66  90D8               	bcf	status,0,c
  5120  003D68  361F               	rlcf	___ftmul@f2^0,f,c
  5121  003D6A  3620               	rlcf	(___ftmul@f2+1)^0,f,c
  5122  003D6C  3621               	rlcf	(___ftmul@f2+2)^0,f,c
  5123  003D6E  2E29               	decfsz	___ftmul@cntr^0,f,c
  5124  003D70  D7EE               	goto	l9522
  5125  003D72  0E09               	movlw	9
  5126  003D74  6E29               	movwf	___ftmul@cntr^0,c
  5127  003D76                     l9532:
  5128  003D76  A01C               	btfss	___ftmul@f1^0,0,c
  5129  003D78  D006               	goto	l9536
  5130  003D7A  501F               	movf	___ftmul@f2^0,w,c
  5131  003D7C  2626               	addwf	___ftmul@f3_as_product^0,f,c
  5132  003D7E  5020               	movf	(___ftmul@f2+1)^0,w,c
  5133  003D80  2227               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5134  003D82  5021               	movf	(___ftmul@f2+2)^0,w,c
  5135  003D84  2228               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5136  003D86                     l9536:
  5137  003D86  90D8               	bcf	status,0,c
  5138  003D88  321E               	rrcf	(___ftmul@f1+2)^0,f,c
  5139  003D8A  321D               	rrcf	(___ftmul@f1+1)^0,f,c
  5140  003D8C  321C               	rrcf	___ftmul@f1^0,f,c
  5141  003D8E  90D8               	bcf	status,0,c
  5142  003D90  3228               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  5143  003D92  3227               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5144  003D94  3226               	rrcf	___ftmul@f3_as_product^0,f,c
  5145  003D96  2E29               	decfsz	___ftmul@cntr^0,f,c
  5146  003D98  D7EE               	goto	l9532
  5147  003D9A  C026  F00A         	movff	___ftmul@f3_as_product,___ftpack@arg
  5148  003D9E  C027  F00B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5149  003DA2  C028  F00C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5150  003DA6  C025  F00D         	movff	___ftmul@exp,___ftpack@exp
  5151  003DAA  C02A  F00E         	movff	___ftmul@sign,___ftpack@sign
  5152  003DAE  EC5D  F021         	call	___ftpack	;wreg free
  5153  003DB2  C00A  F01C         	movff	?___ftpack,?___ftmul
  5154  003DB6  C00B  F01D         	movff	?___ftpack+1,?___ftmul+1
  5155  003DBA  C00C  F01E         	movff	?___ftpack+2,?___ftmul+2
  5156  003DBE  0012               	return		;funcret
  5157  003DC0                     __end_of___ftmul:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function ___awtoft *****************
  5161 ;; Defined at:
  5162 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awtoft.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  c               2   23[COMRAM] int 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  sign            1   26[COMRAM] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  3   23[COMRAM] float 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0, cstack
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5176 ;;      Params:         3       0       0       0       0       0       0       0       0
  5177 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5179 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5180 ;;Total ram usage:        4 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; Hardware stack levels required when called:    3
  5183 ;; This function calls:
  5184 ;;		___ftpack
  5185 ;; This function is called by:
  5186 ;;		_verifica_dados_operacionais
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text22
  5191  005618                     __ptext22:
  5192                           	callstack 0
  5193  005618                     ___awtoft:
  5194                           	callstack 25
  5195                           
  5196                           ;incstack = 0
  5197  005618  0E00               	movlw	0
  5198  00561A  6E1B               	movwf	___awtoft@sign^0,c
  5199  00561C  AE19               	btfss	(___awtoft@c+1)^0,7,c
  5200  00561E  D006               	goto	l9552
  5201  005620  6C18               	negf	___awtoft@c^0,c
  5202  005622  1E19               	comf	(___awtoft@c+1)^0,f,c
  5203  005624  B0D8               	btfsc	status,0,c
  5204  005626  2A19               	incf	(___awtoft@c+1)^0,f,c
  5205  005628  0E01               	movlw	1
  5206  00562A  6E1B               	movwf	___awtoft@sign^0,c
  5207  00562C                     l9552:
  5208  00562C  C018  F00A         	movff	___awtoft@c,___ftpack@arg
  5209  005630  C019  F00B         	movff	___awtoft@c+1,___ftpack@arg+1
  5210  005634  6A0C               	clrf	(___ftpack@arg+2)^0,c
  5211  005636  0E8E               	movlw	142
  5212  005638  6E0D               	movwf	___ftpack@exp^0,c
  5213  00563A  C01B  F00E         	movff	___awtoft@sign,___ftpack@sign
  5214  00563E  EC5D  F021         	call	___ftpack	;wreg free
  5215  005642  C00A  F018         	movff	?___ftpack,?___awtoft
  5216  005646  C00B  F019         	movff	?___ftpack+1,?___awtoft+1
  5217  00564A  C00C  F01A         	movff	?___ftpack+2,?___awtoft+2
  5218  00564E  0012               	return		;funcret
  5219  005650                     __end_of___awtoft:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function ___ftpack *****************
  5223 ;; Defined at:
  5224 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\float.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  arg             3    9[COMRAM] unsigned um
  5227 ;;  exp             1   12[COMRAM] unsigned char 
  5228 ;;  sign            1   13[COMRAM] unsigned char 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  3    9[COMRAM] float 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5240 ;;      Params:         5       0       0       0       0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5242 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5243 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5244 ;;Total ram usage:        8 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    2
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		___awtoft
  5251 ;;		___ftmul
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text23
  5256  0042BA                     __ptext23:
  5257                           	callstack 0
  5258  0042BA                     ___ftpack:
  5259                           	callstack 25
  5260                           
  5261                           ;incstack = 0
  5262  0042BA  500D               	movf	___ftpack@exp^0,w,c
  5263  0042BC  B4D8               	btfsc	status,2,c
  5264  0042BE  D005               	goto	u10010
  5265  0042C0  500A               	movf	___ftpack@arg^0,w,c
  5266  0042C2  100B               	iorwf	(___ftpack@arg+1)^0,w,c
  5267  0042C4  100C               	iorwf	(___ftpack@arg+2)^0,w,c
  5268  0042C6  A4D8               	btfss	status,2,c
  5269  0042C8  D00C               	goto	l9282
  5270  0042CA                     u10010:
  5271  0042CA  0E00               	movlw	0
  5272  0042CC  6E0A               	movwf	?___ftpack^0,c
  5273  0042CE  0E00               	movlw	0
  5274  0042D0  6E0B               	movwf	(?___ftpack+1)^0,c
  5275  0042D2  0E00               	movlw	0
  5276  0042D4  6E0C               	movwf	(?___ftpack+2)^0,c
  5277  0042D6  0012               	return	
  5278  0042D8                     l9280:
  5279  0042D8  2A0D               	incf	___ftpack@exp^0,f,c
  5280  0042DA  90D8               	bcf	status,0,c
  5281  0042DC  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5282  0042DE  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5283  0042E0  320A               	rrcf	___ftpack@arg^0,f,c
  5284  0042E2                     l9282:
  5285  0042E2  0E00               	movlw	0
  5286  0042E4  140A               	andwf	___ftpack@arg^0,w,c
  5287  0042E6  6E0F               	movwf	??___ftpack^0,c
  5288  0042E8  0E00               	movlw	0
  5289  0042EA  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5290  0042EC  6E10               	movwf	(??___ftpack+1)^0,c
  5291  0042EE  0EFE               	movlw	254
  5292  0042F0  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5293  0042F2  6E11               	movwf	(??___ftpack+2)^0,c
  5294  0042F4  500F               	movf	??___ftpack^0,w,c
  5295  0042F6  1010               	iorwf	(??___ftpack+1)^0,w,c
  5296  0042F8  1011               	iorwf	(??___ftpack+2)^0,w,c
  5297  0042FA  B4D8               	btfsc	status,2,c
  5298  0042FC  D00C               	goto	l9288
  5299  0042FE  D7EC               	goto	l9280
  5300  004300                     l9284:
  5301  004300  2A0D               	incf	___ftpack@exp^0,f,c
  5302  004302  0E01               	movlw	1
  5303  004304  260A               	addwf	___ftpack@arg^0,f,c
  5304  004306  0E00               	movlw	0
  5305  004308  220B               	addwfc	(___ftpack@arg+1)^0,f,c
  5306  00430A  0E00               	movlw	0
  5307  00430C  220C               	addwfc	(___ftpack@arg+2)^0,f,c
  5308  00430E  90D8               	bcf	status,0,c
  5309  004310  320C               	rrcf	(___ftpack@arg+2)^0,f,c
  5310  004312  320B               	rrcf	(___ftpack@arg+1)^0,f,c
  5311  004314  320A               	rrcf	___ftpack@arg^0,f,c
  5312  004316                     l9288:
  5313  004316  0E00               	movlw	0
  5314  004318  140A               	andwf	___ftpack@arg^0,w,c
  5315  00431A  6E0F               	movwf	??___ftpack^0,c
  5316  00431C  0E00               	movlw	0
  5317  00431E  140B               	andwf	(___ftpack@arg+1)^0,w,c
  5318  004320  6E10               	movwf	(??___ftpack+1)^0,c
  5319  004322  0EFF               	movlw	255
  5320  004324  140C               	andwf	(___ftpack@arg+2)^0,w,c
  5321  004326  6E11               	movwf	(??___ftpack+2)^0,c
  5322  004328  500F               	movf	??___ftpack^0,w,c
  5323  00432A  1010               	iorwf	(??___ftpack+1)^0,w,c
  5324  00432C  1011               	iorwf	(??___ftpack+2)^0,w,c
  5325  00432E  B4D8               	btfsc	status,2,c
  5326  004330  D006               	goto	l9292
  5327  004332  D7E6               	goto	l9284
  5328  004334                     l9290:
  5329  004334  060D               	decf	___ftpack@exp^0,f,c
  5330  004336  90D8               	bcf	status,0,c
  5331  004338  360A               	rlcf	___ftpack@arg^0,f,c
  5332  00433A  360B               	rlcf	(___ftpack@arg+1)^0,f,c
  5333  00433C  360C               	rlcf	(___ftpack@arg+2)^0,f,c
  5334  00433E                     l9292:
  5335  00433E  BE0B               	btfsc	(___ftpack@arg+1)^0,7,c
  5336  004340  D003               	goto	u10050
  5337  004342  0E02               	movlw	2
  5338  004344  600D               	cpfslt	___ftpack@exp^0,c
  5339  004346  D7F6               	goto	l9290
  5340  004348                     u10050:
  5341  004348  A00D               	btfss	___ftpack@exp^0,0,c
  5342  00434A  9E0B               	bcf	(___ftpack@arg+1)^0,7,c
  5343  00434C  90D8               	bcf	status,0,c
  5344  00434E  320D               	rrcf	___ftpack@exp^0,f,c
  5345  004350  500D               	movf	___ftpack@exp^0,w,c
  5346  004352  120C               	iorwf	(___ftpack@arg+2)^0,f,c
  5347  004354  500E               	movf	___ftpack@sign^0,w,c
  5348  004356  A4D8               	btfss	status,2,c
  5349  004358  8E0C               	bsf	(___ftpack@arg+2)^0,7,c
  5350  00435A  C00A  F00A         	movff	___ftpack@arg,?___ftpack
  5351  00435E  C00B  F00B         	movff	___ftpack@arg+1,?___ftpack+1
  5352  004362  C00C  F00C         	movff	___ftpack@arg+2,?___ftpack+2
  5353  004366  0012               	return		;funcret
  5354  004368                     __end_of___ftpack:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _Speed *****************
  5358 ;; Defined at:
  5359 ;;		line 685 in file "bibliotecas/GPS.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  2    9[COMRAM] PTR unsigned char 
  5366 ;; Registers used:
  5367 ;;		wreg, status,2, status,0
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5373 ;;      Params:         2       0       0       0       0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5376 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5377 ;;Total ram usage:        2 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    2
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_verifica_dados_operacionais
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text24
  5388  005C3C                     __ptext24:
  5389                           	callstack 0
  5390  005C3C                     _Speed:
  5391                           	callstack 26
  5392                           
  5393                           ;GPS.c: 687: return rawSpeed;
  5394                           
  5395                           ;incstack = 0
  5396  005C3C  0E6A               	movlw	low _rawSpeed
  5397  005C3E  6E0A               	movwf	?_Speed^0,c
  5398  005C40  0E02               	movlw	high _rawSpeed
  5399  005C42  6E0B               	movwf	(?_Speed+1)^0,c
  5400  005C44  0012               	return		;funcret
  5401  005C46                     __end_of_Speed:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function _mostra_dados_display *****************
  5405 ;; Defined at:
  5406 ;;		line 691 in file "bibliotecas/GPS.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    5
  5427 ;; This function calls:
  5428 ;;		_escreve_frase_ram_lcd
  5429 ;;		_posicao_cursor_lcd
  5430 ;; This function is called by:
  5431 ;;		_troca_de_tela
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text25
  5436  0057D8                     __ptext25:
  5437                           	callstack 0
  5438  0057D8                     _mostra_dados_display:
  5439                           	callstack 23
  5440                           
  5441                           ;GPS.c: 693: posicao_cursor_lcd(1,4);
  5442                           
  5443                           ;incstack = 0
  5444  0057D8  0E04               	movlw	4
  5445  0057DA  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5446  0057DC  0E01               	movlw	1
  5447  0057DE  EC58  F027         	call	_posicao_cursor_lcd
  5448                           
  5449                           ;GPS.c: 694: escreve_frase_ram_lcd(rawLatitude);
  5450  0057E2  0EBE               	movlw	low _rawLatitude
  5451  0057E4  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5452  0057E6  0E01               	movlw	high _rawLatitude
  5453  0057E8  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5454  0057EA  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5455                           
  5456                           ;GPS.c: 695: posicao_cursor_lcd(2,4);
  5457  0057EE  0E04               	movlw	4
  5458  0057F0  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
  5459  0057F2  0E02               	movlw	2
  5460  0057F4  EC58  F027         	call	_posicao_cursor_lcd
  5461                           
  5462                           ;GPS.c: 696: escreve_frase_ram_lcd(rawLongitude);
  5463  0057F8  0EA5               	movlw	low _rawLongitude
  5464  0057FA  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5465  0057FC  0E01               	movlw	high _rawLongitude
  5466  0057FE  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5467  005800  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5468  005804  0012               	return		;funcret
  5469  005806                     __end_of_mostra_dados_display:
  5470                           	callstack 0
  5471                           
  5472 ;; *************** function _escreve_inteiro_lcd *****************
  5473 ;; Defined at:
  5474 ;;		line 376 in file "bibliotecas/display_lcd.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  valor           4   42[COMRAM] long 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  texto           7   46[COMRAM] unsigned char [7]
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5488 ;;      Params:         4       0       0       0       0       0       0       0       0
  5489 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5491 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5492 ;;Total ram usage:       11 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    5
  5495 ;; This function calls:
  5496 ;;		_escreve_frase_ram_lcd
  5497 ;;		_ltoa
  5498 ;; This function is called by:
  5499 ;;		_troca_de_tela
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text26
  5504  005564                     __ptext26:
  5505                           	callstack 0
  5506  005564                     _escreve_inteiro_lcd:
  5507                           	callstack 23
  5508                           
  5509                           ;display_lcd.c: 378: char texto[7] = "000000";
  5510                           
  5511                           ;incstack = 0
  5512  005564  EE21  F0F3         	lfsr	2,escreve_inteiro_lcd@F3223
  5513  005568  EE10  F02F         	lfsr	1,escreve_inteiro_lcd@texto
  5514  00556C  0E06               	movlw	6
  5515  00556E                     u15871:
  5516  00556E  CFDB FFE3          	movff	plusw2,plusw1
  5517  005572  06E8               	decf	wreg,f,c
  5518  005574  E2FC               	bc	u15871
  5519                           
  5520                           ;display_lcd.c: 379: ltoa(texto,valor, 10);
  5521  005576  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5522  005578  6E23               	movwf	ltoa@buf^0,c
  5523  00557A  C02B  F024         	movff	escreve_inteiro_lcd@valor,ltoa@val
  5524  00557E  C02C  F025         	movff	escreve_inteiro_lcd@valor+1,ltoa@val+1
  5525  005582  C02D  F026         	movff	escreve_inteiro_lcd@valor+2,ltoa@val+2
  5526  005586  C02E  F027         	movff	escreve_inteiro_lcd@valor+3,ltoa@val+3
  5527  00558A  0E00               	movlw	0
  5528  00558C  6E29               	movwf	(ltoa@base+1)^0,c
  5529  00558E  0E0A               	movlw	10
  5530  005590  6E28               	movwf	ltoa@base^0,c
  5531  005592  EC2F  F02A         	call	_ltoa	;wreg free
  5532                           
  5533                           ;display_lcd.c: 380: escreve_frase_ram_lcd(texto);
  5534  005596  0E2F               	movlw	low escreve_inteiro_lcd@texto
  5535  005598  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
  5536  00559A  6A0E               	clrf	(escreve_frase_ram_lcd@buffer+1)^0,c
  5537  00559C  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
  5538  0055A0  0012               	return		;funcret
  5539  0055A2                     __end_of_escreve_inteiro_lcd:
  5540                           	callstack 0
  5541                           
  5542 ;; *************** function _ltoa *****************
  5543 ;; Defined at:
  5544 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  buf             1   34[COMRAM] PTR unsigned char 
  5547 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5548 ;;  val             4   35[COMRAM] long 
  5549 ;;  base            2   39[COMRAM] int 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;  cp              1    0        PTR unsigned char 
  5552 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      PTR unsigned char 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5562 ;;      Params:         7       0       0       0       0       0       0       0       0
  5563 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5565 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5566 ;;Total ram usage:        8 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    4
  5569 ;; This function calls:
  5570 ;;		_ultoa
  5571 ;; This function is called by:
  5572 ;;		_escreve_inteiro_lcd
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text27
  5577  00545E                     __ptext27:
  5578                           	callstack 0
  5579  00545E                     _ltoa:
  5580                           	callstack 23
  5581                           
  5582                           ;incstack = 0
  5583  00545E  AE27               	btfss	(ltoa@val+3)^0,7,c
  5584  005460  D00E               	goto	l12728
  5585  005462  5023               	movf	ltoa@buf^0,w,c
  5586  005464  6ED9               	movwf	fsr2l,c
  5587  005466  6ADA               	clrf	fsr2h,c
  5588  005468  0E2D               	movlw	45
  5589  00546A  6EDF               	movwf	indf2,c
  5590  00546C  2A23               	incf	ltoa@buf^0,f,c
  5591  00546E  1E27               	comf	(ltoa@val+3)^0,f,c
  5592  005470  1E26               	comf	(ltoa@val+2)^0,f,c
  5593  005472  1E25               	comf	(ltoa@val+1)^0,f,c
  5594  005474  6C24               	negf	ltoa@val^0,c
  5595  005476  0E00               	movlw	0
  5596  005478  2225               	addwfc	(ltoa@val+1)^0,f,c
  5597  00547A  2226               	addwfc	(ltoa@val+2)^0,f,c
  5598  00547C  2227               	addwfc	(ltoa@val+3)^0,f,c
  5599  00547E                     l12728:
  5600  00547E  C023  F017         	movff	ltoa@buf,ultoa@buf
  5601  005482  C024  F018         	movff	ltoa@val,ultoa@val
  5602  005486  C025  F019         	movff	ltoa@val+1,ultoa@val+1
  5603  00548A  C026  F01A         	movff	ltoa@val+2,ultoa@val+2
  5604  00548E  C027  F01B         	movff	ltoa@val+3,ultoa@val+3
  5605  005492  C028  F01C         	movff	ltoa@base,ultoa@base
  5606  005496  C029  F01D         	movff	ltoa@base+1,ultoa@base+1
  5607  00549A  EC58  F01F         	call	_ultoa	;wreg free
  5608  00549E  0012               	return		;funcret
  5609  0054A0                     __end_of_ltoa:
  5610                           	callstack 0
  5611                           
  5612 ;; *************** function _ultoa *****************
  5613 ;; Defined at:
  5614 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\ltoa.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  buf             1   22[COMRAM] PTR unsigned char 
  5617 ;;		 -> escreve_inteiro_lcd@texto(7), 
  5618 ;;  val             4   23[COMRAM] unsigned long 
  5619 ;;  base            2   27[COMRAM] int 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  v               4   29[COMRAM] unsigned long 
  5622 ;;  c               1   33[COMRAM] unsigned char 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      PTR unsigned char 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5632 ;;      Params:         7       0       0       0       0       0       0       0       0
  5633 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5635 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5636 ;;Total ram usage:       12 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    3
  5639 ;; This function calls:
  5640 ;;		___lldiv
  5641 ;;		___llmod
  5642 ;; This function is called by:
  5643 ;;		_ltoa
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text28
  5648  003EB0                     __ptext28:
  5649                           	callstack 0
  5650  003EB0                     _ultoa:
  5651                           	callstack 23
  5652                           
  5653                           ;incstack = 0
  5654  003EB0  C018  F01E         	movff	ultoa@val,ultoa@v
  5655  003EB4  C019  F01F         	movff	ultoa@val+1,ultoa@v+1
  5656  003EB8  C01A  F020         	movff	ultoa@val+2,ultoa@v+2
  5657  003EBC  C01B  F021         	movff	ultoa@val+3,ultoa@v+3
  5658  003EC0                     l12696:
  5659  003EC0  C01E  F00A         	movff	ultoa@v,___lldiv@dividend
  5660  003EC4  C01F  F00B         	movff	ultoa@v+1,___lldiv@dividend+1
  5661  003EC8  C020  F00C         	movff	ultoa@v+2,___lldiv@dividend+2
  5662  003ECC  C021  F00D         	movff	ultoa@v+3,___lldiv@dividend+3
  5663  003ED0  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5664  003ED4  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5665  003ED8  0E00               	movlw	0
  5666  003EDA  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5667  003EDC  0EFF               	movlw	-1
  5668  003EDE  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5669  003EE0  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5670  003EE2  ECF4  F024         	call	___lldiv	;wreg free
  5671  003EE6  C00A  F01E         	movff	?___lldiv,ultoa@v
  5672  003EEA  C00B  F01F         	movff	?___lldiv+1,ultoa@v+1
  5673  003EEE  C00C  F020         	movff	?___lldiv+2,ultoa@v+2
  5674  003EF2  C00D  F021         	movff	?___lldiv+3,ultoa@v+3
  5675  003EF6  2A17               	incf	ultoa@buf^0,f,c
  5676  003EF8  501E               	movf	ultoa@v^0,w,c
  5677  003EFA  101F               	iorwf	(ultoa@v+1)^0,w,c
  5678  003EFC  1020               	iorwf	(ultoa@v+2)^0,w,c
  5679  003EFE  1021               	iorwf	(ultoa@v+3)^0,w,c
  5680  003F00  A4D8               	btfss	status,2,c
  5681  003F02  D7DE               	goto	l12696
  5682  003F04  5017               	movf	ultoa@buf^0,w,c
  5683  003F06  6ED9               	movwf	fsr2l,c
  5684  003F08  6ADA               	clrf	fsr2h,c
  5685  003F0A  0E00               	movlw	0
  5686  003F0C  6EDF               	movwf	indf2,c
  5687  003F0E  0617               	decf	ultoa@buf^0,f,c
  5688  003F10                     l12706:
  5689  003F10  C018  F00A         	movff	ultoa@val,___llmod@dividend
  5690  003F14  C019  F00B         	movff	ultoa@val+1,___llmod@dividend+1
  5691  003F18  C01A  F00C         	movff	ultoa@val+2,___llmod@dividend+2
  5692  003F1C  C01B  F00D         	movff	ultoa@val+3,___llmod@dividend+3
  5693  003F20  C01C  F00E         	movff	ultoa@base,___llmod@divisor
  5694  003F24  C01D  F00F         	movff	ultoa@base+1,___llmod@divisor+1
  5695  003F28  0E00               	movlw	0
  5696  003F2A  BE0F               	btfsc	(___llmod@divisor+1)^0,7,c
  5697  003F2C  0EFF               	movlw	-1
  5698  003F2E  6E10               	movwf	(___llmod@divisor+2)^0,c
  5699  003F30  6E11               	movwf	(___llmod@divisor+3)^0,c
  5700  003F32  ECC3  F026         	call	___llmod	;wreg free
  5701  003F36  500A               	movf	?___llmod^0,w,c
  5702  003F38  6E22               	movwf	ultoa@c^0,c
  5703  003F3A  C018  F00A         	movff	ultoa@val,___lldiv@dividend
  5704  003F3E  C019  F00B         	movff	ultoa@val+1,___lldiv@dividend+1
  5705  003F42  C01A  F00C         	movff	ultoa@val+2,___lldiv@dividend+2
  5706  003F46  C01B  F00D         	movff	ultoa@val+3,___lldiv@dividend+3
  5707  003F4A  C01C  F00E         	movff	ultoa@base,___lldiv@divisor
  5708  003F4E  C01D  F00F         	movff	ultoa@base+1,___lldiv@divisor+1
  5709  003F52  0E00               	movlw	0
  5710  003F54  BE0F               	btfsc	(___lldiv@divisor+1)^0,7,c
  5711  003F56  0EFF               	movlw	-1
  5712  003F58  6E10               	movwf	(___lldiv@divisor+2)^0,c
  5713  003F5A  6E11               	movwf	(___lldiv@divisor+3)^0,c
  5714  003F5C  ECF4  F024         	call	___lldiv	;wreg free
  5715  003F60  C00A  F018         	movff	?___lldiv,ultoa@val
  5716  003F64  C00B  F019         	movff	?___lldiv+1,ultoa@val+1
  5717  003F68  C00C  F01A         	movff	?___lldiv+2,ultoa@val+2
  5718  003F6C  C00D  F01B         	movff	?___lldiv+3,ultoa@val+3
  5719  003F70  0E09               	movlw	9
  5720  003F72  6422               	cpfsgt	ultoa@c^0,c
  5721  003F74  D002               	goto	l2468
  5722  003F76  0E07               	movlw	7
  5723  003F78  2622               	addwf	ultoa@c^0,f,c
  5724  003F7A                     l2468:
  5725  003F7A  0E30               	movlw	48
  5726  003F7C  2622               	addwf	ultoa@c^0,f,c
  5727  003F7E  5017               	movf	ultoa@buf^0,w,c
  5728  003F80  6ED9               	movwf	fsr2l,c
  5729  003F82  6ADA               	clrf	fsr2h,c
  5730  003F84  C022  FFDF         	movff	ultoa@c,indf2
  5731  003F88  0617               	decf	ultoa@buf^0,f,c
  5732  003F8A  5018               	movf	ultoa@val^0,w,c
  5733  003F8C  1019               	iorwf	(ultoa@val+1)^0,w,c
  5734  003F8E  101A               	iorwf	(ultoa@val+2)^0,w,c
  5735  003F90  101B               	iorwf	(ultoa@val+3)^0,w,c
  5736  003F92  B4D8               	btfsc	status,2,c
  5737  003F94  0012               	return	
  5738  003F96  D7BC               	goto	l12706
  5739  003F98                     __end_of_ultoa:
  5740                           	callstack 0
  5741                           
  5742 ;; *************** function _escreve_cmd_lcd *****************
  5743 ;; Defined at:
  5744 ;;		line 162 in file "bibliotecas/display_lcd.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  comando         1    wreg     unsigned char 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  comando         1   11[COMRAM] unsigned char 
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		wreg, status,2, status,0, cstack
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5758 ;;      Params:         0       0       0       0       0       0       0       0       0
  5759 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5761 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5762 ;;Total ram usage:        1 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:    3
  5765 ;; This function calls:
  5766 ;;		_delay
  5767 ;; This function is called by:
  5768 ;;		_init_lcd
  5769 ;;		_mensagem_inicial
  5770 ;;		_troca_de_tela
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text29
  5775  004856                     __ptext29:
  5776                           	callstack 0
  5777  004856                     _escreve_cmd_lcd:
  5778                           	callstack 26
  5779                           
  5780                           ;incstack = 0
  5781                           ;escreve_cmd_lcd@comando stored from wreg
  5782  004856  6E0C               	movwf	escreve_cmd_lcd@comando^0,c
  5783                           
  5784                           ;display_lcd.c: 165: PORTDbits.RD2 = 0;
  5785  004858  9483               	bcf	131,2,c	;volatile
  5786                           
  5787                           ;display_lcd.c: 166: PORTDbits.RD1 = 0;
  5788  00485A  9283               	bcf	131,1,c	;volatile
  5789                           
  5790                           ;display_lcd.c: 167: PORTDbits.RD0 = 0;
  5791  00485C  9083               	bcf	131,0,c	;volatile
  5792                           
  5793                           ;display_lcd.c: 170: if(comando&0b00010000){PORTDbits.RD4=1;}
  5794  00485E  A80C               	btfss	escreve_cmd_lcd@comando^0,4,c
  5795  004860  D002               	goto	l191
  5796  004862  8883               	bsf	131,4,c	;volatile
  5797  004864  D001               	goto	l13130
  5798  004866                     l191:
  5799                           
  5800                           ;display_lcd.c: 171: else {PORTDbits.RD4=0;}
  5801  004866  9883               	bcf	131,4,c	;volatile
  5802  004868                     l13130:
  5803                           
  5804                           ;display_lcd.c: 172: if(comando&0b00100000){PORTDbits.RD5=1;}
  5805  004868  AA0C               	btfss	escreve_cmd_lcd@comando^0,5,c
  5806  00486A  D002               	goto	l193
  5807  00486C  8A83               	bsf	131,5,c	;volatile
  5808  00486E  D001               	goto	l13134
  5809  004870                     l193:
  5810                           
  5811                           ;display_lcd.c: 173: else {PORTDbits.RD5=0;}
  5812  004870  9A83               	bcf	131,5,c	;volatile
  5813  004872                     l13134:
  5814                           
  5815                           ;display_lcd.c: 174: if(comando&0b01000000){PORTDbits.RD6=1;}
  5816  004872  AC0C               	btfss	escreve_cmd_lcd@comando^0,6,c
  5817  004874  D002               	goto	l195
  5818  004876  8C83               	bsf	131,6,c	;volatile
  5819  004878  D001               	goto	l13138
  5820  00487A                     l195:
  5821                           
  5822                           ;display_lcd.c: 175: else {PORTDbits.RD6=0;}
  5823  00487A  9C83               	bcf	131,6,c	;volatile
  5824  00487C                     l13138:
  5825                           
  5826                           ;display_lcd.c: 176: if(comando&0b10000000){PORTDbits.RD7=1;}
  5827  00487C  AE0C               	btfss	escreve_cmd_lcd@comando^0,7,c
  5828  00487E  D002               	goto	l197
  5829  004880  8E83               	bsf	131,7,c	;volatile
  5830  004882  D001               	goto	l198
  5831  004884                     l197:
  5832                           
  5833                           ;display_lcd.c: 177: else {PORTDbits.RD7=0;}
  5834  004884  9E83               	bcf	131,7,c	;volatile
  5835  004886                     l198:
  5836                           
  5837                           ;display_lcd.c: 180: PORTDbits.RD0 = 1;
  5838  004886  8083               	bsf	131,0,c	;volatile
  5839                           
  5840                           ;display_lcd.c: 181: delay();
  5841  004888  EC61  F02D         	call	_delay	;wreg free
  5842                           
  5843                           ;display_lcd.c: 182: PORTDbits.RD0 = 0;
  5844  00488C  9083               	bcf	131,0,c	;volatile
  5845                           
  5846                           ;display_lcd.c: 183: delay();
  5847  00488E  EC61  F02D         	call	_delay	;wreg free
  5848                           
  5849                           ;display_lcd.c: 186: if(comando&0b00000001){PORTDbits.RD4=1;}
  5850  004892  A00C               	btfss	escreve_cmd_lcd@comando^0,0,c
  5851  004894  D002               	goto	l199
  5852  004896  8883               	bsf	131,4,c	;volatile
  5853  004898  D001               	goto	l200
  5854  00489A                     l199:
  5855                           
  5856                           ;display_lcd.c: 187: else {PORTDbits.RD4=0;}
  5857  00489A  9883               	bcf	131,4,c	;volatile
  5858  00489C                     l200:
  5859                           
  5860                           ;display_lcd.c: 188: if(comando&0b00000010){PORTDbits.RD5=1;}
  5861  00489C  A20C               	btfss	escreve_cmd_lcd@comando^0,1,c
  5862  00489E  D002               	goto	l201
  5863  0048A0  8A83               	bsf	131,5,c	;volatile
  5864  0048A2  D001               	goto	l202
  5865  0048A4                     l201:
  5866                           
  5867                           ;display_lcd.c: 189: else {PORTDbits.RD5=0;}
  5868  0048A4  9A83               	bcf	131,5,c	;volatile
  5869  0048A6                     l202:
  5870                           
  5871                           ;display_lcd.c: 190: if(comando&0b00000100){PORTDbits.RD6=1;}
  5872  0048A6  A40C               	btfss	escreve_cmd_lcd@comando^0,2,c
  5873  0048A8  D002               	goto	l203
  5874  0048AA  8C83               	bsf	131,6,c	;volatile
  5875  0048AC  D001               	goto	l204
  5876  0048AE                     l203:
  5877                           
  5878                           ;display_lcd.c: 191: else {PORTDbits.RD6=0;}
  5879  0048AE  9C83               	bcf	131,6,c	;volatile
  5880  0048B0                     l204:
  5881                           
  5882                           ;display_lcd.c: 192: if(comando&0b00001000){PORTDbits.RD7=1;}
  5883  0048B0  A60C               	btfss	escreve_cmd_lcd@comando^0,3,c
  5884  0048B2  D002               	goto	l205
  5885  0048B4  8E83               	bsf	131,7,c	;volatile
  5886  0048B6  D001               	goto	l206
  5887  0048B8                     l205:
  5888                           
  5889                           ;display_lcd.c: 193: else {PORTDbits.RD7=0;}
  5890  0048B8  9E83               	bcf	131,7,c	;volatile
  5891  0048BA                     l206:
  5892                           
  5893                           ;display_lcd.c: 196: PORTDbits.RD0 = 1;
  5894  0048BA  8083               	bsf	131,0,c	;volatile
  5895                           
  5896                           ;display_lcd.c: 197: delay();
  5897  0048BC  EC61  F02D         	call	_delay	;wreg free
  5898                           
  5899                           ;display_lcd.c: 198: PORTDbits.RD0 = 0;
  5900  0048C0  9083               	bcf	131,0,c	;volatile
  5901                           
  5902                           ;display_lcd.c: 199: delay();
  5903  0048C2  EC61  F02D         	call	_delay	;wreg free
  5904                           
  5905                           ;display_lcd.c: 204: if (comando==0x01 || comando==0x02 || comando==0x03)
  5906  0048C6  040C               	decf	escreve_cmd_lcd@comando^0,w,c
  5907  0048C8  B4D8               	btfsc	status,2,c
  5908  0048CA  D008               	goto	u15860
  5909  0048CC  0E02               	movlw	2
  5910  0048CE  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5911  0048D0  B4D8               	btfsc	status,2,c
  5912  0048D2  D004               	goto	u15860
  5913  0048D4  0E03               	movlw	3
  5914  0048D6  180C               	xorwf	escreve_cmd_lcd@comando^0,w,c
  5915  0048D8  A4D8               	btfss	status,2,c
  5916  0048DA  0012               	return	
  5917  0048DC                     u15860:
  5918                           
  5919                           ;display_lcd.c: 205: { delay(); }
  5920  0048DC  EC61  F02D         	call	_delay	;wreg free
  5921  0048E0  0012               	return		;funcret
  5922  0048E2                     __end_of_escreve_cmd_lcd:
  5923                           	callstack 0
  5924                           
  5925 ;; *************** function _verifica_fence *****************
  5926 ;; Defined at:
  5927 ;;		line 274 in file "main.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;		None
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;		None
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 3E/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5941 ;;      Params:         0       0       0       0       0       0       0       0       0
  5942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5943 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5944 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5945 ;;Total ram usage:        1 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    8
  5948 ;; This function calls:
  5949 ;;		_latitude_to_convert
  5950 ;;		_longitude_to_convert
  5951 ;;		_monta_sd
  5952 ;;		_recebe_dado_gps
  5953 ;;		_verifica_plausibilidade_lat
  5954 ;;		_verifica_plausibilidade_long
  5955 ;; This function is called by:
  5956 ;;		_verifica_dados_operacionais
  5957 ;;		_disparo_gravacao
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text30
  5962  004F0E                     __ptext30:
  5963                           	callstack 0
  5964  004F0E                     _verifica_fence:
  5965                           	callstack 20
  5966                           
  5967                           ;main.c: 276: recebe_dado_gps();
  5968                           
  5969                           ;incstack = 0
  5970  004F0E  EC31  F02D         	call	_recebe_dado_gps	;wreg free
  5971                           
  5972                           ;main.c: 277: longitude_to_convert();
  5973  004F12  EC35  F025         	call	_longitude_to_convert	;wreg free
  5974                           
  5975                           ; BSR set to: 1
  5976                           ;main.c: 278: latitude_to_convert();
  5977  004F16  EC72  F025         	call	_latitude_to_convert	;wreg free
  5978                           
  5979                           ;main.c: 279: fence_flag[0].point = verifica_plausibilidade_long();
  5980  004F1A  EC28  F027         	call	_verifica_plausibilidade_long	;wreg free
  5981  004F1E  6E43               	movwf	??_verifica_fence^0,c
  5982  004F20  0100               	movlb	0	; () banked
  5983  004F22  51E7               	movf	_fence_flag& (0+255),w,b
  5984  004F24  1843               	xorwf	??_verifica_fence^0,w,c
  5985  004F26  0BFE               	andlw	-2
  5986  004F28  1843               	xorwf	??_verifica_fence^0,w,c
  5987  004F2A  6FE7               	movwf	_fence_flag& (0+255),b
  5988                           
  5989                           ;main.c: 280: fence_flag[1].point = verifica_plausibilidade_lat();
  5990  004F2C  ECAF  F025         	call	_verifica_plausibilidade_lat	;wreg free
  5991  004F30  6E43               	movwf	??_verifica_fence^0,c
  5992  004F32  0100               	movlb	0	; () banked
  5993  004F34  51E8               	movf	(_fence_flag+1)& (0+255),w,b
  5994  004F36  1843               	xorwf	??_verifica_fence^0,w,c
  5995  004F38  0BFE               	andlw	-2
  5996  004F3A  1843               	xorwf	??_verifica_fence^0,w,c
  5997  004F3C  6FE8               	movwf	(_fence_flag+1)& (0+255),b
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;main.c: 285: if(fence_flag[0].point || fence_flag[1].point)
  6001  004F3E  B1E7               	btfsc	_fence_flag& (0+255),0,b
  6002  004F40  D002               	goto	u15900
  6003                           
  6004                           ; BSR set to: 0
  6005  004F42  A1E8               	btfss	(_fence_flag+1)& (0+255),0,b
  6006  004F44  D009               	goto	l1573
  6007  004F46                     u15900:
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;main.c: 286: {;main.c: 287: fence_flag[2].point = 1;
  6011  004F46  81E9               	bsf	(_fence_flag+2)& (0+255),0,b
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;main.c: 288: monta_sd(4, "0");
  6015  004F48  0E7A               	movlw	low STR_20
  6016  004F4A  6E10               	movwf	monta_sd@dado^0,c
  6017  004F4C  0E62               	movlw	high STR_20
  6018  004F4E  6E11               	movwf	(monta_sd@dado+1)^0,c
  6019  004F50  0E04               	movlw	4
  6020  004F52  EC03  F00B         	call	_monta_sd
  6021                           
  6022                           ;main.c: 289: }
  6023  004F56  0012               	return	
  6024  004F58                     l1573:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;main.c: 290: else;main.c: 291: {;main.c: 292: fence_flag[2].point = 0;
  6028  004F58  91E9               	bcf	(_fence_flag+2)& (0+255),0,b
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;main.c: 293: monta_sd(4, "1");
  6032  004F5A  0E26               	movlw	low (STR_3+8)
  6033  004F5C  6E10               	movwf	monta_sd@dado^0,c
  6034  004F5E  0E62               	movlw	high (STR_3+8)
  6035  004F60  6E11               	movwf	(monta_sd@dado+1)^0,c
  6036  004F62  0E04               	movlw	4
  6037  004F64  EC03  F00B         	call	_monta_sd
  6038  004F68  0012               	return		;funcret
  6039  004F6A                     __end_of_verifica_fence:
  6040                           	callstack 0
  6041                           
  6042 ;; *************** function _verifica_plausibilidade_long *****************
  6043 ;; Defined at:
  6044 ;;		line 311 in file "bibliotecas/fence.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  posicao         1    9[COMRAM] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      unsigned char 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 3F/1
  6055 ;;		On exit  : 3F/1
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6058 ;;      Params:         0       0       0       0       0       0       0       0       0
  6059 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6061 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6062 ;;Total ram usage:        1 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    3
  6065 ;; This function calls:
  6066 ;;		_posicao_long
  6067 ;; This function is called by:
  6068 ;;		_verifica_fence
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text31
  6073  004E50                     __ptext31:
  6074                           	callstack 0
  6075  004E50                     _verifica_plausibilidade_long:
  6076                           	callstack 24
  6077                           
  6078                           ; BSR set to: 1
  6079                           ;fence.c: 313: char posicao = posicao_long();
  6080                           
  6081                           ;incstack = 0
  6082  004E50  EC34  F02E         	call	_posicao_long	;wreg free
  6083  004E54  6E0A               	movwf	verifica_plausibilidade_long@posicao^0,c
  6084                           
  6085                           ;fence.c: 314: switch(posicao)
  6086  004E56  D027               	goto	l13028
  6087  004E58                     l12978:
  6088                           
  6089                           ; BSR set to: 1
  6090                           ;fence.c: 317: if(;fence.c: 318: (poligono_ext[0].diff_long >= 0 &&;fence.c: 319: poligo
      +                          no_ext[1].diff_long <= 0))
  6091  004E58  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6092  004E5A  D00B               	goto	l12988
  6093                           
  6094                           ; BSR set to: 1
  6095  004E5C  BF0F               	btfsc	(_poligono_ext+15)& (0+255),7,b
  6096  004E5E  D007               	goto	u15560
  6097  004E60  510F               	movf	(_poligono_ext+15)& (0+255),w,b
  6098  004E62  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6099  004E64  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6100  004E66  E105               	bnz	l12988
  6101  004E68  050C               	decf	(_poligono_ext+12)& (0+255),w,b
  6102  004E6A  B0D8               	btfsc	status,0,c
  6103  004E6C  D002               	goto	l12988
  6104  004E6E                     u15560:
  6105                           
  6106                           ; BSR set to: 1
  6107                           ;fence.c: 320: {;fence.c: 321: return 0;
  6108  004E6E  0E00               	movlw	0
  6109  004E70  0012               	return	
  6110  004E72                     l12988:
  6111                           
  6112                           ; BSR set to: 1
  6113                           ;fence.c: 323: else if(;fence.c: 324: (poligono_ext[0].diff_long == 0 ||;fence.c: 325: p
      +                          oligono_ext[1].diff_long == 0 ))
  6114  004E72  5104               	movf	(_poligono_ext+4)& (0+255),w,b
  6115  004E74  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6116  004E76  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6117  004E78  1107               	iorwf	(_poligono_ext+7)& (0+255),w,b
  6118  004E7A  B4D8               	btfsc	status,2,c
  6119  004E7C  D7F8               	goto	u15560
  6120                           
  6121                           ; BSR set to: 1
  6122  004E7E  510C               	movf	(_poligono_ext+12)& (0+255),w,b
  6123  004E80  110D               	iorwf	(_poligono_ext+13)& (0+255),w,b
  6124  004E82  110E               	iorwf	(_poligono_ext+14)& (0+255),w,b
  6125  004E84  110F               	iorwf	(_poligono_ext+15)& (0+255),w,b
  6126  004E86  B4D8               	btfsc	status,2,c
  6127  004E88  D7F2               	goto	u15560
  6128                           
  6129                           ; BSR set to: 1
  6130                           ;fence.c: 329: else;fence.c: 330: {;fence.c: 331: return 1;
  6131  004E8A  0E01               	movlw	1
  6132  004E8C  0012               	return	
  6133  004E8E                     l13002:
  6134                           
  6135                           ; BSR set to: 1
  6136                           ;fence.c: 336: if(;fence.c: 337: (poligono_ext[0].diff_long <= 0 &&;fence.c: 338: poligo
      +                          no_ext[1].diff_long >= 0 ) )
  6137  004E8E  BF07               	btfsc	(_poligono_ext+7)& (0+255),7,b
  6138  004E90  D007               	goto	u15590
  6139  004E92  5107               	movf	(_poligono_ext+7)& (0+255),w,b
  6140  004E94  1106               	iorwf	(_poligono_ext+6)& (0+255),w,b
  6141  004E96  1105               	iorwf	(_poligono_ext+5)& (0+255),w,b
  6142  004E98  E1EC               	bnz	l12988
  6143  004E9A  0504               	decf	(_poligono_ext+4)& (0+255),w,b
  6144  004E9C  B0D8               	btfsc	status,0,c
  6145  004E9E  D7E9               	goto	l12988
  6146  004EA0                     u15590:
  6147                           
  6148                           ; BSR set to: 1
  6149  004EA0  AF0F               	btfss	(_poligono_ext+15)& (0+255),7,b
  6150  004EA2  D7E5               	goto	u15560
  6151  004EA4  D7E6               	goto	l12988
  6152  004EA6                     l13028:
  6153                           
  6154                           ; BSR set to: 1
  6155  004EA6  500A               	movf	verifica_plausibilidade_long@posicao^0,w,c
  6156                           
  6157                           ; Switch size 1, requested type "simple"
  6158                           ; Number of cases is 1, Range of values is 45 to 45
  6159                           ; switch strategies available:
  6160                           ; Name         Instructions Cycles
  6161                           ; simple_byte            4     3 (average)
  6162                           ;	Chosen strategy is simple_byte
  6163  004EA8  0A2D               	xorlw	45	; case 45
  6164  004EAA  B4D8               	btfsc	status,2,c
  6165  004EAC  D7D5               	goto	l12978
  6166  004EAE  D7EF               	goto	l13002
  6167  004EB0                     __end_of_verifica_plausibilidade_long:
  6168                           	callstack 0
  6169                           
  6170 ;; *************** function _posicao_long *****************
  6171 ;; Defined at:
  6172 ;;		line 646 in file "bibliotecas/GPS.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;		None
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      unsigned char 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2
  6181 ;; Tracked objects:
  6182 ;;		On entry : 3F/1
  6183 ;;		On exit  : 3F/1
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6186 ;;      Params:         0       0       0       0       0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6189 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6190 ;;Total ram usage:        0 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    2
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_verifica_plausibilidade_long
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text32
  6201  005C68                     __ptext32:
  6202                           	callstack 0
  6203  005C68                     _posicao_long:
  6204                           	callstack 24
  6205                           
  6206                           ; BSR set to: 1
  6207                           ;GPS.c: 649: return rawLongitude[0];
  6208                           
  6209                           ; BSR set to: 1
  6210                           ;incstack = 0
  6211  005C68  51A5               	movf	_rawLongitude& (0+255),w,b
  6212                           
  6213                           ; BSR set to: 1
  6214  005C6A  0012               	return		;funcret
  6215  005C6C                     __end_of_posicao_long:
  6216                           	callstack 0
  6217                           
  6218 ;; *************** function _verifica_plausibilidade_lat *****************
  6219 ;; Defined at:
  6220 ;;		line 365 in file "bibliotecas/fence.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;		None
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  posicao         1    9[COMRAM] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      unsigned char 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 3F/0
  6231 ;;		On exit  : 3F/1
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6234 ;;      Params:         0       0       0       0       0       0       0       0       0
  6235 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6237 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6238 ;;Total ram usage:        1 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    3
  6241 ;; This function calls:
  6242 ;;		_posicao_lat
  6243 ;; This function is called by:
  6244 ;;		_verifica_fence
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text33
  6249  004B5E                     __ptext33:
  6250                           	callstack 0
  6251  004B5E                     _verifica_plausibilidade_lat:
  6252                           	callstack 24
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;fence.c: 367: char posicao = posicao_lat();
  6256                           
  6257                           ; BSR set to: 1
  6258                           ;incstack = 0
  6259  004B5E  EC31  F02E         	call	_posicao_lat	;wreg free
  6260  004B62  6E0A               	movwf	verifica_plausibilidade_lat@posicao^0,c
  6261                           
  6262                           ;fence.c: 368: switch(posicao)
  6263  004B64  D031               	goto	l13092
  6264  004B66                     l13032:
  6265                           
  6266                           ; BSR set to: 1
  6267                           ;fence.c: 371: if(;fence.c: 372: ( poligono_ext[0].diff_lat <= 0 &&;fence.c: 373: poligo
      +                          no_ext[1].diff_lat >= 0))
  6268  004B66  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6269  004B68  D007               	goto	u15630
  6270  004B6A  5103               	movf	(_poligono_ext+3)& (0+255),w,b
  6271  004B6C  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6272  004B6E  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6273  004B70  E107               	bnz	l13042
  6274  004B72  0500               	decf	_poligono_ext& (0+255),w,b
  6275  004B74  B0D8               	btfsc	status,0,c
  6276  004B76  D004               	goto	l13042
  6277  004B78                     u15630:
  6278                           
  6279                           ; BSR set to: 1
  6280  004B78  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6281  004B7A  D002               	goto	l13042
  6282  004B7C                     u15640:
  6283                           
  6284                           ; BSR set to: 1
  6285                           ;fence.c: 374: {;fence.c: 375: return 0;
  6286  004B7C  0E00               	movlw	0
  6287  004B7E  0012               	return	
  6288  004B80                     l13042:
  6289                           
  6290                           ; BSR set to: 1
  6291                           ;fence.c: 377: else if(;fence.c: 378: (poligono_ext[0].diff_lat == 0 ||;fence.c: 379: po
      +                          ligono_ext[1].diff_lat == 0))
  6292  004B80  5100               	movf	_poligono_ext& (0+255),w,b
  6293  004B82  1101               	iorwf	(_poligono_ext+1)& (0+255),w,b
  6294  004B84  1102               	iorwf	(_poligono_ext+2)& (0+255),w,b
  6295  004B86  1103               	iorwf	(_poligono_ext+3)& (0+255),w,b
  6296  004B88  B4D8               	btfsc	status,2,c
  6297  004B8A  D7F8               	goto	u15640
  6298                           
  6299                           ; BSR set to: 1
  6300  004B8C  5108               	movf	(_poligono_ext+8)& (0+255),w,b
  6301  004B8E  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6302  004B90  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6303  004B92  110B               	iorwf	(_poligono_ext+11)& (0+255),w,b
  6304  004B94  B4D8               	btfsc	status,2,c
  6305  004B96  D7F2               	goto	u15640
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;fence.c: 384: else;fence.c: 385: {;fence.c: 387: return 1;
  6309  004B98  0E01               	movlw	1
  6310  004B9A  0012               	return	
  6311  004B9C                     l13056:
  6312                           
  6313                           ; BSR set to: 1
  6314                           ;fence.c: 392: if((poligono_ext[0].diff_lat >= 0 &&;fence.c: 393: poligono_ext[1].diff_l
      +                          at <= 0 ))
  6315  004B9C  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6316  004B9E  D009               	goto	l13066
  6317                           
  6318                           ; BSR set to: 1
  6319  004BA0  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6320  004BA2  D7EC               	goto	u15640
  6321  004BA4  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6322  004BA6  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6323  004BA8  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6324  004BAA  E103               	bnz	l13066
  6325  004BAC  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6326  004BAE  A0D8               	btfss	status,0,c
  6327  004BB0  D7E5               	goto	u15640
  6328  004BB2                     l13066:
  6329                           
  6330                           ; BSR set to: 1
  6331                           ;fence.c: 397: else if(;fence.c: 398: (poligono_ext[0].diff_lat >= 0 ||;fence.c: 399: po
      +                          ligono_ext[1].diff_lat <= 0))
  6332  004BB2  BF03               	btfsc	(_poligono_ext+3)& (0+255),7,b
  6333                           
  6334                           ; BSR set to: 1
  6335  004BB4  BF0B               	btfsc	(_poligono_ext+11)& (0+255),7,b
  6336  004BB6  D7E2               	goto	u15640
  6337  004BB8  510B               	movf	(_poligono_ext+11)& (0+255),w,b
  6338  004BBA  110A               	iorwf	(_poligono_ext+10)& (0+255),w,b
  6339  004BBC  1109               	iorwf	(_poligono_ext+9)& (0+255),w,b
  6340  004BBE  E1E0               	bnz	l13042
  6341  004BC0  0508               	decf	(_poligono_ext+8)& (0+255),w,b
  6342  004BC2  A0D8               	btfss	status,0,c
  6343  004BC4  D7DB               	goto	u15640
  6344  004BC6  D7DC               	goto	l13042
  6345  004BC8                     l13092:
  6346                           
  6347                           ; BSR set to: 1
  6348  004BC8  500A               	movf	verifica_plausibilidade_lat@posicao^0,w,c
  6349                           
  6350                           ; Switch size 1, requested type "simple"
  6351                           ; Number of cases is 1, Range of values is 45 to 45
  6352                           ; switch strategies available:
  6353                           ; Name         Instructions Cycles
  6354                           ; simple_byte            4     3 (average)
  6355                           ;	Chosen strategy is simple_byte
  6356  004BCA  0A2D               	xorlw	45	; case 45
  6357  004BCC  B4D8               	btfsc	status,2,c
  6358  004BCE  D7CB               	goto	l13032
  6359  004BD0  D7E5               	goto	l13056
  6360  004BD2                     __end_of_verifica_plausibilidade_lat:
  6361                           	callstack 0
  6362                           
  6363 ;; *************** function _posicao_lat *****************
  6364 ;; Defined at:
  6365 ;;		line 652 in file "bibliotecas/GPS.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;		None
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      unsigned char 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2
  6374 ;; Tracked objects:
  6375 ;;		On entry : 3F/0
  6376 ;;		On exit  : 3F/1
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0
  6380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6383 ;;Total ram usage:        0 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    2
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_verifica_plausibilidade_lat
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text34
  6394  005C62                     __ptext34:
  6395                           	callstack 0
  6396  005C62                     _posicao_lat:
  6397                           	callstack 24
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;GPS.c: 655: return rawLatitude[0];
  6401                           
  6402                           ; BSR set to: 1
  6403                           ;incstack = 0
  6404  005C62  0101               	movlb	1	; () banked
  6405  005C64  51BE               	movf	_rawLatitude& (0+255),w,b
  6406                           
  6407                           ; BSR set to: 1
  6408  005C66  0012               	return		;funcret
  6409  005C68                     __end_of_posicao_lat:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function _recebe_dado_gps *****************
  6413 ;; Defined at:
  6414 ;;		line 553 in file "main.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  timeout         1   10[COMRAM] unsigned char 
  6419 ;;  flag_recebe     1    9[COMRAM] unsigned char 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      void 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6429 ;;      Params:         0       0       0       0       0       0       0       0       0
  6430 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6432 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6433 ;;Total ram usage:        2 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    3
  6436 ;; This function calls:
  6437 ;;		_verifica_recep_gps
  6438 ;; This function is called by:
  6439 ;;		_verifica_fence
  6440 ;;		_disparo_gravacao
  6441 ;;		_troca_de_tela
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text35
  6446  005A62                     __ptext35:
  6447                           	callstack 0
  6448  005A62                     _recebe_dado_gps:
  6449                           	callstack 24
  6450                           
  6451                           ;main.c: 555: unsigned char flag_recebe = 0;
  6452                           
  6453                           ; BSR set to: 1
  6454                           ;incstack = 0
  6455  005A62  0E00               	movlw	0
  6456  005A64  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6457                           
  6458                           ;main.c: 556: unsigned char timeout = 10;
  6459  005A66  0E0A               	movlw	10
  6460  005A68  6E0B               	movwf	recebe_dado_gps@timeout^0,c
  6461                           
  6462                           ;main.c: 557: while(!flag_recebe && timeout>0)
  6463  005A6A  D004               	goto	l12972
  6464  005A6C                     l12968:
  6465                           
  6466                           ;main.c: 558: {;main.c: 559: flag_recebe = verifica_recep_gps();
  6467  005A6C  EC6E  F02C         	call	_verifica_recep_gps	;wreg free
  6468  005A70  6E0A               	movwf	recebe_dado_gps@flag_recebe^0,c
  6469                           
  6470                           ; BSR set to: 1
  6471                           ;main.c: 560: timeout--;
  6472  005A72  060B               	decf	recebe_dado_gps@timeout^0,f,c
  6473  005A74                     l12972:
  6474  005A74  500A               	movf	recebe_dado_gps@flag_recebe^0,w,c
  6475  005A76  A4D8               	btfss	status,2,c
  6476  005A78  0012               	return	
  6477  005A7A  500B               	movf	recebe_dado_gps@timeout^0,w,c
  6478  005A7C  B4D8               	btfsc	status,2,c
  6479  005A7E  0012               	return	
  6480  005A80  D7F5               	goto	l12968
  6481  005A82                     __end_of_recebe_dado_gps:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function _verifica_recep_gps *****************
  6485 ;; Defined at:
  6486 ;;		line 720 in file "bibliotecas/GPS.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;		None
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      unsigned char 
  6493 ;; Registers used:
  6494 ;;		wreg
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 3F/1
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    2
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_recebe_dado_gps
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text36
  6515  0058DC                     __ptext36:
  6516                           	callstack 0
  6517  0058DC                     _verifica_recep_gps:
  6518                           	callstack 24
  6519                           
  6520                           ;GPS.c: 722: if(gps_flag[0].flag && gps_flag[1].flag && gps_flag[2].flag && gps_flag[3].
      +                          flag && gps_flag[4].flag && gps_flag[5].flag)
  6521                           
  6522                           ;incstack = 0
  6523  0058DC  0101               	movlb	1	; () banked
  6524  0058DE  B14B               	btfsc	_gps_flag& (0+255),0,b
  6525                           
  6526                           ; BSR set to: 1
  6527  0058E0  A14C               	btfss	(_gps_flag+1)& (0+255),0,b
  6528  0058E2  D00E               	goto	l12216
  6529                           
  6530                           ; BSR set to: 1
  6531  0058E4  B14D               	btfsc	(_gps_flag+2)& (0+255),0,b
  6532                           
  6533                           ; BSR set to: 1
  6534  0058E6  A14E               	btfss	(_gps_flag+3)& (0+255),0,b
  6535  0058E8  D00B               	goto	l12216
  6536                           
  6537                           ; BSR set to: 1
  6538  0058EA  B14F               	btfsc	(_gps_flag+4)& (0+255),0,b
  6539                           
  6540                           ; BSR set to: 1
  6541  0058EC  A150               	btfss	(_gps_flag+5)& (0+255),0,b
  6542  0058EE  D008               	goto	l12216
  6543                           
  6544                           ; BSR set to: 1
  6545                           ;GPS.c: 723: {;GPS.c: 724: gps_flag[0].flag = 0;
  6546  0058F0  914B               	bcf	_gps_flag& (0+255),0,b
  6547                           
  6548                           ;GPS.c: 725: gps_flag[1].flag = 0;
  6549  0058F2  914C               	bcf	(_gps_flag+1)& (0+255),0,b
  6550                           
  6551                           ;GPS.c: 726: gps_flag[2].flag = 0;
  6552  0058F4  914D               	bcf	(_gps_flag+2)& (0+255),0,b
  6553                           
  6554                           ;GPS.c: 727: gps_flag[3].flag = 0;
  6555  0058F6  914E               	bcf	(_gps_flag+3)& (0+255),0,b
  6556                           
  6557                           ;GPS.c: 728: gps_flag[4].flag = 0;
  6558  0058F8  914F               	bcf	(_gps_flag+4)& (0+255),0,b
  6559                           
  6560                           ;GPS.c: 729: gps_flag[5].flag = 0;
  6561  0058FA  9150               	bcf	(_gps_flag+5)& (0+255),0,b
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;GPS.c: 730: return 1;
  6565  0058FC  0E01               	movlw	1
  6566  0058FE  0012               	return	
  6567  005900                     l12216:
  6568                           
  6569                           ; BSR set to: 1
  6570                           ;GPS.c: 732: else;GPS.c: 733: {;GPS.c: 735: return 0;
  6571  005900  0E00               	movlw	0
  6572                           
  6573                           ; BSR set to: 1
  6574  005902  0012               	return		;funcret
  6575  005904                     __end_of_verifica_recep_gps:
  6576                           	callstack 0
  6577                           
  6578 ;; *************** function _longitude_to_convert *****************
  6579 ;; Defined at:
  6580 ;;		line 627 in file "bibliotecas/GPS.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  longitude      11    0[BANK0 ] unsigned char [11]
  6585 ;;  i               1   12[BANK0 ] unsigned char 
  6586 ;;  j               1   11[BANK0 ] unsigned char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 3F/1
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6596 ;;      Params:         0       0       0       0       0       0       0       0       0
  6597 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6598 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6599 ;;      Totals:         1      13       0       0       0       0       0       0       0
  6600 ;;Total ram usage:       14 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    7
  6603 ;; This function calls:
  6604 ;;		_armazena_ltlo
  6605 ;; This function is called by:
  6606 ;;		_verifica_fence
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text37
  6611  004A6A                     __ptext37:
  6612                           	callstack 0
  6613  004A6A                     _longitude_to_convert:
  6614                           	callstack 20
  6615                           
  6616                           ;GPS.c: 629: unsigned char i,j;;GPS.c: 630: unsigned char longitude[11];;GPS.c: 633: j =
      +                           0;
  6617                           
  6618                           ; BSR set to: 1
  6619                           ;incstack = 0
  6620  004A6A  0E00               	movlw	0
  6621  004A6C  0100               	movlb	0	; () banked
  6622  004A6E  6F6B               	movwf	longitude_to_convert@j& (0+255),b
  6623                           
  6624                           ;GPS.c: 634: for(i=0; i<12; i++)
  6625  004A70  0E00               	movlw	0
  6626  004A72  6F6C               	movwf	longitude_to_convert@i& (0+255),b
  6627  004A74                     l12762:
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;GPS.c: 635: {;GPS.c: 636: if(rawLongitude[i] != '\0' && rawLongitude[i] != '-' && rawLo
      +                          ngitude[i]!= '.' && j <10)
  6631  004A74  0EA5               	movlw	low _rawLongitude
  6632  004A76  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6633  004A78  6ED9               	movwf	fsr2l,c
  6634  004A7A  6ADA               	clrf	fsr2h,c
  6635  004A7C  0E01               	movlw	high _rawLongitude
  6636  004A7E  22DA               	addwfc	fsr2h,f,c
  6637  004A80  50DF               	movf	indf2,w,c
  6638  004A82  B4D8               	btfsc	status,2,c
  6639  004A84  D024               	goto	l12774
  6640                           
  6641                           ; BSR set to: 0
  6642  004A86  0EA5               	movlw	low _rawLongitude
  6643  004A88  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6644  004A8A  6ED9               	movwf	fsr2l,c
  6645  004A8C  6ADA               	clrf	fsr2h,c
  6646  004A8E  0E01               	movlw	high _rawLongitude
  6647  004A90  22DA               	addwfc	fsr2h,f,c
  6648  004A92  0E2D               	movlw	45
  6649  004A94  18DE               	xorwf	postinc2,w,c
  6650  004A96  B4D8               	btfsc	status,2,c
  6651  004A98  D01A               	goto	l12774
  6652                           
  6653                           ; BSR set to: 0
  6654  004A9A  0EA5               	movlw	low _rawLongitude
  6655  004A9C  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6656  004A9E  6ED9               	movwf	fsr2l,c
  6657  004AA0  6ADA               	clrf	fsr2h,c
  6658  004AA2  0E01               	movlw	high _rawLongitude
  6659  004AA4  22DA               	addwfc	fsr2h,f,c
  6660  004AA6  0E2E               	movlw	46
  6661  004AA8  18DE               	xorwf	postinc2,w,c
  6662  004AAA  B4D8               	btfsc	status,2,c
  6663  004AAC  D010               	goto	l12774
  6664                           
  6665                           ; BSR set to: 0
  6666  004AAE  0E0A               	movlw	10
  6667  004AB0  616B               	cpfslt	longitude_to_convert@j& (0+255),b
  6668  004AB2  D00D               	goto	l12774
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;GPS.c: 637: {;GPS.c: 639: longitude[j] = rawLongitude[i];
  6672  004AB4  0EA5               	movlw	low _rawLongitude
  6673  004AB6  256C               	addwf	longitude_to_convert@i& (0+255),w,b
  6674  004AB8  6ED9               	movwf	fsr2l,c
  6675  004ABA  6ADA               	clrf	fsr2h,c
  6676  004ABC  0E01               	movlw	high _rawLongitude
  6677  004ABE  22DA               	addwfc	fsr2h,f,c
  6678  004AC0  516B               	movf	longitude_to_convert@j& (0+255),w,b
  6679  004AC2  0F60               	addlw	low longitude_to_convert@longitude
  6680  004AC4  6EE1               	movwf	fsr1l,c
  6681  004AC6  6AE2               	clrf	fsr1h,c
  6682  004AC8  CFDF FFE7          	movff	indf2,indf1
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;GPS.c: 640: j++;
  6686  004ACC  2B6B               	incf	longitude_to_convert@j& (0+255),f,b
  6687  004ACE                     l12774:
  6688                           
  6689                           ; BSR set to: 0
  6690  004ACE  2B6C               	incf	longitude_to_convert@i& (0+255),f,b
  6691                           
  6692                           ; BSR set to: 0
  6693  004AD0  0E0B               	movlw	11
  6694  004AD2  656C               	cpfsgt	longitude_to_convert@i& (0+255),b
  6695  004AD4  D7CF               	goto	l12762
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;GPS.c: 641: };GPS.c: 642: };GPS.c: 643: armazena_ltlo(longitude, 0);
  6699  004AD6  0E60               	movlw	low longitude_to_convert@longitude
  6700  004AD8  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6701  004ADA  0E00               	movlw	0
  6702  004ADC  6E3F               	movwf	armazena_ltlo@index^0,c
  6703  004ADE  EC71  F024         	call	_armazena_ltlo	;wreg free
  6704                           
  6705                           ; BSR set to: 1
  6706  004AE2  0012               	return		;funcret
  6707  004AE4                     __end_of_longitude_to_convert:
  6708                           	callstack 0
  6709                           
  6710 ;; *************** function _latitude_to_convert *****************
  6711 ;; Defined at:
  6712 ;;		line 602 in file "bibliotecas/GPS.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  latitude        9    0[BANK0 ] unsigned char [9]
  6717 ;;  i               1   10[BANK0 ] unsigned char 
  6718 ;;  j               1    9[BANK0 ] unsigned char 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 3F/1
  6725 ;;		On exit  : 3F/1
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0
  6729 ;;      Locals:         0      11       0       0       0       0       0       0       0
  6730 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6731 ;;      Totals:         1      11       0       0       0       0       0       0       0
  6732 ;;Total ram usage:       12 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    7
  6735 ;; This function calls:
  6736 ;;		_armazena_ltlo
  6737 ;; This function is called by:
  6738 ;;		_verifica_fence
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text38
  6743  004AE4                     __ptext38:
  6744                           	callstack 0
  6745  004AE4                     _latitude_to_convert:
  6746                           	callstack 20
  6747                           
  6748                           ; BSR set to: 1
  6749                           ;GPS.c: 604: unsigned char i,j;;GPS.c: 605: unsigned char latitude[9];;GPS.c: 608: j = 0
      +                          ;
  6750                           
  6751                           ; BSR set to: 1
  6752                           ;incstack = 0
  6753  004AE4  0E00               	movlw	0
  6754  004AE6  0100               	movlb	0	; () banked
  6755  004AE8  6F69               	movwf	latitude_to_convert@j& (0+255),b
  6756                           
  6757                           ;GPS.c: 609: for(i=0; i<12; i++)
  6758  004AEA  0E00               	movlw	0
  6759  004AEC  6F6A               	movwf	latitude_to_convert@i& (0+255),b
  6760  004AEE                     l12738:
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;GPS.c: 610: {;GPS.c: 611: if(rawLatitude[i] != '\0' && rawLatitude[i] != '-' && rawLati
      +                          tude[i]!= '.' && j <9)
  6764  004AEE  0EBE               	movlw	low _rawLatitude
  6765  004AF0  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6766  004AF2  6ED9               	movwf	fsr2l,c
  6767  004AF4  6ADA               	clrf	fsr2h,c
  6768  004AF6  0E01               	movlw	high _rawLatitude
  6769  004AF8  22DA               	addwfc	fsr2h,f,c
  6770  004AFA  50DF               	movf	indf2,w,c
  6771  004AFC  B4D8               	btfsc	status,2,c
  6772  004AFE  D024               	goto	l12750
  6773                           
  6774                           ; BSR set to: 0
  6775  004B00  0EBE               	movlw	low _rawLatitude
  6776  004B02  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6777  004B04  6ED9               	movwf	fsr2l,c
  6778  004B06  6ADA               	clrf	fsr2h,c
  6779  004B08  0E01               	movlw	high _rawLatitude
  6780  004B0A  22DA               	addwfc	fsr2h,f,c
  6781  004B0C  0E2D               	movlw	45
  6782  004B0E  18DE               	xorwf	postinc2,w,c
  6783  004B10  B4D8               	btfsc	status,2,c
  6784  004B12  D01A               	goto	l12750
  6785                           
  6786                           ; BSR set to: 0
  6787  004B14  0EBE               	movlw	low _rawLatitude
  6788  004B16  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6789  004B18  6ED9               	movwf	fsr2l,c
  6790  004B1A  6ADA               	clrf	fsr2h,c
  6791  004B1C  0E01               	movlw	high _rawLatitude
  6792  004B1E  22DA               	addwfc	fsr2h,f,c
  6793  004B20  0E2E               	movlw	46
  6794  004B22  18DE               	xorwf	postinc2,w,c
  6795  004B24  B4D8               	btfsc	status,2,c
  6796  004B26  D010               	goto	l12750
  6797                           
  6798                           ; BSR set to: 0
  6799  004B28  0E09               	movlw	9
  6800  004B2A  6169               	cpfslt	latitude_to_convert@j& (0+255),b
  6801  004B2C  D00D               	goto	l12750
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;GPS.c: 612: {;GPS.c: 613: latitude[j] = rawLatitude[i];
  6805  004B2E  0EBE               	movlw	low _rawLatitude
  6806  004B30  256A               	addwf	latitude_to_convert@i& (0+255),w,b
  6807  004B32  6ED9               	movwf	fsr2l,c
  6808  004B34  6ADA               	clrf	fsr2h,c
  6809  004B36  0E01               	movlw	high _rawLatitude
  6810  004B38  22DA               	addwfc	fsr2h,f,c
  6811  004B3A  5169               	movf	latitude_to_convert@j& (0+255),w,b
  6812  004B3C  0F60               	addlw	low latitude_to_convert@latitude
  6813  004B3E  6EE1               	movwf	fsr1l,c
  6814  004B40  6AE2               	clrf	fsr1h,c
  6815  004B42  CFDF FFE7          	movff	indf2,indf1
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;GPS.c: 614: j++;
  6819  004B46  2B69               	incf	latitude_to_convert@j& (0+255),f,b
  6820  004B48                     l12750:
  6821                           
  6822                           ; BSR set to: 0
  6823  004B48  2B6A               	incf	latitude_to_convert@i& (0+255),f,b
  6824                           
  6825                           ; BSR set to: 0
  6826  004B4A  0E0B               	movlw	11
  6827  004B4C  656A               	cpfsgt	latitude_to_convert@i& (0+255),b
  6828  004B4E  D7CF               	goto	l12738
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;GPS.c: 615: };GPS.c: 616: };GPS.c: 617: armazena_ltlo(latitude, 1);
  6832  004B50  0E60               	movlw	low latitude_to_convert@latitude
  6833  004B52  6E3E               	movwf	armazena_ltlo@buffer^0,c
  6834  004B54  0E01               	movlw	1
  6835  004B56  6E3F               	movwf	armazena_ltlo@index^0,c
  6836  004B58  EC71  F024         	call	_armazena_ltlo	;wreg free
  6837                           
  6838                           ; BSR set to: 1
  6839  004B5C  0012               	return		;funcret
  6840  004B5E                     __end_of_latitude_to_convert:
  6841                           	callstack 0
  6842                           
  6843 ;; *************** function _armazena_ltlo *****************
  6844 ;; Defined at:
  6845 ;;		line 64 in file "bibliotecas/fence.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  buffer          1   61[COMRAM] PTR unsigned char 
  6848 ;;		 -> longitude_to_convert@longitude(11), latitude_to_convert@latitude(9), 
  6849 ;;  index           1   62[COMRAM] unsigned char 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  i               1   64[COMRAM] unsigned char 
  6852 ;;  j               1   63[COMRAM] unsigned char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6857 ;; Tracked objects:
  6858 ;;		On entry : 3F/0
  6859 ;;		On exit  : 3F/1
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6862 ;;      Params:         2       0       0       0       0       0       0       0       0
  6863 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6865 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6866 ;;Total ram usage:        4 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    6
  6869 ;; This function calls:
  6870 ;;		_diferenca
  6871 ;; This function is called by:
  6872 ;;		_latitude_to_convert
  6873 ;;		_longitude_to_convert
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text39
  6878  0048E2                     __ptext39:
  6879                           	callstack 0
  6880  0048E2                     _armazena_ltlo:
  6881                           	callstack 20
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;fence.c: 67: unsigned char i, j;;fence.c: 72: switch(index)
  6885                           
  6886                           ; BSR set to: 1
  6887                           ;incstack = 0
  6888  0048E2  D038               	goto	l12184
  6889  0048E4                     l12146:
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;fence.c: 75: j = 0;
  6893  0048E4  0E00               	movlw	0
  6894  0048E6  6E40               	movwf	armazena_ltlo@j^0,c
  6895                           
  6896                           ;fence.c: 76: for(i=0; i<10; i++)
  6897  0048E8  0E00               	movlw	0
  6898  0048EA  6E41               	movwf	armazena_ltlo@i^0,c
  6899  0048EC                     l12152:
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;fence.c: 77: {;fence.c: 78: if(*buffer != '\0')
  6903  0048EC  503E               	movf	armazena_ltlo@buffer^0,w,c
  6904  0048EE  6ED9               	movwf	fsr2l,c
  6905  0048F0  6ADA               	clrf	fsr2h,c
  6906  0048F2  50DF               	movf	indf2,w,c
  6907  0048F4  B4D8               	btfsc	status,2,c
  6908  0048F6  D00C               	goto	l12158
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;fence.c: 79: {;fence.c: 81: dado[j] = *buffer;
  6912  0048F8  503E               	movf	armazena_ltlo@buffer^0,w,c
  6913  0048FA  6ED9               	movwf	fsr2l,c
  6914  0048FC  6ADA               	clrf	fsr2h,c
  6915  0048FE  0E10               	movlw	low _dado
  6916  004900  2440               	addwf	armazena_ltlo@j^0,w,c
  6917  004902  6EE1               	movwf	fsr1l,c
  6918  004904  6AE2               	clrf	fsr1h,c
  6919  004906  0E01               	movlw	high _dado
  6920  004908  22E2               	addwfc	fsr1h,f,c
  6921  00490A  CFDF FFE7          	movff	indf2,indf1
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;fence.c: 82: j++;
  6925  00490E  2A40               	incf	armazena_ltlo@j^0,f,c
  6926  004910                     l12158:
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;fence.c: 83: };fence.c: 85: buffer++;
  6930  004910  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6931                           
  6932                           ; BSR set to: 0
  6933  004912  2A41               	incf	armazena_ltlo@i^0,f,c
  6934                           
  6935                           ; BSR set to: 0
  6936  004914  0E09               	movlw	9
  6937  004916  6441               	cpfsgt	armazena_ltlo@i^0,c
  6938  004918  D7E9               	goto	l12152
  6939  00491A  D021               	goto	l12186
  6940  00491C                     l12164:
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;fence.c: 91: j = 0;
  6944  00491C  0E00               	movlw	0
  6945  00491E  6E40               	movwf	armazena_ltlo@j^0,c
  6946                           
  6947                           ;fence.c: 92: for(i=0; i<11; i++)
  6948  004920  0E00               	movlw	0
  6949  004922  6E41               	movwf	armazena_ltlo@i^0,c
  6950  004924                     l12170:
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;fence.c: 93: {;fence.c: 94: if(*buffer != '\0')
  6954  004924  503E               	movf	armazena_ltlo@buffer^0,w,c
  6955  004926  6ED9               	movwf	fsr2l,c
  6956  004928  6ADA               	clrf	fsr2h,c
  6957  00492A  50DF               	movf	indf2,w,c
  6958  00492C  B4D8               	btfsc	status,2,c
  6959  00492E  D00C               	goto	l12176
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;fence.c: 95: {;fence.c: 97: dado[j] = *buffer;
  6963  004930  503E               	movf	armazena_ltlo@buffer^0,w,c
  6964  004932  6ED9               	movwf	fsr2l,c
  6965  004934  6ADA               	clrf	fsr2h,c
  6966  004936  0E10               	movlw	low _dado
  6967  004938  2440               	addwf	armazena_ltlo@j^0,w,c
  6968  00493A  6EE1               	movwf	fsr1l,c
  6969  00493C  6AE2               	clrf	fsr1h,c
  6970  00493E  0E01               	movlw	high _dado
  6971  004940  22E2               	addwfc	fsr1h,f,c
  6972  004942  CFDF FFE7          	movff	indf2,indf1
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;fence.c: 98: j++;
  6976  004946  2A40               	incf	armazena_ltlo@j^0,f,c
  6977  004948                     l12176:
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;fence.c: 99: };fence.c: 101: buffer++;
  6981  004948  2A3E               	incf	armazena_ltlo@buffer^0,f,c
  6982                           
  6983                           ; BSR set to: 0
  6984  00494A  2A41               	incf	armazena_ltlo@i^0,f,c
  6985                           
  6986                           ; BSR set to: 0
  6987  00494C  0E0A               	movlw	10
  6988  00494E  6441               	cpfsgt	armazena_ltlo@i^0,c
  6989  004950  D7E9               	goto	l12170
  6990  004952  D005               	goto	l12186
  6991  004954                     l12184:
  6992                           
  6993                           ; BSR set to: 0
  6994  004954  503F               	movf	armazena_ltlo@index^0,w,c
  6995                           
  6996                           ; Switch size 1, requested type "simple"
  6997                           ; Number of cases is 1, Range of values is 1 to 1
  6998                           ; switch strategies available:
  6999                           ; Name         Instructions Cycles
  7000                           ; simple_byte            4     3 (average)
  7001                           ;	Chosen strategy is simple_byte
  7002  004956  0A01               	xorlw	1	; case 1
  7003  004958  B4D8               	btfsc	status,2,c
  7004  00495A  D7C4               	goto	l12146
  7005  00495C  D7DF               	goto	l12164
  7006  00495E                     l12186:
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;fence.c: 108: diferenca(index);
  7010  00495E  503F               	movf	armazena_ltlo@index^0,w,c
  7011  004960  EC35  F020         	call	_diferenca
  7012                           
  7013                           ; BSR set to: 1
  7014  004964  0012               	return		;funcret
  7015  004966                     __end_of_armazena_ltlo:
  7016                           	callstack 0
  7017                           
  7018 ;; *************** function _diferenca *****************
  7019 ;; Defined at:
  7020 ;;		line 145 in file "bibliotecas/fence.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  index           1    wreg     unsigned char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  index           1   52[COMRAM] unsigned char 
  7025 ;;  valor_long      4   57[COMRAM] unsigned long 
  7026 ;;  valor_lat       4   53[COMRAM] unsigned long 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7031 ;; Tracked objects:
  7032 ;;		On entry : 3F/0
  7033 ;;		On exit  : 3F/1
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7036 ;;      Params:         0       0       0       0       0       0       0       0       0
  7037 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7039 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7040 ;;Total ram usage:        9 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    5
  7043 ;; This function calls:
  7044 ;;		_convert_to_int
  7045 ;;		_convert_to_int_point_lat
  7046 ;;		_convert_to_int_point_long
  7047 ;; This function is called by:
  7048 ;;		_armazena_ltlo
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text40
  7053  00406A                     __ptext40:
  7054                           	callstack 0
  7055  00406A                     _diferenca:
  7056                           	callstack 20
  7057                           
  7058                           ; BSR set to: 1
  7059                           ;incstack = 0
  7060                           ;diferenca@index stored from wreg
  7061  00406A  6E35               	movwf	diferenca@index^0,c
  7062                           
  7063                           ;fence.c: 147: unsigned long int valor_lat, valor_long;;fence.c: 149: switch(index)
  7064  00406C  D062               	goto	l12074
  7065  00406E                     l12060:
  7066                           
  7067                           ;fence.c: 152: valor_lat = convert_to_int_point_lat();
  7068  00406E  EC0E  F028         	call	_convert_to_int_point_lat	;wreg free
  7069  004072  C024  F036         	movff	?_convert_to_int_point_lat,diferenca@valor_lat
  7070  004076  C025  F037         	movff	?_convert_to_int_point_lat+1,diferenca@valor_lat+1
  7071  00407A  C026  F038         	movff	?_convert_to_int_point_lat+2,diferenca@valor_lat+2
  7072  00407E  C027  F039         	movff	?_convert_to_int_point_lat+3,diferenca@valor_lat+3
  7073                           
  7074                           ;fence.c: 153: poligono_ext[0].diff_lat = convert_to_int(fence_diff_lat[0]) - valor_lat;
  7075  004082  0E4F               	movlw	low _fence_diff_lat
  7076  004084  6E24               	movwf	convert_to_int@p_buff^0,c
  7077  004086  0E61               	movlw	high _fence_diff_lat
  7078  004088  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7079  00408A  ECBA  F02C         	call	_convert_to_int	;wreg free
  7080  00408E  5036               	movf	diferenca@valor_lat^0,w,c
  7081  004090  5C24               	subwf	?_convert_to_int^0,w,c
  7082  004092  0101               	movlb	1	; () banked
  7083  004094  6F00               	movwf	_poligono_ext& (0+255),b
  7084  004096  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7085  004098  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7086  00409A  6F01               	movwf	(_poligono_ext+1)& (0+255),b
  7087  00409C  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7088  00409E  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7089  0040A0  6F02               	movwf	(_poligono_ext+2)& (0+255),b
  7090  0040A2  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7091  0040A4  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7092  0040A6  6F03               	movwf	(_poligono_ext+3)& (0+255),b
  7093                           
  7094                           ; BSR set to: 1
  7095                           ;fence.c: 154: poligono_ext[1].diff_lat = convert_to_int(fence_diff_lat[2]) - valor_lat;
  7096  0040A8  0E63               	movlw	low (_fence_diff_lat+20)
  7097  0040AA  6E24               	movwf	convert_to_int@p_buff^0,c
  7098  0040AC  0E61               	movlw	high (_fence_diff_lat+20)
  7099  0040AE  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7100  0040B0  ECBA  F02C         	call	_convert_to_int	;wreg free
  7101  0040B4  5036               	movf	diferenca@valor_lat^0,w,c
  7102  0040B6  5C24               	subwf	?_convert_to_int^0,w,c
  7103  0040B8  0101               	movlb	1	; () banked
  7104  0040BA  6F08               	movwf	(_poligono_ext+8)& (0+255),b
  7105  0040BC  5037               	movf	(diferenca@valor_lat+1)^0,w,c
  7106  0040BE  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7107  0040C0  6F09               	movwf	(_poligono_ext+9)& (0+255),b
  7108  0040C2  5038               	movf	(diferenca@valor_lat+2)^0,w,c
  7109  0040C4  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7110  0040C6  6F0A               	movwf	(_poligono_ext+10)& (0+255),b
  7111  0040C8  5039               	movf	(diferenca@valor_lat+3)^0,w,c
  7112  0040CA  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7113  0040CC  6F0B               	movwf	(_poligono_ext+11)& (0+255),b
  7114                           
  7115                           ;fence.c: 157: break;
  7116  0040CE  0012               	return	
  7117  0040D0                     l12066:
  7118                           
  7119                           ;fence.c: 160: valor_long = convert_to_int_point_long();
  7120  0040D0  ECE2  F027         	call	_convert_to_int_point_long	;wreg free
  7121  0040D4  C024  F03A         	movff	?_convert_to_int_point_long,diferenca@valor_long
  7122  0040D8  C025  F03B         	movff	?_convert_to_int_point_long+1,diferenca@valor_long+1
  7123  0040DC  C026  F03C         	movff	?_convert_to_int_point_long+2,diferenca@valor_long+2
  7124  0040E0  C027  F03D         	movff	?_convert_to_int_point_long+3,diferenca@valor_long+3
  7125                           
  7126                           ;fence.c: 161: poligono_ext[0].diff_long = convert_to_int(fence_diff_long[0]) - valor_lo
      +                          ng;
  7127  0040E4  0E23               	movlw	low _fence_diff_long
  7128  0040E6  6E24               	movwf	convert_to_int@p_buff^0,c
  7129  0040E8  0E61               	movlw	high _fence_diff_long
  7130  0040EA  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7131  0040EC  ECBA  F02C         	call	_convert_to_int	;wreg free
  7132  0040F0  503A               	movf	diferenca@valor_long^0,w,c
  7133  0040F2  5C24               	subwf	?_convert_to_int^0,w,c
  7134  0040F4  0101               	movlb	1	; () banked
  7135  0040F6  6F04               	movwf	(_poligono_ext+4)& (0+255),b
  7136  0040F8  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7137  0040FA  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7138  0040FC  6F05               	movwf	(_poligono_ext+5)& (0+255),b
  7139  0040FE  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7140  004100  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7141  004102  6F06               	movwf	(_poligono_ext+6)& (0+255),b
  7142  004104  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7143  004106  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7144  004108  6F07               	movwf	(_poligono_ext+7)& (0+255),b
  7145                           
  7146                           ; BSR set to: 1
  7147                           ;fence.c: 162: poligono_ext[1].diff_long = convert_to_int(fence_diff_long[2]) - valor_lo
      +                          ng;
  7148  00410A  0E39               	movlw	low (_fence_diff_long+22)
  7149  00410C  6E24               	movwf	convert_to_int@p_buff^0,c
  7150  00410E  0E61               	movlw	high (_fence_diff_long+22)
  7151  004110  6E25               	movwf	(convert_to_int@p_buff+1)^0,c
  7152  004112  ECBA  F02C         	call	_convert_to_int	;wreg free
  7153  004116  503A               	movf	diferenca@valor_long^0,w,c
  7154  004118  5C24               	subwf	?_convert_to_int^0,w,c
  7155  00411A  0101               	movlb	1	; () banked
  7156  00411C  6F0C               	movwf	(_poligono_ext+12)& (0+255),b
  7157  00411E  503B               	movf	(diferenca@valor_long+1)^0,w,c
  7158  004120  5825               	subwfb	(?_convert_to_int+1)^0,w,c
  7159  004122  6F0D               	movwf	(_poligono_ext+13)& (0+255),b
  7160  004124  503C               	movf	(diferenca@valor_long+2)^0,w,c
  7161  004126  5826               	subwfb	(?_convert_to_int+2)^0,w,c
  7162  004128  6F0E               	movwf	(_poligono_ext+14)& (0+255),b
  7163  00412A  503D               	movf	(diferenca@valor_long+3)^0,w,c
  7164  00412C  5827               	subwfb	(?_convert_to_int+3)^0,w,c
  7165  00412E  6F0F               	movwf	(_poligono_ext+15)& (0+255),b
  7166                           
  7167                           ;fence.c: 165: break;
  7168  004130  0012               	return	
  7169  004132                     l12074:
  7170  004132  5035               	movf	diferenca@index^0,w,c
  7171                           
  7172                           ; Switch size 1, requested type "simple"
  7173                           ; Number of cases is 1, Range of values is 1 to 1
  7174                           ; switch strategies available:
  7175                           ; Name         Instructions Cycles
  7176                           ; simple_byte            4     3 (average)
  7177                           ;	Chosen strategy is simple_byte
  7178  004134  0A01               	xorlw	1	; case 1
  7179  004136  B4D8               	btfsc	status,2,c
  7180  004138  D79A               	goto	l12060
  7181  00413A  D7CA               	goto	l12066
  7182  00413C                     __end_of_diferenca:
  7183                           	callstack 0
  7184                           
  7185 ;; *************** function _convert_to_int_point_long *****************
  7186 ;; Defined at:
  7187 ;;		line 455 in file "bibliotecas/fence.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  convert_str_   10   39[COMRAM] unsigned char [10]
  7192 ;;  p               3    0        PTR unsigned char 
  7193 ;;  i               1   50[COMRAM] unsigned char 
  7194 ;;  j               1   49[COMRAM] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  4   35[COMRAM] unsigned long 
  7197 ;; Registers used:
  7198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7204 ;;      Params:         4       0       0       0       0       0       0       0       0
  7205 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7207 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7208 ;;Total ram usage:       16 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; Hardware stack levels required when called:    4
  7211 ;; This function calls:
  7212 ;;		_atol
  7213 ;; This function is called by:
  7214 ;;		_diferenca
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text41
  7219  004FC4                     __ptext41:
  7220                           	callstack 0
  7221  004FC4                     _convert_to_int_point_long:
  7222                           	callstack 20
  7223                           
  7224                           ;fence.c: 457: unsigned char *p;;;fence.c: 458: unsigned char i, j;;fence.c: 459: unsign
      +                          ed char convert_str_long[10];;fence.c: 462: j = 0;
  7225                           
  7226                           ; BSR set to: 1
  7227                           ;incstack = 0
  7228  004FC4  0E00               	movlw	0
  7229  004FC6  6E32               	movwf	convert_to_int_point_long@j^0,c
  7230                           
  7231                           ;fence.c: 463: for(i=0; i<10;i++)
  7232  004FC8  0E00               	movlw	0
  7233  004FCA  6E33               	movwf	convert_to_int_point_long@i^0,c
  7234  004FCC                     l11580:
  7235                           
  7236                           ;fence.c: 464: {;fence.c: 465: if(dado[i] != '\0')
  7237  004FCC  0E10               	movlw	low _dado
  7238  004FCE  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7239  004FD0  6ED9               	movwf	fsr2l,c
  7240  004FD2  6ADA               	clrf	fsr2h,c
  7241  004FD4  0E01               	movlw	high _dado
  7242  004FD6  22DA               	addwfc	fsr2h,f,c
  7243  004FD8  50DF               	movf	indf2,w,c
  7244  004FDA  B4D8               	btfsc	status,2,c
  7245  004FDC  D00D               	goto	l11586
  7246                           
  7247                           ;fence.c: 466: {;fence.c: 468: convert_str_long[j] = dado[i];
  7248  004FDE  0E10               	movlw	low _dado
  7249  004FE0  2433               	addwf	convert_to_int_point_long@i^0,w,c
  7250  004FE2  6ED9               	movwf	fsr2l,c
  7251  004FE4  6ADA               	clrf	fsr2h,c
  7252  004FE6  0E01               	movlw	high _dado
  7253  004FE8  22DA               	addwfc	fsr2h,f,c
  7254  004FEA  5032               	movf	convert_to_int_point_long@j^0,w,c
  7255  004FEC  0F28               	addlw	low convert_to_int_point_long@convert_str_long
  7256  004FEE  6EE1               	movwf	fsr1l,c
  7257  004FF0  6AE2               	clrf	fsr1h,c
  7258  004FF2  CFDF FFE7          	movff	indf2,indf1
  7259                           
  7260                           ;fence.c: 469: j++;
  7261  004FF6  2A32               	incf	convert_to_int_point_long@j^0,f,c
  7262  004FF8                     l11586:
  7263  004FF8  2A33               	incf	convert_to_int_point_long@i^0,f,c
  7264  004FFA  0E09               	movlw	9
  7265  004FFC  6433               	cpfsgt	convert_to_int_point_long@i^0,c
  7266  004FFE  D7E6               	goto	l11580
  7267                           
  7268                           ;fence.c: 470: };fence.c: 471: };fence.c: 474: return (atol(convert_str_long));
  7269  005000  0E28               	movlw	low convert_to_int_point_long@convert_str_long
  7270  005002  6E16               	movwf	atol@s^0,c
  7271  005004  6A17               	clrf	(atol@s+1)^0,c
  7272  005006  EC3C  F01C         	call	_atol	;wreg free
  7273  00500A  C016  F024         	movff	?_atol,?_convert_to_int_point_long
  7274  00500E  C017  F025         	movff	?_atol+1,?_convert_to_int_point_long+1
  7275  005012  C018  F026         	movff	?_atol+2,?_convert_to_int_point_long+2
  7276  005016  C019  F027         	movff	?_atol+3,?_convert_to_int_point_long+3
  7277  00501A  0012               	return		;funcret
  7278  00501C                     __end_of_convert_to_int_point_long:
  7279                           	callstack 0
  7280                           
  7281 ;; *************** function _convert_to_int_point_lat *****************
  7282 ;; Defined at:
  7283 ;;		line 428 in file "bibliotecas/fence.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  convert_str_    9   39[COMRAM] unsigned char [9]
  7288 ;;  temp_str_lat    2    0        PTR PTR unsigned char 
  7289 ;;		 -> NULL(0), 
  7290 ;;  i               1   51[COMRAM] unsigned char 
  7291 ;;  j               1   50[COMRAM] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  4   35[COMRAM] long 
  7294 ;; Registers used:
  7295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7301 ;;      Params:         4       0       0       0       0       0       0       0       0
  7302 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7304 ;;      Totals:        17       0       0       0       0       0       0       0       0
  7305 ;;Total ram usage:       17 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    4
  7308 ;; This function calls:
  7309 ;;		_atol
  7310 ;; This function is called by:
  7311 ;;		_diferenca
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text42
  7316  00501C                     __ptext42:
  7317                           	callstack 0
  7318  00501C                     _convert_to_int_point_lat:
  7319                           	callstack 20
  7320                           
  7321                           ;fence.c: 431: unsigned char convert_str_lat[9];;fence.c: 433: unsigned char i, j;;fence
      +                          .c: 435: j= 0;
  7322                           
  7323                           ;incstack = 0
  7324  00501C  0E00               	movlw	0
  7325  00501E  6E33               	movwf	convert_to_int_point_lat@j^0,c
  7326                           
  7327                           ;fence.c: 436: for(i=0; i<10;i++)
  7328  005020  0E00               	movlw	0
  7329  005022  6E34               	movwf	convert_to_int_point_lat@i^0,c
  7330  005024                     l11554:
  7331                           
  7332                           ;fence.c: 437: {;fence.c: 438: if(dado[i] != '\0')
  7333  005024  0E10               	movlw	low _dado
  7334  005026  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7335  005028  6ED9               	movwf	fsr2l,c
  7336  00502A  6ADA               	clrf	fsr2h,c
  7337  00502C  0E01               	movlw	high _dado
  7338  00502E  22DA               	addwfc	fsr2h,f,c
  7339  005030  50DF               	movf	indf2,w,c
  7340  005032  B4D8               	btfsc	status,2,c
  7341  005034  D00D               	goto	l11560
  7342                           
  7343                           ;fence.c: 439: {;fence.c: 441: convert_str_lat[j] = dado[i];
  7344  005036  0E10               	movlw	low _dado
  7345  005038  2434               	addwf	convert_to_int_point_lat@i^0,w,c
  7346  00503A  6ED9               	movwf	fsr2l,c
  7347  00503C  6ADA               	clrf	fsr2h,c
  7348  00503E  0E01               	movlw	high _dado
  7349  005040  22DA               	addwfc	fsr2h,f,c
  7350  005042  5033               	movf	convert_to_int_point_lat@j^0,w,c
  7351  005044  0F28               	addlw	low convert_to_int_point_lat@convert_str_lat
  7352  005046  6EE1               	movwf	fsr1l,c
  7353  005048  6AE2               	clrf	fsr1h,c
  7354  00504A  CFDF FFE7          	movff	indf2,indf1
  7355                           
  7356                           ;fence.c: 442: j++;
  7357  00504E  2A33               	incf	convert_to_int_point_lat@j^0,f,c
  7358  005050                     l11560:
  7359  005050  2A34               	incf	convert_to_int_point_lat@i^0,f,c
  7360  005052  0E09               	movlw	9
  7361  005054  6434               	cpfsgt	convert_to_int_point_lat@i^0,c
  7362  005056  D7E6               	goto	l11554
  7363                           
  7364                           ;fence.c: 443: };fence.c: 444: };fence.c: 446: return (atol(convert_str_lat));
  7365  005058  0E28               	movlw	low convert_to_int_point_lat@convert_str_lat
  7366  00505A  6E16               	movwf	atol@s^0,c
  7367  00505C  6A17               	clrf	(atol@s+1)^0,c
  7368  00505E  EC3C  F01C         	call	_atol	;wreg free
  7369  005062  C016  F024         	movff	?_atol,?_convert_to_int_point_lat
  7370  005066  C017  F025         	movff	?_atol+1,?_convert_to_int_point_lat+1
  7371  00506A  C018  F026         	movff	?_atol+2,?_convert_to_int_point_lat+2
  7372  00506E  C019  F027         	movff	?_atol+3,?_convert_to_int_point_lat+3
  7373  005072  0012               	return		;funcret
  7374  005074                     __end_of_convert_to_int_point_lat:
  7375                           	callstack 0
  7376                           
  7377 ;; *************** function _convert_to_int *****************
  7378 ;; Defined at:
  7379 ;;		line 420 in file "bibliotecas/fence.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  p_buff          2   35[COMRAM] PTR const unsigned char 
  7382 ;;		 -> fence_diff_long(44), fence_diff_lat(40), 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;		None
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  4   35[COMRAM] long 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7394 ;;      Params:         4       0       0       0       0       0       0       0       0
  7395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7397 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7398 ;;Total ram usage:        4 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    4
  7401 ;; This function calls:
  7402 ;;		_atol
  7403 ;; This function is called by:
  7404 ;;		_diferenca
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text43
  7409  005974                     __ptext43:
  7410                           	callstack 0
  7411  005974                     _convert_to_int:
  7412                           	callstack 20
  7413                           
  7414                           ;fence.c: 423: p_buff++;
  7415                           
  7416                           ;incstack = 0
  7417  005974  4A24               	infsnz	convert_to_int@p_buff^0,f,c
  7418  005976  2A25               	incf	(convert_to_int@p_buff+1)^0,f,c
  7419                           
  7420                           ;fence.c: 424: return atol(p_buff);
  7421  005978  C024  F016         	movff	convert_to_int@p_buff,atol@s
  7422  00597C  C025  F017         	movff	convert_to_int@p_buff+1,atol@s+1
  7423  005980  EC3C  F01C         	call	_atol	;wreg free
  7424  005984  C016  F024         	movff	?_atol,?_convert_to_int
  7425  005988  C017  F025         	movff	?_atol+1,?_convert_to_int+1
  7426  00598C  C018  F026         	movff	?_atol+2,?_convert_to_int+2
  7427  005990  C019  F027         	movff	?_atol+3,?_convert_to_int+3
  7428  005994  0012               	return		;funcret
  7429  005996                     __end_of_convert_to_int:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _atol *****************
  7433 ;; Defined at:
  7434 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atol.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  s               2   21[COMRAM] PTR const unsigned char 
  7437 ;;		 -> convert_to_int_point_long@convert_str_long(10), convert_to_int_point_lat@convert_str_lat(9), fence_diff_long(44)
      +, fence_diff_lat(40), 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;  a               4   30[COMRAM] long 
  7440 ;;  c               1   34[COMRAM] unsigned char 
  7441 ;;  sign            1   29[COMRAM] unsigned char 
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  4   21[COMRAM] long 
  7444 ;; Registers used:
  7445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7451 ;;      Params:         4       0       0       0       0       0       0       0       0
  7452 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7453 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7454 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7455 ;;Total ram usage:       14 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; Hardware stack levels required when called:    3
  7458 ;; This function calls:
  7459 ;;		___lmul
  7460 ;;		_isdigit
  7461 ;; This function is called by:
  7462 ;;		_convert_to_int
  7463 ;;		_convert_to_int_point_lat
  7464 ;;		_convert_to_int_point_long
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text44
  7469  003878                     __ptext44:
  7470                           	callstack 0
  7471  003878                     _atol:
  7472                           	callstack 20
  7473                           
  7474                           ;incstack = 0
  7475  003878  C016  FFF6         	movff	atol@s,tblptrl
  7476  00387C  C017  FFF7         	movff	atol@s+1,tblptrh
  7477  003880  6AF8               	clrf	tblptru,c
  7478  003882  0E07               	movlw	(high __ramtop+-1)
  7479  003884  64F7               	cpfsgt	tblptrh,c
  7480  003886  D003               	bra	u12777
  7481  003888  0008               	tblrd		*
  7482  00388A  50F5               	movf	tablat,w,c
  7483  00388C  D005               	bra	u12770
  7484  00388E                     u12777:
  7485  00388E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7486  003892  CFF7 FFE2          	movff	tblptrh,fsr1h
  7487  003896  50E7               	movf	indf1,w,c
  7488  003898                     u12770:
  7489  003898  6E23               	movwf	atol@c^0,c
  7490  00389A  4A16               	infsnz	atol@s^0,f,c
  7491  00389C  2A17               	incf	(atol@s+1)^0,f,c
  7492  00389E  0E20               	movlw	32
  7493  0038A0  1823               	xorwf	atol@c^0,w,c
  7494  0038A2  B4D8               	btfsc	status,2,c
  7495  0038A4  D7E9               	goto	_atol
  7496  0038A6  0E09               	movlw	9
  7497  0038A8  1823               	xorwf	atol@c^0,w,c
  7498  0038AA  B4D8               	btfsc	status,2,c
  7499  0038AC  D7E5               	goto	_atol
  7500  0038AE  0E00               	movlw	0
  7501  0038B0  6E1F               	movwf	atol@a^0,c
  7502  0038B2  0E00               	movlw	0
  7503  0038B4  6E20               	movwf	(atol@a+1)^0,c
  7504  0038B6  0E00               	movlw	0
  7505  0038B8  6E21               	movwf	(atol@a+2)^0,c
  7506  0038BA  0E00               	movlw	0
  7507  0038BC  6E22               	movwf	(atol@a+3)^0,c
  7508  0038BE  0E00               	movlw	0
  7509  0038C0  6E1E               	movwf	atol@sign^0,c
  7510  0038C2  0E2D               	movlw	45
  7511  0038C4  1823               	xorwf	atol@c^0,w,c
  7512  0038C6  A4D8               	btfss	status,2,c
  7513  0038C8  D015               	goto	l11284
  7514  0038CA  2A1E               	incf	atol@sign^0,f,c
  7515  0038CC                     l11280:
  7516  0038CC  C016  FFF6         	movff	atol@s,tblptrl
  7517  0038D0  C017  FFF7         	movff	atol@s+1,tblptrh
  7518  0038D4  6AF8               	clrf	tblptru,c
  7519  0038D6  0E07               	movlw	(high __ramtop+-1)
  7520  0038D8  64F7               	cpfsgt	tblptrh,c
  7521  0038DA  D003               	bra	u12817
  7522  0038DC  0008               	tblrd		*
  7523  0038DE  50F5               	movf	tablat,w,c
  7524  0038E0  D005               	bra	u12810
  7525  0038E2                     u12817:
  7526  0038E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7527  0038E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7528  0038EA  50E7               	movf	indf1,w,c
  7529  0038EC                     u12810:
  7530  0038EC  6E23               	movwf	atol@c^0,c
  7531  0038EE  4A16               	infsnz	atol@s^0,f,c
  7532  0038F0  2A17               	incf	(atol@s+1)^0,f,c
  7533  0038F2  D028               	goto	l11296
  7534  0038F4                     l11284:
  7535  0038F4  0E2B               	movlw	43
  7536  0038F6  1823               	xorwf	atol@c^0,w,c
  7537  0038F8  B4D8               	btfsc	status,2,c
  7538  0038FA  D7E8               	goto	l11280
  7539  0038FC  D023               	goto	l11296
  7540  0038FE                     l11290:
  7541  0038FE  C01F  F00A         	movff	atol@a,___lmul@multiplier
  7542  003902  C020  F00B         	movff	atol@a+1,___lmul@multiplier+1
  7543  003906  C021  F00C         	movff	atol@a+2,___lmul@multiplier+2
  7544  00390A  C022  F00D         	movff	atol@a+3,___lmul@multiplier+3
  7545  00390E  0E0A               	movlw	10
  7546  003910  6E0E               	movwf	___lmul@multiplicand^0,c
  7547  003912  0E00               	movlw	0
  7548  003914  6E0F               	movwf	(___lmul@multiplicand+1)^0,c
  7549  003916  0E00               	movlw	0
  7550  003918  6E10               	movwf	(___lmul@multiplicand+2)^0,c
  7551  00391A  0E00               	movlw	0
  7552  00391C  6E11               	movwf	(___lmul@multiplicand+3)^0,c
  7553  00391E  EC66  F028         	call	___lmul	;wreg free
  7554  003922  C023  F01A         	movff	atol@c,??_atol
  7555  003926  0ED0               	movlw	208
  7556  003928  261A               	addwf	??_atol^0,f,c
  7557  00392A  501A               	movf	??_atol^0,w,c
  7558  00392C  240A               	addwf	?___lmul^0,w,c
  7559  00392E  6E1F               	movwf	atol@a^0,c
  7560  003930  0E00               	movlw	0
  7561  003932  200B               	addwfc	(?___lmul+1)^0,w,c
  7562  003934  6E20               	movwf	(atol@a+1)^0,c
  7563  003936  0E00               	movlw	0
  7564  003938  200C               	addwfc	(?___lmul+2)^0,w,c
  7565  00393A  6E21               	movwf	(atol@a+2)^0,c
  7566  00393C  0E00               	movlw	0
  7567  00393E  200D               	addwfc	(?___lmul+3)^0,w,c
  7568  003940  6E22               	movwf	(atol@a+3)^0,c
  7569  003942  D7C4               	goto	l11280
  7570  003944                     l11296:
  7571  003944  5023               	movf	atol@c^0,w,c
  7572  003946  EC70  F02D         	call	_isdigit
  7573  00394A  B0D8               	btfsc	status,0,c
  7574  00394C  D7D8               	goto	l11290
  7575  00394E  501E               	movf	atol@sign^0,w,c
  7576  003950  B4D8               	btfsc	status,2,c
  7577  003952  D01A               	goto	l2436
  7578  003954  C01F  F01A         	movff	atol@a,??_atol
  7579  003958  C020  F01B         	movff	atol@a+1,??_atol+1
  7580  00395C  C021  F01C         	movff	atol@a+2,??_atol+2
  7581  003960  C022  F01D         	movff	atol@a+3,??_atol+3
  7582  003964  1E1A               	comf	??_atol^0,f,c
  7583  003966  1E1B               	comf	(??_atol+1)^0,f,c
  7584  003968  1E1C               	comf	(??_atol+2)^0,f,c
  7585  00396A  1E1D               	comf	(??_atol+3)^0,f,c
  7586  00396C  2A1A               	incf	??_atol^0,f,c
  7587  00396E  0E00               	movlw	0
  7588  003970  221B               	addwfc	(??_atol+1)^0,f,c
  7589  003972  221C               	addwfc	(??_atol+2)^0,f,c
  7590  003974  221D               	addwfc	(??_atol+3)^0,f,c
  7591  003976  C01A  F016         	movff	??_atol,?_atol
  7592  00397A  C01B  F017         	movff	??_atol+1,?_atol+1
  7593  00397E  C01C  F018         	movff	??_atol+2,?_atol+2
  7594  003982  C01D  F019         	movff	??_atol+3,?_atol+3
  7595  003986  0012               	return	
  7596  003988                     l2436:
  7597  003988  C01F  F016         	movff	atol@a,?_atol
  7598  00398C  C020  F017         	movff	atol@a+1,?_atol+1
  7599  003990  C021  F018         	movff	atol@a+2,?_atol+2
  7600  003994  C022  F019         	movff	atol@a+3,?_atol+3
  7601  003998  0012               	return		;funcret
  7602  00399A                     __end_of_atol:
  7603                           	callstack 0
  7604                           
  7605 ;; *************** function _itoa *****************
  7606 ;; Defined at:
  7607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7610 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7611 ;;  val             2   27[COMRAM] int 
  7612 ;;  base            2   29[COMRAM] int 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  cp              2    0        PTR unsigned char 
  7615 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  2   25[COMRAM] PTR unsigned char 
  7618 ;; Registers used:
  7619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7620 ;; Tracked objects:
  7621 ;;		On entry : 3F/2
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7625 ;;      Params:         6       0       0       0       0       0       0       0       0
  7626 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7628 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7629 ;;Total ram usage:        8 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; Hardware stack levels required when called:    4
  7632 ;; This function calls:
  7633 ;;		_utoa
  7634 ;; This function is called by:
  7635 ;;		_disparo_gravacao
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text45
  7640  0055DE                     __ptext45:
  7641                           	callstack 0
  7642  0055DE                     _itoa:
  7643                           	callstack 24
  7644                           
  7645                           ; BSR set to: 2
  7646                           
  7647                           ;incstack = 0
  7648  0055DE  AE1D               	btfss	(itoa@val+1)^0,7,c
  7649  0055E0  D00C               	goto	l13720
  7650                           
  7651                           ; BSR set to: 2
  7652  0055E2  C01A  FFD9         	movff	itoa@buf,fsr2l
  7653  0055E6  C01B  FFDA         	movff	itoa@buf+1,fsr2h
  7654  0055EA  0E2D               	movlw	45
  7655  0055EC  6EDF               	movwf	indf2,c
  7656                           
  7657                           ; BSR set to: 2
  7658  0055EE  4A1A               	infsnz	itoa@buf^0,f,c
  7659  0055F0  2A1B               	incf	(itoa@buf+1)^0,f,c
  7660                           
  7661                           ; BSR set to: 2
  7662  0055F2  6C1C               	negf	itoa@val^0,c
  7663  0055F4  1E1D               	comf	(itoa@val+1)^0,f,c
  7664  0055F6  B0D8               	btfsc	status,0,c
  7665  0055F8  2A1D               	incf	(itoa@val+1)^0,f,c
  7666  0055FA                     l13720:
  7667                           
  7668                           ; BSR set to: 2
  7669  0055FA  C01A  F011         	movff	itoa@buf,utoa@buf
  7670  0055FE  C01B  F012         	movff	itoa@buf+1,utoa@buf+1
  7671  005602  C01C  F013         	movff	itoa@val,utoa@val
  7672  005606  C01D  F014         	movff	itoa@val+1,utoa@val+1
  7673  00560A  C01E  F015         	movff	itoa@base,utoa@base
  7674  00560E  C01F  F016         	movff	itoa@base+1,utoa@base+1
  7675  005612  EC5F  F022         	call	_utoa	;wreg free
  7676  005616  0012               	return		;funcret
  7677  005618                     __end_of_itoa:
  7678                           	callstack 0
  7679                           
  7680 ;; *************** function _utoa *****************
  7681 ;; Defined at:
  7682 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  buf             2   16[COMRAM] PTR unsigned char 
  7685 ;;		 -> disparo_gravacao@velocidade(12), escreve_inteiro_uart@valor_final(7), 
  7686 ;;  val             2   18[COMRAM] unsigned int 
  7687 ;;  base            2   20[COMRAM] int 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  v               2   22[COMRAM] unsigned int 
  7690 ;;  c               1   24[COMRAM] unsigned char 
  7691 ;; Return value:  Size  Location     Type
  7692 ;;                  2   16[COMRAM] PTR unsigned char 
  7693 ;; Registers used:
  7694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7695 ;; Tracked objects:
  7696 ;;		On entry : 3F/2
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7700 ;;      Params:         6       0       0       0       0       0       0       0       0
  7701 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7703 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7704 ;;Total ram usage:        9 bytes
  7705 ;; Hardware stack levels used:    1
  7706 ;; Hardware stack levels required when called:    3
  7707 ;; This function calls:
  7708 ;;		___lwdiv
  7709 ;;		___lwmod
  7710 ;; This function is called by:
  7711 ;;		_itoa
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text46
  7716  0044BE                     __ptext46:
  7717                           	callstack 0
  7718  0044BE                     _utoa:
  7719                           	callstack 24
  7720                           
  7721                           ; BSR set to: 2
  7722                           
  7723                           ;incstack = 0
  7724  0044BE  C013  F017         	movff	utoa@val,utoa@v
  7725  0044C2  C014  F018         	movff	utoa@val+1,utoa@v+1
  7726  0044C6                     l13684:
  7727  0044C6  C017  F00A         	movff	utoa@v,___lwdiv@dividend
  7728  0044CA  C018  F00B         	movff	utoa@v+1,___lwdiv@dividend+1
  7729  0044CE  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7730  0044D2  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7731  0044D6  EC91  F028         	call	___lwdiv	;wreg free
  7732  0044DA  C00A  F017         	movff	?___lwdiv,utoa@v
  7733  0044DE  C00B  F018         	movff	?___lwdiv+1,utoa@v+1
  7734  0044E2  4A11               	infsnz	utoa@buf^0,f,c
  7735  0044E4  2A12               	incf	(utoa@buf+1)^0,f,c
  7736  0044E6  5017               	movf	utoa@v^0,w,c
  7737  0044E8  1018               	iorwf	(utoa@v+1)^0,w,c
  7738  0044EA  A4D8               	btfss	status,2,c
  7739  0044EC  D7EC               	goto	l13684
  7740  0044EE  C011  FFD9         	movff	utoa@buf,fsr2l
  7741  0044F2  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7742  0044F6  0E00               	movlw	0
  7743  0044F8  6EDF               	movwf	indf2,c
  7744  0044FA  0611               	decf	utoa@buf^0,f,c
  7745  0044FC  A0D8               	btfss	status,0,c
  7746  0044FE  0612               	decf	(utoa@buf+1)^0,f,c
  7747  004500                     l13694:
  7748  004500  C013  F00A         	movff	utoa@val,___lwmod@dividend
  7749  004504  C014  F00B         	movff	utoa@val+1,___lwmod@dividend+1
  7750  004508  C015  F00C         	movff	utoa@base,___lwmod@divisor
  7751  00450C  C016  F00D         	movff	utoa@base+1,___lwmod@divisor+1
  7752  004510  EC50  F02A         	call	___lwmod	;wreg free
  7753  004514  500A               	movf	?___lwmod^0,w,c
  7754  004516  6E19               	movwf	utoa@c^0,c
  7755  004518  C013  F00A         	movff	utoa@val,___lwdiv@dividend
  7756  00451C  C014  F00B         	movff	utoa@val+1,___lwdiv@dividend+1
  7757  004520  C015  F00C         	movff	utoa@base,___lwdiv@divisor
  7758  004524  C016  F00D         	movff	utoa@base+1,___lwdiv@divisor+1
  7759  004528  EC91  F028         	call	___lwdiv	;wreg free
  7760  00452C  C00A  F013         	movff	?___lwdiv,utoa@val
  7761  004530  C00B  F014         	movff	?___lwdiv+1,utoa@val+1
  7762  004534  0E09               	movlw	9
  7763  004536  6419               	cpfsgt	utoa@c^0,c
  7764  004538  D002               	goto	l2454
  7765  00453A  0E07               	movlw	7
  7766  00453C  2619               	addwf	utoa@c^0,f,c
  7767  00453E                     l2454:
  7768  00453E  0E30               	movlw	48
  7769  004540  2619               	addwf	utoa@c^0,f,c
  7770  004542  C011  FFD9         	movff	utoa@buf,fsr2l
  7771  004546  C012  FFDA         	movff	utoa@buf+1,fsr2h
  7772  00454A  C019  FFDF         	movff	utoa@c,indf2
  7773  00454E  0611               	decf	utoa@buf^0,f,c
  7774  004550  A0D8               	btfss	status,0,c
  7775  004552  0612               	decf	(utoa@buf+1)^0,f,c
  7776  004554  5013               	movf	utoa@val^0,w,c
  7777  004556  1014               	iorwf	(utoa@val+1)^0,w,c
  7778  004558  A4D8               	btfss	status,2,c
  7779  00455A  D7D2               	goto	l13694
  7780                           
  7781                           ;	Return value of _utoa is never used
  7782  00455C  4A11               	infsnz	utoa@buf^0,f,c
  7783  00455E  2A12               	incf	(utoa@buf+1)^0,f,c
  7784  004560  0012               	return		;funcret
  7785  004562                     __end_of_utoa:
  7786                           	callstack 0
  7787                           
  7788 ;; *************** function ___lwmod *****************
  7789 ;; Defined at:
  7790 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  dividend        2    9[COMRAM] unsigned int 
  7793 ;;  divisor         2   11[COMRAM] unsigned int 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  counter         1   13[COMRAM] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  2    9[COMRAM] unsigned int 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/2
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7805 ;;      Params:         4       0       0       0       0       0       0       0       0
  7806 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7808 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7809 ;;Total ram usage:        5 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; Hardware stack levels required when called:    2
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_utoa
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text47
  7820  0054A0                     __ptext47:
  7821                           	callstack 0
  7822  0054A0                     ___lwmod:
  7823                           	callstack 24
  7824                           
  7825                           ;incstack = 0
  7826  0054A0  500C               	movf	___lwmod@divisor^0,w,c
  7827  0054A2  100D               	iorwf	(___lwmod@divisor+1)^0,w,c
  7828  0054A4  B4D8               	btfsc	status,2,c
  7829  0054A6  D018               	goto	l2234
  7830  0054A8  0E01               	movlw	1
  7831  0054AA  6E0E               	movwf	___lwmod@counter^0,c
  7832  0054AC  D004               	goto	l12684
  7833  0054AE                     l12682:
  7834  0054AE  90D8               	bcf	status,0,c
  7835  0054B0  360C               	rlcf	___lwmod@divisor^0,f,c
  7836  0054B2  360D               	rlcf	(___lwmod@divisor+1)^0,f,c
  7837  0054B4  2A0E               	incf	___lwmod@counter^0,f,c
  7838  0054B6                     l12684:
  7839  0054B6  AE0D               	btfss	(___lwmod@divisor+1)^0,7,c
  7840  0054B8  D7FA               	goto	l12682
  7841  0054BA                     u15050:
  7842  0054BA  500C               	movf	___lwmod@divisor^0,w,c
  7843  0054BC  5C0A               	subwf	___lwmod@dividend^0,w,c
  7844  0054BE  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7845  0054C0  580B               	subwfb	(___lwmod@dividend+1)^0,w,c
  7846  0054C2  A0D8               	btfss	status,0,c
  7847  0054C4  D004               	goto	l12690
  7848  0054C6  500C               	movf	___lwmod@divisor^0,w,c
  7849  0054C8  5E0A               	subwf	___lwmod@dividend^0,f,c
  7850  0054CA  500D               	movf	(___lwmod@divisor+1)^0,w,c
  7851  0054CC  5A0B               	subwfb	(___lwmod@dividend+1)^0,f,c
  7852  0054CE                     l12690:
  7853  0054CE  90D8               	bcf	status,0,c
  7854  0054D0  320D               	rrcf	(___lwmod@divisor+1)^0,f,c
  7855  0054D2  320C               	rrcf	___lwmod@divisor^0,f,c
  7856  0054D4  2E0E               	decfsz	___lwmod@counter^0,f,c
  7857  0054D6  D7F1               	goto	u15050
  7858  0054D8                     l2234:
  7859  0054D8  C00A  F00A         	movff	___lwmod@dividend,?___lwmod
  7860  0054DC  C00B  F00B         	movff	___lwmod@dividend+1,?___lwmod+1
  7861  0054E0  0012               	return		;funcret
  7862  0054E2                     __end_of___lwmod:
  7863                           	callstack 0
  7864                           
  7865 ;; *************** function ___lwdiv *****************
  7866 ;; Defined at:
  7867 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  dividend        2    9[COMRAM] unsigned int 
  7870 ;;  divisor         2   11[COMRAM] unsigned int 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  quotient        2   14[COMRAM] unsigned int 
  7873 ;;  counter         1   13[COMRAM] unsigned char 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  2    9[COMRAM] unsigned int 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/2
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7883 ;;      Params:         4       0       0       0       0       0       0       0       0
  7884 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7886 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7887 ;;Total ram usage:        7 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    2
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_utoa
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text48
  7898  005122                     __ptext48:
  7899                           	callstack 0
  7900  005122                     ___lwdiv:
  7901                           	callstack 24
  7902                           
  7903                           ;incstack = 0
  7904  005122  0E00               	movlw	0
  7905  005124  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  7906  005126  0E00               	movlw	0
  7907  005128  6E0F               	movwf	___lwdiv@quotient^0,c
  7908  00512A  500C               	movf	___lwdiv@divisor^0,w,c
  7909  00512C  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7910  00512E  B4D8               	btfsc	status,2,c
  7911  005130  D01C               	goto	l2224
  7912  005132  0E01               	movlw	1
  7913  005134  6E0E               	movwf	___lwdiv@counter^0,c
  7914  005136  D004               	goto	l12664
  7915  005138                     l12662:
  7916  005138  90D8               	bcf	status,0,c
  7917  00513A  360C               	rlcf	___lwdiv@divisor^0,f,c
  7918  00513C  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7919  00513E  2A0E               	incf	___lwdiv@counter^0,f,c
  7920  005140                     l12664:
  7921  005140  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
  7922  005142  D7FA               	goto	l12662
  7923  005144                     u15020:
  7924  005144  90D8               	bcf	status,0,c
  7925  005146  360F               	rlcf	___lwdiv@quotient^0,f,c
  7926  005148  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7927  00514A  500C               	movf	___lwdiv@divisor^0,w,c
  7928  00514C  5C0A               	subwf	___lwdiv@dividend^0,w,c
  7929  00514E  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7930  005150  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7931  005152  A0D8               	btfss	status,0,c
  7932  005154  D005               	goto	l12674
  7933  005156  500C               	movf	___lwdiv@divisor^0,w,c
  7934  005158  5E0A               	subwf	___lwdiv@dividend^0,f,c
  7935  00515A  500D               	movf	(___lwdiv@divisor+1)^0,w,c
  7936  00515C  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7937  00515E  800F               	bsf	___lwdiv@quotient^0,0,c
  7938  005160                     l12674:
  7939  005160  90D8               	bcf	status,0,c
  7940  005162  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7941  005164  320C               	rrcf	___lwdiv@divisor^0,f,c
  7942  005166  2E0E               	decfsz	___lwdiv@counter^0,f,c
  7943  005168  D7ED               	goto	u15020
  7944  00516A                     l2224:
  7945  00516A  C00F  F00A         	movff	___lwdiv@quotient,?___lwdiv
  7946  00516E  C010  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7947  005172  0012               	return		;funcret
  7948  005174                     __end_of___lwdiv:
  7949                           	callstack 0
  7950                           
  7951 ;; *************** function _grava_sd *****************
  7952 ;; Defined at:
  7953 ;;		line 534 in file "main.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;		None
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/1
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7967 ;;      Params:         0       0       0       0       0       0       0       0       0
  7968 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7970 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7971 ;;Total ram usage:        0 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:   15
  7974 ;; This function calls:
  7975 ;;		_desliga_SPI
  7976 ;;		_desliga_uart
  7977 ;;		_escrita_sdcard
  7978 ;;		_inicializa_SPI
  7979 ;;		_inicializa_uart
  7980 ;; This function is called by:
  7981 ;;		_disparo_gravacao
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text49
  7986  005B34                     __ptext49:
  7987                           	callstack 0
  7988  005B34                     _grava_sd:
  7989                           	callstack 13
  7990                           
  7991                           ;main.c: 536: PORTBbits.RB3 = 0;
  7992                           
  7993                           ;incstack = 0
  7994  005B34  9681               	bcf	129,3,c	;volatile
  7995                           
  7996                           ;main.c: 537: desliga_uart();
  7997  005B36  ECBB  F02D         	call	_desliga_uart	;wreg free
  7998                           
  7999                           ;main.c: 538: inicializa_SPI();
  8000  005B3A  EC41  F02D         	call	_inicializa_SPI	;wreg free
  8001                           
  8002                           ;main.c: 539: escrita_sdcard();
  8003  005B3E  EC02  F01B         	call	_escrita_sdcard	;wreg free
  8004                           
  8005                           ;main.c: 540: desliga_SPI();
  8006  005B42  ECDD  F02D         	call	_desliga_SPI	;wreg free
  8007                           
  8008                           ;main.c: 541: inicializa_uart();
  8009  005B46  ECCB  F02C         	call	_inicializa_uart	;wreg free
  8010                           
  8011                           ;main.c: 542: PORTBbits.RB3 = 1;
  8012  005B4A  8681               	bsf	129,3,c	;volatile
  8013  005B4C  0012               	return		;funcret
  8014  005B4E                     __end_of_grava_sd:
  8015                           	callstack 0
  8016                           
  8017 ;; *************** function _inicializa_uart *****************
  8018 ;; Defined at:
  8019 ;;		line 206 in file "bibliotecas/uart.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;		None
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  1    wreg      void 
  8026 ;; Registers used:
  8027 ;;		wreg, status,2, status,0, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/1
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8033 ;;      Params:         0       0       0       0       0       0       0       0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8036 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8037 ;;Total ram usage:        0 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    4
  8040 ;; This function calls:
  8041 ;;		_configura_baudrate_uart
  8042 ;; This function is called by:
  8043 ;;		_main
  8044 ;;		_grava_sd
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text50
  8049  005996                     __ptext50:
  8050                           	callstack 0
  8051  005996                     _inicializa_uart:
  8052                           	callstack 26
  8053                           
  8054                           ;uart.c: 208: TRISCbits.RC6 = 0;
  8055                           
  8056                           ;incstack = 0
  8057  005996  9C94               	bcf	148,6,c	;volatile
  8058                           
  8059                           ;uart.c: 209: TRISCbits.RC7 = 0;
  8060  005998  9E94               	bcf	148,7,c	;volatile
  8061                           
  8062                           ;uart.c: 211: (void)configura_baudrate_uart(9600);
  8063  00599A  0E80               	movlw	128
  8064  00599C  6E18               	movwf	configura_baudrate_uart@baudrate^0,c
  8065  00599E  0E25               	movlw	37
  8066  0059A0  6E19               	movwf	(configura_baudrate_uart@baudrate+1)^0,c
  8067  0059A2  0E00               	movlw	0
  8068  0059A4  6E1A               	movwf	(configura_baudrate_uart@baudrate+2)^0,c
  8069  0059A6  0E00               	movlw	0
  8070  0059A8  6E1B               	movwf	(configura_baudrate_uart@baudrate+3)^0,c
  8071  0059AA  ECE2  F01D         	call	_configura_baudrate_uart	;wreg free
  8072                           
  8073                           ;uart.c: 213: TXSTA = 0x20;
  8074  0059AE  0E20               	movlw	32
  8075  0059B0  6EAC               	movwf	172,c	;volatile
  8076                           
  8077                           ;uart.c: 214: RCSTA = 0x90;
  8078  0059B2  0E90               	movlw	144
  8079  0059B4  6EAB               	movwf	171,c	;volatile
  8080  0059B6  0012               	return		;funcret
  8081  0059B8                     __end_of_inicializa_uart:
  8082                           	callstack 0
  8083                           
  8084 ;; *************** function _configura_baudrate_uart *****************
  8085 ;; Defined at:
  8086 ;;		line 50 in file "bibliotecas/uart.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  baudrate        4   23[COMRAM] const long 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;  x               2   35[COMRAM] unsigned int 
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      unsigned char 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0, cstack
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/1
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8100 ;;      Params:         4       0       0       0       0       0       0       0       0
  8101 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8102 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8103 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8104 ;;Total ram usage:       14 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:    3
  8107 ;; This function calls:
  8108 ;;		___aldiv
  8109 ;; This function is called by:
  8110 ;;		_inicializa_uart
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text51
  8115  003BC4                     __ptext51:
  8116                           	callstack 0
  8117  003BC4                     _configura_baudrate_uart:
  8118                           	callstack 26
  8119                           
  8120                           ;uart.c: 52: unsigned int x;;uart.c: 54: x = (48000000 - baudrate*64)/(baudrate*64);
  8121                           
  8122                           ;incstack = 0
  8123  003BC4  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8124  003BC8  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8125  003BCC  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8126  003BD0  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8127  003BD4  0E06               	movlw	6
  8128  003BD6                     u14955:
  8129  003BD6  90D8               	bcf	status,0,c
  8130  003BD8  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8131  003BDA  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8132  003BDC  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8133  003BDE  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8134  003BE0  2EE8               	decfsz	wreg,f,c
  8135  003BE2  D7F9               	goto	u14955
  8136  003BE4  501C               	movf	??_configura_baudrate_uart^0,w,c
  8137  003BE6  0800               	sublw	0
  8138  003BE8  6E0A               	movwf	___aldiv@dividend^0,c
  8139  003BEA  0E6C               	movlw	108
  8140  003BEC  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8141  003BEE  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8142  003BF0  0EDC               	movlw	220
  8143  003BF2  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8144  003BF4  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8145  003BF6  0E02               	movlw	2
  8146  003BF8  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8147  003BFA  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8148  003BFC  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8149  003C00  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8150  003C04  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8151  003C08  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8152  003C0C  0E06               	movlw	6
  8153  003C0E                     u14965:
  8154  003C0E  90D8               	bcf	status,0,c
  8155  003C10  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8156  003C12  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8157  003C14  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8158  003C16  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8159  003C18  2EE8               	decfsz	wreg,f,c
  8160  003C1A  D7F9               	goto	u14965
  8161  003C1C  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8162  003C20  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8163  003C24  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8164  003C28  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8165  003C2C  EC9E  F020         	call	___aldiv	;wreg free
  8166  003C30  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8167  003C34  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8168                           
  8169                           ;uart.c: 55: if(x > 255)
  8170  003C38  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8171  003C3A  A0D8               	btfss	status,0,c
  8172  003C3C  D03B               	goto	l12652
  8173                           
  8174                           ;uart.c: 56: {;uart.c: 57: x = (48000000 - baudrate*16)/(baudrate*16);
  8175  003C3E  C018  F01C         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart
  8176  003C42  C019  F01D         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+1
  8177  003C46  C01A  F01E         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+2
  8178  003C4A  C01B  F01F         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+3
  8179  003C4E  0E04               	movlw	4
  8180  003C50                     u14985:
  8181  003C50  90D8               	bcf	status,0,c
  8182  003C52  361C               	rlcf	??_configura_baudrate_uart^0,f,c
  8183  003C54  361D               	rlcf	(??_configura_baudrate_uart+1)^0,f,c
  8184  003C56  361E               	rlcf	(??_configura_baudrate_uart+2)^0,f,c
  8185  003C58  361F               	rlcf	(??_configura_baudrate_uart+3)^0,f,c
  8186  003C5A  2EE8               	decfsz	wreg,f,c
  8187  003C5C  D7F9               	goto	u14985
  8188  003C5E  501C               	movf	??_configura_baudrate_uart^0,w,c
  8189  003C60  0800               	sublw	0
  8190  003C62  6E0A               	movwf	___aldiv@dividend^0,c
  8191  003C64  0E6C               	movlw	108
  8192  003C66  541D               	subfwb	(??_configura_baudrate_uart+1)^0,w,c
  8193  003C68  6E0B               	movwf	(___aldiv@dividend+1)^0,c
  8194  003C6A  0EDC               	movlw	220
  8195  003C6C  541E               	subfwb	(??_configura_baudrate_uart+2)^0,w,c
  8196  003C6E  6E0C               	movwf	(___aldiv@dividend+2)^0,c
  8197  003C70  0E02               	movlw	2
  8198  003C72  541F               	subfwb	(??_configura_baudrate_uart+3)^0,w,c
  8199  003C74  6E0D               	movwf	(___aldiv@dividend+3)^0,c
  8200  003C76  C018  F020         	movff	configura_baudrate_uart@baudrate,??_configura_baudrate_uart+4
  8201  003C7A  C019  F021         	movff	configura_baudrate_uart@baudrate+1,??_configura_baudrate_uart+5
  8202  003C7E  C01A  F022         	movff	configura_baudrate_uart@baudrate+2,??_configura_baudrate_uart+6
  8203  003C82  C01B  F023         	movff	configura_baudrate_uart@baudrate+3,??_configura_baudrate_uart+7
  8204  003C86  0E04               	movlw	4
  8205  003C88                     u14995:
  8206  003C88  90D8               	bcf	status,0,c
  8207  003C8A  3620               	rlcf	(??_configura_baudrate_uart+4)^0,f,c
  8208  003C8C  3621               	rlcf	(??_configura_baudrate_uart+5)^0,f,c
  8209  003C8E  3622               	rlcf	(??_configura_baudrate_uart+6)^0,f,c
  8210  003C90  3623               	rlcf	(??_configura_baudrate_uart+7)^0,f,c
  8211  003C92  2EE8               	decfsz	wreg,f,c
  8212  003C94  D7F9               	goto	u14995
  8213  003C96  C020  F00E         	movff	??_configura_baudrate_uart+4,___aldiv@divisor
  8214  003C9A  C021  F00F         	movff	??_configura_baudrate_uart+5,___aldiv@divisor+1
  8215  003C9E  C022  F010         	movff	??_configura_baudrate_uart+6,___aldiv@divisor+2
  8216  003CA2  C023  F011         	movff	??_configura_baudrate_uart+7,___aldiv@divisor+3
  8217  003CA6  EC9E  F020         	call	___aldiv	;wreg free
  8218  003CAA  C00A  F024         	movff	?___aldiv,configura_baudrate_uart@x
  8219  003CAE  C00B  F025         	movff	?___aldiv+1,configura_baudrate_uart@x+1
  8220                           
  8221                           ;uart.c: 58: BRGH = 1;
  8222  003CB2  84AC               	bsf	4012,2,c	;volatile
  8223  003CB4                     l12652:
  8224                           
  8225                           ;uart.c: 59: };uart.c: 60: if(x < 256)
  8226  003CB4  0425               	decf	(configura_baudrate_uart@x+1)^0,w,c
  8227  003CB6  B0D8               	btfsc	status,0,c
  8228  003CB8  0012               	return	
  8229                           
  8230                           ;uart.c: 61: {;uart.c: 62: SPBRG = x;
  8231  003CBA  C024  FFAF         	movff	configura_baudrate_uart@x,4015	;volatile
  8232                           
  8233                           ;uart.c: 63: SYNC = 0;
  8234  003CBE  98AC               	bcf	4012,4,c	;volatile
  8235                           
  8236                           ;uart.c: 64: SPEN = 1;
  8237  003CC0  8EAB               	bsf	4011,7,c	;volatile
  8238                           
  8239                           ;uart.c: 65: TRISCbits.RC7 = 1;
  8240  003CC2  8E94               	bsf	148,7,c	;volatile
  8241                           
  8242                           ;uart.c: 66: TRISCbits.RC6 = 0;
  8243  003CC4  9C94               	bcf	148,6,c	;volatile
  8244                           
  8245                           ;uart.c: 67: CREN = 1;
  8246  003CC6  88AB               	bsf	4011,4,c	;volatile
  8247                           
  8248                           ;uart.c: 68: TXEN = 1;
  8249  003CC8  8AAC               	bsf	4012,5,c	;volatile
  8250                           
  8251                           ;uart.c: 70: return (1);;	Return value of _configura_baudrate_uart is never used
  8252  003CCA  0012               	return		;funcret
  8253  003CCC                     __end_of_configura_baudrate_uart:
  8254                           	callstack 0
  8255                           
  8256 ;; *************** function ___aldiv *****************
  8257 ;; Defined at:
  8258 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  dividend        4    9[COMRAM] long 
  8261 ;;  divisor         4   13[COMRAM] long 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  quotient        4   19[COMRAM] long 
  8264 ;;  sign            1   18[COMRAM] unsigned char 
  8265 ;;  counter         1   17[COMRAM] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  4    9[COMRAM] long 
  8268 ;; Registers used:
  8269 ;;		wreg, status,2, status,0
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/1
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8275 ;;      Params:         8       0       0       0       0       0       0       0       0
  8276 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8278 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8279 ;;Total ram usage:       14 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    2
  8282 ;; This function calls:
  8283 ;;		Nothing
  8284 ;; This function is called by:
  8285 ;;		_configura_baudrate_uart
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text52
  8290  00413C                     __ptext52:
  8291                           	callstack 0
  8292  00413C                     ___aldiv:
  8293                           	callstack 26
  8294                           
  8295                           ;incstack = 0
  8296  00413C  0E00               	movlw	0
  8297  00413E  6E13               	movwf	___aldiv@sign^0,c
  8298  004140  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8299  004142  D00A               	goto	l12084
  8300  004144  1E11               	comf	(___aldiv@divisor+3)^0,f,c
  8301  004146  1E10               	comf	(___aldiv@divisor+2)^0,f,c
  8302  004148  1E0F               	comf	(___aldiv@divisor+1)^0,f,c
  8303  00414A  6C0E               	negf	___aldiv@divisor^0,c
  8304  00414C  0E00               	movlw	0
  8305  00414E  220F               	addwfc	(___aldiv@divisor+1)^0,f,c
  8306  004150  2210               	addwfc	(___aldiv@divisor+2)^0,f,c
  8307  004152  2211               	addwfc	(___aldiv@divisor+3)^0,f,c
  8308  004154  0E01               	movlw	1
  8309  004156  6E13               	movwf	___aldiv@sign^0,c
  8310  004158                     l12084:
  8311  004158  AE0D               	btfss	(___aldiv@dividend+3)^0,7,c
  8312  00415A  D00A               	goto	l12090
  8313  00415C  1E0D               	comf	(___aldiv@dividend+3)^0,f,c
  8314  00415E  1E0C               	comf	(___aldiv@dividend+2)^0,f,c
  8315  004160  1E0B               	comf	(___aldiv@dividend+1)^0,f,c
  8316  004162  6C0A               	negf	___aldiv@dividend^0,c
  8317  004164  0E00               	movlw	0
  8318  004166  220B               	addwfc	(___aldiv@dividend+1)^0,f,c
  8319  004168  220C               	addwfc	(___aldiv@dividend+2)^0,f,c
  8320  00416A  220D               	addwfc	(___aldiv@dividend+3)^0,f,c
  8321  00416C  0E01               	movlw	1
  8322  00416E  1A13               	xorwf	___aldiv@sign^0,f,c
  8323  004170                     l12090:
  8324  004170  0E00               	movlw	0
  8325  004172  6E14               	movwf	___aldiv@quotient^0,c
  8326  004174  0E00               	movlw	0
  8327  004176  6E15               	movwf	(___aldiv@quotient+1)^0,c
  8328  004178  0E00               	movlw	0
  8329  00417A  6E16               	movwf	(___aldiv@quotient+2)^0,c
  8330  00417C  0E00               	movlw	0
  8331  00417E  6E17               	movwf	(___aldiv@quotient+3)^0,c
  8332  004180  500E               	movf	___aldiv@divisor^0,w,c
  8333  004182  100F               	iorwf	(___aldiv@divisor+1)^0,w,c
  8334  004184  1010               	iorwf	(___aldiv@divisor+2)^0,w,c
  8335  004186  1011               	iorwf	(___aldiv@divisor+3)^0,w,c
  8336  004188  B4D8               	btfsc	status,2,c
  8337  00418A  D02A               	goto	l12112
  8338  00418C  0E01               	movlw	1
  8339  00418E  6E12               	movwf	___aldiv@counter^0,c
  8340  004190  D006               	goto	l12098
  8341  004192                     l12096:
  8342  004192  90D8               	bcf	status,0,c
  8343  004194  360E               	rlcf	___aldiv@divisor^0,f,c
  8344  004196  360F               	rlcf	(___aldiv@divisor+1)^0,f,c
  8345  004198  3610               	rlcf	(___aldiv@divisor+2)^0,f,c
  8346  00419A  3611               	rlcf	(___aldiv@divisor+3)^0,f,c
  8347  00419C  2A12               	incf	___aldiv@counter^0,f,c
  8348  00419E                     l12098:
  8349  00419E  AE11               	btfss	(___aldiv@divisor+3)^0,7,c
  8350  0041A0  D7F8               	goto	l12096
  8351  0041A2                     u14050:
  8352  0041A2  90D8               	bcf	status,0,c
  8353  0041A4  3614               	rlcf	___aldiv@quotient^0,f,c
  8354  0041A6  3615               	rlcf	(___aldiv@quotient+1)^0,f,c
  8355  0041A8  3616               	rlcf	(___aldiv@quotient+2)^0,f,c
  8356  0041AA  3617               	rlcf	(___aldiv@quotient+3)^0,f,c
  8357  0041AC  500E               	movf	___aldiv@divisor^0,w,c
  8358  0041AE  5C0A               	subwf	___aldiv@dividend^0,w,c
  8359  0041B0  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8360  0041B2  580B               	subwfb	(___aldiv@dividend+1)^0,w,c
  8361  0041B4  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8362  0041B6  580C               	subwfb	(___aldiv@dividend+2)^0,w,c
  8363  0041B8  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8364  0041BA  580D               	subwfb	(___aldiv@dividend+3)^0,w,c
  8365  0041BC  A0D8               	btfss	status,0,c
  8366  0041BE  D009               	goto	l12108
  8367  0041C0  500E               	movf	___aldiv@divisor^0,w,c
  8368  0041C2  5E0A               	subwf	___aldiv@dividend^0,f,c
  8369  0041C4  500F               	movf	(___aldiv@divisor+1)^0,w,c
  8370  0041C6  5A0B               	subwfb	(___aldiv@dividend+1)^0,f,c
  8371  0041C8  5010               	movf	(___aldiv@divisor+2)^0,w,c
  8372  0041CA  5A0C               	subwfb	(___aldiv@dividend+2)^0,f,c
  8373  0041CC  5011               	movf	(___aldiv@divisor+3)^0,w,c
  8374  0041CE  5A0D               	subwfb	(___aldiv@dividend+3)^0,f,c
  8375  0041D0  8014               	bsf	___aldiv@quotient^0,0,c
  8376  0041D2                     l12108:
  8377  0041D2  90D8               	bcf	status,0,c
  8378  0041D4  3211               	rrcf	(___aldiv@divisor+3)^0,f,c
  8379  0041D6  3210               	rrcf	(___aldiv@divisor+2)^0,f,c
  8380  0041D8  320F               	rrcf	(___aldiv@divisor+1)^0,f,c
  8381  0041DA  320E               	rrcf	___aldiv@divisor^0,f,c
  8382  0041DC  2E12               	decfsz	___aldiv@counter^0,f,c
  8383  0041DE  D7E1               	goto	u14050
  8384  0041E0                     l12112:
  8385  0041E0  5013               	movf	___aldiv@sign^0,w,c
  8386  0041E2  B4D8               	btfsc	status,2,c
  8387  0041E4  D008               	goto	l12116
  8388  0041E6  1E17               	comf	(___aldiv@quotient+3)^0,f,c
  8389  0041E8  1E16               	comf	(___aldiv@quotient+2)^0,f,c
  8390  0041EA  1E15               	comf	(___aldiv@quotient+1)^0,f,c
  8391  0041EC  6C14               	negf	___aldiv@quotient^0,c
  8392  0041EE  0E00               	movlw	0
  8393  0041F0  2215               	addwfc	(___aldiv@quotient+1)^0,f,c
  8394  0041F2  2216               	addwfc	(___aldiv@quotient+2)^0,f,c
  8395  0041F4  2217               	addwfc	(___aldiv@quotient+3)^0,f,c
  8396  0041F6                     l12116:
  8397  0041F6  C014  F00A         	movff	___aldiv@quotient,?___aldiv
  8398  0041FA  C015  F00B         	movff	___aldiv@quotient+1,?___aldiv+1
  8399  0041FE  C016  F00C         	movff	___aldiv@quotient+2,?___aldiv+2
  8400  004202  C017  F00D         	movff	___aldiv@quotient+3,?___aldiv+3
  8401  004206  0012               	return		;funcret
  8402  004208                     __end_of___aldiv:
  8403                           	callstack 0
  8404                           
  8405 ;; *************** function _inicializa_SPI *****************
  8406 ;; Defined at:
  8407 ;;		line 48 in file "bibliotecas/SPI.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;		None
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;		None
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  1    wreg      void 
  8414 ;; Registers used:
  8415 ;;		wreg, status,2, status,0
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/1
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8421 ;;      Params:         0       0       0       0       0       0       0       0       0
  8422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8424 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8425 ;;Total ram usage:        0 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    2
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_grava_sd
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           	psect	text53
  8436  005A82                     __ptext53:
  8437                           	callstack 0
  8438  005A82                     _inicializa_SPI:
  8439                           	callstack 25
  8440                           
  8441                           ;SPI.c: 50: TRISBbits.RB1 = 0;
  8442                           
  8443                           ;incstack = 0
  8444  005A82  9293               	bcf	147,1,c	;volatile
  8445                           
  8446                           ;SPI.c: 51: TRISBbits.RB5 = 0;
  8447  005A84  9A93               	bcf	147,5,c	;volatile
  8448                           
  8449                           ;SPI.c: 52: TRISBbits.RB0 = 1;
  8450  005A86  8093               	bsf	147,0,c	;volatile
  8451                           
  8452                           ;SPI.c: 53: TRISCbits.RC7 = 0;
  8453  005A88  9E94               	bcf	148,7,c	;volatile
  8454                           
  8455                           ;SPI.c: 55: LATBbits.LATB5 = 1;
  8456  005A8A  8A8A               	bsf	138,5,c	;volatile
  8457                           
  8458                           ;SPI.c: 56: SSPSTAT &= 0x3F;
  8459  005A8C  0E3F               	movlw	63
  8460  005A8E  16C7               	andwf	199,f,c	;volatile
  8461                           
  8462                           ;SPI.c: 57: SSPCON1 = 0x00;
  8463  005A90  0E00               	movlw	0
  8464  005A92  6EC6               	movwf	198,c	;volatile
  8465                           
  8466                           ;SPI.c: 59: SSPSTATbits.SMP = 0;
  8467  005A94  9EC7               	bcf	199,7,c	;volatile
  8468                           
  8469                           ;SPI.c: 60: SSPSTATbits.CKE = 1;
  8470  005A96  8CC7               	bsf	199,6,c	;volatile
  8471                           
  8472                           ;SPI.c: 61: SSPCON1bits.CKP = 0;
  8473  005A98  98C6               	bcf	198,4,c	;volatile
  8474                           
  8475                           ;SPI.c: 63: SSPCON1 = 0b00000011;
  8476  005A9A  0E03               	movlw	3
  8477  005A9C  6EC6               	movwf	198,c	;volatile
  8478                           
  8479                           ;SPI.c: 65: SSPCON1bits.SSPEN = 1;
  8480  005A9E  8AC6               	bsf	198,5,c	;volatile
  8481  005AA0  0012               	return		;funcret
  8482  005AA2                     __end_of_inicializa_SPI:
  8483                           	callstack 0
  8484                           
  8485 ;; *************** function _escrita_sdcard *****************
  8486 ;; Defined at:
  8487 ;;		line 208 in file "bibliotecas/SDCard.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;		None
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  fix_gps         3    0        PTR unsigned char 
  8492 ;;  bw              2    0        unsigned short 
  8493 ;;  j               1    0        unsigned char 
  8494 ;;  i               1    0        unsigned char 
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  1    wreg      void 
  8497 ;; Registers used:
  8498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/1
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8504 ;;      Params:         0       0       0       0       0       0       0       0       0
  8505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8508 ;;Total ram usage:        0 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:   14
  8511 ;; This function calls:
  8512 ;;		_data_nome
  8513 ;;		_f_close
  8514 ;;		_f_lseek
  8515 ;;		_f_mount
  8516 ;;		_f_open
  8517 ;;		_fprintf
  8518 ;;		_gps
  8519 ;;		_hora_nome
  8520 ;;		_strcat
  8521 ;; This function is called by:
  8522 ;;		_grava_sd
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           	psect	text54
  8527  003604                     __ptext54:
  8528                           	callstack 0
  8529  003604                     _escrita_sdcard:
  8530                           	callstack 13
  8531                           
  8532                           ;SDCard.c: 210: unsigned char *fix_gps;;SDCard.c: 211: unsigned char i, j;;SDCard.c: 212
      +                          : static unsigned char f_fix = 0;;SDCard.c: 213: WORD bw;;SDCard.c: 217: f_mount(0,&fs);
  8533                           
  8534                           ;incstack = 0
  8535  003604  0E96               	movlw	low _fs
  8536  003606  6E0A               	movwf	f_mount@fs^0,c
  8537  003608  0E03               	movlw	high _fs
  8538  00360A  6E0B               	movwf	(f_mount@fs+1)^0,c
  8539  00360C  0E00               	movlw	0
  8540  00360E  ECA2  F029         	call	_f_mount
  8541                           
  8542                           ;SDCard.c: 218: if(!f_fix)
  8543  003612  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8544  003614  A4D8               	btfss	status,2,c
  8545  003616  D023               	goto	l12934
  8546                           
  8547                           ;SDCard.c: 219: {;SDCard.c: 220: gps();
  8548  003618  EC28  F02B         	call	_gps	;wreg free
  8549                           
  8550                           ;SDCard.c: 221: if(data[0] != ' ' && hora[0] != ' ')
  8551  00361C  0E20               	movlw	32
  8552  00361E  0101               	movlb	1	; () banked
  8553  003620  19D8               	xorwf	_data& (0+255),w,b
  8554  003622  B4D8               	btfsc	status,2,c
  8555  003624  D01C               	goto	l12934
  8556                           
  8557                           ; BSR set to: 1
  8558  003626  0E20               	movlw	32
  8559  003628  19CA               	xorwf	_hora& (0+255),w,b
  8560  00362A  B4D8               	btfsc	status,2,c
  8561  00362C  D018               	goto	l12934
  8562                           
  8563                           ; BSR set to: 1
  8564                           ;SDCard.c: 222: {;SDCard.c: 223: data_nome(data);
  8565  00362E  0ED8               	movlw	low _data
  8566  003630  6E0A               	movwf	data_nome@p_buff^0,c
  8567  003632  0E01               	movlw	high _data
  8568  003634  6E0B               	movwf	(data_nome@p_buff+1)^0,c
  8569  003636  EC59  F02C         	call	_data_nome	;wreg free
  8570                           
  8571                           ;SDCard.c: 224: hora_nome(hora);
  8572  00363A  0ECA               	movlw	low _hora
  8573  00363C  6E0A               	movwf	hora_nome@p_buff^0,c
  8574  00363E  0E01               	movlw	high _hora
  8575  003640  6E0B               	movwf	(hora_nome@p_buff+1)^0,c
  8576  003642  EC2F  F02C         	call	_hora_nome	;wreg free
  8577                           
  8578                           ; BSR set to: 1
  8579                           ;SDCard.c: 226: strcat(filename, ".tlm");
  8580  003646  0E56               	movlw	low _filename
  8581  003648  6E0A               	movwf	strcat@to^0,c
  8582  00364A  0E02               	movlw	high _filename
  8583  00364C  6E0B               	movwf	(strcat@to+1)^0,c
  8584  00364E  0E66               	movlw	low STR_11
  8585  003650  6E0C               	movwf	strcat@from^0,c
  8586  003652  0E62               	movlw	high STR_11
  8587  003654  6E0D               	movwf	(strcat@from+1)^0,c
  8588  003656  ECEA  F029         	call	_strcat	;wreg free
  8589                           
  8590                           ; BSR set to: 1
  8591                           ;SDCard.c: 227: f_fix = 1;
  8592  00365A  0E01               	movlw	1
  8593  00365C  6E53               	movwf	escrita_sdcard@f_fix^0,c
  8594  00365E                     l12934:
  8595                           
  8596                           ;SDCard.c: 228: };SDCard.c: 229: };SDCard.c: 231: if(f_fix)
  8597  00365E  5053               	movf	escrita_sdcard@f_fix^0,w,c
  8598  003660  B4D8               	btfsc	status,2,c
  8599  003662  0012               	return	
  8600                           
  8601                           ;SDCard.c: 232: {;SDCard.c: 233: if (f_open(&fil, filename, 0x02 ) == FR_OK)
  8602  003664  0E7C               	movlw	low _fil
  8603  003666  0100               	movlb	0	; () banked
  8604  003668  6F98               	movwf	f_open@fp& (0+255),b
  8605  00366A  0E01               	movlw	high _fil
  8606  00366C  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8607  00366E  0E56               	movlw	low _filename
  8608  003670  6F9A               	movwf	f_open@path& (0+255),b
  8609  003672  0E02               	movlw	high _filename
  8610  003674  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8611  003676  0E02               	movlw	2
  8612  003678  6F9C               	movwf	f_open@mode& (0+255),b
  8613  00367A  EC66  F009         	call	_f_open	;wreg free
  8614  00367E  0900               	iorlw	0
  8615  003680  A4D8               	btfss	status,2,c
  8616  003682  D051               	goto	l12948
  8617                           
  8618                           ;SDCard.c: 234: {;SDCard.c: 236: f_lseek(&fil, ((&fil)->fsize));
  8619  003684  0E7C               	movlw	low _fil
  8620  003686  0100               	movlb	0	; () banked
  8621  003688  6F86               	movwf	f_lseek@fp& (0+255),b
  8622  00368A  0E01               	movlw	high _fil
  8623  00368C  6F87               	movwf	(f_lseek@fp+1)& (0+255),b
  8624  00368E  C186  F088         	movff	_fil+10,f_lseek@ofs
  8625  003692  C187  F089         	movff	_fil+11,f_lseek@ofs+1
  8626  003696  C188  F08A         	movff	_fil+12,f_lseek@ofs+2
  8627  00369A  C189  F08B         	movff	_fil+13,f_lseek@ofs+3
  8628  00369E  EC79  F005         	call	_f_lseek	;wreg free
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;SDCard.c: 237: fprintf(&fil, "v%s;lt%s;lo%s;", vel, lt, lo);
  8632  0036A2  0E7C               	movlw	low _fil
  8633  0036A4  6FB1               	movwf	fprintf@fil& (0+255),b
  8634  0036A6  0E01               	movlw	high _fil
  8635  0036A8  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8636  0036AA  0E9C               	movlw	low STR_12
  8637  0036AC  6FB3               	movwf	fprintf@str& (0+255),b
  8638  0036AE  0E61               	movlw	high STR_12
  8639  0036B0  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8640  0036B2  0EDE               	movlw	low _vel
  8641  0036B4  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8642  0036B6  0E01               	movlw	high _vel
  8643  0036B8  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8644  0036BA  0EB2               	movlw	low _lt
  8645  0036BC  6FB7               	movwf	(?_fprintf+6)& (0+255),b
  8646  0036BE  0E01               	movlw	high _lt
  8647  0036C0  6FB8               	movwf	(?_fprintf+7)& (0+255),b
  8648  0036C2  0E98               	movlw	low _lo
  8649  0036C4  6FB9               	movwf	(?_fprintf+8)& (0+255),b
  8650  0036C6  0E01               	movlw	high _lo
  8651  0036C8  6FBA               	movwf	(?_fprintf+9)& (0+255),b
  8652  0036CA  ECBF  F007         	call	_fprintf	;wreg free
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;SDCard.c: 238: fprintf(&fil, "r0;c0;k0;");
  8656  0036CE  0E7C               	movlw	low _fil
  8657  0036D0  6FB1               	movwf	fprintf@fil& (0+255),b
  8658  0036D2  0E01               	movlw	high _fil
  8659  0036D4  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8660  0036D6  0EF6               	movlw	low STR_13
  8661  0036D8  6FB3               	movwf	fprintf@str& (0+255),b
  8662  0036DA  0E61               	movlw	high STR_13
  8663  0036DC  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8664  0036DE  ECBF  F007         	call	_fprintf	;wreg free
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;SDCard.c: 239: fprintf(&fil, "h%s;dN/A;", hora);
  8668  0036E2  0E7C               	movlw	low _fil
  8669  0036E4  6FB1               	movwf	fprintf@fil& (0+255),b
  8670  0036E6  0E01               	movlw	high _fil
  8671  0036E8  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8672  0036EA  0E00               	movlw	low STR_14
  8673  0036EC  6FB3               	movwf	fprintf@str& (0+255),b
  8674  0036EE  0E62               	movlw	high STR_14
  8675  0036F0  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8676  0036F2  0ECA               	movlw	low _hora
  8677  0036F4  6FB5               	movwf	(?_fprintf+4)& (0+255),b
  8678  0036F6  0E01               	movlw	high _hora
  8679  0036F8  6FB6               	movwf	(?_fprintf+5)& (0+255),b
  8680  0036FA  ECBF  F007         	call	_fprintf	;wreg free
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;SDCard.c: 240: fprintf(&fil, "f%c;\n", fence);
  8684  0036FE  0E7C               	movlw	low _fil
  8685  003700  6FB1               	movwf	fprintf@fil& (0+255),b
  8686  003702  0E01               	movlw	high _fil
  8687  003704  6FB2               	movwf	(fprintf@fil+1)& (0+255),b
  8688  003706  0E56               	movlw	low STR_15
  8689  003708  6FB3               	movwf	fprintf@str& (0+255),b
  8690  00370A  0E62               	movlw	high STR_15
  8691  00370C  6FB4               	movwf	(fprintf@str+1)& (0+255),b
  8692  00370E  C0F5  F0B5         	movff	_fence,?_fprintf+4
  8693  003712  6BB6               	clrf	(?_fprintf+5)& (0+255),b
  8694  003714  ECBF  F007         	call	_fprintf	;wreg free
  8695                           
  8696                           ;SDCard.c: 243: f_close(&fil);
  8697  003718  0E7C               	movlw	low _fil
  8698  00371A  6F69               	movwf	f_close@fp& (0+255),b
  8699  00371C  0E01               	movlw	high _fil
  8700  00371E  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8701  003720  EC19  F02C         	call	_f_close	;wreg free
  8702                           
  8703                           ;SDCard.c: 244: }
  8704  003724  0012               	return	
  8705  003726                     l12948:
  8706                           
  8707                           ;SDCard.c: 245: else;SDCard.c: 246: {;SDCard.c: 247: f_open(&fil, filename, 0x08 );
  8708  003726  0E7C               	movlw	low _fil
  8709  003728  0100               	movlb	0	; () banked
  8710  00372A  6F98               	movwf	f_open@fp& (0+255),b
  8711  00372C  0E01               	movlw	high _fil
  8712  00372E  6F99               	movwf	(f_open@fp+1)& (0+255),b
  8713  003730  0E56               	movlw	low _filename
  8714  003732  6F9A               	movwf	f_open@path& (0+255),b
  8715  003734  0E02               	movlw	high _filename
  8716  003736  6F9B               	movwf	(f_open@path+1)& (0+255),b
  8717  003738  0E08               	movlw	8
  8718  00373A  6F9C               	movwf	f_open@mode& (0+255),b
  8719  00373C  EC66  F009         	call	_f_open	;wreg free
  8720                           
  8721                           ;SDCard.c: 248: f_close(&fil);
  8722  003740  0E7C               	movlw	low _fil
  8723  003742  0100               	movlb	0	; () banked
  8724  003744  6F69               	movwf	f_close@fp& (0+255),b
  8725  003746  0E01               	movlw	high _fil
  8726  003748  6F6A               	movwf	(f_close@fp+1)& (0+255),b
  8727  00374A  EC19  F02C         	call	_f_close	;wreg free
  8728  00374E  0012               	return		;funcret
  8729  003750                     __end_of_escrita_sdcard:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function _strcat *****************
  8733 ;; Defined at:
  8734 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  to              2    9[COMRAM] PTR unsigned char 
  8737 ;;		 -> filename(20), 
  8738 ;;  from            2   11[COMRAM] PTR const unsigned char 
  8739 ;;		 -> STR_11(5), 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  cp              2   13[COMRAM] PTR unsigned char 
  8742 ;;		 -> filename(20), 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  2    9[COMRAM] PTR unsigned char 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8747 ;; Tracked objects:
  8748 ;;		On entry : 3F/1
  8749 ;;		On exit  : 3F/1
  8750 ;;		Unchanged: 3F/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8752 ;;      Params:         4       0       0       0       0       0       0       0       0
  8753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8755 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8756 ;;Total ram usage:        6 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    2
  8759 ;; This function calls:
  8760 ;;		Nothing
  8761 ;; This function is called by:
  8762 ;;		_escrita_sdcard
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text55
  8767  0053D4                     __ptext55:
  8768                           	callstack 0
  8769  0053D4                     _strcat:
  8770                           	callstack 24
  8771                           
  8772                           ; BSR set to: 1
  8773                           
  8774                           ;incstack = 0
  8775  0053D4  C00A  F00E         	movff	strcat@to,strcat@cp
  8776  0053D8  C00B  F00F         	movff	strcat@to+1,strcat@cp+1
  8777  0053DC  D002               	goto	l12392
  8778  0053DE                     l12390:
  8779                           
  8780                           ; BSR set to: 1
  8781  0053DE  4A0E               	infsnz	strcat@cp^0,f,c
  8782  0053E0  2A0F               	incf	(strcat@cp+1)^0,f,c
  8783  0053E2                     l12392:
  8784                           
  8785                           ; BSR set to: 1
  8786  0053E2  C00E  FFD9         	movff	strcat@cp,fsr2l
  8787  0053E6  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8788  0053EA  50DF               	movf	indf2,w,c
  8789  0053EC  B4D8               	btfsc	status,2,c
  8790  0053EE  D005               	goto	l12396
  8791  0053F0  D7F6               	goto	l12390
  8792  0053F2                     l12394:
  8793                           
  8794                           ; BSR set to: 1
  8795  0053F2  4A0E               	infsnz	strcat@cp^0,f,c
  8796  0053F4  2A0F               	incf	(strcat@cp+1)^0,f,c
  8797  0053F6  4A0C               	infsnz	strcat@from^0,f,c
  8798  0053F8  2A0D               	incf	(strcat@from+1)^0,f,c
  8799  0053FA                     l12396:
  8800                           
  8801                           ; BSR set to: 1
  8802  0053FA  C00C  FFF6         	movff	strcat@from,tblptrl
  8803  0053FE  C00D  FFF7         	movff	strcat@from+1,tblptrh
  8804  005402                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8805  005402  6AF8               	clrf	tblptru,c
  8806  005404                     	endif
  8807  005404                     	if	0	;tblptru may be non-zero
  8808  005404                     	endif
  8809  005404  C00E  FFD9         	movff	strcat@cp,fsr2l
  8810  005408  C00F  FFDA         	movff	strcat@cp+1,fsr2h
  8811  00540C  0008               	tblrd		*
  8812  00540E  CFF5 FFDF          	movff	tablat,indf2
  8813  005412  50DF               	movf	indf2,w,c
  8814  005414  B4D8               	btfsc	status,2,c
  8815  005416  0012               	return	
  8816  005418  D7EC               	goto	l12394
  8817  00541A                     __end_of_strcat:
  8818                           	callstack 0
  8819                           
  8820 ;; *************** function _hora_nome *****************
  8821 ;; Defined at:
  8822 ;;		line 414 in file "bibliotecas/SDCard.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
  8825 ;;		 -> hora(7), 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  i               1   11[COMRAM] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 3F/1
  8834 ;;		On exit  : 3F/1
  8835 ;;		Unchanged: 3F/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8837 ;;      Params:         2       0       0       0       0       0       0       0       0
  8838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8840 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8841 ;;Total ram usage:        3 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    2
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_escrita_sdcard
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text56
  8852  00585E                     __ptext56:
  8853                           	callstack 0
  8854  00585E                     _hora_nome:
  8855                           	callstack 24
  8856                           
  8857                           ; BSR set to: 1
  8858                           ;SDCard.c: 416: unsigned char i;;SDCard.c: 417: for(i=4; i<8;i++)
  8859                           
  8860                           ; BSR set to: 1
  8861                           ;incstack = 0
  8862  00585E  0E04               	movlw	4
  8863  005860  6E0C               	movwf	hora_nome@i^0,c
  8864  005862                     l12380:
  8865                           
  8866                           ; BSR set to: 1
  8867                           ;SDCard.c: 418: {;SDCard.c: 419: filename[i] = *p_buff;
  8868  005862  C00A  FFD9         	movff	hora_nome@p_buff,fsr2l
  8869  005866  C00B  FFDA         	movff	hora_nome@p_buff+1,fsr2h
  8870  00586A  0E56               	movlw	low _filename
  8871  00586C  240C               	addwf	hora_nome@i^0,w,c
  8872  00586E  6EE1               	movwf	fsr1l,c
  8873  005870  6AE2               	clrf	fsr1h,c
  8874  005872  0E02               	movlw	high _filename
  8875  005874  22E2               	addwfc	fsr1h,f,c
  8876  005876  CFDF FFE7          	movff	indf2,indf1
  8877                           
  8878                           ; BSR set to: 1
  8879                           ;SDCard.c: 420: p_buff++;
  8880  00587A  4A0A               	infsnz	hora_nome@p_buff^0,f,c
  8881  00587C  2A0B               	incf	(hora_nome@p_buff+1)^0,f,c
  8882                           
  8883                           ; BSR set to: 1
  8884  00587E  2A0C               	incf	hora_nome@i^0,f,c
  8885                           
  8886                           ; BSR set to: 1
  8887  005880  0E07               	movlw	7
  8888  005882  640C               	cpfsgt	hora_nome@i^0,c
  8889  005884  D7EE               	goto	l12380
  8890  005886  0012               	return	
  8891  005888                     __end_of_hora_nome:
  8892                           	callstack 0
  8893                           
  8894 ;; *************** function _gps *****************
  8895 ;; Defined at:
  8896 ;;		line 92 in file "bibliotecas/GPS.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;  flag_fix        2   12[COMRAM] PTR unsigned char 
  8901 ;;		 -> rawFix(2), 
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  1    wreg      void 
  8904 ;; Registers used:
  8905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8911 ;;      Params:         0       0       0       0       0       0       0       0       0
  8912 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8913 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8914 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8915 ;;Total ram usage:        3 bytes
  8916 ;; Hardware stack levels used:    1
  8917 ;; Hardware stack levels required when called:    3
  8918 ;; This function calls:
  8919 ;;		_fix
  8920 ;;		_get_fix
  8921 ;;		_get_gpstime
  8922 ;;		_get_latitude
  8923 ;;		_get_longitude
  8924 ;;		_get_rawdate
  8925 ;;		_get_rawspeed
  8926 ;; This function is called by:
  8927 ;;		_escrita_sdcard
  8928 ;;		_main
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text57
  8933  005650                     __ptext57:
  8934                           	callstack 0
  8935  005650                     _gps:
  8936                           	callstack 27
  8937                           
  8938                           ;GPS.c: 94: unsigned char *flag_fix;;GPS.c: 95: get_fix();
  8939                           
  8940                           ; BSR set to: 1
  8941                           ;incstack = 0
  8942  005650  EC8E  F02B         	call	_get_fix	;wreg free
  8943                           
  8944                           ;GPS.c: 96: flag_fix = fix();
  8945  005654  EC23  F02E         	call	_fix	;wreg free
  8946  005658  C00A  F00D         	movff	?_fix,gps@flag_fix
  8947  00565C  C00B  F00E         	movff	?_fix+1,gps@flag_fix+1
  8948                           
  8949                           ;GPS.c: 97: if(flag_fix[0] == '1')
  8950  005660  C00D  FFD9         	movff	gps@flag_fix,fsr2l
  8951  005664  C00E  FFDA         	movff	gps@flag_fix+1,fsr2h
  8952  005668  0E31               	movlw	49
  8953  00566A  18DE               	xorwf	postinc2,w,c
  8954  00566C  A4D8               	btfss	status,2,c
  8955  00566E  0012               	return	
  8956                           
  8957                           ;GPS.c: 98: {;GPS.c: 99: get_gpstime();
  8958  005670  EC44  F02C         	call	_get_gpstime	;wreg free
  8959                           
  8960                           ;GPS.c: 100: get_latitude();
  8961  005674  EC7E  F029         	call	_get_latitude	;wreg free
  8962                           
  8963                           ;GPS.c: 101: get_longitude();
  8964  005678  EC5A  F029         	call	_get_longitude	;wreg free
  8965                           
  8966                           ;GPS.c: 102: get_rawdate();
  8967  00567C  EC76  F02B         	call	_get_rawdate	;wreg free
  8968                           
  8969                           ;GPS.c: 103: get_rawspeed();
  8970  005680  EC5E  F02B         	call	_get_rawspeed	;wreg free
  8971  005684  0012               	return		;funcret
  8972  005686                     __end_of_gps:
  8973                           	callstack 0
  8974                           
  8975 ;; *************** function _get_rawspeed *****************
  8976 ;; Defined at:
  8977 ;;		line 310 in file "bibliotecas/GPS.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;		None
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;  index           1   10[COMRAM] unsigned char 
  8982 ;;  index_speed     1    9[COMRAM] unsigned char 
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  1    wreg      void 
  8985 ;; Registers used:
  8986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8987 ;; Tracked objects:
  8988 ;;		On entry : 3F/1
  8989 ;;		On exit  : 3F/1
  8990 ;;		Unchanged: 3F/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8992 ;;      Params:         0       0       0       0       0       0       0       0       0
  8993 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8995 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8996 ;;Total ram usage:        2 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; Hardware stack levels required when called:    2
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_gps
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text58
  9007  0056BC                     __ptext58:
  9008                           	callstack 0
  9009  0056BC                     _get_rawspeed:
  9010                           	callstack 27
  9011                           
  9012                           ; BSR set to: 1
  9013                           ;GPS.c: 312: unsigned char index_speed, index;;GPS.c: 314: index_speed = 0;
  9014                           
  9015                           ;incstack = 0
  9016  0056BC  0E00               	movlw	0
  9017  0056BE  6E0A               	movwf	get_rawspeed@index_speed^0,c
  9018                           
  9019                           ;GPS.c: 316: for(index = 39; index<44; index++)
  9020  0056C0  0E27               	movlw	39
  9021  0056C2  6E0B               	movwf	get_rawspeed@index^0,c
  9022  0056C4                     l11706:
  9023                           
  9024                           ; BSR set to: 1
  9025                           ;GPS.c: 317: {;GPS.c: 318: rawSpeed[index_speed] = rmc_buffer[index];
  9026  0056C4  0E50               	movlw	low _rmc_buffer
  9027  0056C6  240B               	addwf	get_rawspeed@index^0,w,c
  9028  0056C8  6ED9               	movwf	fsr2l,c
  9029  0056CA  6ADA               	clrf	fsr2h,c
  9030  0056CC  0E03               	movlw	high _rmc_buffer
  9031  0056CE  22DA               	addwfc	fsr2h,f,c
  9032  0056D0  0E6A               	movlw	low _rawSpeed
  9033  0056D2  240A               	addwf	get_rawspeed@index_speed^0,w,c
  9034  0056D4  6EE1               	movwf	fsr1l,c
  9035  0056D6  6AE2               	clrf	fsr1h,c
  9036  0056D8  0E02               	movlw	high _rawSpeed
  9037  0056DA  22E2               	addwfc	fsr1h,f,c
  9038  0056DC  CFDF FFE7          	movff	indf2,indf1
  9039                           
  9040                           ; BSR set to: 1
  9041                           ;GPS.c: 319: index_speed++;
  9042  0056E0  2A0A               	incf	get_rawspeed@index_speed^0,f,c
  9043                           
  9044                           ; BSR set to: 1
  9045  0056E2  2A0B               	incf	get_rawspeed@index^0,f,c
  9046                           
  9047                           ; BSR set to: 1
  9048  0056E4  0E2B               	movlw	43
  9049  0056E6  640B               	cpfsgt	get_rawspeed@index^0,c
  9050  0056E8  D7ED               	goto	l11706
  9051  0056EA  0012               	return	
  9052  0056EC                     __end_of_get_rawspeed:
  9053                           	callstack 0
  9054                           
  9055 ;; *************** function _get_rawdate *****************
  9056 ;; Defined at:
  9057 ;;		line 295 in file "bibliotecas/GPS.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;		None
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  index           1   10[COMRAM] unsigned char 
  9062 ;;  index_date      1    9[COMRAM] unsigned char 
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9067 ;; Tracked objects:
  9068 ;;		On entry : 3F/1
  9069 ;;		On exit  : 3F/1
  9070 ;;		Unchanged: 3F/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9072 ;;      Params:         0       0       0       0       0       0       0       0       0
  9073 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9075 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9076 ;;Total ram usage:        2 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    2
  9079 ;; This function calls:
  9080 ;;		Nothing
  9081 ;; This function is called by:
  9082 ;;		_gps
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           	psect	text59
  9087  0056EC                     __ptext59:
  9088                           	callstack 0
  9089  0056EC                     _get_rawdate:
  9090                           	callstack 27
  9091                           
  9092                           ; BSR set to: 1
  9093                           ;GPS.c: 297: unsigned char index_date, index;;GPS.c: 299: index_date = 0;
  9094                           
  9095                           ; BSR set to: 1
  9096                           ;incstack = 0
  9097  0056EC  0E00               	movlw	0
  9098  0056EE  6E0A               	movwf	get_rawdate@index_date^0,c
  9099                           
  9100                           ;GPS.c: 301: for(index = 46; index<52; index++)
  9101  0056F0  0E2E               	movlw	46
  9102  0056F2  6E0B               	movwf	get_rawdate@index^0,c
  9103  0056F4                     l11692:
  9104                           
  9105                           ; BSR set to: 1
  9106                           ;GPS.c: 302: {;GPS.c: 303: rawDate[index_date] = rmc_buffer[index];
  9107  0056F4  0E50               	movlw	low _rmc_buffer
  9108  0056F6  240B               	addwf	get_rawdate@index^0,w,c
  9109  0056F8  6ED9               	movwf	fsr2l,c
  9110  0056FA  6ADA               	clrf	fsr2h,c
  9111  0056FC  0E03               	movlw	high _rmc_buffer
  9112  0056FE  22DA               	addwfc	fsr2h,f,c
  9113  005700  0EE4               	movlw	low _rawDate
  9114  005702  240A               	addwf	get_rawdate@index_date^0,w,c
  9115  005704  6EE1               	movwf	fsr1l,c
  9116  005706  6AE2               	clrf	fsr1h,c
  9117  005708  0E01               	movlw	high _rawDate
  9118  00570A  22E2               	addwfc	fsr1h,f,c
  9119  00570C  CFDF FFE7          	movff	indf2,indf1
  9120                           
  9121                           ; BSR set to: 1
  9122                           ;GPS.c: 304: index_date++;
  9123  005710  2A0A               	incf	get_rawdate@index_date^0,f,c
  9124                           
  9125                           ; BSR set to: 1
  9126  005712  2A0B               	incf	get_rawdate@index^0,f,c
  9127                           
  9128                           ; BSR set to: 1
  9129  005714  0E33               	movlw	51
  9130  005716  640B               	cpfsgt	get_rawdate@index^0,c
  9131  005718  D7ED               	goto	l11692
  9132  00571A  0012               	return	
  9133  00571C                     __end_of_get_rawdate:
  9134                           	callstack 0
  9135                           
  9136 ;; *************** function _get_longitude *****************
  9137 ;; Defined at:
  9138 ;;		line 273 in file "bibliotecas/GPS.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;		None
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  index           1   10[COMRAM] unsigned char 
  9143 ;;  index_long      1    9[COMRAM] unsigned char 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9148 ;; Tracked objects:
  9149 ;;		On entry : 3F/1
  9150 ;;		On exit  : 3F/1
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9153 ;;      Params:         0       0       0       0       0       0       0       0       0
  9154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9156 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9157 ;;Total ram usage:        2 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    2
  9160 ;; This function calls:
  9161 ;;		Nothing
  9162 ;; This function is called by:
  9163 ;;		_gps
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text60
  9168  0052B4                     __ptext60:
  9169                           	callstack 0
  9170  0052B4                     _get_longitude:
  9171                           	callstack 27
  9172                           
  9173                           ; BSR set to: 1
  9174                           ;GPS.c: 275: unsigned char index_long, index;;GPS.c: 277: index_long = 1;
  9175                           
  9176                           ; BSR set to: 1
  9177                           ;incstack = 0
  9178  0052B4  0E01               	movlw	1
  9179  0052B6  6E0A               	movwf	get_longitude@index_long^0,c
  9180                           
  9181                           ;GPS.c: 279: for(index = 23; index<34; index++)
  9182  0052B8  0E17               	movlw	23
  9183  0052BA  6E0B               	movwf	get_longitude@index^0,c
  9184  0052BC                     l11672:
  9185                           
  9186                           ; BSR set to: 1
  9187                           ;GPS.c: 280: {;GPS.c: 281: rawLongitude[index_long] = gga_buffer[index];
  9188  0052BC  0E00               	movlw	low _gga_buffer
  9189  0052BE  240B               	addwf	get_longitude@index^0,w,c
  9190  0052C0  6ED9               	movwf	fsr2l,c
  9191  0052C2  6ADA               	clrf	fsr2h,c
  9192  0052C4  0E03               	movlw	high _gga_buffer
  9193  0052C6  22DA               	addwfc	fsr2h,f,c
  9194  0052C8  0EA5               	movlw	low _rawLongitude
  9195  0052CA  240A               	addwf	get_longitude@index_long^0,w,c
  9196  0052CC  6EE1               	movwf	fsr1l,c
  9197  0052CE  6AE2               	clrf	fsr1h,c
  9198  0052D0  0E01               	movlw	high _rawLongitude
  9199  0052D2  22E2               	addwfc	fsr1h,f,c
  9200  0052D4  CFDF FFE7          	movff	indf2,indf1
  9201                           
  9202                           ; BSR set to: 1
  9203                           ;GPS.c: 282: index_long++;
  9204  0052D8  2A0A               	incf	get_longitude@index_long^0,f,c
  9205                           
  9206                           ; BSR set to: 1
  9207  0052DA  2A0B               	incf	get_longitude@index^0,f,c
  9208                           
  9209                           ; BSR set to: 1
  9210  0052DC  0E21               	movlw	33
  9211  0052DE  640B               	cpfsgt	get_longitude@index^0,c
  9212  0052E0  D7ED               	goto	l11672
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;GPS.c: 283: };GPS.c: 284: if(gga_buffer[32] == 'E')
  9216  0052E2  0E45               	movlw	69
  9217  0052E4  0103               	movlb	3	; () banked
  9218  0052E6  1920               	xorwf	(_gga_buffer+32)& (0+255),w,b
  9219  0052E8  A4D8               	btfss	status,2,c
  9220  0052EA  D004               	goto	l11684
  9221                           
  9222                           ; BSR set to: 3
  9223                           ;GPS.c: 285: {;GPS.c: 286: rawLongitude[0] = '0';
  9224  0052EC  0E30               	movlw	48
  9225  0052EE  0101               	movlb	1	; () banked
  9226  0052F0  6FA5               	movwf	_rawLongitude& (0+255),b
  9227                           
  9228                           ;GPS.c: 287: }
  9229  0052F2  0012               	return	
  9230  0052F4                     l11684:
  9231                           
  9232                           ; BSR set to: 3
  9233                           ;GPS.c: 288: else;GPS.c: 289: {;GPS.c: 290: rawLongitude[0] = '-';
  9234  0052F4  0E2D               	movlw	45
  9235  0052F6  0101               	movlb	1	; () banked
  9236  0052F8  6FA5               	movwf	_rawLongitude& (0+255),b
  9237                           
  9238                           ; BSR set to: 1
  9239  0052FA  0012               	return		;funcret
  9240  0052FC                     __end_of_get_longitude:
  9241                           	callstack 0
  9242                           
  9243 ;; *************** function _get_latitude *****************
  9244 ;; Defined at:
  9245 ;;		line 249 in file "bibliotecas/GPS.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;		None
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  time_buffer    15    0        unsigned char [15]
  9250 ;;  index           1   10[COMRAM] unsigned char 
  9251 ;;  index_lat       1    9[COMRAM] unsigned char 
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      void 
  9254 ;; Registers used:
  9255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 3F/1
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9261 ;;      Params:         0       0       0       0       0       0       0       0       0
  9262 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9264 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9265 ;;Total ram usage:        2 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; Hardware stack levels required when called:    2
  9268 ;; This function calls:
  9269 ;;		Nothing
  9270 ;; This function is called by:
  9271 ;;		_gps
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text61
  9276  0052FC                     __ptext61:
  9277                           	callstack 0
  9278  0052FC                     _get_latitude:
  9279                           	callstack 27
  9280                           
  9281                           ;GPS.c: 251: unsigned char index_lat, index;;GPS.c: 252: unsigned char time_buffer[15];;
      +                          GPS.c: 254: index_lat = 1;
  9282                           
  9283                           ; BSR set to: 1
  9284                           ;incstack = 0
  9285  0052FC  0E01               	movlw	1
  9286  0052FE  6E0A               	movwf	get_latitude@index_lat^0,c
  9287                           
  9288                           ;GPS.c: 256: for(index = 10; index<20; index++)
  9289  005300  0E0A               	movlw	10
  9290  005302  6E0B               	movwf	get_latitude@index^0,c
  9291  005304                     l11652:
  9292                           
  9293                           ;GPS.c: 257: {;GPS.c: 258: rawLatitude[index_lat] = gga_buffer[index];
  9294  005304  0E00               	movlw	low _gga_buffer
  9295  005306  240B               	addwf	get_latitude@index^0,w,c
  9296  005308  6ED9               	movwf	fsr2l,c
  9297  00530A  6ADA               	clrf	fsr2h,c
  9298  00530C  0E03               	movlw	high _gga_buffer
  9299  00530E  22DA               	addwfc	fsr2h,f,c
  9300  005310  0EBE               	movlw	low _rawLatitude
  9301  005312  240A               	addwf	get_latitude@index_lat^0,w,c
  9302  005314  6EE1               	movwf	fsr1l,c
  9303  005316  6AE2               	clrf	fsr1h,c
  9304  005318  0E01               	movlw	high _rawLatitude
  9305  00531A  22E2               	addwfc	fsr1h,f,c
  9306  00531C  CFDF FFE7          	movff	indf2,indf1
  9307                           
  9308                           ;GPS.c: 259: index_lat++;
  9309  005320  2A0A               	incf	get_latitude@index_lat^0,f,c
  9310  005322  2A0B               	incf	get_latitude@index^0,f,c
  9311  005324  0E13               	movlw	19
  9312  005326  640B               	cpfsgt	get_latitude@index^0,c
  9313  005328  D7ED               	goto	l11652
  9314                           
  9315                           ;GPS.c: 260: };GPS.c: 261: if(gga_buffer[21] == 'N')
  9316  00532A  0E4E               	movlw	78
  9317  00532C  0103               	movlb	3	; () banked
  9318  00532E  1915               	xorwf	(_gga_buffer+21)& (0+255),w,b
  9319  005330  A4D8               	btfss	status,2,c
  9320  005332  D004               	goto	l11664
  9321                           
  9322                           ; BSR set to: 3
  9323                           ;GPS.c: 262: {;GPS.c: 263: rawLatitude[0] = '0';
  9324  005334  0E30               	movlw	48
  9325  005336  0101               	movlb	1	; () banked
  9326  005338  6FBE               	movwf	_rawLatitude& (0+255),b
  9327                           
  9328                           ;GPS.c: 264: }
  9329  00533A  0012               	return	
  9330  00533C                     l11664:
  9331                           
  9332                           ; BSR set to: 3
  9333                           ;GPS.c: 265: else;GPS.c: 266: {;GPS.c: 267: rawLatitude[0] = '-';
  9334  00533C  0E2D               	movlw	45
  9335  00533E  0101               	movlb	1	; () banked
  9336  005340  6FBE               	movwf	_rawLatitude& (0+255),b
  9337                           
  9338                           ; BSR set to: 1
  9339  005342  0012               	return		;funcret
  9340  005344                     __end_of_get_latitude:
  9341                           	callstack 0
  9342                           
  9343 ;; *************** function _get_gpstime *****************
  9344 ;; Defined at:
  9345 ;;		line 229 in file "bibliotecas/GPS.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;  time_buffer    15    0        unsigned char [15]
  9350 ;;  index           1    9[COMRAM] unsigned char 
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9360 ;;      Params:         0       0       0       0       0       0       0       0       0
  9361 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9363 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9364 ;;Total ram usage:        1 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:    2
  9367 ;; This function calls:
  9368 ;;		Nothing
  9369 ;; This function is called by:
  9370 ;;		_gps
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text62
  9375  005888                     __ptext62:
  9376                           	callstack 0
  9377  005888                     _get_gpstime:
  9378                           	callstack 27
  9379                           
  9380                           ;GPS.c: 231: unsigned char index;;GPS.c: 232: unsigned char time_buffer[15];;GPS.c: 236:
      +                           for(index = 0; index<6; index++)
  9381                           
  9382                           ; BSR set to: 1
  9383                           ;incstack = 0
  9384  005888  0E00               	movlw	0
  9385  00588A  6E0A               	movwf	get_gpstime@index^0,c
  9386  00588C                     l11640:
  9387                           
  9388                           ;GPS.c: 237: {;GPS.c: 238: rawTime[index] = gga_buffer[index];
  9389  00588C  0E00               	movlw	low _gga_buffer
  9390  00588E  240A               	addwf	get_gpstime@index^0,w,c
  9391  005890  6ED9               	movwf	fsr2l,c
  9392  005892  6ADA               	clrf	fsr2h,c
  9393  005894  0E03               	movlw	high _gga_buffer
  9394  005896  22DA               	addwfc	fsr2h,f,c
  9395  005898  0ED1               	movlw	low _rawTime
  9396  00589A  240A               	addwf	get_gpstime@index^0,w,c
  9397  00589C  6EE1               	movwf	fsr1l,c
  9398  00589E  6AE2               	clrf	fsr1h,c
  9399  0058A0  0E01               	movlw	high _rawTime
  9400  0058A2  22E2               	addwfc	fsr1h,f,c
  9401  0058A4  CFDF FFE7          	movff	indf2,indf1
  9402  0058A8  2A0A               	incf	get_gpstime@index^0,f,c
  9403  0058AA  0E05               	movlw	5
  9404  0058AC  640A               	cpfsgt	get_gpstime@index^0,c
  9405  0058AE  D7EE               	goto	l11640
  9406  0058B0  0012               	return	
  9407  0058B2                     __end_of_get_gpstime:
  9408                           	callstack 0
  9409                           
  9410 ;; *************** function _get_fix *****************
  9411 ;; Defined at:
  9412 ;;		line 324 in file "bibliotecas/GPS.c"
  9413 ;; Parameters:    Size  Location     Type
  9414 ;;		None
  9415 ;; Auto vars:     Size  Location     Type
  9416 ;;  index           1   10[COMRAM] unsigned char 
  9417 ;;  index_fix       1    9[COMRAM] unsigned char 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9427 ;;      Params:         0       0       0       0       0       0       0       0       0
  9428 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9430 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9431 ;;Total ram usage:        2 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; Hardware stack levels required when called:    2
  9434 ;; This function calls:
  9435 ;;		Nothing
  9436 ;; This function is called by:
  9437 ;;		_gps
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text63
  9442  00571C                     __ptext63:
  9443                           	callstack 0
  9444  00571C                     _get_fix:
  9445                           	callstack 27
  9446                           
  9447                           ;GPS.c: 326: unsigned char index_fix, index;;GPS.c: 328: index_fix = 0;
  9448                           
  9449                           ;incstack = 0
  9450  00571C  0E00               	movlw	0
  9451  00571E  6E0A               	movwf	get_fix@index_fix^0,c
  9452                           
  9453                           ;GPS.c: 330: for(index = 37; index<39; index++)
  9454  005720  0E25               	movlw	37
  9455  005722  6E0B               	movwf	get_fix@index^0,c
  9456  005724                     l11622:
  9457                           
  9458                           ;GPS.c: 331: {;GPS.c: 332: rawFix[index_fix] = gga_buffer[index];
  9459  005724  0E00               	movlw	low _gga_buffer
  9460  005726  240B               	addwf	get_fix@index^0,w,c
  9461  005728  6ED9               	movwf	fsr2l,c
  9462  00572A  6ADA               	clrf	fsr2h,c
  9463  00572C  0E03               	movlw	high _gga_buffer
  9464  00572E  22DA               	addwfc	fsr2h,f,c
  9465  005730  0EEA               	movlw	low _rawFix
  9466  005732  240A               	addwf	get_fix@index_fix^0,w,c
  9467  005734  6EE1               	movwf	fsr1l,c
  9468  005736  6AE2               	clrf	fsr1h,c
  9469  005738  0E01               	movlw	high _rawFix
  9470  00573A  22E2               	addwfc	fsr1h,f,c
  9471  00573C  CFDF FFE7          	movff	indf2,indf1
  9472                           
  9473                           ;GPS.c: 333: index_fix++;
  9474  005740  2A0A               	incf	get_fix@index_fix^0,f,c
  9475  005742  2A0B               	incf	get_fix@index^0,f,c
  9476  005744  0E26               	movlw	38
  9477  005746  640B               	cpfsgt	get_fix@index^0,c
  9478  005748  D7ED               	goto	l11622
  9479  00574A  0012               	return	
  9480  00574C                     __end_of_get_fix:
  9481                           	callstack 0
  9482                           
  9483 ;; *************** function _fix *****************
  9484 ;; Defined at:
  9485 ;;		line 679 in file "bibliotecas/GPS.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  2    9[COMRAM] PTR unsigned char 
  9492 ;; Registers used:
  9493 ;;		wreg, status,2, status,0
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9499 ;;      Params:         2       0       0       0       0       0       0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9502 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9503 ;;Total ram usage:        2 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:    2
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_gps
  9510 ;;		_disparo_gravacao
  9511 ;;		_troca_de_tela
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text64
  9516  005C46                     __ptext64:
  9517                           	callstack 0
  9518  005C46                     _fix:
  9519                           	callstack 27
  9520                           
  9521                           ;GPS.c: 681: return rawFix;
  9522                           
  9523                           ;incstack = 0
  9524  005C46  0EEA               	movlw	low _rawFix
  9525  005C48  6E0A               	movwf	?_fix^0,c
  9526  005C4A  0E01               	movlw	high _rawFix
  9527  005C4C  6E0B               	movwf	(?_fix+1)^0,c
  9528  005C4E  0012               	return		;funcret
  9529  005C50                     __end_of_fix:
  9530                           	callstack 0
  9531                           
  9532 ;; *************** function _fprintf *****************
  9533 ;; Defined at:
  9534 ;;		line 1816 in file "bibliotecas/tff.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  fil             2   81[BANK0 ] PTR struct _FIL
  9537 ;;		 -> fil(28), 
  9538 ;;  str             2   83[BANK0 ] PTR const unsigned char 
  9539 ;;		 -> STR_15(6), STR_14(10), STR_13(10), STR_12(15), 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;  s              16   93[BANK0 ] unsigned char [16]
  9542 ;;  val             4  117[BANK0 ] unsigned long 
  9543 ;;  i               2  124[BANK0 ] int 
  9544 ;;  cc              2  122[BANK0 ] int 
  9545 ;;  w               2  113[BANK0 ] int 
  9546 ;;  res             2  109[BANK0 ] int 
  9547 ;;  c               1  126[BANK0 ] unsigned char 
  9548 ;;  arp             1  121[BANK0 ] PTR void [1]
  9549 ;;		 -> ?_fprintf(2), 
  9550 ;;  r               1  116[BANK0 ] unsigned char 
  9551 ;;  f               1  115[BANK0 ] unsigned char 
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  2   81[BANK0 ] int 
  9554 ;; Registers used:
  9555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9556 ;; Tracked objects:
  9557 ;;		On entry : 3F/0
  9558 ;;		On exit  : 3F/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9561 ;;      Params:         0      10       0       0       0       0       0       0       0
  9562 ;;      Locals:         0      34       0       0       0       0       0       0       0
  9563 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9564 ;;      Totals:         0      46       0       0       0       0       0       0       0
  9565 ;;Total ram usage:       46 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; Hardware stack levels required when called:   13
  9568 ;; This function calls:
  9569 ;;		___lldiv
  9570 ;;		___llmod
  9571 ;;		___wmul
  9572 ;;		_fputc
  9573 ;;		_fputs
  9574 ;; This function is called by:
  9575 ;;		_escrita_sdcard
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text65
  9580  000F7E                     __ptext65:
  9581                           	callstack 0
  9582  000F7E                     _fprintf:
  9583                           	callstack 13
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;tff.c: 1822: va_list arp;;tff.c: 1823: UCHAR c, f, r;;tff.c: 1824: ULONG val;;tff.c: 18
      +                          25: char s[16];;tff.c: 1826: int i, w, res, cc;;tff.c: 1829: *arp = __va_start();
  9587                           
  9588                           ;incstack = 0
  9589  000F7E  0EB5               	movlw	low (?_fprintf+4)
  9590  000F80  6FD9               	movwf	fprintf@arp& (0+255),b
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;tff.c: 1831: for (cc = res = 0; cc != -1; res += cc) {
  9594  000F82  0E00               	movlw	0
  9595  000F84  6FCE               	movwf	(fprintf@res+1)& (0+255),b
  9596  000F86  0E00               	movlw	0
  9597  000F88  6FCD               	movwf	fprintf@res& (0+255),b
  9598  000F8A  C0CD  F0DA         	movff	fprintf@res,fprintf@cc
  9599  000F8E  C0CE  F0DB         	movff	fprintf@res+1,fprintf@cc+1
  9600  000F92                     l12482:
  9601                           
  9602                           ; BSR set to: 0
  9603  000F92  29DA               	incf	fprintf@cc& (0+255),w,b
  9604  000F94  E103               	bnz	l12486
  9605  000F96  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9606  000F98  B4D8               	btfsc	status,2,c
  9607  000F9A  0012               	return	
  9608  000F9C                     l12486:
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;tff.c: 1832: c = *str++;
  9612  000F9C  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9613  000FA0  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9614  000FA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9615  000FA4  6AF8               	clrf	tblptru,c
  9616  000FA6                     	endif
  9617  000FA6                     	if	0	;tblptru may be non-zero
  9618  000FA6                     	endif
  9619  000FA6  0008               	tblrd		*
  9620  000FA8  CFF5 F0DE          	movff	tablat,fprintf@c
  9621                           
  9622                           ; BSR set to: 0
  9623  000FAC  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9624  000FAE  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;tff.c: 1833: if (c == 0) break;
  9628  000FB0  51DE               	movf	fprintf@c& (0+255),w,b
  9629  000FB2  B4D8               	btfsc	status,2,c
  9630  000FB4  0012               	return	
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;tff.c: 1834: if (c != '%') {
  9634  000FB6  0E25               	movlw	37
  9635  000FB8  19DE               	xorwf	fprintf@c& (0+255),w,b
  9636  000FBA  B4D8               	btfsc	status,2,c
  9637  000FBC  D017               	goto	l12502
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;tff.c: 1835: cc = fputc(c, fil);
  9641  000FBE  C0DE  F0A4         	movff	fprintf@c,fputc@chr
  9642  000FC2  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9643  000FC4  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9644  000FC8  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9645  000FCC  EC92  F02A         	call	_fputc	;wreg free
  9646  000FD0  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9647  000FD4  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;tff.c: 1836: if (cc != -1) cc = 1;
  9651  000FD8  29DA               	incf	fprintf@cc& (0+255),w,b
  9652  000FDA  E103               	bnz	u14690
  9653  000FDC  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9654  000FDE  B4D8               	btfsc	status,2,c
  9655  000FE0  D170               	goto	l12626
  9656  000FE2                     u14690:
  9657                           
  9658                           ; BSR set to: 0
  9659  000FE2  0E00               	movlw	0
  9660  000FE4  6FDB               	movwf	(fprintf@cc+1)& (0+255),b
  9661  000FE6  0E01               	movlw	1
  9662  000FE8  6FDA               	movwf	fprintf@cc& (0+255),b
  9663  000FEA  D16B               	goto	l12626
  9664  000FEC                     l12502:
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;tff.c: 1838: };tff.c: 1839: w = f = 0;
  9668  000FEC  0E00               	movlw	0
  9669  000FEE  6FD3               	movwf	fprintf@f& (0+255),b
  9670  000FF0  C0D3  F0D1         	movff	fprintf@f,fprintf@w
  9671  000FF4  6BD2               	clrf	(fprintf@w+1)& (0+255),b
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;tff.c: 1840: c = *str++;
  9675  000FF6  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9676  000FFA  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9677  000FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9678  000FFE  6AF8               	clrf	tblptru,c
  9679  001000                     	endif
  9680  001000                     	if	0	;tblptru may be non-zero
  9681  001000                     	endif
  9682  001000  0008               	tblrd		*
  9683  001002  CFF5 F0DE          	movff	tablat,fprintf@c
  9684                           
  9685                           ; BSR set to: 0
  9686  001006  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9687  001008  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;tff.c: 1841: if (c == '0') {
  9691  00100A  0E30               	movlw	48
  9692  00100C  19DE               	xorwf	fprintf@c& (0+255),w,b
  9693  00100E  A4D8               	btfss	status,2,c
  9694  001010  D023               	goto	l12522
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;tff.c: 1842: f = 1; c = *str++;
  9698  001012  0E01               	movlw	1
  9699  001014  6FD3               	movwf	fprintf@f& (0+255),b
  9700  001016                     l12512:
  9701                           
  9702                           ; BSR set to: 0
  9703  001016  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9704  00101A  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9705  00101E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9706  00101E  6AF8               	clrf	tblptru,c
  9707  001020                     	endif
  9708  001020                     	if	0	;tblptru may be non-zero
  9709  001020                     	endif
  9710  001020  0008               	tblrd		*
  9711  001022  CFF5 F0DE          	movff	tablat,fprintf@c
  9712                           
  9713                           ; BSR set to: 0
  9714  001026  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9715  001028  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9716  00102A  D016               	goto	l12522
  9717  00102C                     l12516:
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;tff.c: 1845: w = w * 10 + (c - '0');
  9721  00102C  C0D1  F00A         	movff	fprintf@w,___wmul@multiplier
  9722  001030  C0D2  F00B         	movff	fprintf@w+1,___wmul@multiplier+1
  9723  001034  0E00               	movlw	0
  9724  001036  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  9725  001038  0E0A               	movlw	10
  9726  00103A  6E0C               	movwf	___wmul@multiplicand^0,c
  9727  00103C  EC95  F02C         	call	___wmul	;wreg free
  9728  001040  0100               	movlb	0	; () banked
  9729  001042  51DE               	movf	fprintf@c& (0+255),w,b
  9730  001044  260A               	addwf	?___wmul^0,f,c
  9731  001046  0E00               	movlw	0
  9732  001048  220B               	addwfc	(?___wmul+1)^0,f,c
  9733  00104A  0ED0               	movlw	208
  9734  00104C  240A               	addwf	?___wmul^0,w,c
  9735  00104E  6FD1               	movwf	fprintf@w& (0+255),b
  9736  001050  0EFF               	movlw	255
  9737  001052  200B               	addwfc	(?___wmul+1)^0,w,c
  9738  001054  6FD2               	movwf	(fprintf@w+1)& (0+255),b
  9739  001056  D7DF               	goto	l12512
  9740  001058                     l12522:
  9741                           
  9742                           ; BSR set to: 0
  9743  001058  0E2F               	movlw	47
  9744  00105A  65DE               	cpfsgt	fprintf@c& (0+255),b
  9745  00105C  D003               	goto	u14720
  9746                           
  9747                           ; BSR set to: 0
  9748  00105E  0E39               	movlw	57
  9749  001060  65DE               	cpfsgt	fprintf@c& (0+255),b
  9750  001062  D7E4               	goto	l12516
  9751  001064                     u14720:
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;tff.c: 1847: };tff.c: 1848: if (c == 'l') {
  9755  001064  0E6C               	movlw	108
  9756  001066  19DE               	xorwf	fprintf@c& (0+255),w,b
  9757  001068  A4D8               	btfss	status,2,c
  9758  00106A  D00B               	goto	l12534
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;tff.c: 1849: f |= 2; c = *str++;
  9762  00106C  83D3               	bsf	fprintf@f& (0+255),1,b
  9763                           
  9764                           ; BSR set to: 0
  9765  00106E  C0B3  FFF6         	movff	fprintf@str,tblptrl
  9766  001072  C0B4  FFF7         	movff	fprintf@str+1,tblptrh
  9767  001076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9768  001076  6AF8               	clrf	tblptru,c
  9769  001078                     	endif
  9770  001078                     	if	0	;tblptru may be non-zero
  9771  001078                     	endif
  9772  001078  0008               	tblrd		*
  9773  00107A  CFF5 F0DE          	movff	tablat,fprintf@c
  9774                           
  9775                           ; BSR set to: 0
  9776  00107E  4BB3               	infsnz	fprintf@str& (0+255),f,b
  9777  001080  2BB4               	incf	(fprintf@str+1)& (0+255),f,b
  9778  001082                     l12534:
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;tff.c: 1850: };tff.c: 1851: if (c == 's') {
  9782  001082  0E73               	movlw	115
  9783  001084  19DE               	xorwf	fprintf@c& (0+255),w,b
  9784  001086  A4D8               	btfss	status,2,c
  9785  001088  D014               	goto	l12540
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;tff.c: 1852: cc = fputs((*(char* *)__va_arg((*(char* **)arp), (char*)0)), fil);
  9789  00108A  51D9               	movf	fprintf@arp& (0+255),w,b
  9790  00108C  6ED9               	movwf	fsr2l,c
  9791  00108E  6ADA               	clrf	fsr2h,c
  9792  001090  CFDE F0AB          	movff	postinc2,fputs@str
  9793  001094  CFDD F0AC          	movff	postdec2,fputs@str+1
  9794  001098  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
  9795  00109C  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
  9796  0010A0  EC3A  F028         	call	_fputs	;wreg free
  9797  0010A4  C0AB  F0DA         	movff	?_fputs,fprintf@cc
  9798  0010A8  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
  9799                           
  9800                           ; BSR set to: 0
  9801  0010AC  0E02               	movlw	2
  9802  0010AE  27D9               	addwf	fprintf@arp& (0+255),f,b
  9803                           
  9804                           ;tff.c: 1853: continue;
  9805  0010B0  D108               	goto	l12626
  9806  0010B2                     l12540:
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;tff.c: 1854: };tff.c: 1855: if (c == 'c') {
  9810  0010B2  0E63               	movlw	99
  9811  0010B4  19DE               	xorwf	fprintf@c& (0+255),w,b
  9812  0010B6  A4D8               	btfss	status,2,c
  9813  0010B8  D01B               	goto	l12550
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;tff.c: 1856: cc = fputc((*(char *)__va_arg((*(char **)arp), (char)0)), fil);
  9817  0010BA  51D9               	movf	fprintf@arp& (0+255),w,b
  9818  0010BC  6ED9               	movwf	fsr2l,c
  9819  0010BE  6ADA               	clrf	fsr2h,c
  9820  0010C0  50DF               	movf	indf2,w,c
  9821  0010C2  6FBB               	movwf	??_fprintf& (0+255),b
  9822  0010C4  51BB               	movf	??_fprintf& (0+255),w,b
  9823  0010C6  6FA4               	movwf	fputc@chr& (0+255),b
  9824  0010C8  6BA5               	clrf	(fputc@chr+1)& (0+255),b
  9825  0010CA  C0B1  F0A6         	movff	fprintf@fil,fputc@fil
  9826  0010CE  C0B2  F0A7         	movff	fprintf@fil+1,fputc@fil+1
  9827  0010D2  EC92  F02A         	call	_fputc	;wreg free
  9828  0010D6  C0A4  F0DA         	movff	?_fputc,fprintf@cc
  9829  0010DA  C0A5  F0DB         	movff	?_fputc+1,fprintf@cc+1
  9830                           
  9831                           ; BSR set to: 0
  9832  0010DE  0E02               	movlw	2
  9833  0010E0  27D9               	addwf	fprintf@arp& (0+255),f,b
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;tff.c: 1857: if (cc != -1) cc = 1;
  9837  0010E2  29DA               	incf	fprintf@cc& (0+255),w,b
  9838  0010E4  E104               	bnz	u14760
  9839  0010E6  29DB               	incf	(fprintf@cc+1)& (0+255),w,b
  9840  0010E8  A4D8               	btfss	status,2,c
  9841  0010EA  D77B               	goto	u14690
  9842  0010EC  D0EA               	goto	l12626
  9843  0010EE                     u14760:
  9844  0010EE  D779               	goto	u14690
  9845  0010F0                     l12550:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;tff.c: 1859: };tff.c: 1860: r = 0;
  9849  0010F0  0E00               	movlw	0
  9850  0010F2  6FD4               	movwf	fprintf@r& (0+255),b
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;tff.c: 1861: if (c == 'd') r = 10;
  9854  0010F4  0E64               	movlw	100
  9855  0010F6  19DE               	xorwf	fprintf@c& (0+255),w,b
  9856  0010F8  A4D8               	btfss	status,2,c
  9857  0010FA  D002               	goto	l12556
  9858                           
  9859                           ; BSR set to: 0
  9860  0010FC  0E0A               	movlw	10
  9861  0010FE  6FD4               	movwf	fprintf@r& (0+255),b
  9862  001100                     l12556:
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;tff.c: 1862: if (c == 'u') r = 10;
  9866  001100  0E75               	movlw	117
  9867  001102  19DE               	xorwf	fprintf@c& (0+255),w,b
  9868  001104  A4D8               	btfss	status,2,c
  9869  001106  D002               	goto	l12560
  9870                           
  9871                           ; BSR set to: 0
  9872  001108  0E0A               	movlw	10
  9873  00110A  6FD4               	movwf	fprintf@r& (0+255),b
  9874  00110C                     l12560:
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;tff.c: 1863: if (c == 'X') r = 16;
  9878  00110C  0E58               	movlw	88
  9879  00110E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9880  001110  A4D8               	btfss	status,2,c
  9881  001112  D002               	goto	l1274
  9882                           
  9883                           ; BSR set to: 0
  9884  001114  0E10               	movlw	16
  9885  001116  6FD4               	movwf	fprintf@r& (0+255),b
  9886  001118                     l1274:
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;tff.c: 1864: if (r == 0) break;
  9890  001118  51D4               	movf	fprintf@r& (0+255),w,b
  9891  00111A  B4D8               	btfsc	status,2,c
  9892  00111C  0012               	return	
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;tff.c: 1865: if (f & 2) {
  9896  00111E  A3D3               	btfss	fprintf@f& (0+255),1,b
  9897  001120  D00D               	goto	l12570
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;tff.c: 1866: val = (ULONG)(*(long *)__va_arg((*(long **)arp), (long)0));
  9901  001122  51D9               	movf	fprintf@arp& (0+255),w,b
  9902  001124  6ED9               	movwf	fsr2l,c
  9903  001126  6ADA               	clrf	fsr2h,c
  9904  001128  CFDE F0D5          	movff	postinc2,fprintf@val
  9905  00112C  CFDE F0D6          	movff	postinc2,fprintf@val+1
  9906  001130  CFDE F0D7          	movff	postinc2,fprintf@val+2
  9907  001134  CFDE F0D8          	movff	postinc2,fprintf@val+3
  9908                           
  9909                           ; BSR set to: 0
  9910  001138  0E04               	movlw	4
  9911  00113A  D01F               	goto	L1
  9912  00113C                     l12570:
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;tff.c: 1868: val = (c == 'd') ? (ULONG)(long)(*(int *)__va_arg((*(int **)arp), (int)0))
      +                           : (ULONG)(*(unsigned int *)__va_arg((*(unsigned int **)arp), (unsigned int)0));
  9916  00113C  0E64               	movlw	100
  9917  00113E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9918  001140  B4D8               	btfsc	status,2,c
  9919  001142  D00E               	goto	l12576
  9920                           
  9921                           ; BSR set to: 0
  9922  001144  51D9               	movf	fprintf@arp& (0+255),w,b
  9923  001146  6ED9               	movwf	fsr2l,c
  9924  001148  6ADA               	clrf	fsr2h,c
  9925  00114A  CFDE F0BB          	movff	postinc2,??_fprintf
  9926  00114E  CFDD F0BC          	movff	postdec2,??_fprintf+1
  9927  001152  C0BB  F0D5         	movff	??_fprintf,fprintf@val
  9928  001156  C0BC  F0D6         	movff	??_fprintf+1,fprintf@val+1
  9929  00115A  6BD7               	clrf	(fprintf@val+2)& (0+255),b
  9930  00115C  6BD8               	clrf	(fprintf@val+3)& (0+255),b
  9931  00115E  D00C               	goto	l12578
  9932  001160                     l12576:
  9933                           
  9934                           ; BSR set to: 0
  9935  001160  51D9               	movf	fprintf@arp& (0+255),w,b
  9936  001162  6ED9               	movwf	fsr2l,c
  9937  001164  6ADA               	clrf	fsr2h,c
  9938  001166  CFDE F0D5          	movff	postinc2,fprintf@val
  9939  00116A  CFDD F0D6          	movff	postdec2,fprintf@val+1
  9940  00116E  0E00               	movlw	0
  9941  001170  BFD6               	btfsc	(fprintf@val+1)& (0+255),7,b
  9942  001172  0EFF               	movlw	-1
  9943  001174  6FD7               	movwf	(fprintf@val+2)& (0+255),b
  9944  001176  6FD8               	movwf	(fprintf@val+3)& (0+255),b
  9945  001178                     l12578:
  9946                           
  9947                           ; BSR set to: 0
  9948  001178  0E02               	movlw	2
  9949  00117A                     L1:
  9950  00117A  27D9               	addwf	fprintf@arp& (0+255),f,b
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;tff.c: 1869: };tff.c: 1871: if (c == 'd') {
  9954  00117C  0E64               	movlw	100
  9955  00117E  19DE               	xorwf	fprintf@c& (0+255),w,b
  9956  001180  A4D8               	btfss	status,2,c
  9957  001182  D00E               	goto	l12588
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;tff.c: 1872: if (val >= 0x80000000) {
  9961  001184  0E80               	movlw	128
  9962  001186  5DD8               	subwf	(fprintf@val+3)& (0+255),w,b
  9963  001188  A0D8               	btfss	status,0,c
  9964  00118A  D00A               	goto	l12588
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;tff.c: 1873: val = 0 - val;
  9968  00118C  6DD5               	negf	fprintf@val& (0+255),b
  9969  00118E  1FD6               	comf	(fprintf@val+1)& (0+255),f,b
  9970  001190  B0D8               	btfsc	status,0,c
  9971  001192  2BD6               	incf	(fprintf@val+1)& (0+255),f,b
  9972  001194  1FD7               	comf	(fprintf@val+2)& (0+255),f,b
  9973  001196  B0D8               	btfsc	status,0,c
  9974  001198  2BD7               	incf	(fprintf@val+2)& (0+255),f,b
  9975  00119A  0E00               	movlw	0
  9976  00119C  57D8               	subfwb	(fprintf@val+3)& (0+255),f,b
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;tff.c: 1874: f |= 4;
  9980  00119E  85D3               	bsf	fprintf@f& (0+255),2,b
  9981  0011A0                     l12588:
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;tff.c: 1875: };tff.c: 1876: };tff.c: 1877: i = sizeof(s) - 1; s[i] = 0;
  9985  0011A0  0E00               	movlw	0
  9986  0011A2  6FDD               	movwf	(fprintf@i+1)& (0+255),b
  9987  0011A4  0E0F               	movlw	15
  9988  0011A6  6FDC               	movwf	fprintf@i& (0+255),b
  9989                           
  9990                           ; BSR set to: 0
  9991  0011A8  0E00               	movlw	0
  9992  0011AA  6FCC               	movwf	(fprintf@s+15)& (0+255),b
  9993  0011AC                     l12592:
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;tff.c: 1879: c = (UCHAR)(val % r + '0');
  9997  0011AC  C0D5  F00A         	movff	fprintf@val,___llmod@dividend
  9998  0011B0  C0D6  F00B         	movff	fprintf@val+1,___llmod@dividend+1
  9999  0011B4  C0D7  F00C         	movff	fprintf@val+2,___llmod@dividend+2
 10000  0011B8  C0D8  F00D         	movff	fprintf@val+3,___llmod@dividend+3
 10001  0011BC  51D4               	movf	fprintf@r& (0+255),w,b
 10002  0011BE  6E0E               	movwf	___llmod@divisor^0,c
 10003  0011C0  6A0F               	clrf	(___llmod@divisor+1)^0,c
 10004  0011C2  6A10               	clrf	(___llmod@divisor+2)^0,c
 10005  0011C4  6A11               	clrf	(___llmod@divisor+3)^0,c
 10006  0011C6  ECC3  F026         	call	___llmod	;wreg free
 10007  0011CA  500A               	movf	?___llmod^0,w,c
 10008  0011CC  0F30               	addlw	48
 10009  0011CE  0100               	movlb	0	; () banked
 10010  0011D0  6FDE               	movwf	fprintf@c& (0+255),b
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;tff.c: 1880: if (c > '9') c += 7;
 10014  0011D2  0E39               	movlw	57
 10015  0011D4  65DE               	cpfsgt	fprintf@c& (0+255),b
 10016  0011D6  D002               	goto	l12598
 10017                           
 10018                           ; BSR set to: 0
 10019  0011D8  0E07               	movlw	7
 10020  0011DA  27DE               	addwf	fprintf@c& (0+255),f,b
 10021  0011DC                     l12598:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;tff.c: 1881: s[--i] = c;
 10025  0011DC  07DC               	decf	fprintf@i& (0+255),f,b
 10026  0011DE  A0D8               	btfss	status,0,c
 10027  0011E0  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10028  0011E2  51DC               	movf	fprintf@i& (0+255),w,b
 10029  0011E4  0FBD               	addlw	low fprintf@s
 10030  0011E6  6ED9               	movwf	fsr2l,c
 10031  0011E8  6ADA               	clrf	fsr2h,c
 10032  0011EA  C0DE  FFDF         	movff	fprintf@c,indf2
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;tff.c: 1882: val /= r;
 10036  0011EE  C0D5  F00A         	movff	fprintf@val,___lldiv@dividend
 10037  0011F2  C0D6  F00B         	movff	fprintf@val+1,___lldiv@dividend+1
 10038  0011F6  C0D7  F00C         	movff	fprintf@val+2,___lldiv@dividend+2
 10039  0011FA  C0D8  F00D         	movff	fprintf@val+3,___lldiv@dividend+3
 10040  0011FE  51D4               	movf	fprintf@r& (0+255),w,b
 10041  001200  6E0E               	movwf	___lldiv@divisor^0,c
 10042  001202  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 10043  001204  6A10               	clrf	(___lldiv@divisor+2)^0,c
 10044  001206  6A11               	clrf	(___lldiv@divisor+3)^0,c
 10045  001208  ECF4  F024         	call	___lldiv	;wreg free
 10046  00120C  C00A  F0D5         	movff	?___lldiv,fprintf@val
 10047  001210  C00B  F0D6         	movff	?___lldiv+1,fprintf@val+1
 10048  001214  C00C  F0D7         	movff	?___lldiv+2,fprintf@val+2
 10049  001218  C00D  F0D8         	movff	?___lldiv+3,fprintf@val+3
 10050                           
 10051                           ;tff.c: 1883: } while (i && val);
 10052  00121C  0100               	movlb	0	; () banked
 10053  00121E  51DC               	movf	fprintf@i& (0+255),w,b
 10054  001220  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10055  001222  B4D8               	btfsc	status,2,c
 10056  001224  D006               	goto	u14870
 10057                           
 10058                           ; BSR set to: 0
 10059  001226  51D5               	movf	fprintf@val& (0+255),w,b
 10060  001228  11D6               	iorwf	(fprintf@val+1)& (0+255),w,b
 10061  00122A  11D7               	iorwf	(fprintf@val+2)& (0+255),w,b
 10062  00122C  11D8               	iorwf	(fprintf@val+3)& (0+255),w,b
 10063  00122E  A4D8               	btfss	status,2,c
 10064  001230  D7BD               	goto	l12592
 10065  001232                     u14870:
 10066                           
 10067                           ; BSR set to: 0
 10068                           ;tff.c: 1884: if (i && (f & 4)) s[--i] = '-';
 10069  001232  51DC               	movf	fprintf@i& (0+255),w,b
 10070  001234  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10071  001236  A4D8               	btfss	status,2,c
 10072                           
 10073                           ; BSR set to: 0
 10074  001238  A5D3               	btfss	fprintf@f& (0+255),2,b
 10075  00123A  D009               	goto	l12612
 10076                           
 10077                           ; BSR set to: 0
 10078  00123C  07DC               	decf	fprintf@i& (0+255),f,b
 10079  00123E  A0D8               	btfss	status,0,c
 10080  001240  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10081  001242  51DC               	movf	fprintf@i& (0+255),w,b
 10082  001244  0FBD               	addlw	low fprintf@s
 10083  001246  6ED9               	movwf	fsr2l,c
 10084  001248  6ADA               	clrf	fsr2h,c
 10085  00124A  0E2D               	movlw	45
 10086  00124C  6EDF               	movwf	indf2,c
 10087  00124E                     l12612:
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;tff.c: 1885: w = sizeof(s) - 1 - w;
 10091  00124E  51D1               	movf	fprintf@w& (0+255),w,b
 10092  001250  080F               	sublw	15
 10093  001252  6FD1               	movwf	fprintf@w& (0+255),b
 10094  001254  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10095  001256  A0D8               	btfss	status,0,c
 10096  001258  2AE8               	incf	wreg,f,c
 10097  00125A  0800               	sublw	0
 10098  00125C  6FD2               	movwf	(fprintf@w+1)& (0+255),b
 10099                           
 10100                           ;tff.c: 1886: while (i && i > w) s[--i] = (f & 1) ? '0' : ' ';
 10101  00125E  D013               	goto	l12620
 10102  001260                     l1291:
 10103                           
 10104                           ; BSR set to: 0
 10105  001260  B1D3               	btfsc	fprintf@f& (0+255),0,b
 10106  001262  D004               	goto	l12616
 10107                           
 10108                           ; BSR set to: 0
 10109  001264  0E00               	movlw	0
 10110  001266  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10111  001268  0E20               	movlw	32
 10112  00126A  D003               	goto	L2
 10113  00126C                     l12616:
 10114                           
 10115                           ; BSR set to: 0
 10116  00126C  0E00               	movlw	0
 10117  00126E  6FD0               	movwf	(_fprintf$2226+1)& (0+255),b
 10118  001270  0E30               	movlw	48
 10119  001272                     L2:
 10120  001272  6FCF               	movwf	_fprintf$2226& (0+255),b
 10121                           
 10122                           ; BSR set to: 0
 10123  001274  07DC               	decf	fprintf@i& (0+255),f,b
 10124  001276  A0D8               	btfss	status,0,c
 10125  001278  07DD               	decf	(fprintf@i+1)& (0+255),f,b
 10126  00127A  51DC               	movf	fprintf@i& (0+255),w,b
 10127  00127C  0FBD               	addlw	low fprintf@s
 10128  00127E  6ED9               	movwf	fsr2l,c
 10129  001280  6ADA               	clrf	fsr2h,c
 10130  001282  C0CF  FFDF         	movff	_fprintf$2226,indf2
 10131  001286                     l12620:
 10132                           
 10133                           ; BSR set to: 0
 10134  001286  51DC               	movf	fprintf@i& (0+255),w,b
 10135  001288  11DD               	iorwf	(fprintf@i+1)& (0+255),w,b
 10136  00128A  B4D8               	btfsc	status,2,c
 10137  00128C  D00A               	goto	u14920
 10138                           
 10139                           ; BSR set to: 0
 10140  00128E  51DC               	movf	fprintf@i& (0+255),w,b
 10141  001290  5DD1               	subwf	fprintf@w& (0+255),w,b
 10142  001292  51D2               	movf	(fprintf@w+1)& (0+255),w,b
 10143  001294  0A80               	xorlw	128
 10144  001296  6FBB               	movwf	??_fprintf& (0+255),b
 10145  001298  51DD               	movf	(fprintf@i+1)& (0+255),w,b
 10146  00129A  0A80               	xorlw	128
 10147  00129C  59BB               	subwfb	??_fprintf& (0+255),w,b
 10148  00129E  A0D8               	btfss	status,0,c
 10149  0012A0  D7DF               	goto	l1291
 10150  0012A2                     u14920:
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;tff.c: 1887: cc = fputs(&s[i], fil);
 10154  0012A2  51DC               	movf	fprintf@i& (0+255),w,b
 10155  0012A4  0FBD               	addlw	low fprintf@s
 10156  0012A6  6FBB               	movwf	??_fprintf& (0+255),b
 10157  0012A8  C0BB  F0AB         	movff	??_fprintf,fputs@str
 10158  0012AC  6BAC               	clrf	(fputs@str+1)& (0+255),b
 10159  0012AE  C0B1  F0AD         	movff	fprintf@fil,fputs@fil
 10160  0012B2  C0B2  F0AE         	movff	fprintf@fil+1,fputs@fil+1
 10161  0012B6  EC3A  F028         	call	_fputs	;wreg free
 10162  0012BA  C0AB  F0DA         	movff	?_fputs,fprintf@cc
 10163  0012BE  C0AC  F0DB         	movff	?_fputs+1,fprintf@cc+1
 10164  0012C2                     l12626:
 10165                           
 10166                           ; BSR set to: 0
 10167  0012C2  51DA               	movf	fprintf@cc& (0+255),w,b
 10168  0012C4  27CD               	addwf	fprintf@res& (0+255),f,b
 10169  0012C6  51DB               	movf	(fprintf@cc+1)& (0+255),w,b
 10170  0012C8  23CE               	addwfc	(fprintf@res+1)& (0+255),f,b
 10171  0012CA  D663               	goto	l12482
 10172  0012CC                     __end_of_fprintf:
 10173                           	callstack 0
 10174                           
 10175 ;; *************** function _fputs *****************
 10176 ;; Defined at:
 10177 ;;		line 1796 in file "bibliotecas/tff.c"
 10178 ;; Parameters:    Size  Location     Type
 10179 ;;  str             2   75[BANK0 ] PTR const unsigned char 
 10180 ;;		 -> fprintf@s(16), ?_fprintf(2), lo(13), lt(12), 
 10181 ;;		 -> vel(6), hora(7), 
 10182 ;;  fil             2   77[BANK0 ] PTR struct _FIL
 10183 ;;		 -> fil(28), 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  n               2   79[BANK0 ] int 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  2   75[BANK0 ] int 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : 3F/0
 10192 ;;		On exit  : 3F/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10195 ;;      Params:         0       4       0       0       0       0       0       0       0
 10196 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10197 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10198 ;;      Totals:         1       6       0       0       0       0       0       0       0
 10199 ;;Total ram usage:        7 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:   12
 10202 ;; This function calls:
 10203 ;;		_fputc
 10204 ;; This function is called by:
 10205 ;;		_fprintf
 10206 ;; This function uses a non-reentrant model
 10207 ;;
 10208                           
 10209                           	psect	text66
 10210  005074                     __ptext66:
 10211                           	callstack 0
 10212  005074                     _fputs:
 10213                           	callstack 13
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;tff.c: 1801: int n;;tff.c: 1804: for (n = 0; *str; str++, n++) {
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;incstack = 0
 10220  005074  0E00               	movlw	0
 10221  005076  6FB0               	movwf	(fputs@n+1)& (0+255),b
 10222  005078  0E00               	movlw	0
 10223  00507A  6FAF               	movwf	fputs@n& (0+255),b
 10224  00507C  D01B               	goto	l12056
 10225  00507E                     l12050:
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;tff.c: 1805: if (fputc(*str, fil) == -1) return -1;
 10229  00507E  C0AB  FFD9         	movff	fputs@str,fsr2l
 10230  005082  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10231  005086  50DF               	movf	indf2,w,c
 10232  005088  6E4C               	movwf	??_fputs^0,c
 10233  00508A  504C               	movf	??_fputs^0,w,c
 10234  00508C  6FA4               	movwf	fputc@chr& (0+255),b
 10235  00508E  6BA5               	clrf	(fputc@chr+1)& (0+255),b
 10236  005090  C0AD  F0A6         	movff	fputs@fil,fputc@fil
 10237  005094  C0AE  F0A7         	movff	fputs@fil+1,fputc@fil+1
 10238  005098  EC92  F02A         	call	_fputc	;wreg free
 10239  00509C  29A4               	incf	?_fputc& (0+255),w,b
 10240  00509E  E106               	bnz	l12054
 10241  0050A0  29A5               	incf	(?_fputc+1)& (0+255),w,b
 10242  0050A2  A4D8               	btfss	status,2,c
 10243  0050A4  D003               	goto	l12054
 10244                           
 10245                           ; BSR set to: 0
 10246  0050A6  69AB               	setf	?_fputs& (0+255),b
 10247  0050A8  69AC               	setf	(?_fputs+1)& (0+255),b
 10248  0050AA  0012               	return	
 10249  0050AC                     l12054:
 10250                           
 10251                           ; BSR set to: 0
 10252  0050AC  4BAB               	infsnz	fputs@str& (0+255),f,b
 10253  0050AE  2BAC               	incf	(fputs@str+1)& (0+255),f,b
 10254  0050B0  4BAF               	infsnz	fputs@n& (0+255),f,b
 10255  0050B2  2BB0               	incf	(fputs@n+1)& (0+255),f,b
 10256  0050B4                     l12056:
 10257                           
 10258                           ; BSR set to: 0
 10259  0050B4  C0AB  FFD9         	movff	fputs@str,fsr2l
 10260  0050B8  C0AC  FFDA         	movff	fputs@str+1,fsr2h
 10261  0050BC  50DF               	movf	indf2,w,c
 10262  0050BE  A4D8               	btfss	status,2,c
 10263  0050C0  D7DE               	goto	l12050
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;tff.c: 1806: };tff.c: 1807: return n;
 10267  0050C2  C0AF  F0AB         	movff	fputs@n,?_fputs
 10268  0050C6  C0B0  F0AC         	movff	fputs@n+1,?_fputs+1
 10269                           
 10270                           ; BSR set to: 0
 10271  0050CA  0012               	return		;funcret
 10272  0050CC                     __end_of_fputs:
 10273                           	callstack 0
 10274                           
 10275 ;; *************** function _fputc *****************
 10276 ;; Defined at:
 10277 ;;		line 1769 in file "bibliotecas/tff.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  chr             2   68[BANK0 ] int 
 10280 ;;  fil             2   70[BANK0 ] PTR struct _FIL
 10281 ;;		 -> fil(28), 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;  bw              2   73[BANK0 ] unsigned int 
 10284 ;;  c               1   72[BANK0 ] unsigned char 
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  2   68[BANK0 ] int 
 10287 ;; Registers used:
 10288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10289 ;; Tracked objects:
 10290 ;;		On entry : 3F/0
 10291 ;;		On exit  : 3F/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10294 ;;      Params:         0       4       0       0       0       0       0       0       0
 10295 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10296 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10297 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10298 ;;Total ram usage:        7 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; Hardware stack levels required when called:   11
 10301 ;; This function calls:
 10302 ;;		_f_write
 10303 ;; This function is called by:
 10304 ;;		_fputs
 10305 ;;		_fprintf
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           	psect	text67
 10310  005524                     __ptext67:
 10311                           	callstack 0
 10312  005524                     _fputc:
 10313                           	callstack 13
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;tff.c: 1774: UINT bw;;tff.c: 1775: char c;;tff.c: 1781: if (!fil) {
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;incstack = 0
 10320  005524  51A6               	movf	fputc@fil& (0+255),w,b
 10321  005526  11A7               	iorwf	(fputc@fil+1)& (0+255),w,b
 10322  005528  A4D8               	btfss	status,2,c
 10323  00552A  D005               	goto	l1241
 10324  00552C                     u13270:
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;tff.c: 1783: return chr;
 10328  00552C  C0A4  F0A4         	movff	fputc@chr,?_fputc
 10329  005530  C0A5  F0A5         	movff	fputc@chr+1,?_fputc+1
 10330  005534  0012               	return	
 10331  005536                     l1241:
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;tff.c: 1784: };tff.c: 1785: c = (char)chr;
 10335  005536  C0A4  F0A8         	movff	fputc@chr,fputc@c
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;tff.c: 1786: f_write(fil, &c, 1, &bw);
 10339  00553A  C0A6  F086         	movff	fputc@fil,f_write@fp
 10340  00553E  C0A7  F087         	movff	fputc@fil+1,f_write@fp+1
 10341  005542  0EA8               	movlw	low fputc@c
 10342  005544  6F88               	movwf	f_write@buff& (0+255),b
 10343  005546  0E00               	movlw	0
 10344  005548  6F8A               	movwf	(f_write@btw+1)& (0+255),b
 10345  00554A  0E01               	movlw	1
 10346  00554C  6F89               	movwf	f_write@btw& (0+255),b
 10347  00554E  0EA9               	movlw	low fputc@bw
 10348  005550  6F8B               	movwf	f_write@bw& (0+255),b
 10349  005552  EC09  F000         	call	_f_write	;wreg free
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;tff.c: 1787: return bw ? chr : -1;
 10353  005556  51A9               	movf	fputc@bw& (0+255),w,b
 10354  005558  11AA               	iorwf	(fputc@bw+1)& (0+255),w,b
 10355  00555A  A4D8               	btfss	status,2,c
 10356  00555C  D7E7               	goto	u13270
 10357                           
 10358                           ; BSR set to: 0
 10359  00555E  69A4               	setf	?_fputc& (0+255),b
 10360  005560  69A5               	setf	(?_fputc+1)& (0+255),b
 10361                           
 10362                           ; BSR set to: 0
 10363  005562  0012               	return		;funcret
 10364  005564                     __end_of_fputc:
 10365                           	callstack 0
 10366                           
 10367 ;; *************** function _f_write *****************
 10368 ;; Defined at:
 10369 ;;		line 999 in file "bibliotecas/tff.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 10372 ;;		 -> fil(28), 
 10373 ;;  buff            1   40[BANK0 ] PTR const void 
 10374 ;;		 -> fputc@c(1), 
 10375 ;;  btw             2   41[BANK0 ] unsigned int 
 10376 ;;  bw              1   43[BANK0 ] PTR unsigned int 
 10377 ;;		 -> fputc@bw(2), 
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  sect            4   58[BANK0 ] unsigned long 
 10380 ;;  wcnt            2   66[BANK0 ] unsigned int 
 10381 ;;  clust           2   64[BANK0 ] unsigned short 
 10382 ;;  cc              2   62[BANK0 ] unsigned int 
 10383 ;;  wbuff           1   57[BANK0 ] PTR const unsigned char 
 10384 ;;		 -> fputc@c(1), 
 10385 ;;  res             1   56[BANK0 ] enum E155
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      enum E155
 10388 ;; Registers used:
 10389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 3F/0
 10392 ;;		On exit  : 3F/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10395 ;;      Params:         0       6       0       0       0       0       0       0       0
 10396 ;;      Locals:         0      12       0       0       0       0       0       0       0
 10397 ;;      Temps:          0      12       0       0       0       0       0       0       0
 10398 ;;      Totals:         0      30       0       0       0       0       0       0       0
 10399 ;;Total ram usage:       30 bytes
 10400 ;; Hardware stack levels used:    1
 10401 ;; Hardware stack levels required when called:   10
 10402 ;; This function calls:
 10403 ;;		_clust2sect
 10404 ;;		_create_chain
 10405 ;;		_disk_write
 10406 ;;		_memcpy
 10407 ;;		_move_window
 10408 ;;		_validate
 10409 ;; This function is called by:
 10410 ;;		_fputc
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           	psect	text68
 10415  000012                     __ptext68:
 10416                           	callstack 0
 10417  000012                     _f_write:
 10418                           	callstack 13
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;tff.c: 1006: FRESULT res;;tff.c: 1007: DWORD sect;;tff.c: 1008: UINT wcnt, cc;;tff.c: 1
      +                          009: CLUST clust;;tff.c: 1010: const BYTE *wbuff = buff;
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;incstack = 0
 10425  000012  C088  F099         	movff	f_write@buff,f_write@wbuff
 10426                           
 10427                           ; BSR set to: 0
 10428                           ;tff.c: 1013: *bw = 0;
 10429  000016  518B               	movf	f_write@bw& (0+255),w,b
 10430  000018  6ED9               	movwf	fsr2l,c
 10431  00001A  6ADA               	clrf	fsr2h,c
 10432  00001C  0E00               	movlw	0
 10433  00001E  6EDE               	movwf	postinc2,c
 10434  000020  0E00               	movlw	0
 10435  000022  6EDD               	movwf	postdec2,c
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;tff.c: 1014: res = validate(fp->fs, fp->id);
 10439  000024  EE20 F004          	lfsr	2,4
 10440  000028  5186               	movf	f_write@fp& (0+255),w,b
 10441  00002A  26D9               	addwf	fsr2l,f,c
 10442  00002C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10443  00002E  22DA               	addwfc	fsr2h,f,c
 10444  000030  CFDE F010          	movff	postinc2,validate@fs
 10445  000034  CFDD F011          	movff	postdec2,validate@fs+1
 10446  000038  C086  FFD9         	movff	f_write@fp,fsr2l
 10447  00003C  C087  FFDA         	movff	f_write@fp+1,fsr2h
 10448  000040  CFDE F012          	movff	postinc2,validate@id
 10449  000044  CFDD F013          	movff	postdec2,validate@id+1
 10450  000048  ECC6  F029         	call	_validate	;wreg free
 10451  00004C  0100               	movlb	0	; () banked
 10452  00004E  6F98               	movwf	f_write@res& (0+255),b
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;tff.c: 1015: if (res != FR_OK) return res;
 10456  000050  5198               	movf	f_write@res& (0+255),w,b
 10457  000052  A4D8               	btfss	status,2,c
 10458  000054  0012               	return	
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;tff.c: 1016: if (fp->flag & 0x80) return FR_RW_ERROR;
 10462  000056  EE20 F002          	lfsr	2,2
 10463  00005A  5186               	movf	f_write@fp& (0+255),w,b
 10464  00005C  26D9               	addwf	fsr2l,f,c
 10465  00005E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10466  000060  22DA               	addwfc	fsr2h,f,c
 10467  000062  BEDF               	btfsc	indf2,7,c
 10468  000064  0012               	return	
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;tff.c: 1017: if (!(fp->flag & 0x02)) return FR_DENIED;
 10472  000066  EE20 F002          	lfsr	2,2
 10473  00006A  5186               	movf	f_write@fp& (0+255),w,b
 10474  00006C  26D9               	addwf	fsr2l,f,c
 10475  00006E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10476  000070  22DA               	addwfc	fsr2h,f,c
 10477  000072  A2DF               	btfss	indf2,1,c
 10478  000074  0012               	return	
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;tff.c: 1018: if (fp->fsize + btw < fp->fsize) return FR_OK;
 10482  000076  EE20 F00A          	lfsr	2,10
 10483  00007A  5186               	movf	f_write@fp& (0+255),w,b
 10484  00007C  26D9               	addwf	fsr2l,f,c
 10485  00007E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10486  000080  22DA               	addwfc	fsr2h,f,c
 10487  000082  EE10 F00A          	lfsr	1,10
 10488  000086  5186               	movf	f_write@fp& (0+255),w,b
 10489  000088  26E1               	addwf	fsr1l,f,c
 10490  00008A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10491  00008C  22E2               	addwfc	fsr1h,f,c
 10492  00008E  CFE6 F090          	movff	postinc1,??_f_write+4
 10493  000092  CFE6 F091          	movff	postinc1,??_f_write+5
 10494  000096  CFE6 F092          	movff	postinc1,??_f_write+6
 10495  00009A  CFE6 F093          	movff	postinc1,??_f_write+7
 10496  00009E  5189               	movf	f_write@btw& (0+255),w,b
 10497  0000A0  2590               	addwf	(??_f_write+4)& (0+255),w,b
 10498  0000A2  6F94               	movwf	(??_f_write+8)& (0+255),b
 10499  0000A4  518A               	movf	(f_write@btw+1)& (0+255),w,b
 10500  0000A6  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 10501  0000A8  6F95               	movwf	(??_f_write+9)& (0+255),b
 10502  0000AA  0E00               	movlw	0
 10503  0000AC  2192               	addwfc	(??_f_write+6)& (0+255),w,b
 10504  0000AE  6F96               	movwf	(??_f_write+10)& (0+255),b
 10505  0000B0  0E00               	movlw	0
 10506  0000B2  2193               	addwfc	(??_f_write+7)& (0+255),w,b
 10507  0000B4  6F97               	movwf	(??_f_write+11)& (0+255),b
 10508  0000B6  50DE               	movf	postinc2,w,c
 10509  0000B8  5D94               	subwf	(??_f_write+8)& (0+255),w,b
 10510  0000BA  50DE               	movf	postinc2,w,c
 10511  0000BC  5995               	subwfb	(??_f_write+9)& (0+255),w,b
 10512  0000BE  50DE               	movf	postinc2,w,c
 10513  0000C0  5996               	subwfb	(??_f_write+10)& (0+255),w,b
 10514  0000C2  50DE               	movf	postinc2,w,c
 10515  0000C4  5997               	subwfb	(??_f_write+11)& (0+255),w,b
 10516  0000C6  A0D8               	btfss	status,0,c
 10517  0000C8  0012               	return	
 10518  0000CA  D22D               	goto	l11252
 10519  0000CC                     l11176:
 10520                           
 10521                           ; BSR set to: 0
 10522                           ;tff.c: 1022: if ((fp->fptr % 512U) == 0) {
 10523  0000CC  EE20 F006          	lfsr	2,6
 10524  0000D0  5186               	movf	f_write@fp& (0+255),w,b
 10525  0000D2  26D9               	addwf	fsr2l,f,c
 10526  0000D4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10527  0000D6  22DA               	addwfc	fsr2h,f,c
 10528  0000D8  0EFF               	movlw	255
 10529  0000DA  14DE               	andwf	postinc2,w,c
 10530  0000DC  6F8C               	movwf	??_f_write& (0+255),b
 10531  0000DE  0E01               	movlw	1
 10532  0000E0  14DE               	andwf	postinc2,w,c
 10533  0000E2  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10534  0000E4  0E00               	movlw	0
 10535  0000E6  14DE               	andwf	postinc2,w,c
 10536  0000E8  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10537  0000EA  0E00               	movlw	0
 10538  0000EC  14DE               	andwf	postinc2,w,c
 10539  0000EE  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10540  0000F0  518C               	movf	??_f_write& (0+255),w,b
 10541  0000F2  118D               	iorwf	(??_f_write+1)& (0+255),w,b
 10542  0000F4  118E               	iorwf	(??_f_write+2)& (0+255),w,b
 10543  0000F6  118F               	iorwf	(??_f_write+3)& (0+255),w,b
 10544  0000F8  A4D8               	btfss	status,2,c
 10545  0000FA  D15E               	goto	l11228
 10546                           
 10547                           ; BSR set to: 0
 10548                           ;tff.c: 1023: if (fp->csect >= fp->fs->csize) {
 10549  0000FC  EE20 F004          	lfsr	2,4
 10550  000100  5186               	movf	f_write@fp& (0+255),w,b
 10551  000102  26D9               	addwf	fsr2l,f,c
 10552  000104  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10553  000106  22DA               	addwfc	fsr2h,f,c
 10554  000108  EE10 F01D          	lfsr	1,29
 10555  00010C  50DE               	movf	postinc2,w,c
 10556  00010E  26E1               	addwf	fsr1l,f,c
 10557  000110  50DD               	movf	postdec2,w,c
 10558  000112  22E2               	addwfc	fsr1h,f,c
 10559  000114  EE20 F003          	lfsr	2,3
 10560  000118  5186               	movf	f_write@fp& (0+255),w,b
 10561  00011A  26D9               	addwf	fsr2l,f,c
 10562  00011C  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10563  00011E  22DA               	addwfc	fsr2h,f,c
 10564  000120  50E6               	movf	postinc1,w,c
 10565  000122  5CDE               	subwf	postinc2,w,c
 10566  000124  A0D8               	btfss	status,0,c
 10567  000126  D06B               	goto	l11200
 10568                           
 10569                           ; BSR set to: 0
 10570                           ;tff.c: 1024: if (fp->fptr == 0) {
 10571  000128  EE20 F006          	lfsr	2,6
 10572  00012C  5186               	movf	f_write@fp& (0+255),w,b
 10573  00012E  26D9               	addwf	fsr2l,f,c
 10574  000130  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10575  000132  22DA               	addwfc	fsr2h,f,c
 10576  000134  50DE               	movf	postinc2,w,c
 10577  000136  10DE               	iorwf	postinc2,w,c
 10578  000138  10DE               	iorwf	postinc2,w,c
 10579  00013A  10DE               	iorwf	postinc2,w,c
 10580  00013C  A4D8               	btfss	status,2,c
 10581  00013E  D023               	goto	l11188
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;tff.c: 1025: clust = fp->org_clust;
 10585  000140  EE20 F00E          	lfsr	2,14
 10586  000144  5186               	movf	f_write@fp& (0+255),w,b
 10587  000146  26D9               	addwf	fsr2l,f,c
 10588  000148  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10589  00014A  22DA               	addwfc	fsr2h,f,c
 10590  00014C  CFDE F0A0          	movff	postinc2,f_write@clust
 10591  000150  CFDD F0A1          	movff	postdec2,f_write@clust+1
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;tff.c: 1026: if (clust == 0)
 10595  000154  51A0               	movf	f_write@clust& (0+255),w,b
 10596  000156  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10597  000158  A4D8               	btfss	status,2,c
 10598  00015A  D025               	goto	l11190
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;tff.c: 1027: fp->org_clust = clust = create_chain(0);
 10602  00015C  0E00               	movlw	0
 10603  00015E  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 10604  000160  0E00               	movlw	0
 10605  000162  6F78               	movwf	create_chain@clust& (0+255),b
 10606  000164  ECBB  F016         	call	_create_chain	;wreg free
 10607  000168  C078  F0A0         	movff	?_create_chain,f_write@clust
 10608  00016C  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10609  000170  EE20 F00E          	lfsr	2,14
 10610  000174  5186               	movf	f_write@fp& (0+255),w,b
 10611  000176  26D9               	addwf	fsr2l,f,c
 10612  000178  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10613  00017A  22DA               	addwfc	fsr2h,f,c
 10614  00017C  C0A0  FFDE         	movff	f_write@clust,postinc2
 10615  000180  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10616  000184  D010               	goto	l11190
 10617  000186                     l11188:
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;tff.c: 1029: clust = create_chain(fp->curr_clust);
 10621  000186  EE20 F010          	lfsr	2,16
 10622  00018A  5186               	movf	f_write@fp& (0+255),w,b
 10623  00018C  26D9               	addwf	fsr2l,f,c
 10624  00018E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10625  000190  22DA               	addwfc	fsr2h,f,c
 10626  000192  CFDE F078          	movff	postinc2,create_chain@clust
 10627  000196  CFDD F079          	movff	postdec2,create_chain@clust+1
 10628  00019A  ECBB  F016         	call	_create_chain	;wreg free
 10629  00019E  C078  F0A0         	movff	?_create_chain,f_write@clust
 10630  0001A2  C079  F0A1         	movff	?_create_chain+1,f_write@clust+1
 10631  0001A6                     l11190:
 10632                           
 10633                           ; BSR set to: 0
 10634                           ;tff.c: 1030: };tff.c: 1031: if (clust == 0) break;
 10635  0001A6  51A0               	movf	f_write@clust& (0+255),w,b
 10636  0001A8  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10637  0001AA  B4D8               	btfsc	status,2,c
 10638  0001AC  D1C0               	goto	u12750
 10639                           
 10640                           ; BSR set to: 0
 10641                           ;tff.c: 1032: if (clust == 1 || clust >= fp->fs->max_clust) goto fw_error;
 10642  0001AE  05A0               	decf	f_write@clust& (0+255),w,b
 10643  0001B0  11A1               	iorwf	(f_write@clust+1)& (0+255),w,b
 10644  0001B2  B4D8               	btfsc	status,2,c
 10645  0001B4  D1EF               	goto	l11262
 10646                           
 10647                           ; BSR set to: 0
 10648  0001B6  EE20 F004          	lfsr	2,4
 10649  0001BA  5186               	movf	f_write@fp& (0+255),w,b
 10650  0001BC  26D9               	addwf	fsr2l,f,c
 10651  0001BE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10652  0001C0  22DA               	addwfc	fsr2h,f,c
 10653  0001C2  EE10 F016          	lfsr	1,22
 10654  0001C6  50DE               	movf	postinc2,w,c
 10655  0001C8  26E1               	addwf	fsr1l,f,c
 10656  0001CA  50DD               	movf	postdec2,w,c
 10657  0001CC  22E2               	addwfc	fsr1h,f,c
 10658  0001CE  50E6               	movf	postinc1,w,c
 10659  0001D0  5DA0               	subwf	f_write@clust& (0+255),w,b
 10660  0001D2  50E6               	movf	postinc1,w,c
 10661  0001D4  59A1               	subwfb	(f_write@clust+1)& (0+255),w,b
 10662  0001D6  B0D8               	btfsc	status,0,c
 10663  0001D8  D1DD               	goto	l11262
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;tff.c: 1033: fp->curr_clust = clust;
 10667  0001DA  EE20 F010          	lfsr	2,16
 10668  0001DE  5186               	movf	f_write@fp& (0+255),w,b
 10669  0001E0  26D9               	addwf	fsr2l,f,c
 10670  0001E2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10671  0001E4  22DA               	addwfc	fsr2h,f,c
 10672  0001E6  C0A0  FFDE         	movff	f_write@clust,postinc2
 10673  0001EA  C0A1  FFDD         	movff	f_write@clust+1,postdec2
 10674                           
 10675                           ;tff.c: 1034: fp->csect = 0;
 10676  0001EE  EE20 F003          	lfsr	2,3
 10677  0001F2  5186               	movf	f_write@fp& (0+255),w,b
 10678  0001F4  26D9               	addwf	fsr2l,f,c
 10679  0001F6  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10680  0001F8  22DA               	addwfc	fsr2h,f,c
 10681  0001FA  0E00               	movlw	0
 10682  0001FC  6EDF               	movwf	indf2,c
 10683  0001FE                     l11200:
 10684                           
 10685                           ; BSR set to: 0
 10686                           ;tff.c: 1035: };tff.c: 1036: sect = clust2sect(fp->curr_clust) + fp->csect;
 10687  0001FE  EE20 F010          	lfsr	2,16
 10688  000202  5186               	movf	f_write@fp& (0+255),w,b
 10689  000204  26D9               	addwf	fsr2l,f,c
 10690  000206  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10691  000208  22DA               	addwfc	fsr2h,f,c
 10692  00020A  CFDE F016          	movff	postinc2,clust2sect@clust
 10693  00020E  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10694  000212  EC04  F021         	call	_clust2sect	;wreg free
 10695  000216  0100               	movlb	0	; () banked
 10696  000218  EE20 F003          	lfsr	2,3
 10697  00021C  5186               	movf	f_write@fp& (0+255),w,b
 10698  00021E  26D9               	addwf	fsr2l,f,c
 10699  000220  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10700  000222  22DA               	addwfc	fsr2h,f,c
 10701  000224  50DF               	movf	indf2,w,c
 10702  000226  6F8C               	movwf	??_f_write& (0+255),b
 10703  000228  518C               	movf	??_f_write& (0+255),w,b
 10704  00022A  2416               	addwf	?_clust2sect^0,w,c
 10705  00022C  6F9A               	movwf	f_write@sect& (0+255),b
 10706  00022E  0E00               	movlw	0
 10707  000230  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10708  000232  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10709  000234  0E00               	movlw	0
 10710  000236  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10711  000238  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10712  00023A  0E00               	movlw	0
 10713  00023C  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10714  00023E  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;tff.c: 1037: cc = btw / 512U;
 10718  000240  C089  F08C         	movff	f_write@btw,??_f_write
 10719  000244  C08A  F08D         	movff	f_write@btw+1,??_f_write+1
 10720  000248  0E09               	movlw	9
 10721  00024A  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10722  00024C                     u12665:
 10723  00024C  90D8               	bcf	status,0,c
 10724  00024E  338D               	rrcf	(??_f_write+1)& (0+255),f,b
 10725  000250  338C               	rrcf	??_f_write& (0+255),f,b
 10726  000252  2F8E               	decfsz	(??_f_write+2)& (0+255),f,b
 10727  000254  D7FB               	goto	u12665
 10728  000256  C08C  F09E         	movff	??_f_write,f_write@cc
 10729  00025A  C08D  F09F         	movff	??_f_write+1,f_write@cc+1
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;tff.c: 1038: if (cc) {
 10733  00025E  519E               	movf	f_write@cc& (0+255),w,b
 10734  000260  119F               	iorwf	(f_write@cc+1)& (0+255),w,b
 10735  000262  B4D8               	btfsc	status,2,c
 10736  000264  D06A               	goto	l11218
 10737                           
 10738                           ; BSR set to: 0
 10739                           ;tff.c: 1039: if (fp->csect + cc > fp->fs->csize)
 10740  000266  EE20 F003          	lfsr	2,3
 10741  00026A  5186               	movf	f_write@fp& (0+255),w,b
 10742  00026C  26D9               	addwf	fsr2l,f,c
 10743  00026E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10744  000270  22DA               	addwfc	fsr2h,f,c
 10745  000272  50DF               	movf	indf2,w,c
 10746  000274  6F8C               	movwf	??_f_write& (0+255),b
 10747  000276  518C               	movf	??_f_write& (0+255),w,b
 10748  000278  259E               	addwf	f_write@cc& (0+255),w,b
 10749  00027A  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10750  00027C  0E00               	movlw	0
 10751  00027E  219F               	addwfc	(f_write@cc+1)& (0+255),w,b
 10752  000280  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10753  000282  EE20 F004          	lfsr	2,4
 10754  000286  5186               	movf	f_write@fp& (0+255),w,b
 10755  000288  26D9               	addwf	fsr2l,f,c
 10756  00028A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10757  00028C  22DA               	addwfc	fsr2h,f,c
 10758  00028E  EE10 F01D          	lfsr	1,29
 10759  000292  50DE               	movf	postinc2,w,c
 10760  000294  26E1               	addwf	fsr1l,f,c
 10761  000296  50DD               	movf	postdec2,w,c
 10762  000298  22E2               	addwfc	fsr1h,f,c
 10763  00029A  50E7               	movf	indf1,w,c
 10764  00029C  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10765  00029E  6B90               	clrf	(??_f_write+4)& (0+255),b
 10766  0002A0  518D               	movf	(??_f_write+1)& (0+255),w,b
 10767  0002A2  5D8F               	subwf	(??_f_write+3)& (0+255),w,b
 10768  0002A4  518E               	movf	(??_f_write+2)& (0+255),w,b
 10769  0002A6  5990               	subwfb	(??_f_write+4)& (0+255),w,b
 10770  0002A8  B0D8               	btfsc	status,0,c
 10771  0002AA  D01C               	goto	l11210
 10772                           
 10773                           ; BSR set to: 0
 10774                           ;tff.c: 1040: cc = fp->fs->csize - fp->csect;
 10775  0002AC  EE20 F004          	lfsr	2,4
 10776  0002B0  5186               	movf	f_write@fp& (0+255),w,b
 10777  0002B2  26D9               	addwf	fsr2l,f,c
 10778  0002B4  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10779  0002B6  22DA               	addwfc	fsr2h,f,c
 10780  0002B8  EE10 F01D          	lfsr	1,29
 10781  0002BC  50DE               	movf	postinc2,w,c
 10782  0002BE  26E1               	addwf	fsr1l,f,c
 10783  0002C0  50DD               	movf	postdec2,w,c
 10784  0002C2  22E2               	addwfc	fsr1h,f,c
 10785  0002C4  50E7               	movf	indf1,w,c
 10786  0002C6  6F8C               	movwf	??_f_write& (0+255),b
 10787  0002C8  EE20 F003          	lfsr	2,3
 10788  0002CC  5186               	movf	f_write@fp& (0+255),w,b
 10789  0002CE  26D9               	addwf	fsr2l,f,c
 10790  0002D0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10791  0002D2  22DA               	addwfc	fsr2h,f,c
 10792  0002D4  50DF               	movf	indf2,w,c
 10793  0002D6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10794  0002D8  518D               	movf	(??_f_write+1)& (0+255),w,b
 10795  0002DA  5D8C               	subwf	??_f_write& (0+255),w,b
 10796  0002DC  6F9E               	movwf	f_write@cc& (0+255),b
 10797  0002DE  6B9F               	clrf	(f_write@cc+1)& (0+255),b
 10798  0002E0  A0D8               	btfss	status,0,c
 10799  0002E2  079F               	decf	(f_write@cc+1)& (0+255),f,b
 10800  0002E4                     l11210:
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;tff.c: 1041: if (disk_write(0, wbuff, sect, (BYTE)cc) != RES_OK)
 10804  0002E4  C099  F029         	movff	f_write@wbuff,disk_write@buff
 10805  0002E8  6A2A               	clrf	(disk_write@buff+1)^0,c
 10806  0002EA  C09A  F02B         	movff	f_write@sect,disk_write@sector
 10807  0002EE  C09B  F02C         	movff	f_write@sect+1,disk_write@sector+1
 10808  0002F2  C09C  F02D         	movff	f_write@sect+2,disk_write@sector+2
 10809  0002F6  C09D  F02E         	movff	f_write@sect+3,disk_write@sector+3
 10810  0002FA  C09E  F02F         	movff	f_write@cc,disk_write@count
 10811  0002FE  0E00               	movlw	0
 10812  000300  EC34  F029         	call	_disk_write
 10813  000304  0900               	iorlw	0
 10814  000306  A4D8               	btfss	status,2,c
 10815  000308  D145               	goto	l11262
 10816                           
 10817                           ;tff.c: 1043: fp->csect += (BYTE)cc;
 10818  00030A  0100               	movlb	0	; () banked
 10819  00030C  EE20 F003          	lfsr	2,3
 10820  000310  5186               	movf	f_write@fp& (0+255),w,b
 10821  000312  26D9               	addwf	fsr2l,f,c
 10822  000314  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10823  000316  22DA               	addwfc	fsr2h,f,c
 10824  000318  519E               	movf	f_write@cc& (0+255),w,b
 10825  00031A  26DF               	addwf	indf2,f,c
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;tff.c: 1044: wcnt = 512U * cc;
 10829  00031C  C09E  F08C         	movff	f_write@cc,??_f_write
 10830  000320  C09F  F08D         	movff	f_write@cc+1,??_f_write+1
 10831  000324  0E09               	movlw	9
 10832  000326                     u12705:
 10833  000326  90D8               	bcf	status,0,c
 10834  000328  378C               	rlcf	??_f_write& (0+255),f,b
 10835  00032A  378D               	rlcf	(??_f_write+1)& (0+255),f,b
 10836  00032C  2EE8               	decfsz	wreg,f,c
 10837  00032E  D7FB               	goto	u12705
 10838  000330  C08C  F0A2         	movff	??_f_write,f_write@wcnt
 10839  000334  C08D  F0A3         	movff	??_f_write+1,f_write@wcnt+1
 10840                           
 10841                           ;tff.c: 1045: continue;
 10842  000338  D0DC               	goto	l11244
 10843  00033A                     l11218:
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;tff.c: 1046: };tff.c: 1047: if (fp->fptr >= fp->fsize) {
 10847  00033A  EE20 F00A          	lfsr	2,10
 10848  00033E  5186               	movf	f_write@fp& (0+255),w,b
 10849  000340  26D9               	addwf	fsr2l,f,c
 10850  000342  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10851  000344  22DA               	addwfc	fsr2h,f,c
 10852  000346  EE10 F006          	lfsr	1,6
 10853  00034A  5186               	movf	f_write@fp& (0+255),w,b
 10854  00034C  26E1               	addwf	fsr1l,f,c
 10855  00034E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10856  000350  22E2               	addwfc	fsr1h,f,c
 10857  000352  50DE               	movf	postinc2,w,c
 10858  000354  5CE6               	subwf	postinc1,w,c
 10859  000356  50DE               	movf	postinc2,w,c
 10860  000358  58E6               	subwfb	postinc1,w,c
 10861  00035A  50DE               	movf	postinc2,w,c
 10862  00035C  58E6               	subwfb	postinc1,w,c
 10863  00035E  50DE               	movf	postinc2,w,c
 10864  000360  58E6               	subwfb	postinc1,w,c
 10865  000362  A0D8               	btfss	status,0,c
 10866  000364  D022               	goto	l11226
 10867                           
 10868                           ; BSR set to: 0
 10869                           ;tff.c: 1048: if (!move_window(0)) goto fw_error;
 10870  000366  0E00               	movlw	0
 10871  000368  6E35               	movwf	move_window@sector^0,c
 10872  00036A  0E00               	movlw	0
 10873  00036C  6E36               	movwf	(move_window@sector+1)^0,c
 10874  00036E  0E00               	movlw	0
 10875  000370  6E37               	movwf	(move_window@sector+2)^0,c
 10876  000372  0E00               	movlw	0
 10877  000374  6E38               	movwf	(move_window@sector+3)^0,c
 10878  000376  EC15  F015         	call	_move_window	;wreg free
 10879  00037A  0900               	iorlw	0
 10880  00037C  B4D8               	btfsc	status,2,c
 10881  00037E  D10A               	goto	l11262
 10882                           
 10883                           ;tff.c: 1049: fp->fs->winsect = sect;
 10884  000380  0100               	movlb	0	; () banked
 10885  000382  EE20 F004          	lfsr	2,4
 10886  000386  5186               	movf	f_write@fp& (0+255),w,b
 10887  000388  26D9               	addwf	fsr2l,f,c
 10888  00038A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10889  00038C  22DA               	addwfc	fsr2h,f,c
 10890  00038E  EE10 F004          	lfsr	1,4
 10891  000392  50DE               	movf	postinc2,w,c
 10892  000394  26E1               	addwf	fsr1l,f,c
 10893  000396  50DD               	movf	postdec2,w,c
 10894  000398  22E2               	addwfc	fsr1h,f,c
 10895  00039A  C09A  FFE6         	movff	f_write@sect,postinc1
 10896  00039E  C09B  FFE6         	movff	f_write@sect+1,postinc1
 10897  0003A2  C09C  FFE6         	movff	f_write@sect+2,postinc1
 10898  0003A6  C09D  FFE6         	movff	f_write@sect+3,postinc1
 10899  0003AA                     l11226:
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;tff.c: 1050: };tff.c: 1051: fp->csect++;
 10903  0003AA  EE20 F003          	lfsr	2,3
 10904  0003AE  5186               	movf	f_write@fp& (0+255),w,b
 10905  0003B0  26D9               	addwf	fsr2l,f,c
 10906  0003B2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10907  0003B4  22DA               	addwfc	fsr2h,f,c
 10908  0003B6  2ADF               	incf	indf2,f,c
 10909  0003B8                     l11228:
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;tff.c: 1052: };tff.c: 1053: sect = clust2sect(fp->curr_clust) + fp->csect - 1;
 10913  0003B8  EE20 F010          	lfsr	2,16
 10914  0003BC  5186               	movf	f_write@fp& (0+255),w,b
 10915  0003BE  26D9               	addwf	fsr2l,f,c
 10916  0003C0  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10917  0003C2  22DA               	addwfc	fsr2h,f,c
 10918  0003C4  CFDE F016          	movff	postinc2,clust2sect@clust
 10919  0003C8  CFDD F017          	movff	postdec2,clust2sect@clust+1
 10920  0003CC  EC04  F021         	call	_clust2sect	;wreg free
 10921  0003D0  0100               	movlb	0	; () banked
 10922  0003D2  EE20 F003          	lfsr	2,3
 10923  0003D6  5186               	movf	f_write@fp& (0+255),w,b
 10924  0003D8  26D9               	addwf	fsr2l,f,c
 10925  0003DA  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10926  0003DC  22DA               	addwfc	fsr2h,f,c
 10927  0003DE  50DF               	movf	indf2,w,c
 10928  0003E0  6F8C               	movwf	??_f_write& (0+255),b
 10929  0003E2  518C               	movf	??_f_write& (0+255),w,b
 10930  0003E4  2416               	addwf	?_clust2sect^0,w,c
 10931  0003E6  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10932  0003E8  0E00               	movlw	0
 10933  0003EA  2017               	addwfc	(?_clust2sect+1)^0,w,c
 10934  0003EC  6F8E               	movwf	(??_f_write+2)& (0+255),b
 10935  0003EE  0E00               	movlw	0
 10936  0003F0  2018               	addwfc	(?_clust2sect+2)^0,w,c
 10937  0003F2  6F8F               	movwf	(??_f_write+3)& (0+255),b
 10938  0003F4  0E00               	movlw	0
 10939  0003F6  2019               	addwfc	(?_clust2sect+3)^0,w,c
 10940  0003F8  6F90               	movwf	(??_f_write+4)& (0+255),b
 10941  0003FA  0EFF               	movlw	255
 10942  0003FC  258D               	addwf	(??_f_write+1)& (0+255),w,b
 10943  0003FE  6F9A               	movwf	f_write@sect& (0+255),b
 10944  000400  0EFF               	movlw	255
 10945  000402  218E               	addwfc	(??_f_write+2)& (0+255),w,b
 10946  000404  6F9B               	movwf	(f_write@sect+1)& (0+255),b
 10947  000406  0EFF               	movlw	255
 10948  000408  218F               	addwfc	(??_f_write+3)& (0+255),w,b
 10949  00040A  6F9C               	movwf	(f_write@sect+2)& (0+255),b
 10950  00040C  0EFF               	movlw	255
 10951  00040E  2190               	addwfc	(??_f_write+4)& (0+255),w,b
 10952  000410  6F9D               	movwf	(f_write@sect+3)& (0+255),b
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;tff.c: 1054: if (!move_window(sect)) goto fw_error;
 10956  000412  C09A  F035         	movff	f_write@sect,move_window@sector
 10957  000416  C09B  F036         	movff	f_write@sect+1,move_window@sector+1
 10958  00041A  C09C  F037         	movff	f_write@sect+2,move_window@sector+2
 10959  00041E  C09D  F038         	movff	f_write@sect+3,move_window@sector+3
 10960  000422  EC15  F015         	call	_move_window	;wreg free
 10961  000426  0900               	iorlw	0
 10962  000428  B4D8               	btfsc	status,2,c
 10963  00042A  D0B4               	goto	l11262
 10964                           
 10965                           ;tff.c: 1055: wcnt = 512U - (fp->fptr % 512U);
 10966  00042C  0EFF               	movlw	255
 10967  00042E  0100               	movlb	0	; () banked
 10968  000430  6F8C               	movwf	??_f_write& (0+255),b
 10969  000432  0E01               	movlw	1
 10970  000434  6F8D               	movwf	(??_f_write+1)& (0+255),b
 10971  000436  EE20 F006          	lfsr	2,6
 10972  00043A  5186               	movf	f_write@fp& (0+255),w,b
 10973  00043C  26D9               	addwf	fsr2l,f,c
 10974  00043E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 10975  000440  22DA               	addwfc	fsr2h,f,c
 10976  000442  CFDE F08E          	movff	postinc2,??_f_write+2
 10977  000446  CFDD F08F          	movff	postdec2,??_f_write+3
 10978  00044A  518C               	movf	??_f_write& (0+255),w,b
 10979  00044C  178E               	andwf	(??_f_write+2)& (0+255),f,b
 10980  00044E  518D               	movf	(??_f_write+1)& (0+255),w,b
 10981  000450  178F               	andwf	(??_f_write+3)& (0+255),f,b
 10982  000452  518E               	movf	(??_f_write+2)& (0+255),w,b
 10983  000454  0800               	sublw	0
 10984  000456  6FA2               	movwf	f_write@wcnt& (0+255),b
 10985  000458  518F               	movf	(??_f_write+3)& (0+255),w,b
 10986  00045A  A0D8               	btfss	status,0,c
 10987  00045C  2AE8               	incf	wreg,f,c
 10988  00045E  0802               	sublw	2
 10989  000460  6FA3               	movwf	(f_write@wcnt+1)& (0+255),b
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;tff.c: 1056: if (wcnt > btw) wcnt = btw;
 10993  000462  51A2               	movf	f_write@wcnt& (0+255),w,b
 10994  000464  5D89               	subwf	f_write@btw& (0+255),w,b
 10995  000466  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 10996  000468  598A               	subwfb	(f_write@btw+1)& (0+255),w,b
 10997  00046A  B0D8               	btfsc	status,0,c
 10998  00046C  D004               	goto	l11240
 10999                           
 11000                           ; BSR set to: 0
 11001  00046E  C089  F0A2         	movff	f_write@btw,f_write@wcnt
 11002  000472  C08A  F0A3         	movff	f_write@btw+1,f_write@wcnt+1
 11003  000476                     l11240:
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;tff.c: 1057: memcpy(&fp->fs->win[fp->fptr % 512U], wbuff, wcnt);
 11007  000476  0EFF               	movlw	255
 11008  000478  6F8C               	movwf	??_f_write& (0+255),b
 11009  00047A  0E01               	movlw	1
 11010  00047C  6F8D               	movwf	(??_f_write+1)& (0+255),b
 11011  00047E  EE20 F006          	lfsr	2,6
 11012  000482  5186               	movf	f_write@fp& (0+255),w,b
 11013  000484  26D9               	addwf	fsr2l,f,c
 11014  000486  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11015  000488  22DA               	addwfc	fsr2h,f,c
 11016  00048A  CFDE F08E          	movff	postinc2,??_f_write+2
 11017  00048E  CFDD F08F          	movff	postdec2,??_f_write+3
 11018  000492  518C               	movf	??_f_write& (0+255),w,b
 11019  000494  178E               	andwf	(??_f_write+2)& (0+255),f,b
 11020  000496  518D               	movf	(??_f_write+1)& (0+255),w,b
 11021  000498  178F               	andwf	(??_f_write+3)& (0+255),f,b
 11022  00049A  EE20 F004          	lfsr	2,4
 11023  00049E  5186               	movf	f_write@fp& (0+255),w,b
 11024  0004A0  26D9               	addwf	fsr2l,f,c
 11025  0004A2  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11026  0004A4  22DA               	addwfc	fsr2h,f,c
 11027  0004A6  CFDE F090          	movff	postinc2,??_f_write+4
 11028  0004AA  CFDD F091          	movff	postdec2,??_f_write+5
 11029  0004AE  518E               	movf	(??_f_write+2)& (0+255),w,b
 11030  0004B0  2790               	addwf	(??_f_write+4)& (0+255),f,b
 11031  0004B2  518F               	movf	(??_f_write+3)& (0+255),w,b
 11032  0004B4  2391               	addwfc	(??_f_write+5)& (0+255),f,b
 11033  0004B6  0E20               	movlw	32
 11034  0004B8  2590               	addwf	(??_f_write+4)& (0+255),w,b
 11035  0004BA  6E0A               	movwf	memcpy@d1^0,c
 11036  0004BC  0E00               	movlw	0
 11037  0004BE  2191               	addwfc	(??_f_write+5)& (0+255),w,b
 11038  0004C0  6E0B               	movwf	(memcpy@d1+1)^0,c
 11039  0004C2  C099  F00C         	movff	f_write@wbuff,memcpy@s1
 11040  0004C6  6A0D               	clrf	(memcpy@s1+1)^0,c
 11041  0004C8  C0A2  F00E         	movff	f_write@wcnt,memcpy@n
 11042  0004CC  C0A3  F00F         	movff	f_write@wcnt+1,memcpy@n+1
 11043  0004D0  EC0D  F02A         	call	_memcpy	;wreg free
 11044                           
 11045                           ;tff.c: 1058: fp->fs->winflag = 1;
 11046  0004D4  0100               	movlb	0	; () banked
 11047  0004D6  EE20 F004          	lfsr	2,4
 11048  0004DA  5186               	movf	f_write@fp& (0+255),w,b
 11049  0004DC  26D9               	addwf	fsr2l,f,c
 11050  0004DE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11051  0004E0  22DA               	addwfc	fsr2h,f,c
 11052  0004E2  EE10 F01F          	lfsr	1,31
 11053  0004E6  50DE               	movf	postinc2,w,c
 11054  0004E8  26E1               	addwf	fsr1l,f,c
 11055  0004EA  50DD               	movf	postdec2,w,c
 11056  0004EC  22E2               	addwfc	fsr1h,f,c
 11057  0004EE  0E01               	movlw	1
 11058  0004F0  6EE7               	movwf	indf1,c
 11059  0004F2                     l11244:
 11060                           
 11061                           ; BSR set to: 0
 11062  0004F2  51A2               	movf	f_write@wcnt& (0+255),w,b
 11063  0004F4  2799               	addwf	f_write@wbuff& (0+255),f,b
 11064                           
 11065                           ; BSR set to: 0
 11066  0004F6  EE20 F006          	lfsr	2,6
 11067  0004FA  5186               	movf	f_write@fp& (0+255),w,b
 11068  0004FC  26D9               	addwf	fsr2l,f,c
 11069  0004FE  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11070  000500  22DA               	addwfc	fsr2h,f,c
 11071  000502  51A2               	movf	f_write@wcnt& (0+255),w,b
 11072  000504  26DE               	addwf	postinc2,f,c
 11073  000506  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11074  000508  22DE               	addwfc	postinc2,f,c
 11075  00050A  0E00               	movlw	0
 11076  00050C  22DE               	addwfc	postinc2,f,c
 11077  00050E  22DE               	addwfc	postinc2,f,c
 11078                           
 11079                           ; BSR set to: 0
 11080  000510  518B               	movf	f_write@bw& (0+255),w,b
 11081  000512  6ED9               	movwf	fsr2l,c
 11082  000514  6ADA               	clrf	fsr2h,c
 11083  000516  51A2               	movf	f_write@wcnt& (0+255),w,b
 11084  000518  26DE               	addwf	postinc2,f,c
 11085  00051A  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11086  00051C  22DD               	addwfc	postdec2,f,c
 11087                           
 11088                           ; BSR set to: 0
 11089  00051E  51A2               	movf	f_write@wcnt& (0+255),w,b
 11090  000520  5F89               	subwf	f_write@btw& (0+255),f,b
 11091  000522  51A3               	movf	(f_write@wcnt+1)& (0+255),w,b
 11092  000524  5B8A               	subwfb	(f_write@btw+1)& (0+255),f,b
 11093  000526                     l11252:
 11094                           
 11095                           ; BSR set to: 0
 11096  000526  5189               	movf	f_write@btw& (0+255),w,b
 11097  000528  118A               	iorwf	(f_write@btw+1)& (0+255),w,b
 11098  00052A  A4D8               	btfss	status,2,c
 11099  00052C  D5CF               	goto	l11176
 11100  00052E                     u12750:
 11101                           
 11102                           ; BSR set to: 0
 11103                           ;tff.c: 1059: };tff.c: 1061: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
 11104  00052E  EE20 F006          	lfsr	2,6
 11105  000532  5186               	movf	f_write@fp& (0+255),w,b
 11106  000534  26D9               	addwf	fsr2l,f,c
 11107  000536  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11108  000538  22DA               	addwfc	fsr2h,f,c
 11109  00053A  EE10 F00A          	lfsr	1,10
 11110  00053E  5186               	movf	f_write@fp& (0+255),w,b
 11111  000540  26E1               	addwf	fsr1l,f,c
 11112  000542  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11113  000544  22E2               	addwfc	fsr1h,f,c
 11114  000546  50DE               	movf	postinc2,w,c
 11115  000548  5CE6               	subwf	postinc1,w,c
 11116  00054A  50DE               	movf	postinc2,w,c
 11117  00054C  58E6               	subwfb	postinc1,w,c
 11118  00054E  50DE               	movf	postinc2,w,c
 11119  000550  58E6               	subwfb	postinc1,w,c
 11120  000552  50DE               	movf	postinc2,w,c
 11121  000554  58E6               	subwfb	postinc1,w,c
 11122  000556  B0D8               	btfsc	status,0,c
 11123  000558  D014               	goto	l11258
 11124                           
 11125                           ; BSR set to: 0
 11126  00055A  EE20 F006          	lfsr	2,6
 11127  00055E  5186               	movf	f_write@fp& (0+255),w,b
 11128  000560  26D9               	addwf	fsr2l,f,c
 11129  000562  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11130  000564  22DA               	addwfc	fsr2h,f,c
 11131  000566  EE10 F00A          	lfsr	1,10
 11132  00056A  5186               	movf	f_write@fp& (0+255),w,b
 11133  00056C  26E1               	addwf	fsr1l,f,c
 11134  00056E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11135  000570  22E2               	addwfc	fsr1h,f,c
 11136  000572  CFDE FFE6          	movff	postinc2,postinc1
 11137  000576  CFDE FFE6          	movff	postinc2,postinc1
 11138  00057A  CFDE FFE6          	movff	postinc2,postinc1
 11139  00057E  CFDE FFE6          	movff	postinc2,postinc1
 11140  000582                     l11258:
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;tff.c: 1062: fp->flag |= 0x20;
 11144  000582  EE20 F002          	lfsr	2,2
 11145  000586  5186               	movf	f_write@fp& (0+255),w,b
 11146  000588  26D9               	addwf	fsr2l,f,c
 11147  00058A  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11148  00058C  22DA               	addwfc	fsr2h,f,c
 11149  00058E  0E00               	movlw	0
 11150  000590  8ADB               	bsf	plusw2,5,c
 11151  000592  0012               	return	
 11152  000594                     l11262:
 11153                           
 11154                           ;tff.c: 1066: fp->flag |= 0x80;
 11155  000594  0100               	movlb	0	; () banked
 11156  000596  EE20 F002          	lfsr	2,2
 11157  00059A  5186               	movf	f_write@fp& (0+255),w,b
 11158  00059C  26D9               	addwf	fsr2l,f,c
 11159  00059E  5187               	movf	(f_write@fp+1)& (0+255),w,b
 11160  0005A0  22DA               	addwfc	fsr2h,f,c
 11161  0005A2  0E00               	movlw	0
 11162  0005A4  8EDB               	bsf	plusw2,7,c
 11163                           
 11164                           ; BSR set to: 0
 11165  0005A6  0012               	return		;funcret
 11166  0005A8                     __end_of_f_write:
 11167                           	callstack 0
 11168                           
 11169 ;; *************** function ___llmod *****************
 11170 ;; Defined at:
 11171 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\llmod.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;  dividend        4    9[COMRAM] unsigned long 
 11174 ;;  divisor         4   13[COMRAM] unsigned long 
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;  counter         1   17[COMRAM] unsigned char 
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  4    9[COMRAM] unsigned long 
 11179 ;; Registers used:
 11180 ;;		wreg, status,2, status,0
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11186 ;;      Params:         8       0       0       0       0       0       0       0       0
 11187 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11189 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11190 ;;Total ram usage:        9 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:    2
 11193 ;; This function calls:
 11194 ;;		Nothing
 11195 ;; This function is called by:
 11196 ;;		_fprintf
 11197 ;;		_ultoa
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text69
 11202  004D86                     __ptext69:
 11203                           	callstack 0
 11204  004D86                     ___llmod:
 11205                           	callstack 23
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;incstack = 0
 11209  004D86  500E               	movf	___llmod@divisor^0,w,c
 11210  004D88  100F               	iorwf	(___llmod@divisor+1)^0,w,c
 11211  004D8A  1010               	iorwf	(___llmod@divisor+2)^0,w,c
 11212  004D8C  1011               	iorwf	(___llmod@divisor+3)^0,w,c
 11213  004D8E  B4D8               	btfsc	status,2,c
 11214  004D90  D024               	goto	l2153
 11215  004D92  0E01               	movlw	1
 11216  004D94  6E12               	movwf	___llmod@counter^0,c
 11217  004D96  D006               	goto	l12126
 11218  004D98                     l12124:
 11219  004D98  90D8               	bcf	status,0,c
 11220  004D9A  360E               	rlcf	___llmod@divisor^0,f,c
 11221  004D9C  360F               	rlcf	(___llmod@divisor+1)^0,f,c
 11222  004D9E  3610               	rlcf	(___llmod@divisor+2)^0,f,c
 11223  004DA0  3611               	rlcf	(___llmod@divisor+3)^0,f,c
 11224  004DA2  2A12               	incf	___llmod@counter^0,f,c
 11225  004DA4                     l12126:
 11226  004DA4  AE11               	btfss	(___llmod@divisor+3)^0,7,c
 11227  004DA6  D7F8               	goto	l12124
 11228  004DA8                     u14090:
 11229  004DA8  500E               	movf	___llmod@divisor^0,w,c
 11230  004DAA  5C0A               	subwf	___llmod@dividend^0,w,c
 11231  004DAC  500F               	movf	(___llmod@divisor+1)^0,w,c
 11232  004DAE  580B               	subwfb	(___llmod@dividend+1)^0,w,c
 11233  004DB0  5010               	movf	(___llmod@divisor+2)^0,w,c
 11234  004DB2  580C               	subwfb	(___llmod@dividend+2)^0,w,c
 11235  004DB4  5011               	movf	(___llmod@divisor+3)^0,w,c
 11236  004DB6  580D               	subwfb	(___llmod@dividend+3)^0,w,c
 11237  004DB8  A0D8               	btfss	status,0,c
 11238  004DBA  D008               	goto	l12132
 11239  004DBC  500E               	movf	___llmod@divisor^0,w,c
 11240  004DBE  5E0A               	subwf	___llmod@dividend^0,f,c
 11241  004DC0  500F               	movf	(___llmod@divisor+1)^0,w,c
 11242  004DC2  5A0B               	subwfb	(___llmod@dividend+1)^0,f,c
 11243  004DC4  5010               	movf	(___llmod@divisor+2)^0,w,c
 11244  004DC6  5A0C               	subwfb	(___llmod@dividend+2)^0,f,c
 11245  004DC8  5011               	movf	(___llmod@divisor+3)^0,w,c
 11246  004DCA  5A0D               	subwfb	(___llmod@dividend+3)^0,f,c
 11247  004DCC                     l12132:
 11248  004DCC  90D8               	bcf	status,0,c
 11249  004DCE  3211               	rrcf	(___llmod@divisor+3)^0,f,c
 11250  004DD0  3210               	rrcf	(___llmod@divisor+2)^0,f,c
 11251  004DD2  320F               	rrcf	(___llmod@divisor+1)^0,f,c
 11252  004DD4  320E               	rrcf	___llmod@divisor^0,f,c
 11253  004DD6  2E12               	decfsz	___llmod@counter^0,f,c
 11254  004DD8  D7E7               	goto	u14090
 11255  004DDA                     l2153:
 11256  004DDA  C00A  F00A         	movff	___llmod@dividend,?___llmod
 11257  004DDE  C00B  F00B         	movff	___llmod@dividend+1,?___llmod+1
 11258  004DE2  C00C  F00C         	movff	___llmod@dividend+2,?___llmod+2
 11259  004DE6  C00D  F00D         	movff	___llmod@dividend+3,?___llmod+3
 11260  004DEA  0012               	return		;funcret
 11261  004DEC                     __end_of___llmod:
 11262                           	callstack 0
 11263                           
 11264 ;; *************** function _f_open *****************
 11265 ;; Defined at:
 11266 ;;		line 833 in file "bibliotecas/tff.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;  fp              2   56[BANK0 ] PTR struct _FIL
 11269 ;;		 -> fil(28), 
 11270 ;;  path            2   58[BANK0 ] PTR const unsigned char 
 11271 ;;		 -> STR_16(13), filename(20), 
 11272 ;;  mode            1   60[BANK0 ] unsigned char 
 11273 ;; Auto vars:     Size  Location     Type
 11274 ;;  dw              4   79[BANK0 ] unsigned long 
 11275 ;;  rs              2   77[BANK0 ] unsigned short 
 11276 ;;  dj             14   86[BANK0 ] struct _DIR_E
 11277 ;;  fn             12   65[BANK0 ] unsigned char [12]
 11278 ;;  dir             2   84[BANK0 ] PTR unsigned char 
 11279 ;;		 -> NULL(0), fs(544), 
 11280 ;;  res             1   83[BANK0 ] enum E155
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      enum E3231
 11283 ;; Registers used:
 11284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11285 ;; Tracked objects:
 11286 ;;		On entry : 3F/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11290 ;;      Params:         0       5       0       0       0       0       0       0       0
 11291 ;;      Locals:         0      35       0       0       0       0       0       0       0
 11292 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11293 ;;      Totals:         0      44       0       0       0       0       0       0       0
 11294 ;;Total ram usage:       44 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:   11
 11297 ;; This function calls:
 11298 ;;		_auto_mount
 11299 ;;		_get_fattime
 11300 ;;		_memcpy
 11301 ;;		_memset
 11302 ;;		_move_window
 11303 ;;		_remove_chain
 11304 ;;		_reserve_direntry
 11305 ;;		_trace_path
 11306 ;; This function is called by:
 11307 ;;		_escrita_sdcard
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text70
 11312  0012CC                     __ptext70:
 11313                           	callstack 0
 11314  0012CC                     _f_open:
 11315                           	callstack 15
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;tff.c: 839: FRESULT res;;tff.c: 840: DIR_E dj;;tff.c: 841: BYTE *dir;;tff.c: 842: char 
      +                          fn[8+3+1];;tff.c: 845: fp->fs = (0);
 11319                           
 11320                           ;incstack = 0
 11321  0012CC  EE20 F004          	lfsr	2,4
 11322  0012D0  5198               	movf	f_open@fp& (0+255),w,b
 11323  0012D2  26D9               	addwf	fsr2l,f,c
 11324  0012D4  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11325  0012D6  22DA               	addwfc	fsr2h,f,c
 11326  0012D8  0E00               	movlw	0
 11327  0012DA  6EDE               	movwf	postinc2,c
 11328  0012DC  0E00               	movlw	0
 11329  0012DE  6EDD               	movwf	postdec2,c
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;tff.c: 847: mode &= (0x01|0x02|0x08|0x10|0x04);
 11333  0012E0  0E1F               	movlw	31
 11334  0012E2  179C               	andwf	f_open@mode& (0+255),f,b
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;tff.c: 848: res = auto_mount(&path, (BYTE)(mode & (0x02|0x08|0x10|0x04)));
 11338  0012E4  0E9A               	movlw	low f_open@path
 11339  0012E6  6E3D               	movwf	auto_mount@path^0,c
 11340  0012E8  519C               	movf	f_open@mode& (0+255),w,b
 11341  0012EA  0B1E               	andlw	30
 11342  0012EC  6E3E               	movwf	auto_mount@chk_wp^0,c
 11343  0012EE  ECD4  F002         	call	_auto_mount	;wreg free
 11344  0012F2  0100               	movlb	0	; () banked
 11345  0012F4  6FB3               	movwf	f_open@res& (0+255),b
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;tff.c: 853: if (res != FR_OK) return res;
 11349  0012F6  51B3               	movf	f_open@res& (0+255),w,b
 11350  0012F8  B4D8               	btfsc	status,2,c
 11351  0012FA  D002               	goto	l12252
 11352  0012FC                     u14250:
 11353                           
 11354                           ; BSR set to: 0
 11355  0012FC  51B3               	movf	f_open@res& (0+255),w,b
 11356  0012FE  0012               	return	
 11357  001300                     l12252:
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;tff.c: 854: res = trace_path(&dj, fn, path, &dir);
 11361  001300  0EB6               	movlw	low f_open@dj
 11362  001302  6F7E               	movwf	trace_path@dj& (0+255),b
 11363  001304  0EA1               	movlw	low f_open@fn
 11364  001306  6F7F               	movwf	trace_path@fn& (0+255),b
 11365  001308  C09A  F080         	movff	f_open@path,trace_path@path
 11366  00130C  C09B  F081         	movff	f_open@path+1,trace_path@path+1
 11367  001310  0EB4               	movlw	low f_open@dir
 11368  001312  6F82               	movwf	trace_path@dir& (0+255),b
 11369  001314  EC41  F00F         	call	_trace_path	;wreg free
 11370  001318  0100               	movlb	0	; () banked
 11371  00131A  6FB3               	movwf	f_open@res& (0+255),b
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;tff.c: 858: if (mode & (0x08|0x10|0x04)) {
 11375  00131C  C09C  F09D         	movff	f_open@mode,??_f_open
 11376  001320  0E1C               	movlw	28
 11377  001322  179D               	andwf	??_f_open& (0+255),f,b
 11378  001324  B4D8               	btfsc	status,2,c
 11379  001326  D0E0               	goto	l12314
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;tff.c: 859: CLUST rs;;tff.c: 860: DWORD dw;;tff.c: 861: if (res != FR_OK) {
 11383  001328  51B3               	movf	f_open@res& (0+255),w,b
 11384  00132A  B4D8               	btfsc	status,2,c
 11385  00132C  D035               	goto	l1099
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;tff.c: 862: if (res != FR_NO_FILE) return res;
 11389  00132E  0E02               	movlw	2
 11390  001330  19B3               	xorwf	f_open@res& (0+255),w,b
 11391  001332  A4D8               	btfss	status,2,c
 11392  001334  D7E3               	goto	u14250
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;tff.c: 863: res = reserve_direntry(&dj, &dir);
 11396  001336  0EB6               	movlw	low f_open@dj
 11397  001338  6F86               	movwf	reserve_direntry@dj& (0+255),b
 11398  00133A  0EB4               	movlw	low f_open@dir
 11399  00133C  6F87               	movwf	reserve_direntry@dir& (0+255),b
 11400  00133E  EC81  F010         	call	_reserve_direntry	;wreg free
 11401  001342  0100               	movlb	0	; () banked
 11402  001344  6FB3               	movwf	f_open@res& (0+255),b
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;tff.c: 864: if (res != FR_OK) return res;
 11406  001346  51B3               	movf	f_open@res& (0+255),w,b
 11407  001348  A4D8               	btfss	status,2,c
 11408  00134A  D7D8               	goto	u14250
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;tff.c: 865: memset(dir, 0, 32);
 11412  00134C  C0B4  F00A         	movff	f_open@dir,memset@p1
 11413  001350  C0B5  F00B         	movff	f_open@dir+1,memset@p1+1
 11414  001354  0E00               	movlw	0
 11415  001356  6E0D               	movwf	(memset@c+1)^0,c
 11416  001358  0E00               	movlw	0
 11417  00135A  6E0C               	movwf	memset@c^0,c
 11418  00135C  0E00               	movlw	0
 11419  00135E  6E0F               	movwf	(memset@n+1)^0,c
 11420  001360  0E20               	movlw	32
 11421  001362  6E0E               	movwf	memset@n^0,c
 11422  001364  EC03  F02C         	call	_memset	;wreg free
 11423                           
 11424                           ;tff.c: 866: memcpy(&dir[0], fn, 8+3);
 11425  001368  C0B4  F00A         	movff	f_open@dir,memcpy@d1
 11426  00136C  C0B5  F00B         	movff	f_open@dir+1,memcpy@d1+1
 11427  001370  0EA1               	movlw	low f_open@fn
 11428  001372  6E0C               	movwf	memcpy@s1^0,c
 11429  001374  6A0D               	clrf	(memcpy@s1+1)^0,c
 11430  001376  0E00               	movlw	0
 11431  001378  6E0F               	movwf	(memcpy@n+1)^0,c
 11432  00137A  0E0B               	movlw	11
 11433  00137C  6E0E               	movwf	memcpy@n^0,c
 11434  00137E  EC0D  F02A         	call	_memcpy	;wreg free
 11435                           
 11436                           ;tff.c: 867: dir[12] = fn[11];
 11437  001382  0100               	movlb	0	; () banked
 11438  001384  EE20 F00C          	lfsr	2,12
 11439  001388  51B4               	movf	f_open@dir& (0+255),w,b
 11440  00138A  26D9               	addwf	fsr2l,f,c
 11441  00138C  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11442  00138E  22DA               	addwfc	fsr2h,f,c
 11443  001390  C0AC  FFDF         	movff	f_open@fn+11,indf2
 11444                           
 11445                           ; BSR set to: 0
 11446                           ;tff.c: 868: mode |= 0x08;
 11447  001394  879C               	bsf	f_open@mode& (0+255),3,b
 11448                           
 11449                           ;tff.c: 869: }
 11450  001396  D07B               	goto	l12302
 11451  001398                     l1099:
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;tff.c: 870: else {;tff.c: 871: if (mode & 0x04)
 11455  001398  A59C               	btfss	f_open@mode& (0+255),2,b
 11456  00139A  D002               	goto	l12282
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;tff.c: 872: return FR_EXIST;
 11460  00139C  0E07               	movlw	7
 11461  00139E  0012               	return	
 11462  0013A0                     l12282:
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;tff.c: 873: if (!dir || (dir[11] & (0x01|0x10)))
 11466  0013A0  51B4               	movf	f_open@dir& (0+255),w,b
 11467  0013A2  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11468  0013A4  B4D8               	btfsc	status,2,c
 11469  0013A6  D00C               	goto	u14320
 11470                           
 11471                           ; BSR set to: 0
 11472  0013A8  EE20 F00B          	lfsr	2,11
 11473  0013AC  51B4               	movf	f_open@dir& (0+255),w,b
 11474  0013AE  26D9               	addwf	fsr2l,f,c
 11475  0013B0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11476  0013B2  22DA               	addwfc	fsr2h,f,c
 11477  0013B4  50DF               	movf	indf2,w,c
 11478  0013B6  6F9D               	movwf	??_f_open& (0+255),b
 11479  0013B8  0E11               	movlw	17
 11480  0013BA  179D               	andwf	??_f_open& (0+255),f,b
 11481  0013BC  B4D8               	btfsc	status,2,c
 11482  0013BE  D002               	goto	l1104
 11483  0013C0                     u14320:
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;tff.c: 874: return FR_DENIED;
 11487  0013C0  0E06               	movlw	6
 11488  0013C2  0012               	return	
 11489  0013C4                     l1104:
 11490                           
 11491                           ; BSR set to: 0
 11492                           ;tff.c: 875: if (mode & 0x08) {
 11493  0013C4  A79C               	btfss	f_open@mode& (0+255),3,b
 11494  0013C6  D063               	goto	l12302
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;tff.c: 880: rs = (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11498  0013C8  EE20 F01A          	lfsr	2,26
 11499  0013CC  51B4               	movf	f_open@dir& (0+255),w,b
 11500  0013CE  26D9               	addwf	fsr2l,f,c
 11501  0013D0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11502  0013D2  22DA               	addwfc	fsr2h,f,c
 11503  0013D4  CFDE F0AD          	movff	postinc2,f_open@rs
 11504  0013D8  CFDD F0AE          	movff	postdec2,f_open@rs+1
 11505                           
 11506                           ;tff.c: 882: *(WORD*)(BYTE*)(&dir[26])=(WORD)(0);
 11507  0013DC  EE20 F01A          	lfsr	2,26
 11508  0013E0  51B4               	movf	f_open@dir& (0+255),w,b
 11509  0013E2  26D9               	addwf	fsr2l,f,c
 11510  0013E4  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11511  0013E6  22DA               	addwfc	fsr2h,f,c
 11512  0013E8  0E00               	movlw	0
 11513  0013EA  6EDE               	movwf	postinc2,c
 11514  0013EC  0E00               	movlw	0
 11515  0013EE  6EDD               	movwf	postdec2,c
 11516                           
 11517                           ;tff.c: 883: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(0);
 11518  0013F0  EE20 F01C          	lfsr	2,28
 11519  0013F4  51B4               	movf	f_open@dir& (0+255),w,b
 11520  0013F6  26D9               	addwf	fsr2l,f,c
 11521  0013F8  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11522  0013FA  22DA               	addwfc	fsr2h,f,c
 11523  0013FC  6ADE               	clrf	postinc2,c
 11524  0013FE  6ADE               	clrf	postinc2,c
 11525  001400  6ADE               	clrf	postinc2,c
 11526  001402  6ADD               	clrf	postdec2,c
 11527                           
 11528                           ;tff.c: 884: dj.fs->winflag = 1;
 11529  001404  EE20 F01F          	lfsr	2,31
 11530  001408  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11531  00140A  26D9               	addwf	fsr2l,f,c
 11532  00140C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11533  00140E  22DA               	addwfc	fsr2h,f,c
 11534  001410  0E01               	movlw	1
 11535  001412  6EDF               	movwf	indf2,c
 11536                           
 11537                           ;tff.c: 885: dw = dj.fs->winsect;
 11538  001414  EE20 F004          	lfsr	2,4
 11539  001418  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11540  00141A  26D9               	addwf	fsr2l,f,c
 11541  00141C  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11542  00141E  22DA               	addwfc	fsr2h,f,c
 11543  001420  CFDE F0AF          	movff	postinc2,f_open@dw
 11544  001424  CFDE F0B0          	movff	postinc2,f_open@dw+1
 11545  001428  CFDE F0B1          	movff	postinc2,f_open@dw+2
 11546  00142C  CFDE F0B2          	movff	postinc2,f_open@dw+3
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;tff.c: 886: if (!remove_chain(rs) || !move_window(dw))
 11550  001430  C0AD  F078         	movff	f_open@rs,remove_chain@clust
 11551  001434  C0AE  F079         	movff	f_open@rs+1,remove_chain@clust+1
 11552  001438  ECB1  F022         	call	_remove_chain	;wreg free
 11553  00143C  0900               	iorlw	0
 11554  00143E  B4D8               	btfsc	status,2,c
 11555  001440  D00D               	goto	u14350
 11556  001442  C0AF  F035         	movff	f_open@dw,move_window@sector
 11557  001446  C0B0  F036         	movff	f_open@dw+1,move_window@sector+1
 11558  00144A  C0B1  F037         	movff	f_open@dw+2,move_window@sector+2
 11559  00144E  C0B2  F038         	movff	f_open@dw+3,move_window@sector+3
 11560  001452  EC15  F015         	call	_move_window	;wreg free
 11561  001456  0900               	iorlw	0
 11562  001458  A4D8               	btfss	status,2,c
 11563  00145A  D002               	goto	l12300
 11564  00145C                     u14350:
 11565                           
 11566                           ;tff.c: 887: return FR_RW_ERROR;
 11567  00145C  0E08               	movlw	8
 11568  00145E  0012               	return	
 11569  001460                     l12300:
 11570                           
 11571                           ;tff.c: 888: dj.fs->last_clust = rs - 1;
 11572  001460  0EFF               	movlw	255
 11573  001462  0100               	movlb	0	; () banked
 11574  001464  6F9D               	movwf	??_f_open& (0+255),b
 11575  001466  0EFF               	movlw	255
 11576  001468  6F9E               	movwf	(??_f_open+1)& (0+255),b
 11577  00146A  C0AD  F09F         	movff	f_open@rs,??_f_open+2
 11578  00146E  C0AE  F0A0         	movff	f_open@rs+1,??_f_open+3
 11579  001472  519D               	movf	??_f_open& (0+255),w,b
 11580  001474  279F               	addwf	(??_f_open+2)& (0+255),f,b
 11581  001476  519E               	movf	(??_f_open+1)& (0+255),w,b
 11582  001478  23A0               	addwfc	(??_f_open+3)& (0+255),f,b
 11583  00147A  EE20 F018          	lfsr	2,24
 11584  00147E  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11585  001480  26D9               	addwf	fsr2l,f,c
 11586  001482  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11587  001484  22DA               	addwfc	fsr2h,f,c
 11588  001486  C09F  FFDE         	movff	??_f_open+2,postinc2
 11589  00148A  C0A0  FFDD         	movff	??_f_open+3,postdec2
 11590  00148E                     l12302:
 11591                           
 11592                           ; BSR set to: 0
 11593                           ;tff.c: 889: };tff.c: 890: };tff.c: 891: if (mode & 0x08) {
 11594  00148E  A79C               	btfss	f_open@mode& (0+255),3,b
 11595  001490  D046               	goto	l12334
 11596                           
 11597                           ; BSR set to: 0
 11598                           ;tff.c: 892: dir[11] = 0;
 11599  001492  EE20 F00B          	lfsr	2,11
 11600  001496  51B4               	movf	f_open@dir& (0+255),w,b
 11601  001498  26D9               	addwf	fsr2l,f,c
 11602  00149A  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11603  00149C  22DA               	addwfc	fsr2h,f,c
 11604  00149E  0E00               	movlw	0
 11605  0014A0  6EDF               	movwf	indf2,c
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;tff.c: 893: dw = get_fattime();
 11609  0014A2  EC58  F01A         	call	_get_fattime	;wreg free
 11610  0014A6  C00E  F0AF         	movff	?_get_fattime,f_open@dw
 11611  0014AA  C00F  F0B0         	movff	?_get_fattime+1,f_open@dw+1
 11612  0014AE  C010  F0B1         	movff	?_get_fattime+2,f_open@dw+2
 11613  0014B2  C011  F0B2         	movff	?_get_fattime+3,f_open@dw+3
 11614                           
 11615                           ; BSR set to: 1
 11616                           ;tff.c: 894: *(DWORD*)(BYTE*)(&dir[14])=(DWORD)(dw);
 11617  0014B6  0100               	movlb	0	; () banked
 11618  0014B8  EE20 F00E          	lfsr	2,14
 11619  0014BC  51B4               	movf	f_open@dir& (0+255),w,b
 11620  0014BE  26D9               	addwf	fsr2l,f,c
 11621  0014C0  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11622  0014C2  22DA               	addwfc	fsr2h,f,c
 11623  0014C4  C0AF  FFDE         	movff	f_open@dw,postinc2
 11624  0014C8  C0B0  FFDE         	movff	f_open@dw+1,postinc2
 11625  0014CC  C0B1  FFDE         	movff	f_open@dw+2,postinc2
 11626  0014D0  C0B2  FFDE         	movff	f_open@dw+3,postinc2
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;tff.c: 895: dj.fs->winflag = 1;
 11630  0014D4  EE20 F01F          	lfsr	2,31
 11631  0014D8  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11632  0014DA  26D9               	addwf	fsr2l,f,c
 11633  0014DC  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11634  0014DE  22DA               	addwfc	fsr2h,f,c
 11635  0014E0  0E01               	movlw	1
 11636  0014E2  6EDF               	movwf	indf2,c
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;tff.c: 896: mode |= 0x20;
 11640  0014E4  8B9C               	bsf	f_open@mode& (0+255),5,b
 11641  0014E6  D01B               	goto	l12334
 11642  0014E8                     l12314:
 11643                           
 11644                           ; BSR set to: 0
 11645                           ;tff.c: 900: else {;tff.c: 902: if (res != FR_OK) return res;
 11646  0014E8  51B3               	movf	f_open@res& (0+255),w,b
 11647  0014EA  A4D8               	btfss	status,2,c
 11648  0014EC  D707               	goto	u14250
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;tff.c: 903: if (!dir || (dir[11] & 0x10))
 11652  0014EE  51B4               	movf	f_open@dir& (0+255),w,b
 11653  0014F0  11B5               	iorwf	(f_open@dir+1)& (0+255),w,b
 11654  0014F2  B4D8               	btfsc	status,2,c
 11655  0014F4  D008               	goto	u14390
 11656                           
 11657                           ; BSR set to: 0
 11658  0014F6  EE20 F00B          	lfsr	2,11
 11659  0014FA  51B4               	movf	f_open@dir& (0+255),w,b
 11660  0014FC  26D9               	addwf	fsr2l,f,c
 11661  0014FE  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11662  001500  22DA               	addwfc	fsr2h,f,c
 11663  001502  A8DF               	btfss	indf2,4,c
 11664  001504  D002               	goto	l1114
 11665  001506                     u14390:
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;tff.c: 904: return FR_NO_FILE;
 11669  001506  0E02               	movlw	2
 11670  001508  0012               	return	
 11671  00150A                     l1114:
 11672                           
 11673                           ; BSR set to: 0
 11674                           ;tff.c: 906: if ((mode & 0x02) && (dir[11] & 0x01))
 11675  00150A  A39C               	btfss	f_open@mode& (0+255),1,b
 11676  00150C  D008               	goto	l12334
 11677                           
 11678                           ; BSR set to: 0
 11679  00150E  EE20 F00B          	lfsr	2,11
 11680  001512  51B4               	movf	f_open@dir& (0+255),w,b
 11681  001514  26D9               	addwf	fsr2l,f,c
 11682  001516  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11683  001518  22DA               	addwfc	fsr2h,f,c
 11684  00151A  B0DF               	btfsc	indf2,0,c
 11685  00151C  D751               	goto	u14320
 11686  00151E                     l12334:
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;tff.c: 908: };tff.c: 909: fp->dir_sect = dj.fs->winsect;
 11690  00151E  EE20 F004          	lfsr	2,4
 11691  001522  51BA               	movf	(f_open@dj+4)& (0+255),w,b
 11692  001524  26D9               	addwf	fsr2l,f,c
 11693  001526  51BB               	movf	(f_open@dj+5)& (0+255),w,b
 11694  001528  22DA               	addwfc	fsr2h,f,c
 11695  00152A  EE10 F016          	lfsr	1,22
 11696  00152E  5198               	movf	f_open@fp& (0+255),w,b
 11697  001530  26E1               	addwf	fsr1l,f,c
 11698  001532  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11699  001534  22E2               	addwfc	fsr1h,f,c
 11700  001536  CFDE FFE6          	movff	postinc2,postinc1
 11701  00153A  CFDE FFE6          	movff	postinc2,postinc1
 11702  00153E  CFDE FFE6          	movff	postinc2,postinc1
 11703  001542  CFDE FFE6          	movff	postinc2,postinc1
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;tff.c: 910: fp->dir_ptr = dir;
 11707  001546  EE20 F01A          	lfsr	2,26
 11708  00154A  5198               	movf	f_open@fp& (0+255),w,b
 11709  00154C  26D9               	addwf	fsr2l,f,c
 11710  00154E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11711  001550  22DA               	addwfc	fsr2h,f,c
 11712  001552  C0B4  FFDE         	movff	f_open@dir,postinc2
 11713  001556  C0B5  FFDD         	movff	f_open@dir+1,postdec2
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;tff.c: 912: fp->flag = mode;
 11717  00155A  EE20 F002          	lfsr	2,2
 11718  00155E  5198               	movf	f_open@fp& (0+255),w,b
 11719  001560  26D9               	addwf	fsr2l,f,c
 11720  001562  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11721  001564  22DA               	addwfc	fsr2h,f,c
 11722  001566  C09C  FFDF         	movff	f_open@mode,indf2
 11723                           
 11724                           ;tff.c: 913: fp->org_clust =;tff.c: 917: (WORD)(*(WORD*)(BYTE*)(&dir[26]));
 11725  00156A  EE20 F01A          	lfsr	2,26
 11726  00156E  51B4               	movf	f_open@dir& (0+255),w,b
 11727  001570  26D9               	addwf	fsr2l,f,c
 11728  001572  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11729  001574  22DA               	addwfc	fsr2h,f,c
 11730  001576  EE10 F00E          	lfsr	1,14
 11731  00157A  5198               	movf	f_open@fp& (0+255),w,b
 11732  00157C  26E1               	addwf	fsr1l,f,c
 11733  00157E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11734  001580  22E2               	addwfc	fsr1h,f,c
 11735  001582  CFDE FFE6          	movff	postinc2,postinc1
 11736  001586  CFDD FFE5          	movff	postdec2,postdec1
 11737                           
 11738                           ;tff.c: 918: fp->fsize = (DWORD)(*(DWORD*)(BYTE*)(&dir[28]));
 11739  00158A  EE20 F01C          	lfsr	2,28
 11740  00158E  51B4               	movf	f_open@dir& (0+255),w,b
 11741  001590  26D9               	addwf	fsr2l,f,c
 11742  001592  51B5               	movf	(f_open@dir+1)& (0+255),w,b
 11743  001594  22DA               	addwfc	fsr2h,f,c
 11744  001596  EE10 F00A          	lfsr	1,10
 11745  00159A  5198               	movf	f_open@fp& (0+255),w,b
 11746  00159C  26E1               	addwf	fsr1l,f,c
 11747  00159E  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11748  0015A0  22E2               	addwfc	fsr1h,f,c
 11749  0015A2  CFDE FFE6          	movff	postinc2,postinc1
 11750  0015A6  CFDE FFE6          	movff	postinc2,postinc1
 11751  0015AA  CFDE FFE6          	movff	postinc2,postinc1
 11752  0015AE  CFDE FFE6          	movff	postinc2,postinc1
 11753                           
 11754                           ; BSR set to: 0
 11755                           ;tff.c: 919: fp->fptr = 0; fp->csect = 255;
 11756  0015B2  EE20 F006          	lfsr	2,6
 11757  0015B6  5198               	movf	f_open@fp& (0+255),w,b
 11758  0015B8  26D9               	addwf	fsr2l,f,c
 11759  0015BA  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11760  0015BC  22DA               	addwfc	fsr2h,f,c
 11761  0015BE  6ADE               	clrf	postinc2,c
 11762  0015C0  6ADE               	clrf	postinc2,c
 11763  0015C2  6ADE               	clrf	postinc2,c
 11764  0015C4  6ADD               	clrf	postdec2,c
 11765                           
 11766                           ; BSR set to: 0
 11767  0015C6  EE20 F003          	lfsr	2,3
 11768  0015CA  5198               	movf	f_open@fp& (0+255),w,b
 11769  0015CC  26D9               	addwf	fsr2l,f,c
 11770  0015CE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11771  0015D0  22DA               	addwfc	fsr2h,f,c
 11772  0015D2  0EFF               	movlw	255
 11773  0015D4  6EDF               	movwf	indf2,c
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;tff.c: 920: fp->fs = dj.fs; fp->id = dj.fs->id;
 11777  0015D6  EE20 F004          	lfsr	2,4
 11778  0015DA  5198               	movf	f_open@fp& (0+255),w,b
 11779  0015DC  26D9               	addwf	fsr2l,f,c
 11780  0015DE  5199               	movf	(f_open@fp+1)& (0+255),w,b
 11781  0015E0  22DA               	addwfc	fsr2h,f,c
 11782  0015E2  C0BA  FFDE         	movff	f_open@dj+4,postinc2
 11783  0015E6  C0BB  FFDD         	movff	f_open@dj+5,postdec2
 11784                           
 11785                           ; BSR set to: 0
 11786  0015EA  C0BA  FFD9         	movff	f_open@dj+4,fsr2l
 11787  0015EE  C0BB  FFDA         	movff	f_open@dj+5,fsr2h
 11788  0015F2  C098  FFE1         	movff	f_open@fp,fsr1l
 11789  0015F6  C099  FFE2         	movff	f_open@fp+1,fsr1h
 11790  0015FA  CFDE FFE6          	movff	postinc2,postinc1
 11791  0015FE  CFDD FFE5          	movff	postdec2,postdec1
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;tff.c: 922: return FR_OK;
 11795  001602  0E00               	movlw	0
 11796  001604  0012               	return		;funcret
 11797  001606                     __end_of_f_open:
 11798                           	callstack 0
 11799                           
 11800 ;; *************** function _trace_path *****************
 11801 ;; Defined at:
 11802 ;;		line 502 in file "bibliotecas/tff.c"
 11803 ;; Parameters:    Size  Location     Type
 11804 ;;  dj              1   30[BANK0 ] PTR struct _DIR_E
 11805 ;;		 -> f_open@dj(14), 
 11806 ;;  fn              1   31[BANK0 ] PTR unsigned char 
 11807 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 11808 ;;  path            2   32[BANK0 ] PTR const unsigned char 
 11809 ;;		 -> STR_16(13), filename(20), 
 11810 ;;  dir             1   34[BANK0 ] PTR PTR unsigned char 
 11811 ;;		 -> f_opendir@dir(2), f_open@dir(2), 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  dptr            2   48[BANK0 ] PTR unsigned char 
 11814 ;;		 -> fs.win(512), NULL(0), fs(544), 
 11815 ;;  clust           2   45[BANK0 ] unsigned short 
 11816 ;;  fs              2   43[BANK0 ] PTR struct _FATFS
 11817 ;;		 -> NULL(0), fs(544), 
 11818 ;;  ds              1   47[BANK0 ] unsigned char 
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      enum E155
 11821 ;; Registers used:
 11822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11823 ;; Tracked objects:
 11824 ;;		On entry : 3F/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11828 ;;      Params:         0       5       0       0       0       0       0       0       0
 11829 ;;      Locals:         0      11       0       0       0       0       0       0       0
 11830 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11831 ;;      Totals:         0      20       0       0       0       0       0       0       0
 11832 ;;Total ram usage:       20 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:   10
 11835 ;; This function calls:
 11836 ;;		_clust2sect
 11837 ;;		_make_dirfile
 11838 ;;		_memcmp
 11839 ;;		_move_window
 11840 ;;		_next_dir_entry
 11841 ;; This function is called by:
 11842 ;;		_f_open
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           	psect	text71
 11847  001E82                     __ptext71:
 11848                           	callstack 0
 11849  001E82                     _trace_path:
 11850                           	callstack 15
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;tff.c: 512: FATFS *fs = FatFs;
 11854                           
 11855                           ;incstack = 0
 11856  001E82  C04D  F08B         	movff	_FatFs,trace_path@fs
 11857  001E86  C04E  F08C         	movff	_FatFs+1,trace_path@fs+1
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;tff.c: 515: dj->fs = fs;
 11861  001E8A  517E               	movf	trace_path@dj& (0+255),w,b
 11862  001E8C  6ED9               	movwf	fsr2l,c
 11863  001E8E  6ADA               	clrf	fsr2h,c
 11864  001E90  0E04               	movlw	4
 11865  001E92  26D9               	addwf	fsr2l,f,c
 11866  001E94  C08B  FFDE         	movff	trace_path@fs,postinc2
 11867  001E98  C08C  FFDD         	movff	trace_path@fs+1,postdec2
 11868                           
 11869                           ; BSR set to: 0
 11870                           ;tff.c: 516: clust = fs->dirbase;
 11871  001E9C  EE20 F00C          	lfsr	2,12
 11872  001EA0  518B               	movf	trace_path@fs& (0+255),w,b
 11873  001EA2  26D9               	addwf	fsr2l,f,c
 11874  001EA4  518C               	movf	(trace_path@fs+1)& (0+255),w,b
 11875  001EA6  22DA               	addwfc	fsr2h,f,c
 11876  001EA8  CFDE F08D          	movff	postinc2,trace_path@clust
 11877  001EAC  CFDD F08E          	movff	postdec2,trace_path@clust+1
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;tff.c: 523: {;tff.c: 524: dj->clust = dj->sclust = 0;
 11881  001EB0  517E               	movf	trace_path@dj& (0+255),w,b
 11882  001EB2  6ED9               	movwf	fsr2l,c
 11883  001EB4  6ADA               	clrf	fsr2h,c
 11884  001EB6  0E06               	movlw	6
 11885  001EB8  26D9               	addwf	fsr2l,f,c
 11886  001EBA  0E00               	movlw	0
 11887  001EBC  6EDE               	movwf	postinc2,c
 11888  001EBE  0E00               	movlw	0
 11889  001EC0  6EDD               	movwf	postdec2,c
 11890  001EC2  517E               	movf	trace_path@dj& (0+255),w,b
 11891  001EC4  6EE1               	movwf	fsr1l,c
 11892  001EC6  6AE2               	clrf	fsr1h,c
 11893  001EC8  0E08               	movlw	8
 11894  001ECA  26E1               	addwf	fsr1l,f,c
 11895  001ECC  CFDE FFE6          	movff	postinc2,postinc1
 11896  001ED0  CFDD FFE5          	movff	postdec2,postdec1
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;tff.c: 525: dj->sect = clust;
 11900  001ED4  518D               	movf	trace_path@clust& (0+255),w,b
 11901  001ED6  6F83               	movwf	??_trace_path& (0+255),b
 11902  001ED8  518E               	movf	(trace_path@clust+1)& (0+255),w,b
 11903  001EDA  6F84               	movwf	(??_trace_path+1)& (0+255),b
 11904  001EDC  6B85               	clrf	(??_trace_path+2)& (0+255),b
 11905  001EDE  6B86               	clrf	(??_trace_path+3)& (0+255),b
 11906  001EE0  517E               	movf	trace_path@dj& (0+255),w,b
 11907  001EE2  6ED9               	movwf	fsr2l,c
 11908  001EE4  6ADA               	clrf	fsr2h,c
 11909  001EE6  0E0A               	movlw	10
 11910  001EE8  26D9               	addwf	fsr2l,f,c
 11911  001EEA  C083  FFDE         	movff	??_trace_path,postinc2
 11912  001EEE  C084  FFDE         	movff	??_trace_path+1,postinc2
 11913  001EF2  C085  FFDE         	movff	??_trace_path+2,postinc2
 11914  001EF6  C086  FFDE         	movff	??_trace_path+3,postinc2
 11915                           
 11916                           ; BSR set to: 0
 11917                           ;tff.c: 526: };tff.c: 527: dj->index = 0;
 11918  001EFA  517E               	movf	trace_path@dj& (0+255),w,b
 11919  001EFC  6ED9               	movwf	fsr2l,c
 11920  001EFE  6ADA               	clrf	fsr2h,c
 11921  001F00  0E02               	movlw	2
 11922  001F02  26D9               	addwf	fsr2l,f,c
 11923  001F04  0E00               	movlw	0
 11924  001F06  6EDE               	movwf	postinc2,c
 11925  001F08  0E00               	movlw	0
 11926  001F0A  6EDD               	movwf	postdec2,c
 11927                           
 11928                           ; BSR set to: 0
 11929                           ;tff.c: 529: if (*path == '\0') {
 11930  001F0C  C080  FFF6         	movff	trace_path@path,tblptrl
 11931  001F10  C081  FFF7         	movff	trace_path@path+1,tblptrh
 11932  001F14  6AF8               	clrf	tblptru,c
 11933  001F16  0E07               	movlw	(high __ramtop+-1)
 11934  001F18  64F7               	cpfsgt	tblptrh,c
 11935  001F1A  D003               	bra	u13497
 11936  001F1C  0008               	tblrd		*
 11937  001F1E  50F5               	movf	tablat,w,c
 11938  001F20  D005               	bra	u13490
 11939  001F22                     u13497:
 11940  001F22  CFF6 FFE1          	movff	tblptrl,fsr1l
 11941  001F26  CFF7 FFE2          	movff	tblptrh,fsr1h
 11942  001F2A  50E7               	movf	indf1,w,c
 11943  001F2C                     u13490:
 11944  001F2C  0900               	iorlw	0
 11945  001F2E  A4D8               	btfss	status,2,c
 11946  001F30  D00A               	goto	l11764
 11947                           
 11948                           ;tff.c: 530: *dir = (0); return FR_OK;
 11949  001F32  0100               	movlb	0	; () banked
 11950  001F34  5182               	movf	trace_path@dir& (0+255),w,b
 11951  001F36  6ED9               	movwf	fsr2l,c
 11952  001F38  6ADA               	clrf	fsr2h,c
 11953  001F3A  0E00               	movlw	0
 11954  001F3C  6EDE               	movwf	postinc2,c
 11955  001F3E  0E00               	movlw	0
 11956  001F40  6EDD               	movwf	postdec2,c
 11957  001F42                     l11760:
 11958                           
 11959                           ; BSR set to: 0
 11960  001F42  0E00               	movlw	0
 11961  001F44  0012               	return	
 11962  001F46                     l11764:
 11963                           
 11964                           ;tff.c: 534: ds = make_dirfile(&path, fn);
 11965  001F46  0E80               	movlw	low trace_path@path
 11966  001F48  6E12               	movwf	make_dirfile@path^0,c
 11967  001F4A  C07F  F013         	movff	trace_path@fn,make_dirfile@dirname
 11968  001F4E  ECAB  F019         	call	_make_dirfile	;wreg free
 11969  001F52  0100               	movlb	0	; () banked
 11970  001F54  6F8F               	movwf	trace_path@ds& (0+255),b
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;tff.c: 535: if (ds == 1) return FR_INVALID_NAME;
 11974  001F56  058F               	decf	trace_path@ds& (0+255),w,b
 11975  001F58  A4D8               	btfss	status,2,c
 11976  001F5A  D002               	goto	l11772
 11977                           
 11978                           ; BSR set to: 0
 11979  001F5C  0E04               	movlw	4
 11980  001F5E  0012               	return	
 11981  001F60                     l11772:
 11982                           
 11983                           ;tff.c: 537: if (!move_window(dj->sect)) return FR_RW_ERROR;
 11984  001F60  0100               	movlb	0	; () banked
 11985  001F62  517E               	movf	trace_path@dj& (0+255),w,b
 11986  001F64  6ED9               	movwf	fsr2l,c
 11987  001F66  6ADA               	clrf	fsr2h,c
 11988  001F68  0E0A               	movlw	10
 11989  001F6A  26D9               	addwf	fsr2l,f,c
 11990  001F6C  CFDE F035          	movff	postinc2,move_window@sector
 11991  001F70  CFDE F036          	movff	postinc2,move_window@sector+1
 11992  001F74  CFDE F037          	movff	postinc2,move_window@sector+2
 11993  001F78  CFDE F038          	movff	postinc2,move_window@sector+3
 11994  001F7C  EC15  F015         	call	_move_window	;wreg free
 11995  001F80  0900               	iorlw	0
 11996  001F82  A4D8               	btfss	status,2,c
 11997  001F84  D002               	goto	l11778
 11998  001F86  0E08               	movlw	8
 11999  001F88  0012               	return	
 12000  001F8A                     l11778:
 12001                           
 12002                           ;tff.c: 538: dptr = &fs->win[(dj->index & 15) * 32];
 12003  001F8A  0100               	movlb	0	; () banked
 12004  001F8C  517E               	movf	trace_path@dj& (0+255),w,b
 12005  001F8E  6ED9               	movwf	fsr2l,c
 12006  001F90  6ADA               	clrf	fsr2h,c
 12007  001F92  0E02               	movlw	2
 12008  001F94  26D9               	addwf	fsr2l,f,c
 12009  001F96  CFDE F083          	movff	postinc2,??_trace_path
 12010  001F9A  CFDD F084          	movff	postdec2,??_trace_path+1
 12011  001F9E  0E0F               	movlw	15
 12012  001FA0  1783               	andwf	??_trace_path& (0+255),f,b
 12013  001FA2  0E00               	movlw	0
 12014  001FA4  1784               	andwf	(??_trace_path+1)& (0+255),f,b
 12015  001FA6  0E05               	movlw	5
 12016  001FA8                     u13535:
 12017  001FA8  90D8               	bcf	status,0,c
 12018  001FAA  3783               	rlcf	??_trace_path& (0+255),f,b
 12019  001FAC  3784               	rlcf	(??_trace_path+1)& (0+255),f,b
 12020  001FAE  2EE8               	decfsz	wreg,f,c
 12021  001FB0  D7FB               	goto	u13535
 12022  001FB2  C08B  F085         	movff	trace_path@fs,??_trace_path+2
 12023  001FB6  C08C  F086         	movff	trace_path@fs+1,??_trace_path+3
 12024  001FBA  5183               	movf	??_trace_path& (0+255),w,b
 12025  001FBC  2785               	addwf	(??_trace_path+2)& (0+255),f,b
 12026  001FBE  5184               	movf	(??_trace_path+1)& (0+255),w,b
 12027  001FC0  2386               	addwfc	(??_trace_path+3)& (0+255),f,b
 12028  001FC2  0E20               	movlw	32
 12029  001FC4  2585               	addwf	(??_trace_path+2)& (0+255),w,b
 12030  001FC6  6F90               	movwf	trace_path@dptr& (0+255),b
 12031  001FC8  0E00               	movlw	0
 12032  001FCA  2186               	addwfc	(??_trace_path+3)& (0+255),w,b
 12033  001FCC  6F91               	movwf	(trace_path@dptr+1)& (0+255),b
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;tff.c: 539: if (dptr[0] == 0)
 12037  001FCE  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12038  001FD2  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12039  001FD6  50DF               	movf	indf2,w,c
 12040  001FD8  A4D8               	btfss	status,2,c
 12041  001FDA  D00D               	goto	l11790
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;tff.c: 540: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12045  001FDC  518F               	movf	trace_path@ds& (0+255),w,b
 12046  001FDE  B4D8               	btfsc	status,2,c
 12047  001FE0  D004               	goto	l11786
 12048                           
 12049                           ; BSR set to: 0
 12050  001FE2  0E00               	movlw	0
 12051  001FE4  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12052  001FE6  0E03               	movlw	3
 12053  001FE8  D003               	goto	L3
 12054  001FEA                     l11786:
 12055                           
 12056                           ; BSR set to: 0
 12057  001FEA  0E00               	movlw	0
 12058  001FEC  6F88               	movwf	(_trace_path$1780+1)& (0+255),b
 12059  001FEE  0E02               	movlw	2
 12060  001FF0                     L3:
 12061  001FF0  6F87               	movwf	_trace_path$1780& (0+255),b
 12062                           
 12063                           ; BSR set to: 0
 12064  001FF2  5187               	movf	_trace_path$1780& (0+255),w,b
 12065  001FF4  0012               	return	
 12066  001FF6                     l11790:
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;tff.c: 541: if (dptr[0] != 0xE5;tff.c: 542: && !(dptr[11] & 0x08);tff.c: 543: && !memcm
      +                          p(&dptr[0], fn, 8+3) ) break;
 12070  001FF6  C090  FFD9         	movff	trace_path@dptr,fsr2l
 12071  001FFA  C091  FFDA         	movff	trace_path@dptr+1,fsr2h
 12072  001FFE  0EE5               	movlw	229
 12073  002000  18DE               	xorwf	postinc2,w,c
 12074  002002  B4D8               	btfsc	status,2,c
 12075  002004  D019               	goto	l11798
 12076                           
 12077                           ; BSR set to: 0
 12078  002006  EE20 F00B          	lfsr	2,11
 12079  00200A  5190               	movf	trace_path@dptr& (0+255),w,b
 12080  00200C  26D9               	addwf	fsr2l,f,c
 12081  00200E  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12082  002010  22DA               	addwfc	fsr2h,f,c
 12083  002012  B6DF               	btfsc	indf2,3,c
 12084  002014  D011               	goto	l11798
 12085                           
 12086                           ; BSR set to: 0
 12087  002016  C090  F00A         	movff	trace_path@dptr,memcmp@s1
 12088  00201A  C091  F00B         	movff	trace_path@dptr+1,memcmp@s1+1
 12089  00201E  C07F  F00C         	movff	trace_path@fn,memcmp@s2
 12090  002022  6A0D               	clrf	(memcmp@s2+1)^0,c
 12091  002024  0E00               	movlw	0
 12092  002026  6E0F               	movwf	(memcmp@n+1)^0,c
 12093  002028  0E0B               	movlw	11
 12094  00202A  6E0E               	movwf	memcmp@n^0,c
 12095  00202C  EC9A  F023         	call	_memcmp	;wreg free
 12096  002030  500A               	movf	?_memcmp^0,w,c
 12097  002032  100B               	iorwf	(?_memcmp+1)^0,w,c
 12098  002034  B4D8               	btfsc	status,2,c
 12099  002036  D015               	goto	l11808
 12100  002038                     l11798:
 12101                           
 12102                           ;tff.c: 544: if (!next_dir_entry(dj))
 12103  002038  C07E  F04C         	movff	trace_path@dj,next_dir_entry@dj
 12104  00203C  EC47  F018         	call	_next_dir_entry	;wreg free
 12105  002040  0900               	iorlw	0
 12106  002042  A4D8               	btfss	status,2,c
 12107  002044  D78D               	goto	l11772
 12108                           
 12109                           ;tff.c: 545: return !ds ? FR_NO_FILE : FR_NO_PATH;
 12110  002046  0100               	movlb	0	; () banked
 12111  002048  518F               	movf	trace_path@ds& (0+255),w,b
 12112  00204A  B4D8               	btfsc	status,2,c
 12113  00204C  D004               	goto	l11804
 12114                           
 12115                           ; BSR set to: 0
 12116  00204E  0E00               	movlw	0
 12117  002050  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12118  002052  0E03               	movlw	3
 12119  002054  D003               	goto	L4
 12120  002056                     l11804:
 12121                           
 12122                           ; BSR set to: 0
 12123  002056  0E00               	movlw	0
 12124  002058  6F8A               	movwf	(_trace_path$1782+1)& (0+255),b
 12125  00205A  0E02               	movlw	2
 12126  00205C                     L4:
 12127  00205C  6F89               	movwf	_trace_path$1782& (0+255),b
 12128                           
 12129                           ; BSR set to: 0
 12130  00205E  5189               	movf	_trace_path$1782& (0+255),w,b
 12131  002060  0012               	return	
 12132  002062                     l11808:
 12133                           
 12134                           ;tff.c: 547: if (!ds) { *dir = dptr; return FR_OK; }
 12135  002062  0100               	movlb	0	; () banked
 12136  002064  518F               	movf	trace_path@ds& (0+255),w,b
 12137  002066  A4D8               	btfss	status,2,c
 12138  002068  D008               	goto	l11816
 12139                           
 12140                           ; BSR set to: 0
 12141  00206A  5182               	movf	trace_path@dir& (0+255),w,b
 12142  00206C  6ED9               	movwf	fsr2l,c
 12143  00206E  6ADA               	clrf	fsr2h,c
 12144  002070  C090  FFDE         	movff	trace_path@dptr,postinc2
 12145  002074  C091  FFDD         	movff	trace_path@dptr+1,postdec2
 12146  002078  D764               	goto	l11760
 12147  00207A                     l11816:
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;tff.c: 548: if (!(dptr[11] & 0x10)) return FR_NO_PATH;
 12151  00207A  EE20 F00B          	lfsr	2,11
 12152  00207E  5190               	movf	trace_path@dptr& (0+255),w,b
 12153  002080  26D9               	addwf	fsr2l,f,c
 12154  002082  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12155  002084  22DA               	addwfc	fsr2h,f,c
 12156  002086  B8DF               	btfsc	indf2,4,c
 12157  002088  D002               	goto	l11822
 12158                           
 12159                           ; BSR set to: 0
 12160  00208A  0E03               	movlw	3
 12161  00208C  0012               	return	
 12162  00208E                     l11822:
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;tff.c: 549: clust =;tff.c: 553: (WORD)(*(WORD*)(BYTE*)(&dptr[26]));
 12166  00208E  EE20 F01A          	lfsr	2,26
 12167  002092  5190               	movf	trace_path@dptr& (0+255),w,b
 12168  002094  26D9               	addwf	fsr2l,f,c
 12169  002096  5191               	movf	(trace_path@dptr+1)& (0+255),w,b
 12170  002098  22DA               	addwfc	fsr2h,f,c
 12171  00209A  CFDE F08D          	movff	postinc2,trace_path@clust
 12172  00209E  CFDD F08E          	movff	postdec2,trace_path@clust+1
 12173                           
 12174                           ; BSR set to: 0
 12175                           ;tff.c: 554: dj->clust = dj->sclust = clust;
 12176  0020A2  517E               	movf	trace_path@dj& (0+255),w,b
 12177  0020A4  6ED9               	movwf	fsr2l,c
 12178  0020A6  6ADA               	clrf	fsr2h,c
 12179  0020A8  0E06               	movlw	6
 12180  0020AA  26D9               	addwf	fsr2l,f,c
 12181  0020AC  C08D  FFDE         	movff	trace_path@clust,postinc2
 12182  0020B0  C08E  FFDD         	movff	trace_path@clust+1,postdec2
 12183  0020B4  517E               	movf	trace_path@dj& (0+255),w,b
 12184  0020B6  6EE1               	movwf	fsr1l,c
 12185  0020B8  6AE2               	clrf	fsr1h,c
 12186  0020BA  0E08               	movlw	8
 12187  0020BC  26E1               	addwf	fsr1l,f,c
 12188  0020BE  CFDE FFE6          	movff	postinc2,postinc1
 12189  0020C2  CFDD FFE5          	movff	postdec2,postdec1
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;tff.c: 555: dj->sect = clust2sect(clust);
 12193  0020C6  C08D  F016         	movff	trace_path@clust,clust2sect@clust
 12194  0020CA  C08E  F017         	movff	trace_path@clust+1,clust2sect@clust+1
 12195  0020CE  EC04  F021         	call	_clust2sect	;wreg free
 12196  0020D2  0100               	movlb	0	; () banked
 12197  0020D4  517E               	movf	trace_path@dj& (0+255),w,b
 12198  0020D6  6ED9               	movwf	fsr2l,c
 12199  0020D8  6ADA               	clrf	fsr2h,c
 12200  0020DA  0E0A               	movlw	10
 12201  0020DC  26D9               	addwf	fsr2l,f,c
 12202  0020DE  C016  FFDE         	movff	?_clust2sect,postinc2
 12203  0020E2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12204  0020E6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12205  0020EA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;tff.c: 556: dj->index = 2;
 12209  0020EE  517E               	movf	trace_path@dj& (0+255),w,b
 12210  0020F0  6ED9               	movwf	fsr2l,c
 12211  0020F2  6ADA               	clrf	fsr2h,c
 12212  0020F4  0E02               	movlw	2
 12213  0020F6  26D9               	addwf	fsr2l,f,c
 12214  0020F8  0E02               	movlw	2
 12215  0020FA  6EDE               	movwf	postinc2,c
 12216  0020FC  0E00               	movlw	0
 12217  0020FE  6EDD               	movwf	postdec2,c
 12218                           
 12219                           ;tff.c: 557: }
 12220  002100  D722               	goto	l11764
 12221  002102                     __end_of_trace_path:
 12222                           	callstack 0
 12223                           
 12224 ;; *************** function _make_dirfile *****************
 12225 ;; Defined at:
 12226 ;;		line 439 in file "bibliotecas/tff.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;  path            1   17[COMRAM] PTR PTR const unsigned c
 12229 ;;		 -> trace_path@path(2), 
 12230 ;;  dirname         1   18[COMRAM] PTR unsigned char 
 12231 ;;		 -> f_opendir@fn(12), f_open@fn(12), 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;  c               1   27[COMRAM] unsigned char 
 12234 ;;  n               1   26[COMRAM] unsigned char 
 12235 ;;  a               1   25[COMRAM] unsigned char 
 12236 ;;  t               1   24[COMRAM] unsigned char 
 12237 ;;  b               1   23[COMRAM] unsigned char 
 12238 ;; Return value:  Size  Location     Type
 12239 ;;                  1    wreg      unsigned char 
 12240 ;; Registers used:
 12241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12242 ;; Tracked objects:
 12243 ;;		On entry : 0/0
 12244 ;;		On exit  : 0/0
 12245 ;;		Unchanged: 0/0
 12246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12247 ;;      Params:         2       0       0       0       0       0       0       0       0
 12248 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12249 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12250 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12251 ;;Total ram usage:       11 bytes
 12252 ;; Hardware stack levels used:    1
 12253 ;; Hardware stack levels required when called:    3
 12254 ;; This function calls:
 12255 ;;		_memset
 12256 ;; This function is called by:
 12257 ;;		_trace_path
 12258 ;; This function uses a non-reentrant model
 12259 ;;
 12260                           
 12261                           	psect	text72
 12262  003356                     __ptext72:
 12263                           	callstack 0
 12264  003356                     _make_dirfile:
 12265                           	callstack 21
 12266                           
 12267                           ;tff.c: 444: BYTE n, t, c, a, b;;tff.c: 447: memset(dirname, ' ', 8+3);
 12268                           
 12269                           ;incstack = 0
 12270  003356  C013  F00A         	movff	make_dirfile@dirname,memset@p1
 12271  00335A  6A0B               	clrf	(memset@p1+1)^0,c
 12272  00335C  0E00               	movlw	0
 12273  00335E  6E0D               	movwf	(memset@c+1)^0,c
 12274  003360  0E20               	movlw	32
 12275  003362  6E0C               	movwf	memset@c^0,c
 12276  003364  0E00               	movlw	0
 12277  003366  6E0F               	movwf	(memset@n+1)^0,c
 12278  003368  0E0B               	movlw	11
 12279  00336A  6E0E               	movwf	memset@n^0,c
 12280  00336C  EC03  F02C         	call	_memset	;wreg free
 12281                           
 12282                           ;tff.c: 448: a = 0; b = 0x18;
 12283  003370  0E00               	movlw	0
 12284  003372  6E1A               	movwf	make_dirfile@a^0,c
 12285  003374  0E18               	movlw	24
 12286  003376  6E18               	movwf	make_dirfile@b^0,c
 12287                           
 12288                           ;tff.c: 449: n = 0; t = 8;
 12289  003378  0E00               	movlw	0
 12290  00337A  6E1B               	movwf	make_dirfile@n^0,c
 12291  00337C  0E08               	movlw	8
 12292  00337E  6E19               	movwf	make_dirfile@t^0,c
 12293  003380                     l11394:
 12294                           
 12295                           ;tff.c: 451: c = *(*path)++;
 12296  003380  5012               	movf	make_dirfile@path^0,w,c
 12297  003382  6ED9               	movwf	fsr2l,c
 12298  003384  6ADA               	clrf	fsr2h,c
 12299  003386  CFDF F014          	movff	indf2,??_make_dirfile
 12300  00338A  0E01               	movlw	1
 12301  00338C  26DE               	addwf	postinc2,f,c
 12302  00338E  CFDF F015          	movff	indf2,??_make_dirfile+1
 12303  003392  0E00               	movlw	0
 12304  003394  22DD               	addwfc	postdec2,f,c
 12305  003396  C014  FFF6         	movff	??_make_dirfile,tblptrl
 12306  00339A  C015  FFF7         	movff	??_make_dirfile+1,tblptrh
 12307  00339E  6AF8               	clrf	tblptru,c
 12308  0033A0  0E07               	movlw	(high __ramtop+-1)
 12309  0033A2  64F7               	cpfsgt	tblptrh,c
 12310  0033A4  D003               	bra	u12947
 12311  0033A6  0008               	tblrd		*
 12312  0033A8  50F5               	movf	tablat,w,c
 12313  0033AA  D005               	bra	u12940
 12314  0033AC                     u12947:
 12315  0033AC  CFF6 FFE1          	movff	tblptrl,fsr1l
 12316  0033B0  CFF7 FFE2          	movff	tblptrh,fsr1h
 12317  0033B4  50E7               	movf	indf1,w,c
 12318  0033B6                     u12940:
 12319  0033B6  6E1C               	movwf	make_dirfile@c^0,c
 12320                           
 12321                           ;tff.c: 452: if (c == '\0' || c == '/') {
 12322  0033B8  501C               	movf	make_dirfile@c^0,w,c
 12323  0033BA  B4D8               	btfsc	status,2,c
 12324  0033BC  D004               	goto	u12960
 12325  0033BE  0E2F               	movlw	47
 12326  0033C0  181C               	xorwf	make_dirfile@c^0,w,c
 12327  0033C2  A4D8               	btfss	status,2,c
 12328  0033C4  D012               	goto	l11414
 12329  0033C6                     u12960:
 12330                           
 12331                           ;tff.c: 453: if (n == 0) break;
 12332  0033C6  501B               	movf	make_dirfile@n^0,w,c
 12333  0033C8  B4D8               	btfsc	status,2,c
 12334  0033CA  D070               	goto	l11502
 12335  0033CC  501A               	movf	make_dirfile@a^0,w,c
 12336  0033CE  1418               	andwf	make_dirfile@b^0,w,c
 12337  0033D0  6E14               	movwf	??_make_dirfile^0,c
 12338  0033D2  5014               	movf	??_make_dirfile^0,w,c
 12339  0033D4  6E16               	movwf	_make_dirfile$1733^0,c
 12340  0033D6  6A17               	clrf	(_make_dirfile$1733+1)^0,c
 12341  0033D8  5013               	movf	make_dirfile@dirname^0,w,c
 12342  0033DA  6ED9               	movwf	fsr2l,c
 12343  0033DC  6ADA               	clrf	fsr2h,c
 12344  0033DE  0E0B               	movlw	11
 12345  0033E0  26D9               	addwf	fsr2l,f,c
 12346  0033E2  C016  FFDF         	movff	_make_dirfile$1733,indf2
 12347                           
 12348                           ;tff.c: 455: return c;
 12349  0033E6  501C               	movf	make_dirfile@c^0,w,c
 12350  0033E8  0012               	return	
 12351  0033EA                     l11414:
 12352                           
 12353                           ;tff.c: 456: };tff.c: 457: if (c <= ' ' || c == 0x7F) break;
 12354  0033EA  0E20               	movlw	32
 12355  0033EC  641C               	cpfsgt	make_dirfile@c^0,c
 12356  0033EE  D05E               	goto	l11502
 12357  0033F0  0E7F               	movlw	127
 12358  0033F2  181C               	xorwf	make_dirfile@c^0,w,c
 12359  0033F4  B4D8               	btfsc	status,2,c
 12360  0033F6  D05A               	goto	l11502
 12361                           
 12362                           ;tff.c: 458: if (c == '.') {
 12363  0033F8  0E2E               	movlw	46
 12364  0033FA  181C               	xorwf	make_dirfile@c^0,w,c
 12365  0033FC  A4D8               	btfss	status,2,c
 12366  0033FE  D00C               	goto	l11444
 12367                           
 12368                           ;tff.c: 459: if (!(a & 1) && n >= 1 && n <= 8) {
 12369  003400  B01A               	btfsc	make_dirfile@a^0,0,c
 12370  003402  D054               	goto	l11502
 12371  003404  501B               	movf	make_dirfile@n^0,w,c
 12372  003406  B4D8               	btfsc	status,2,c
 12373  003408  D051               	goto	l11502
 12374  00340A  0E09               	movlw	9
 12375  00340C  601B               	cpfslt	make_dirfile@n^0,c
 12376  00340E  D04E               	goto	l11502
 12377                           
 12378                           ;tff.c: 460: n = 8; t = 11; continue;
 12379  003410  0E08               	movlw	8
 12380  003412  6E1B               	movwf	make_dirfile@n^0,c
 12381  003414  0E0B               	movlw	11
 12382  003416  D7B3               	goto	L5
 12383  003418                     l11444:
 12384                           
 12385                           ;tff.c: 470: };tff.c: 471: if (c == '"') break;
 12386  003418  0E22               	movlw	34
 12387  00341A  181C               	xorwf	make_dirfile@c^0,w,c
 12388  00341C  B4D8               	btfsc	status,2,c
 12389  00341E  D046               	goto	l11502
 12390                           
 12391                           ;tff.c: 472: if (c <= ')') goto md_l1;
 12392  003420  0E2A               	movlw	42
 12393  003422  601C               	cpfslt	make_dirfile@c^0,c
 12394  003424  D001               	goto	l11452
 12395  003426  D035               	goto	l987
 12396  003428                     l11452:
 12397                           
 12398                           ;tff.c: 473: if (c <= ',') break;
 12399  003428  0E2D               	movlw	45
 12400  00342A  601C               	cpfslt	make_dirfile@c^0,c
 12401  00342C  D001               	goto	l11456
 12402  00342E  D03E               	goto	l11502
 12403  003430                     l11456:
 12404                           
 12405                           ;tff.c: 474: if (c <= '9') goto md_l1;
 12406  003430  0E3A               	movlw	58
 12407  003432  601C               	cpfslt	make_dirfile@c^0,c
 12408  003434  D001               	goto	l11460
 12409  003436  D02D               	goto	l987
 12410  003438                     l11460:
 12411                           
 12412                           ;tff.c: 475: if (c <= '?') break;
 12413  003438  0E40               	movlw	64
 12414  00343A  601C               	cpfslt	make_dirfile@c^0,c
 12415  00343C  D001               	goto	l990
 12416  00343E  D036               	goto	l11502
 12417  003440                     l990:
 12418                           
 12419                           ;tff.c: 476: if (!(a & 1)) {
 12420  003440  B01A               	btfsc	make_dirfile@a^0,0,c
 12421  003442  D027               	goto	l987
 12422                           
 12423                           ;tff.c: 477: if (c == '|') break;
 12424  003444  0E7C               	movlw	124
 12425  003446  181C               	xorwf	make_dirfile@c^0,w,c
 12426  003448  B4D8               	btfsc	status,2,c
 12427  00344A  D030               	goto	l11502
 12428                           
 12429                           ;tff.c: 478: if (c >= '[' && c <= ']') break;
 12430  00344C  0E5A               	movlw	90
 12431  00344E  641C               	cpfsgt	make_dirfile@c^0,c
 12432  003450  D004               	goto	l11474
 12433  003452  0E5E               	movlw	94
 12434  003454  601C               	cpfslt	make_dirfile@c^0,c
 12435  003456  D001               	goto	l11474
 12436  003458  D029               	goto	l11502
 12437  00345A                     l11474:
 12438  00345A  0E40               	movlw	64
 12439  00345C  641C               	cpfsgt	make_dirfile@c^0,c
 12440  00345E  D00A               	goto	l11484
 12441  003460  0E5B               	movlw	91
 12442  003462  601C               	cpfslt	make_dirfile@c^0,c
 12443  003464  D007               	goto	l11484
 12444                           
 12445                           ;tff.c: 480: (t == 8) ? (b &= 0xF7) : (b &= 0xEF);
 12446  003466  0E08               	movlw	8
 12447  003468  1819               	xorwf	make_dirfile@t^0,w,c
 12448  00346A  A4D8               	btfss	status,2,c
 12449  00346C  D002               	goto	l11482
 12450  00346E  9618               	bcf	make_dirfile@b^0,3,c
 12451  003470  D001               	goto	l11484
 12452  003472                     l11482:
 12453  003472  9818               	bcf	make_dirfile@b^0,4,c
 12454  003474                     l11484:
 12455                           
 12456                           ;tff.c: 481: if (c >= 'a' && c <= 'z') {
 12457  003474  0E60               	movlw	96
 12458  003476  641C               	cpfsgt	make_dirfile@c^0,c
 12459  003478  D00C               	goto	l987
 12460  00347A  0E7B               	movlw	123
 12461  00347C  601C               	cpfslt	make_dirfile@c^0,c
 12462  00347E  D009               	goto	l987
 12463                           
 12464                           ;tff.c: 483: if (1) (t == 8) ? (a |= 0x08) : (a |= 0x10);
 12465  003480  0E20               	movlw	32
 12466  003482  5E1C               	subwf	make_dirfile@c^0,f,c
 12467  003484  0E08               	movlw	8
 12468  003486  1819               	xorwf	make_dirfile@t^0,w,c
 12469  003488  A4D8               	btfss	status,2,c
 12470  00348A  D002               	goto	l11492
 12471  00348C  861A               	bsf	make_dirfile@a^0,3,c
 12472  00348E  D001               	goto	l987
 12473  003490                     l11492:
 12474  003490  881A               	bsf	make_dirfile@a^0,4,c
 12475  003492                     l987:
 12476                           
 12477                           ;tff.c: 487: a &= 0xFE;
 12478  003492  901A               	bcf	make_dirfile@a^0,0,c
 12479                           
 12480                           ;tff.c: 489: if (n >= t) break;
 12481  003494  5019               	movf	make_dirfile@t^0,w,c
 12482  003496  5C1B               	subwf	make_dirfile@n^0,w,c
 12483  003498  B0D8               	btfsc	status,0,c
 12484  00349A  D008               	goto	l11502
 12485                           
 12486                           ;tff.c: 490: dirname[n++] = c;
 12487  00349C  5013               	movf	make_dirfile@dirname^0,w,c
 12488  00349E  241B               	addwf	make_dirfile@n^0,w,c
 12489  0034A0  6ED9               	movwf	fsr2l,c
 12490  0034A2  6ADA               	clrf	fsr2h,c
 12491  0034A4  C01C  FFDF         	movff	make_dirfile@c,indf2
 12492  0034A8  2A1B               	incf	make_dirfile@n^0,f,c
 12493  0034AA  D76A               	goto	l11394
 12494  0034AC                     l11502:
 12495                           
 12496                           ;tff.c: 492: return 1;
 12497  0034AC  0E01               	movlw	1
 12498  0034AE  0012               	return		;funcret
 12499  0034B0                     __end_of_make_dirfile:
 12500                           	callstack 0
 12501                           
 12502 ;; *************** function _reserve_direntry *****************
 12503 ;; Defined at:
 12504 ;;		line 568 in file "bibliotecas/tff.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;  dj              1   38[BANK0 ] PTR struct _DIR_E
 12507 ;;		 -> f_open@dj(14), 
 12508 ;;  dir             1   39[BANK0 ] PTR PTR unsigned char 
 12509 ;;		 -> f_open@dir(2), 
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;  sector          4   44[BANK0 ] unsigned long 
 12512 ;;  fs              2   54[BANK0 ] PTR struct _FATFS
 12513 ;;		 -> NULL(0), fs(544), 
 12514 ;;  clust           2   52[BANK0 ] unsigned short 
 12515 ;;  dptr            2   49[BANK0 ] PTR unsigned char 
 12516 ;;		 -> fs.win(512), NULL(0), fs(544), 
 12517 ;;  c               1   51[BANK0 ] unsigned char 
 12518 ;;  n               1   48[BANK0 ] unsigned char 
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  1    wreg      enum E155
 12521 ;; Registers used:
 12522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12523 ;; Tracked objects:
 12524 ;;		On entry : 3F/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12528 ;;      Params:         0       2       0       0       0       0       0       0       0
 12529 ;;      Locals:         0      12       0       0       0       0       0       0       0
 12530 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12531 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12532 ;;Total ram usage:       18 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; Hardware stack levels required when called:   10
 12535 ;; This function calls:
 12536 ;;		_clust2sect
 12537 ;;		_create_chain
 12538 ;;		_disk_write
 12539 ;;		_memset
 12540 ;;		_move_window
 12541 ;;		_next_dir_entry
 12542 ;; This function is called by:
 12543 ;;		_f_open
 12544 ;; This function uses a non-reentrant model
 12545 ;;
 12546                           
 12547                           	psect	text73
 12548  002102                     __ptext73:
 12549                           	callstack 0
 12550  002102                     _reserve_direntry:
 12551                           	callstack 15
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;tff.c: 573: CLUST clust;;tff.c: 574: DWORD sector;;tff.c: 575: BYTE c, n, *dptr;;tff.c:
      +                           576: FATFS *fs = dj->fs;
 12555                           
 12556                           ;incstack = 0
 12557  002102  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12558  002104  6ED9               	movwf	fsr2l,c
 12559  002106  6ADA               	clrf	fsr2h,c
 12560  002108  0E04               	movlw	4
 12561  00210A  26D9               	addwf	fsr2l,f,c
 12562  00210C  CFDE F096          	movff	postinc2,reserve_direntry@fs
 12563  002110  CFDD F097          	movff	postdec2,reserve_direntry@fs+1
 12564                           
 12565                           ;tff.c: 580: clust = dj->sclust;
 12566  002114  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12567  002116  6ED9               	movwf	fsr2l,c
 12568  002118  6ADA               	clrf	fsr2h,c
 12569  00211A  0E06               	movlw	6
 12570  00211C  26D9               	addwf	fsr2l,f,c
 12571  00211E  CFDE F094          	movff	postinc2,reserve_direntry@clust
 12572  002122  CFDD F095          	movff	postdec2,reserve_direntry@clust+1
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;tff.c: 581: if (clust != 0) {
 12576  002126  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12577  002128  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12578  00212A  B4D8               	btfsc	status,2,c
 12579  00212C  D01E               	goto	l11838
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;tff.c: 582: dj->clust = clust;
 12583  00212E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12584  002130  6ED9               	movwf	fsr2l,c
 12585  002132  6ADA               	clrf	fsr2h,c
 12586  002134  0E08               	movlw	8
 12587  002136  26D9               	addwf	fsr2l,f,c
 12588  002138  C094  FFDE         	movff	reserve_direntry@clust,postinc2
 12589  00213C  C095  FFDD         	movff	reserve_direntry@clust+1,postdec2
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;tff.c: 583: dj->sect = clust2sect(clust);
 12593  002140  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12594  002144  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12595  002148  EC04  F021         	call	_clust2sect	;wreg free
 12596  00214C  0100               	movlb	0	; () banked
 12597  00214E  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12598  002150  6ED9               	movwf	fsr2l,c
 12599  002152  6ADA               	clrf	fsr2h,c
 12600  002154  0E0A               	movlw	10
 12601  002156  26D9               	addwf	fsr2l,f,c
 12602  002158  C016  FFDE         	movff	?_clust2sect,postinc2
 12603  00215C  C017  FFDE         	movff	?_clust2sect+1,postinc2
 12604  002160  C018  FFDE         	movff	?_clust2sect+2,postinc2
 12605  002164  C019  FFDE         	movff	?_clust2sect+3,postinc2
 12606                           
 12607                           ;tff.c: 584: } else {
 12608  002168  D013               	goto	l11840
 12609  00216A                     l11838:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;tff.c: 585: dj->sect = fs->dirbase;
 12613  00216A  EE20 F00C          	lfsr	2,12
 12614  00216E  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12615  002170  26D9               	addwf	fsr2l,f,c
 12616  002172  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12617  002174  22DA               	addwfc	fsr2h,f,c
 12618  002176  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12619  002178  6EE1               	movwf	fsr1l,c
 12620  00217A  6AE2               	clrf	fsr1h,c
 12621  00217C  0E0A               	movlw	10
 12622  00217E  26E1               	addwf	fsr1l,f,c
 12623  002180  CFDE FFE6          	movff	postinc2,postinc1
 12624  002184  CFDE FFE6          	movff	postinc2,postinc1
 12625  002188  CFDE FFE6          	movff	postinc2,postinc1
 12626  00218C  CFDE FFE6          	movff	postinc2,postinc1
 12627  002190                     l11840:
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;tff.c: 586: };tff.c: 587: dj->index = 0;
 12631  002190  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12632  002192  6ED9               	movwf	fsr2l,c
 12633  002194  6ADA               	clrf	fsr2h,c
 12634  002196  0E02               	movlw	2
 12635  002198  26D9               	addwf	fsr2l,f,c
 12636  00219A  0E00               	movlw	0
 12637  00219C  6EDE               	movwf	postinc2,c
 12638  00219E  0E00               	movlw	0
 12639  0021A0  6EDD               	movwf	postdec2,c
 12640  0021A2                     l11842:
 12641                           
 12642                           ;tff.c: 590: if (!move_window(dj->sect)) return FR_RW_ERROR;
 12643  0021A2  0100               	movlb	0	; () banked
 12644  0021A4  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12645  0021A6  6ED9               	movwf	fsr2l,c
 12646  0021A8  6ADA               	clrf	fsr2h,c
 12647  0021AA  0E0A               	movlw	10
 12648  0021AC  26D9               	addwf	fsr2l,f,c
 12649  0021AE  CFDE F035          	movff	postinc2,move_window@sector
 12650  0021B2  CFDE F036          	movff	postinc2,move_window@sector+1
 12651  0021B6  CFDE F037          	movff	postinc2,move_window@sector+2
 12652  0021BA  CFDE F038          	movff	postinc2,move_window@sector+3
 12653  0021BE  EC15  F015         	call	_move_window	;wreg free
 12654  0021C2  0900               	iorlw	0
 12655  0021C4  A4D8               	btfss	status,2,c
 12656  0021C6  D002               	goto	l11848
 12657  0021C8                     u13640:
 12658  0021C8  0E08               	movlw	8
 12659  0021CA  0012               	return	
 12660  0021CC                     l11848:
 12661                           
 12662                           ;tff.c: 591: dptr = &fs->win[(dj->index & 15) * 32];
 12663  0021CC  0100               	movlb	0	; () banked
 12664  0021CE  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12665  0021D0  6ED9               	movwf	fsr2l,c
 12666  0021D2  6ADA               	clrf	fsr2h,c
 12667  0021D4  0E02               	movlw	2
 12668  0021D6  26D9               	addwf	fsr2l,f,c
 12669  0021D8  CFDE F088          	movff	postinc2,??_reserve_direntry
 12670  0021DC  CFDD F089          	movff	postdec2,??_reserve_direntry+1
 12671  0021E0  0E0F               	movlw	15
 12672  0021E2  1788               	andwf	??_reserve_direntry& (0+255),f,b
 12673  0021E4  0E00               	movlw	0
 12674  0021E6  1789               	andwf	(??_reserve_direntry+1)& (0+255),f,b
 12675  0021E8  0E05               	movlw	5
 12676  0021EA                     u13655:
 12677  0021EA  90D8               	bcf	status,0,c
 12678  0021EC  3788               	rlcf	??_reserve_direntry& (0+255),f,b
 12679  0021EE  3789               	rlcf	(??_reserve_direntry+1)& (0+255),f,b
 12680  0021F0  2EE8               	decfsz	wreg,f,c
 12681  0021F2  D7FB               	goto	u13655
 12682  0021F4  C096  F08A         	movff	reserve_direntry@fs,??_reserve_direntry+2
 12683  0021F8  C097  F08B         	movff	reserve_direntry@fs+1,??_reserve_direntry+3
 12684  0021FC  5188               	movf	??_reserve_direntry& (0+255),w,b
 12685  0021FE  278A               	addwf	(??_reserve_direntry+2)& (0+255),f,b
 12686  002200  5189               	movf	(??_reserve_direntry+1)& (0+255),w,b
 12687  002202  238B               	addwfc	(??_reserve_direntry+3)& (0+255),f,b
 12688  002204  0E20               	movlw	32
 12689  002206  258A               	addwf	(??_reserve_direntry+2)& (0+255),w,b
 12690  002208  6F91               	movwf	reserve_direntry@dptr& (0+255),b
 12691  00220A  0E00               	movlw	0
 12692  00220C  218B               	addwfc	(??_reserve_direntry+3)& (0+255),w,b
 12693  00220E  6F92               	movwf	(reserve_direntry@dptr+1)& (0+255),b
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;tff.c: 592: c = dptr[0];
 12697  002210  C091  FFD9         	movff	reserve_direntry@dptr,fsr2l
 12698  002214  C092  FFDA         	movff	reserve_direntry@dptr+1,fsr2h
 12699  002218  50DF               	movf	indf2,w,c
 12700  00221A  6F93               	movwf	reserve_direntry@c& (0+255),b
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;tff.c: 593: if (c == 0 || c == 0xE5) {
 12704  00221C  5193               	movf	reserve_direntry@c& (0+255),w,b
 12705  00221E  B4D8               	btfsc	status,2,c
 12706  002220  D004               	goto	u13670
 12707                           
 12708                           ; BSR set to: 0
 12709  002222  0EE5               	movlw	229
 12710  002224  1993               	xorwf	reserve_direntry@c& (0+255),w,b
 12711  002226  A4D8               	btfss	status,2,c
 12712  002228  D009               	goto	l11862
 12713  00222A                     u13670:
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;tff.c: 594: *dir = dptr; return FR_OK;
 12717  00222A  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12718  00222C  6ED9               	movwf	fsr2l,c
 12719  00222E  6ADA               	clrf	fsr2h,c
 12720  002230  C091  FFDE         	movff	reserve_direntry@dptr,postinc2
 12721  002234  C092  FFDD         	movff	reserve_direntry@dptr+1,postdec2
 12722  002238                     l11858:
 12723                           
 12724                           ; BSR set to: 0
 12725  002238  0E00               	movlw	0
 12726  00223A  0012               	return	
 12727  00223C                     l11862:
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;tff.c: 595: };tff.c: 596: } while (next_dir_entry(dj));
 12731  00223C  C086  F04C         	movff	reserve_direntry@dj,next_dir_entry@dj
 12732  002240  EC47  F018         	call	_next_dir_entry	;wreg free
 12733  002244  0900               	iorlw	0
 12734  002246  A4D8               	btfss	status,2,c
 12735  002248  D7AC               	goto	l11842
 12736                           
 12737                           ;tff.c: 600: if (clust == 0 || !(clust = create_chain(dj->clust))) return FR_DENIED;
 12738  00224A  0100               	movlb	0	; () banked
 12739  00224C  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12740  00224E  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12741  002250  B4D8               	btfsc	status,2,c
 12742  002252  D013               	goto	u13700
 12743                           
 12744                           ; BSR set to: 0
 12745  002254  5186               	movf	reserve_direntry@dj& (0+255),w,b
 12746  002256  6ED9               	movwf	fsr2l,c
 12747  002258  6ADA               	clrf	fsr2h,c
 12748  00225A  0E08               	movlw	8
 12749  00225C  26D9               	addwf	fsr2l,f,c
 12750  00225E  CFDE F078          	movff	postinc2,create_chain@clust
 12751  002262  CFDD F079          	movff	postdec2,create_chain@clust+1
 12752  002266  ECBB  F016         	call	_create_chain	;wreg free
 12753  00226A  C078  F094         	movff	?_create_chain,reserve_direntry@clust
 12754  00226E  C079  F095         	movff	?_create_chain+1,reserve_direntry@clust+1
 12755  002272  5194               	movf	reserve_direntry@clust& (0+255),w,b
 12756  002274  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12757  002276  A4D8               	btfss	status,2,c
 12758  002278  D002               	goto	l11872
 12759  00227A                     u13700:
 12760                           
 12761                           ; BSR set to: 0
 12762  00227A  0E06               	movlw	6
 12763  00227C  0012               	return	
 12764  00227E                     l11872:
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;tff.c: 601: if (clust == 1 || !move_window(0)) return FR_RW_ERROR;
 12768  00227E  0594               	decf	reserve_direntry@clust& (0+255),w,b
 12769  002280  1195               	iorwf	(reserve_direntry@clust+1)& (0+255),w,b
 12770  002282  B4D8               	btfsc	status,2,c
 12771  002284  D7A1               	goto	u13640
 12772                           
 12773                           ; BSR set to: 0
 12774  002286  0E00               	movlw	0
 12775  002288  6E35               	movwf	move_window@sector^0,c
 12776  00228A  0E00               	movlw	0
 12777  00228C  6E36               	movwf	(move_window@sector+1)^0,c
 12778  00228E  0E00               	movlw	0
 12779  002290  6E37               	movwf	(move_window@sector+2)^0,c
 12780  002292  0E00               	movlw	0
 12781  002294  6E38               	movwf	(move_window@sector+3)^0,c
 12782  002296  EC15  F015         	call	_move_window	;wreg free
 12783  00229A  0900               	iorlw	0
 12784  00229C  B4D8               	btfsc	status,2,c
 12785  00229E  D794               	goto	u13640
 12786                           
 12787                           ;tff.c: 603: fs->winsect = sector = clust2sect(clust);
 12788  0022A0  C094  F016         	movff	reserve_direntry@clust,clust2sect@clust
 12789  0022A4  C095  F017         	movff	reserve_direntry@clust+1,clust2sect@clust+1
 12790  0022A8  EC04  F021         	call	_clust2sect	;wreg free
 12791  0022AC  C016  F08C         	movff	?_clust2sect,reserve_direntry@sector
 12792  0022B0  C017  F08D         	movff	?_clust2sect+1,reserve_direntry@sector+1
 12793  0022B4  C018  F08E         	movff	?_clust2sect+2,reserve_direntry@sector+2
 12794  0022B8  C019  F08F         	movff	?_clust2sect+3,reserve_direntry@sector+3
 12795  0022BC  0100               	movlb	0	; () banked
 12796  0022BE  EE20 F004          	lfsr	2,4
 12797  0022C2  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12798  0022C4  26D9               	addwf	fsr2l,f,c
 12799  0022C6  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12800  0022C8  22DA               	addwfc	fsr2h,f,c
 12801  0022CA  C08C  FFDE         	movff	reserve_direntry@sector,postinc2
 12802  0022CE  C08D  FFDE         	movff	reserve_direntry@sector+1,postinc2
 12803  0022D2  C08E  FFDE         	movff	reserve_direntry@sector+2,postinc2
 12804  0022D6  C08F  FFDE         	movff	reserve_direntry@sector+3,postinc2
 12805                           
 12806                           ;tff.c: 604: memset(fs->win, 0, 512U);
 12807  0022DA  0E20               	movlw	32
 12808  0022DC  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12809  0022DE  6E0A               	movwf	memset@p1^0,c
 12810  0022E0  0E00               	movlw	0
 12811  0022E2  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12812  0022E4  6E0B               	movwf	(memset@p1+1)^0,c
 12813  0022E6  0E00               	movlw	0
 12814  0022E8  6E0D               	movwf	(memset@c+1)^0,c
 12815  0022EA  0E00               	movlw	0
 12816  0022EC  6E0C               	movwf	memset@c^0,c
 12817  0022EE  0E02               	movlw	2
 12818  0022F0  6E0F               	movwf	(memset@n+1)^0,c
 12819  0022F2  0E00               	movlw	0
 12820  0022F4  6E0E               	movwf	memset@n^0,c
 12821  0022F6  EC03  F02C         	call	_memset	;wreg free
 12822                           
 12823                           ;tff.c: 605: for (n = fs->csize; n; n--) {
 12824  0022FA  0100               	movlb	0	; () banked
 12825  0022FC  EE20 F01D          	lfsr	2,29
 12826  002300  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12827  002302  26D9               	addwf	fsr2l,f,c
 12828  002304  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12829  002306  22DA               	addwfc	fsr2h,f,c
 12830  002308  50DF               	movf	indf2,w,c
 12831  00230A  6F90               	movwf	reserve_direntry@n& (0+255),b
 12832  00230C  D01E               	goto	l11894
 12833  00230E                     l11884:
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;tff.c: 606: if (disk_write(0, fs->win, sector, 1) != RES_OK)
 12837  00230E  0E20               	movlw	32
 12838  002310  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12839  002312  6E29               	movwf	disk_write@buff^0,c
 12840  002314  0E00               	movlw	0
 12841  002316  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12842  002318  6E2A               	movwf	(disk_write@buff+1)^0,c
 12843  00231A  C08C  F02B         	movff	reserve_direntry@sector,disk_write@sector
 12844  00231E  C08D  F02C         	movff	reserve_direntry@sector+1,disk_write@sector+1
 12845  002322  C08E  F02D         	movff	reserve_direntry@sector+2,disk_write@sector+2
 12846  002326  C08F  F02E         	movff	reserve_direntry@sector+3,disk_write@sector+3
 12847  00232A  0E01               	movlw	1
 12848  00232C  6E2F               	movwf	disk_write@count^0,c
 12849  00232E  0E00               	movlw	0
 12850  002330  EC34  F029         	call	_disk_write
 12851  002334  0900               	iorlw	0
 12852  002336  A4D8               	btfss	status,2,c
 12853  002338  D747               	goto	u13640
 12854                           
 12855                           ;tff.c: 608: sector++;
 12856  00233A  0E01               	movlw	1
 12857  00233C  0100               	movlb	0	; () banked
 12858  00233E  278C               	addwf	reserve_direntry@sector& (0+255),f,b
 12859  002340  0E00               	movlw	0
 12860  002342  238D               	addwfc	(reserve_direntry@sector+1)& (0+255),f,b
 12861  002344  238E               	addwfc	(reserve_direntry@sector+2)& (0+255),f,b
 12862  002346  238F               	addwfc	(reserve_direntry@sector+3)& (0+255),f,b
 12863                           
 12864                           ; BSR set to: 0
 12865  002348  0790               	decf	reserve_direntry@n& (0+255),f,b
 12866  00234A                     l11894:
 12867                           
 12868                           ; BSR set to: 0
 12869  00234A  5190               	movf	reserve_direntry@n& (0+255),w,b
 12870  00234C  A4D8               	btfss	status,2,c
 12871  00234E  D7DF               	goto	l11884
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;tff.c: 609: };tff.c: 610: fs->winflag = 1;
 12875  002350  EE20 F01F          	lfsr	2,31
 12876  002354  5196               	movf	reserve_direntry@fs& (0+255),w,b
 12877  002356  26D9               	addwf	fsr2l,f,c
 12878  002358  5197               	movf	(reserve_direntry@fs+1)& (0+255),w,b
 12879  00235A  22DA               	addwfc	fsr2h,f,c
 12880  00235C  0E01               	movlw	1
 12881  00235E  6EDF               	movwf	indf2,c
 12882                           
 12883                           ;tff.c: 611: *dir = fs->win;
 12884  002360  0E20               	movlw	32
 12885  002362  2596               	addwf	reserve_direntry@fs& (0+255),w,b
 12886  002364  6F88               	movwf	??_reserve_direntry& (0+255),b
 12887  002366  0E00               	movlw	0
 12888  002368  2197               	addwfc	(reserve_direntry@fs+1)& (0+255),w,b
 12889  00236A  6F89               	movwf	(??_reserve_direntry+1)& (0+255),b
 12890  00236C  5187               	movf	reserve_direntry@dir& (0+255),w,b
 12891  00236E  6ED9               	movwf	fsr2l,c
 12892  002370  6ADA               	clrf	fsr2h,c
 12893  002372  C088  FFDE         	movff	??_reserve_direntry,postinc2
 12894  002376  C089  FFDD         	movff	??_reserve_direntry+1,postdec2
 12895  00237A  D75E               	goto	l11858
 12896  00237C                     __end_of_reserve_direntry:
 12897                           	callstack 0
 12898                           
 12899 ;; *************** function _next_dir_entry *****************
 12900 ;; Defined at:
 12901 ;;		line 359 in file "bibliotecas/tff.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;  dj              1   75[COMRAM] PTR struct _DIR_E
 12904 ;;		 -> f_open@dj(14), 
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;  idx             2   28[BANK0 ] unsigned short 
 12907 ;;  clust           2   26[BANK0 ] unsigned short 
 12908 ;; Return value:  Size  Location     Type
 12909 ;;                  1    wreg      enum E105
 12910 ;; Registers used:
 12911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12912 ;; Tracked objects:
 12913 ;;		On entry : 0/0
 12914 ;;		On exit  : 0/0
 12915 ;;		Unchanged: 0/0
 12916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12917 ;;      Params:         1       0       0       0       0       0       0       0       0
 12918 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12919 ;;      Temps:          0       7       0       0       0       0       0       0       0
 12920 ;;      Totals:         1      11       0       0       0       0       0       0       0
 12921 ;;Total ram usage:       12 bytes
 12922 ;; Hardware stack levels used:    1
 12923 ;; Hardware stack levels required when called:    9
 12924 ;; This function calls:
 12925 ;;		_clust2sect
 12926 ;;		_get_cluster
 12927 ;; This function is called by:
 12928 ;;		_trace_path
 12929 ;;		_reserve_direntry
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           	psect	text74
 12934  00308E                     __ptext74:
 12935                           	callstack 0
 12936  00308E                     _next_dir_entry:
 12937                           	callstack 15
 12938                           
 12939                           ;tff.c: 363: CLUST clust;;tff.c: 364: WORD idx;;tff.c: 367: idx = dj->index + 1;
 12940                           
 12941                           ;incstack = 0
 12942  00308E  504C               	movf	next_dir_entry@dj^0,w,c
 12943  003090  6ED9               	movwf	fsr2l,c
 12944  003092  6ADA               	clrf	fsr2h,c
 12945  003094  0E02               	movlw	2
 12946  003096  26D9               	addwf	fsr2l,f,c
 12947  003098  CFDE F073          	movff	postinc2,??_next_dir_entry
 12948  00309C  CFDD F074          	movff	postdec2,??_next_dir_entry+1
 12949  0030A0  0E01               	movlw	1
 12950  0030A2  0100               	movlb	0	; () banked
 12951  0030A4  2573               	addwf	??_next_dir_entry& (0+255),w,b
 12952  0030A6  6F7C               	movwf	next_dir_entry@idx& (0+255),b
 12953  0030A8  0E00               	movlw	0
 12954  0030AA  2174               	addwfc	(??_next_dir_entry+1)& (0+255),w,b
 12955  0030AC  6F7D               	movwf	(next_dir_entry@idx+1)& (0+255),b
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;tff.c: 368: if ((idx & 15) == 0) {
 12959  0030AE  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 12960  0030B2  0E0F               	movlw	15
 12961  0030B4  1773               	andwf	??_next_dir_entry& (0+255),f,b
 12962  0030B6  A4D8               	btfss	status,2,c
 12963  0030B8  D092               	goto	l11378
 12964                           
 12965                           ; BSR set to: 0
 12966                           ;tff.c: 369: dj->sect++;
 12967  0030BA  504C               	movf	next_dir_entry@dj^0,w,c
 12968  0030BC  6ED9               	movwf	fsr2l,c
 12969  0030BE  6ADA               	clrf	fsr2h,c
 12970  0030C0  0E0A               	movlw	10
 12971  0030C2  26D9               	addwf	fsr2l,f,c
 12972  0030C4  2ADE               	incf	postinc2,f,c
 12973  0030C6  0E00               	movlw	0
 12974  0030C8  22DE               	addwfc	postinc2,f,c
 12975  0030CA  22DE               	addwfc	postinc2,f,c
 12976  0030CC  22DE               	addwfc	postinc2,f,c
 12977                           
 12978                           ;tff.c: 370: if (dj->clust == 0) {
 12979  0030CE  504C               	movf	next_dir_entry@dj^0,w,c
 12980  0030D0  6ED9               	movwf	fsr2l,c
 12981  0030D2  6ADA               	clrf	fsr2h,c
 12982  0030D4  0E08               	movlw	8
 12983  0030D6  26D9               	addwf	fsr2l,f,c
 12984  0030D8  50DE               	movf	postinc2,w,c
 12985  0030DA  10DE               	iorwf	postinc2,w,c
 12986  0030DC  A4D8               	btfss	status,2,c
 12987  0030DE  D013               	goto	l11362
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;tff.c: 371: if (idx >= dj->fs->n_rootdir) return FALSE;
 12991  0030E0  504C               	movf	next_dir_entry@dj^0,w,c
 12992  0030E2  6ED9               	movwf	fsr2l,c
 12993  0030E4  6ADA               	clrf	fsr2h,c
 12994  0030E6  0E04               	movlw	4
 12995  0030E8  26D9               	addwf	fsr2l,f,c
 12996  0030EA  EE10 F002          	lfsr	1,2
 12997  0030EE  50DE               	movf	postinc2,w,c
 12998  0030F0  26E1               	addwf	fsr1l,f,c
 12999  0030F2  50DD               	movf	postdec2,w,c
 13000  0030F4  22E2               	addwfc	fsr1h,f,c
 13001  0030F6  50E6               	movf	postinc1,w,c
 13002  0030F8  5D7C               	subwf	next_dir_entry@idx& (0+255),w,b
 13003  0030FA  50E6               	movf	postinc1,w,c
 13004  0030FC  597D               	subwfb	(next_dir_entry@idx+1)& (0+255),w,b
 13005  0030FE  A0D8               	btfss	status,0,c
 13006  003100  D06E               	goto	l11378
 13007  003102                     u12890:
 13008                           
 13009                           ; BSR set to: 0
 13010  003102  0E00               	movlw	0
 13011  003104  0012               	return	
 13012  003106                     l11362:
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;tff.c: 373: if (((idx / 16) & (dj->fs->csize - 1)) == 0) {
 13016  003106  C07C  F073         	movff	next_dir_entry@idx,??_next_dir_entry
 13017  00310A  C07D  F074         	movff	next_dir_entry@idx+1,??_next_dir_entry+1
 13018  00310E  0E04               	movlw	4
 13019  003110  6F75               	movwf	(??_next_dir_entry+2)& (0+255),b
 13020  003112                     u12905:
 13021  003112  90D8               	bcf	status,0,c
 13022  003114  3374               	rrcf	(??_next_dir_entry+1)& (0+255),f,b
 13023  003116  3373               	rrcf	??_next_dir_entry& (0+255),f,b
 13024  003118  2F75               	decfsz	(??_next_dir_entry+2)& (0+255),f,b
 13025  00311A  D7FB               	goto	u12905
 13026  00311C  0EFF               	movlw	255
 13027  00311E  6F76               	movwf	(??_next_dir_entry+3)& (0+255),b
 13028  003120  0EFF               	movlw	255
 13029  003122  6F77               	movwf	(??_next_dir_entry+4)& (0+255),b
 13030  003124  504C               	movf	next_dir_entry@dj^0,w,c
 13031  003126  6ED9               	movwf	fsr2l,c
 13032  003128  6ADA               	clrf	fsr2h,c
 13033  00312A  0E04               	movlw	4
 13034  00312C  26D9               	addwf	fsr2l,f,c
 13035  00312E  EE10 F01D          	lfsr	1,29
 13036  003132  50DE               	movf	postinc2,w,c
 13037  003134  26E1               	addwf	fsr1l,f,c
 13038  003136  50DD               	movf	postdec2,w,c
 13039  003138  22E2               	addwfc	fsr1h,f,c
 13040  00313A  50E7               	movf	indf1,w,c
 13041  00313C  6F78               	movwf	(??_next_dir_entry+5)& (0+255),b
 13042  00313E  6B79               	clrf	(??_next_dir_entry+6)& (0+255),b
 13043  003140  5176               	movf	(??_next_dir_entry+3)& (0+255),w,b
 13044  003142  2778               	addwf	(??_next_dir_entry+5)& (0+255),f,b
 13045  003144  5177               	movf	(??_next_dir_entry+4)& (0+255),w,b
 13046  003146  2379               	addwfc	(??_next_dir_entry+6)& (0+255),f,b
 13047  003148  5173               	movf	??_next_dir_entry& (0+255),w,b
 13048  00314A  1778               	andwf	(??_next_dir_entry+5)& (0+255),f,b
 13049  00314C  5174               	movf	(??_next_dir_entry+1)& (0+255),w,b
 13050  00314E  1779               	andwf	(??_next_dir_entry+6)& (0+255),f,b
 13051  003150  5178               	movf	(??_next_dir_entry+5)& (0+255),w,b
 13052  003152  1179               	iorwf	(??_next_dir_entry+6)& (0+255),w,b
 13053  003154  A4D8               	btfss	status,2,c
 13054  003156  D043               	goto	l11378
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;tff.c: 374: clust = get_cluster(dj->clust);
 13058  003158  504C               	movf	next_dir_entry@dj^0,w,c
 13059  00315A  6ED9               	movwf	fsr2l,c
 13060  00315C  6ADA               	clrf	fsr2h,c
 13061  00315E  0E08               	movlw	8
 13062  003160  26D9               	addwf	fsr2l,f,c
 13063  003162  CFDE F04A          	movff	postinc2,get_cluster@clust
 13064  003166  CFDD F04B          	movff	postdec2,get_cluster@clust+1
 13065  00316A  ECF4  F012         	call	_get_cluster	;wreg free
 13066  00316E  C04A  F07A         	movff	?_get_cluster,next_dir_entry@clust
 13067  003172  C04B  F07B         	movff	?_get_cluster+1,next_dir_entry@clust+1
 13068                           
 13069                           ;tff.c: 375: if (clust < 2 || clust >= dj->fs->max_clust)
 13070  003176  0100               	movlb	0	; () banked
 13071  003178  517B               	movf	(next_dir_entry@clust+1)& (0+255),w,b
 13072  00317A  E104               	bnz	u12920
 13073  00317C  0E02               	movlw	2
 13074  00317E  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13075  003180  A0D8               	btfss	status,0,c
 13076  003182  D7BF               	goto	u12890
 13077  003184                     u12920:
 13078                           
 13079                           ; BSR set to: 0
 13080  003184  504C               	movf	next_dir_entry@dj^0,w,c
 13081  003186  6ED9               	movwf	fsr2l,c
 13082  003188  6ADA               	clrf	fsr2h,c
 13083  00318A  0E04               	movlw	4
 13084  00318C  26D9               	addwf	fsr2l,f,c
 13085  00318E  EE10 F016          	lfsr	1,22
 13086  003192  50DE               	movf	postinc2,w,c
 13087  003194  26E1               	addwf	fsr1l,f,c
 13088  003196  50DD               	movf	postdec2,w,c
 13089  003198  22E2               	addwfc	fsr1h,f,c
 13090  00319A  50E6               	movf	postinc1,w,c
 13091  00319C  5D7A               	subwf	next_dir_entry@clust& (0+255),w,b
 13092  00319E  50E6               	movf	postinc1,w,c
 13093  0031A0  597B               	subwfb	(next_dir_entry@clust+1)& (0+255),w,b
 13094  0031A2  B0D8               	btfsc	status,0,c
 13095  0031A4  D7AE               	goto	u12890
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;tff.c: 377: dj->clust = clust;
 13099  0031A6  504C               	movf	next_dir_entry@dj^0,w,c
 13100  0031A8  6ED9               	movwf	fsr2l,c
 13101  0031AA  6ADA               	clrf	fsr2h,c
 13102  0031AC  0E08               	movlw	8
 13103  0031AE  26D9               	addwf	fsr2l,f,c
 13104  0031B0  C07A  FFDE         	movff	next_dir_entry@clust,postinc2
 13105  0031B4  C07B  FFDD         	movff	next_dir_entry@clust+1,postdec2
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;tff.c: 378: dj->sect = clust2sect(clust);
 13109  0031B8  C07A  F016         	movff	next_dir_entry@clust,clust2sect@clust
 13110  0031BC  C07B  F017         	movff	next_dir_entry@clust+1,clust2sect@clust+1
 13111  0031C0  EC04  F021         	call	_clust2sect	;wreg free
 13112  0031C4  504C               	movf	next_dir_entry@dj^0,w,c
 13113  0031C6  6ED9               	movwf	fsr2l,c
 13114  0031C8  6ADA               	clrf	fsr2h,c
 13115  0031CA  0E0A               	movlw	10
 13116  0031CC  26D9               	addwf	fsr2l,f,c
 13117  0031CE  C016  FFDE         	movff	?_clust2sect,postinc2
 13118  0031D2  C017  FFDE         	movff	?_clust2sect+1,postinc2
 13119  0031D6  C018  FFDE         	movff	?_clust2sect+2,postinc2
 13120  0031DA  C019  FFDE         	movff	?_clust2sect+3,postinc2
 13121  0031DE                     l11378:
 13122                           
 13123                           ;tff.c: 379: };tff.c: 380: };tff.c: 381: };tff.c: 382: dj->index = idx;
 13124  0031DE  504C               	movf	next_dir_entry@dj^0,w,c
 13125  0031E0  6ED9               	movwf	fsr2l,c
 13126  0031E2  6ADA               	clrf	fsr2h,c
 13127  0031E4  0E02               	movlw	2
 13128  0031E6  26D9               	addwf	fsr2l,f,c
 13129  0031E8  C07C  FFDE         	movff	next_dir_entry@idx,postinc2
 13130  0031EC  C07D  FFDD         	movff	next_dir_entry@idx+1,postdec2
 13131                           
 13132                           ;tff.c: 383: return TRUE;
 13133  0031F0  0E01               	movlw	1
 13134  0031F2  0012               	return		;funcret
 13135  0031F4                     __end_of_next_dir_entry:
 13136                           	callstack 0
 13137                           
 13138 ;; *************** function _clust2sect *****************
 13139 ;; Defined at:
 13140 ;;		line 339 in file "bibliotecas/tff.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;  clust           2   21[COMRAM] unsigned short 
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;  fs              2   30[COMRAM] PTR struct _FATFS
 13145 ;;		 -> NULL(0), fs(544), 
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  4   21[COMRAM] unsigned long 
 13148 ;; Registers used:
 13149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13150 ;; Tracked objects:
 13151 ;;		On entry : 0/0
 13152 ;;		On exit  : 0/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13155 ;;      Params:         4       0       0       0       0       0       0       0       0
 13156 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13157 ;;      Temps:          5       0       0       0       0       0       0       0       0
 13158 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13159 ;;Total ram usage:       11 bytes
 13160 ;; Hardware stack levels used:    1
 13161 ;; Hardware stack levels required when called:    3
 13162 ;; This function calls:
 13163 ;;		___lmul
 13164 ;; This function is called by:
 13165 ;;		_next_dir_entry
 13166 ;;		_trace_path
 13167 ;;		_reserve_direntry
 13168 ;;		_f_write
 13169 ;;		_f_read
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text75
 13174  004208                     __ptext75:
 13175                           	callstack 0
 13176  004208                     _clust2sect:
 13177                           	callstack 19
 13178                           
 13179                           ;tff.c: 343: FATFS *fs = FatFs;
 13180                           
 13181                           ;incstack = 0
 13182  004208  C04D  F01F         	movff	_FatFs,clust2sect@fs
 13183  00420C  C04E  F020         	movff	_FatFs+1,clust2sect@fs+1
 13184                           
 13185                           ;tff.c: 346: clust -= 2;
 13186  004210  0E02               	movlw	2
 13187  004212  5E16               	subwf	clust2sect@clust^0,f,c
 13188  004214  0E00               	movlw	0
 13189  004216  5A17               	subwfb	(clust2sect@clust+1)^0,f,c
 13190                           
 13191                           ;tff.c: 347: if (clust >= (fs->max_clust - 2)) return 0;
 13192  004218  0EFE               	movlw	254
 13193  00421A  6E1A               	movwf	??_clust2sect^0,c
 13194  00421C  0EFF               	movlw	255
 13195  00421E  6E1B               	movwf	(??_clust2sect+1)^0,c
 13196  004220  EE20 F016          	lfsr	2,22
 13197  004224  501F               	movf	clust2sect@fs^0,w,c
 13198  004226  26D9               	addwf	fsr2l,f,c
 13199  004228  5020               	movf	(clust2sect@fs+1)^0,w,c
 13200  00422A  22DA               	addwfc	fsr2h,f,c
 13201  00422C  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13202  004230  CFDD F01D          	movff	postdec2,??_clust2sect+3
 13203  004234  501A               	movf	??_clust2sect^0,w,c
 13204  004236  261C               	addwf	(??_clust2sect+2)^0,f,c
 13205  004238  501B               	movf	(??_clust2sect+1)^0,w,c
 13206  00423A  221D               	addwfc	(??_clust2sect+3)^0,f,c
 13207  00423C  501C               	movf	(??_clust2sect+2)^0,w,c
 13208  00423E  5C16               	subwf	clust2sect@clust^0,w,c
 13209  004240  501D               	movf	(??_clust2sect+3)^0,w,c
 13210  004242  5817               	subwfb	(clust2sect@clust+1)^0,w,c
 13211  004244  A0D8               	btfss	status,0,c
 13212  004246  D009               	goto	l10884
 13213  004248  0E00               	movlw	0
 13214  00424A  6E16               	movwf	?_clust2sect^0,c
 13215  00424C  0E00               	movlw	0
 13216  00424E  6E17               	movwf	(?_clust2sect+1)^0,c
 13217  004250  0E00               	movlw	0
 13218  004252  6E18               	movwf	(?_clust2sect+2)^0,c
 13219  004254  0E00               	movlw	0
 13220  004256  6E19               	movwf	(?_clust2sect+3)^0,c
 13221  004258  0012               	return	
 13222  00425A                     l10884:
 13223                           
 13224                           ;tff.c: 348: return (DWORD)clust * fs->csize + fs->database;
 13225  00425A  EE20 F010          	lfsr	2,16
 13226  00425E  501F               	movf	clust2sect@fs^0,w,c
 13227  004260  26D9               	addwf	fsr2l,f,c
 13228  004262  5020               	movf	(clust2sect@fs+1)^0,w,c
 13229  004264  22DA               	addwfc	fsr2h,f,c
 13230  004266  CFDE F01A          	movff	postinc2,??_clust2sect
 13231  00426A  CFDE F01B          	movff	postinc2,??_clust2sect+1
 13232  00426E  CFDE F01C          	movff	postinc2,??_clust2sect+2
 13233  004272  CFDE F01D          	movff	postinc2,??_clust2sect+3
 13234  004276  C016  F00A         	movff	clust2sect@clust,___lmul@multiplier
 13235  00427A  C017  F00B         	movff	clust2sect@clust+1,___lmul@multiplier+1
 13236  00427E  6A0C               	clrf	(___lmul@multiplier+2)^0,c
 13237  004280  6A0D               	clrf	(___lmul@multiplier+3)^0,c
 13238  004282  EE20 F01D          	lfsr	2,29
 13239  004286  501F               	movf	clust2sect@fs^0,w,c
 13240  004288  26D9               	addwf	fsr2l,f,c
 13241  00428A  5020               	movf	(clust2sect@fs+1)^0,w,c
 13242  00428C  22DA               	addwfc	fsr2h,f,c
 13243  00428E  50DF               	movf	indf2,w,c
 13244  004290  6E1E               	movwf	(??_clust2sect+4)^0,c
 13245  004292  501E               	movf	(??_clust2sect+4)^0,w,c
 13246  004294  6E0E               	movwf	___lmul@multiplicand^0,c
 13247  004296  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13248  004298  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13249  00429A  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13250  00429C  EC66  F028         	call	___lmul	;wreg free
 13251  0042A0  501A               	movf	??_clust2sect^0,w,c
 13252  0042A2  240A               	addwf	?___lmul^0,w,c
 13253  0042A4  6E16               	movwf	?_clust2sect^0,c
 13254  0042A6  501B               	movf	(??_clust2sect+1)^0,w,c
 13255  0042A8  200B               	addwfc	(?___lmul+1)^0,w,c
 13256  0042AA  6E17               	movwf	(?_clust2sect+1)^0,c
 13257  0042AC  501C               	movf	(??_clust2sect+2)^0,w,c
 13258  0042AE  200C               	addwfc	(?___lmul+2)^0,w,c
 13259  0042B0  6E18               	movwf	(?_clust2sect+2)^0,c
 13260  0042B2  501D               	movf	(??_clust2sect+3)^0,w,c
 13261  0042B4  200D               	addwfc	(?___lmul+3)^0,w,c
 13262  0042B6  6E19               	movwf	(?_clust2sect+3)^0,c
 13263  0042B8  0012               	return		;funcret
 13264  0042BA                     __end_of_clust2sect:
 13265                           	callstack 0
 13266                           
 13267 ;; *************** function _remove_chain *****************
 13268 ;; Defined at:
 13269 ;;		line 250 in file "bibliotecas/tff.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;  clust           2   24[BANK0 ] unsigned short 
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 13274 ;;		 -> NULL(0), fs(544), 
 13275 ;;  nxt             2   28[BANK0 ] unsigned short 
 13276 ;; Return value:  Size  Location     Type
 13277 ;;                  1    wreg      enum E105
 13278 ;; Registers used:
 13279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13280 ;; Tracked objects:
 13281 ;;		On entry : 3F/0
 13282 ;;		On exit  : 0/0
 13283 ;;		Unchanged: 0/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13285 ;;      Params:         0       2       0       0       0       0       0       0       0
 13286 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13287 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13288 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13289 ;;Total ram usage:        8 bytes
 13290 ;; Hardware stack levels used:    1
 13291 ;; Hardware stack levels required when called:    9
 13292 ;; This function calls:
 13293 ;;		_get_cluster
 13294 ;;		_put_cluster
 13295 ;; This function is called by:
 13296 ;;		_f_open
 13297 ;; This function uses a non-reentrant model
 13298 ;;
 13299                           
 13300                           	psect	text76
 13301  004562                     __ptext76:
 13302                           	callstack 0
 13303  004562                     _remove_chain:
 13304                           	callstack 16
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;tff.c: 254: CLUST nxt;;tff.c: 255: FATFS *fs = FatFs;
 13308                           
 13309                           ;incstack = 0
 13310  004562  C04D  F07E         	movff	_FatFs,remove_chain@fs
 13311  004566  C04E  F07F         	movff	_FatFs+1,remove_chain@fs+1
 13312                           
 13313                           ;tff.c: 258: while (clust >= 2 && clust < fs->max_clust) {
 13314  00456A  D037               	goto	l11736
 13315  00456C                     l11716:
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;tff.c: 259: nxt = get_cluster(clust);
 13319  00456C  C078  F04A         	movff	remove_chain@clust,get_cluster@clust
 13320  004570  C079  F04B         	movff	remove_chain@clust+1,get_cluster@clust+1
 13321  004574  ECF4  F012         	call	_get_cluster	;wreg free
 13322  004578  C04A  F07C         	movff	?_get_cluster,remove_chain@nxt
 13323  00457C  C04B  F07D         	movff	?_get_cluster+1,remove_chain@nxt+1
 13324                           
 13325                           ;tff.c: 260: if (nxt == 1) return FALSE;
 13326  004580  0100               	movlb	0	; () banked
 13327  004582  057C               	decf	remove_chain@nxt& (0+255),w,b
 13328  004584  117D               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
 13329  004586  A4D8               	btfss	status,2,c
 13330  004588  D002               	goto	l11724
 13331  00458A                     u13440:
 13332  00458A  0E00               	movlw	0
 13333  00458C  0012               	return	
 13334  00458E                     l11724:
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;tff.c: 261: if (!put_cluster(clust, 0)) return FALSE;
 13338  00458E  C078  F060         	movff	remove_chain@clust,put_cluster@clust
 13339  004592  C079  F061         	movff	remove_chain@clust+1,put_cluster@clust+1
 13340  004596  0E00               	movlw	0
 13341  004598  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 13342  00459A  0E00               	movlw	0
 13343  00459C  6F62               	movwf	put_cluster@val& (0+255),b
 13344  00459E  ECBE  F011         	call	_put_cluster	;wreg free
 13345  0045A2  0900               	iorlw	0
 13346  0045A4  B4D8               	btfsc	status,2,c
 13347  0045A6  D7F1               	goto	u13440
 13348                           
 13349                           ;tff.c: 262: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 13350  0045A8  0100               	movlb	0	; () banked
 13351  0045AA  EE20 F01A          	lfsr	2,26
 13352  0045AE  517E               	movf	remove_chain@fs& (0+255),w,b
 13353  0045B0  26D9               	addwf	fsr2l,f,c
 13354  0045B2  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13355  0045B4  22DA               	addwfc	fsr2h,f,c
 13356  0045B6  28DE               	incf	postinc2,w,c
 13357  0045B8  E103               	bnz	u13460
 13358  0045BA  28DE               	incf	postinc2,w,c
 13359  0045BC  B4D8               	btfsc	status,2,c
 13360  0045BE  D009               	goto	l11734
 13361  0045C0                     u13460:
 13362                           
 13363                           ; BSR set to: 0
 13364                           ;tff.c: 263: fs->free_clust++;
 13365  0045C0  EE20 F01A          	lfsr	2,26
 13366  0045C4  517E               	movf	remove_chain@fs& (0+255),w,b
 13367  0045C6  26D9               	addwf	fsr2l,f,c
 13368  0045C8  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13369  0045CA  22DA               	addwfc	fsr2h,f,c
 13370  0045CC  2ADE               	incf	postinc2,f,c
 13371  0045CE  0E00               	movlw	0
 13372  0045D0  22DD               	addwfc	postdec2,f,c
 13373  0045D2                     l11734:
 13374                           
 13375                           ; BSR set to: 0
 13376                           ;tff.c: 267: };tff.c: 268: clust = nxt;
 13377  0045D2  C07C  F078         	movff	remove_chain@nxt,remove_chain@clust
 13378  0045D6  C07D  F079         	movff	remove_chain@nxt+1,remove_chain@clust+1
 13379  0045DA                     l11736:
 13380                           
 13381                           ; BSR set to: 0
 13382  0045DA  5179               	movf	(remove_chain@clust+1)& (0+255),w,b
 13383  0045DC  E104               	bnz	u13470
 13384  0045DE  0E02               	movlw	2
 13385  0045E0  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13386  0045E2  A0D8               	btfss	status,0,c
 13387  0045E4  D00C               	goto	u13480
 13388  0045E6                     u13470:
 13389                           
 13390                           ; BSR set to: 0
 13391  0045E6  EE20 F016          	lfsr	2,22
 13392  0045EA  517E               	movf	remove_chain@fs& (0+255),w,b
 13393  0045EC  26D9               	addwf	fsr2l,f,c
 13394  0045EE  517F               	movf	(remove_chain@fs+1)& (0+255),w,b
 13395  0045F0  22DA               	addwfc	fsr2h,f,c
 13396  0045F2  50DE               	movf	postinc2,w,c
 13397  0045F4  5D78               	subwf	remove_chain@clust& (0+255),w,b
 13398  0045F6  50DE               	movf	postinc2,w,c
 13399  0045F8  5979               	subwfb	(remove_chain@clust+1)& (0+255),w,b
 13400  0045FA  A0D8               	btfss	status,0,c
 13401  0045FC  D7B7               	goto	l11716
 13402  0045FE                     u13480:
 13403                           
 13404                           ; BSR set to: 0
 13405                           ;tff.c: 269: };tff.c: 270: return TRUE;
 13406  0045FE  0E01               	movlw	1
 13407  004600  0012               	return		;funcret
 13408  004602                     __end_of_remove_chain:
 13409                           	callstack 0
 13410                           
 13411 ;; *************** function _memcpy *****************
 13412 ;; Defined at:
 13413 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcpy.c"
 13414 ;; Parameters:    Size  Location     Type
 13415 ;;  d1              2    9[COMRAM] PTR void 
 13416 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13417 ;;  s1              2   11[COMRAM] PTR const void 
 13418 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13419 ;;		 -> fs(544), 
 13420 ;;  n               2   13[COMRAM] unsigned int 
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  s               2   18[COMRAM] PTR const unsigned char 
 13423 ;;		 -> fs.win(512), fputc@c(1), f_open@fn(12), NULL(0), 
 13424 ;;		 -> fs(544), 
 13425 ;;  d               2   16[COMRAM] PTR unsigned char 
 13426 ;;		 -> fs.win(512), NULL(0), dado_arquivo(20), fs(544), 
 13427 ;;  tmp             1   15[COMRAM] unsigned char 
 13428 ;; Return value:  Size  Location     Type
 13429 ;;                  2    9[COMRAM] PTR void 
 13430 ;; Registers used:
 13431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13437 ;;      Params:         6       0       0       0       0       0       0       0       0
 13438 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13439 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13440 ;;      Totals:        11       0       0       0       0       0       0       0       0
 13441 ;;Total ram usage:       11 bytes
 13442 ;; Hardware stack levels used:    1
 13443 ;; Hardware stack levels required when called:    2
 13444 ;; This function calls:
 13445 ;;		Nothing
 13446 ;; This function is called by:
 13447 ;;		_f_open
 13448 ;;		_f_write
 13449 ;;		_f_read
 13450 ;; This function uses a non-reentrant model
 13451 ;;
 13452                           
 13453                           	psect	text77
 13454  00541A                     __ptext77:
 13455                           	callstack 0
 13456  00541A                     _memcpy:
 13457                           	callstack 20
 13458                           
 13459                           ;incstack = 0
 13460  00541A  C00C  F013         	movff	memcpy@s1,memcpy@s
 13461  00541E  C00D  F014         	movff	memcpy@s1+1,memcpy@s+1
 13462  005422  C00A  F011         	movff	memcpy@d1,memcpy@d
 13463  005426  C00B  F012         	movff	memcpy@d1+1,memcpy@d+1
 13464  00542A  D010               	goto	l10918
 13465  00542C                     l10910:
 13466  00542C  C013  FFD9         	movff	memcpy@s,fsr2l
 13467  005430  C014  FFDA         	movff	memcpy@s+1,fsr2h
 13468  005434  50DF               	movf	indf2,w,c
 13469  005436  6E10               	movwf	memcpy@tmp^0,c
 13470  005438  4A13               	infsnz	memcpy@s^0,f,c
 13471  00543A  2A14               	incf	(memcpy@s+1)^0,f,c
 13472  00543C  C011  FFD9         	movff	memcpy@d,fsr2l
 13473  005440  C012  FFDA         	movff	memcpy@d+1,fsr2h
 13474  005444  C010  FFDF         	movff	memcpy@tmp,indf2
 13475  005448  4A11               	infsnz	memcpy@d^0,f,c
 13476  00544A  2A12               	incf	(memcpy@d+1)^0,f,c
 13477  00544C                     l10918:
 13478  00544C  060E               	decf	memcpy@n^0,f,c
 13479  00544E  A0D8               	btfss	status,0,c
 13480  005450  060F               	decf	(memcpy@n+1)^0,f,c
 13481  005452  280E               	incf	memcpy@n^0,w,c
 13482  005454  E1EB               	bnz	l10910
 13483  005456  280F               	incf	(memcpy@n+1)^0,w,c
 13484  005458  B4D8               	btfsc	status,2,c
 13485  00545A  0012               	return	
 13486  00545C  D7E7               	goto	l10910
 13487  00545E                     __end_of_memcpy:
 13488                           	callstack 0
 13489                           
 13490 ;; *************** function _auto_mount *****************
 13491 ;; Defined at:
 13492 ;;		line 652 in file "bibliotecas/tff.c"
 13493 ;; Parameters:    Size  Location     Type
 13494 ;;  path            1   60[COMRAM] PTR PTR const unsigned c
 13495 ;;		 -> f_opendir@path(2), f_open@path(2), 
 13496 ;;  chk_wp          1   61[COMRAM] unsigned char 
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;  fatsize         4   38[BANK0 ] unsigned long 
 13499 ;;  totalsect       4   30[BANK0 ] unsigned long 
 13500 ;;  bootsect        4   26[BANK0 ] unsigned long 
 13501 ;;  maxclust        4   22[BANK0 ] unsigned long 
 13502 ;;  fs              2   42[BANK0 ] PTR struct _FATFS
 13503 ;;		 -> NULL(0), fs(544), 
 13504 ;;  p               2   34[BANK0 ] PTR const unsigned char 
 13505 ;;		 -> STR_16(13), filename(20), 
 13506 ;;  stat            1   37[BANK0 ] unsigned char 
 13507 ;;  fmt             1   36[BANK0 ] unsigned char 
 13508 ;; Return value:  Size  Location     Type
 13509 ;;                  1    wreg      enum E155
 13510 ;; Registers used:
 13511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13512 ;; Tracked objects:
 13513 ;;		On entry : 3F/0
 13514 ;;		On exit  : 3E/0
 13515 ;;		Unchanged: 0/0
 13516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13517 ;;      Params:         2       0       0       0       0       0       0       0       0
 13518 ;;      Locals:         0      22       0       0       0       0       0       0       0
 13519 ;;      Temps:          0      22       0       0       0       0       0       0       0
 13520 ;;      Totals:         2      44       0       0       0       0       0       0       0
 13521 ;;Total ram usage:       46 bytes
 13522 ;; Hardware stack levels used:    1
 13523 ;; Hardware stack levels required when called:    8
 13524 ;; This function calls:
 13525 ;;		___lldiv
 13526 ;;		___lmul
 13527 ;;		_check_fs
 13528 ;;		_disk_initialize
 13529 ;;		_disk_status
 13530 ;;		_memset
 13531 ;; This function is called by:
 13532 ;;		_f_open
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           	psect	text78
 13537  0005A8                     __ptext78:
 13538                           	callstack 0
 13539  0005A8                     _auto_mount:
 13540                           	callstack 17
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;tff.c: 657: BYTE fmt;;tff.c: 658: DSTATUS stat;;tff.c: 659: DWORD bootsect, fatsize, to
      +                          talsect, maxclust;;tff.c: 660: const char *p = *path;
 13544                           
 13545                           ;incstack = 0
 13546  0005A8  503D               	movf	auto_mount@path^0,w,c
 13547  0005AA  6ED9               	movwf	fsr2l,c
 13548  0005AC  6ADA               	clrf	fsr2h,c
 13549  0005AE  CFDE F082          	movff	postinc2,auto_mount@p
 13550  0005B2  CFDD F083          	movff	postdec2,auto_mount@p+1
 13551                           
 13552                           ;tff.c: 661: FATFS *fs;;tff.c: 664: while (*p == ' ') p++;
 13553  0005B6  D003               	goto	l11906
 13554  0005B8                     l11904:
 13555  0005B8  0100               	movlb	0	; () banked
 13556  0005BA  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13557  0005BC  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13558  0005BE                     l11906:
 13559                           
 13560                           ; BSR set to: 0
 13561  0005BE  C082  FFF6         	movff	auto_mount@p,tblptrl
 13562  0005C2  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13563  0005C6  6AF8               	clrf	tblptru,c
 13564  0005C8  0E07               	movlw	(high __ramtop+-1)
 13565  0005CA  64F7               	cpfsgt	tblptrh,c
 13566  0005CC  D003               	bra	u13757
 13567  0005CE  0008               	tblrd		*
 13568  0005D0  50F5               	movf	tablat,w,c
 13569  0005D2  D005               	bra	u13750
 13570  0005D4                     u13757:
 13571  0005D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13572  0005D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13573  0005DC  50E7               	movf	indf1,w,c
 13574  0005DE                     u13750:
 13575  0005DE  0A20               	xorlw	32
 13576  0005E0  B4D8               	btfsc	status,2,c
 13577  0005E2  D7EA               	goto	l11904
 13578                           
 13579                           ;tff.c: 665: if (*p == '/') p++;
 13580  0005E4  C082  FFF6         	movff	auto_mount@p,tblptrl
 13581  0005E8  C083  FFF7         	movff	auto_mount@p+1,tblptrh
 13582  0005EC  6AF8               	clrf	tblptru,c
 13583  0005EE  0E07               	movlw	(high __ramtop+-1)
 13584  0005F0  64F7               	cpfsgt	tblptrh,c
 13585  0005F2  D003               	bra	u13777
 13586  0005F4  0008               	tblrd		*
 13587  0005F6  50F5               	movf	tablat,w,c
 13588  0005F8  D005               	bra	u13770
 13589  0005FA                     u13777:
 13590  0005FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 13591  0005FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 13592  000602  50E7               	movf	indf1,w,c
 13593  000604                     u13770:
 13594  000604  0A2F               	xorlw	47
 13595  000606  A4D8               	btfss	status,2,c
 13596  000608  D003               	goto	l11912
 13597  00060A  0100               	movlb	0	; () banked
 13598  00060C  4B82               	infsnz	auto_mount@p& (0+255),f,b
 13599  00060E  2B83               	incf	(auto_mount@p+1)& (0+255),f,b
 13600  000610                     l11912:
 13601                           
 13602                           ;tff.c: 666: *path = p;
 13603  000610  503D               	movf	auto_mount@path^0,w,c
 13604  000612  6ED9               	movwf	fsr2l,c
 13605  000614  6ADA               	clrf	fsr2h,c
 13606  000616  C082  FFDE         	movff	auto_mount@p,postinc2
 13607  00061A  C083  FFDD         	movff	auto_mount@p+1,postdec2
 13608                           
 13609                           ;tff.c: 669: fs = FatFs;
 13610  00061E  C04D  F08A         	movff	_FatFs,auto_mount@fs
 13611  000622  C04E  F08B         	movff	_FatFs+1,auto_mount@fs+1
 13612                           
 13613                           ;tff.c: 670: if (!fs) return FR_NOT_ENABLED;
 13614  000626  0100               	movlb	0	; () banked
 13615  000628  518A               	movf	auto_mount@fs& (0+255),w,b
 13616  00062A  118B               	iorwf	(auto_mount@fs+1)& (0+255),w,b
 13617  00062C  A4D8               	btfss	status,2,c
 13618  00062E  D002               	goto	l11922
 13619                           
 13620                           ; BSR set to: 0
 13621  000630  0E0A               	movlw	10
 13622  000632  0012               	return	
 13623  000634                     l11922:
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;tff.c: 672: if (fs->fs_type) {
 13627  000634  EE20 F01C          	lfsr	2,28
 13628  000638  518A               	movf	auto_mount@fs& (0+255),w,b
 13629  00063A  26D9               	addwf	fsr2l,f,c
 13630  00063C  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13631  00063E  22DA               	addwfc	fsr2h,f,c
 13632  000640  50DF               	movf	indf2,w,c
 13633  000642  B4D8               	btfsc	status,2,c
 13634  000644  D00F               	goto	l11940
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;tff.c: 673: stat = disk_status(0);
 13638  000646  0E00               	movlw	0
 13639  000648  ECA6  F02B         	call	_disk_status
 13640  00064C  0100               	movlb	0	; () banked
 13641  00064E  6F85               	movwf	auto_mount@stat& (0+255),b
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;tff.c: 674: if (!(stat & 0x01)) {
 13645  000650  B185               	btfsc	auto_mount@stat& (0+255),0,b
 13646  000652  D008               	goto	l11940
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;tff.c: 676: if (chk_wp && (stat & 0x04))
 13650  000654  503E               	movf	auto_mount@chk_wp^0,w,c
 13651  000656  A4D8               	btfss	status,2,c
 13652                           
 13653                           ; BSR set to: 0
 13654  000658  A585               	btfss	auto_mount@stat& (0+255),2,b
 13655  00065A  D002               	goto	l11936
 13656  00065C                     u13830:
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;tff.c: 677: return FR_WRITE_PROTECTED;
 13660  00065C  0E09               	movlw	9
 13661  00065E  0012               	return	
 13662  000660                     l11936:
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;tff.c: 679: return FR_OK;
 13666  000660  0E00               	movlw	0
 13667  000662  0012               	return	
 13668  000664                     l11940:
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;tff.c: 680: };tff.c: 681: };tff.c: 685: memset(fs, 0, sizeof(FATFS));
 13672  000664  C08A  F00A         	movff	auto_mount@fs,memset@p1
 13673  000668  C08B  F00B         	movff	auto_mount@fs+1,memset@p1+1
 13674  00066C  0E00               	movlw	0
 13675  00066E  6E0D               	movwf	(memset@c+1)^0,c
 13676  000670  0E00               	movlw	0
 13677  000672  6E0C               	movwf	memset@c^0,c
 13678  000674  0E02               	movlw	2
 13679  000676  6E0F               	movwf	(memset@n+1)^0,c
 13680  000678  0E20               	movlw	32
 13681  00067A  6E0E               	movwf	memset@n^0,c
 13682  00067C  EC03  F02C         	call	_memset	;wreg free
 13683                           
 13684                           ;tff.c: 686: stat = disk_initialize(0);
 13685  000680  0E00               	movlw	0
 13686  000682  EC82  F02C         	call	_disk_initialize
 13687  000686  0100               	movlb	0	; () banked
 13688  000688  6F85               	movwf	auto_mount@stat& (0+255),b
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;tff.c: 687: if (stat & 0x01)
 13692  00068A  A185               	btfss	auto_mount@stat& (0+255),0,b
 13693  00068C  D002               	goto	l11950
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;tff.c: 688: return FR_NOT_READY;
 13697  00068E  0E01               	movlw	1
 13698  000690  0012               	return	
 13699  000692                     l11950:
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;tff.c: 690: if (chk_wp && (stat & 0x04))
 13703  000692  503E               	movf	auto_mount@chk_wp^0,w,c
 13704  000694  B4D8               	btfsc	status,2,c
 13705  000696  D002               	goto	l11958
 13706                           
 13707                           ; BSR set to: 0
 13708  000698  B585               	btfsc	auto_mount@stat& (0+255),2,b
 13709  00069A  D7E0               	goto	u13830
 13710  00069C                     l11958:
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;tff.c: 695: fmt = check_fs(bootsect = 0);
 13714  00069C  0E00               	movlw	0
 13715  00069E  6F7A               	movwf	auto_mount@bootsect& (0+255),b
 13716  0006A0  0E00               	movlw	0
 13717  0006A2  6F7B               	movwf	(auto_mount@bootsect+1)& (0+255),b
 13718  0006A4  0E00               	movlw	0
 13719  0006A6  6F7C               	movwf	(auto_mount@bootsect+2)& (0+255),b
 13720  0006A8  0E00               	movlw	0
 13721  0006AA  6F7D               	movwf	(auto_mount@bootsect+3)& (0+255),b
 13722  0006AC  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13723  0006B0  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13724  0006B4  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13725  0006B8  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13726  0006BC  ECB3  F024         	call	_check_fs	;wreg free
 13727  0006C0  0100               	movlb	0	; () banked
 13728  0006C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;tff.c: 697: if (fmt == 1) {
 13732  0006C4  0584               	decf	auto_mount@fmt& (0+255),w,b
 13733  0006C6  A4D8               	btfss	status,2,c
 13734  0006C8  D023               	goto	l11968
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;tff.c: 699: if (fs->win[446+4]) {
 13738  0006CA  EE21 F0E2          	lfsr	2,482
 13739  0006CE  518A               	movf	auto_mount@fs& (0+255),w,b
 13740  0006D0  26D9               	addwf	fsr2l,f,c
 13741  0006D2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13742  0006D4  22DA               	addwfc	fsr2h,f,c
 13743  0006D6  50DF               	movf	indf2,w,c
 13744  0006D8  B4D8               	btfsc	status,2,c
 13745  0006DA  D01A               	goto	l11968
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;tff.c: 700: bootsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[446+8]));
 13749  0006DC  EE21 F0E6          	lfsr	2,486
 13750  0006E0  518A               	movf	auto_mount@fs& (0+255),w,b
 13751  0006E2  26D9               	addwf	fsr2l,f,c
 13752  0006E4  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13753  0006E6  22DA               	addwfc	fsr2h,f,c
 13754  0006E8  CFDE F07A          	movff	postinc2,auto_mount@bootsect
 13755  0006EC  CFDE F07B          	movff	postinc2,auto_mount@bootsect+1
 13756  0006F0  CFDE F07C          	movff	postinc2,auto_mount@bootsect+2
 13757  0006F4  CFDE F07D          	movff	postinc2,auto_mount@bootsect+3
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;tff.c: 701: fmt = check_fs(bootsect);
 13761  0006F8  C07A  F035         	movff	auto_mount@bootsect,check_fs@sect
 13762  0006FC  C07B  F036         	movff	auto_mount@bootsect+1,check_fs@sect+1
 13763  000700  C07C  F037         	movff	auto_mount@bootsect+2,check_fs@sect+2
 13764  000704  C07D  F038         	movff	auto_mount@bootsect+3,check_fs@sect+3
 13765  000708  ECB3  F024         	call	_check_fs	;wreg free
 13766  00070C  0100               	movlb	0	; () banked
 13767  00070E  6F84               	movwf	auto_mount@fmt& (0+255),b
 13768  000710                     l11968:
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;tff.c: 702: };tff.c: 703: };tff.c: 704: if (fmt || (WORD)(*(WORD*)(BYTE*)(&fs->win[11])
      +                          ) != 512U)
 13772  000710  5184               	movf	auto_mount@fmt& (0+255),w,b
 13773  000712  A4D8               	btfss	status,2,c
 13774  000714  D00C               	goto	u13900
 13775                           
 13776                           ; BSR set to: 0
 13777  000716  EE20 F02B          	lfsr	2,43
 13778  00071A  518A               	movf	auto_mount@fs& (0+255),w,b
 13779  00071C  26D9               	addwf	fsr2l,f,c
 13780  00071E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13781  000720  22DA               	addwfc	fsr2h,f,c
 13782  000722  50DE               	movf	postinc2,w,c
 13783  000724  E104               	bnz	u13900
 13784  000726  0E02               	movlw	2
 13785  000728  18DE               	xorwf	postinc2,w,c
 13786  00072A  B4D8               	btfsc	status,2,c
 13787  00072C  D002               	goto	l11976
 13788  00072E                     u13900:
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;tff.c: 705: return FR_NO_FILESYSTEM;
 13792  00072E  0E0B               	movlw	11
 13793  000730  0012               	return	
 13794  000732                     l11976:
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;tff.c: 708: fatsize = (WORD)(*(WORD*)(BYTE*)(&fs->win[22]));
 13798  000732  EE20 F036          	lfsr	2,54
 13799  000736  518A               	movf	auto_mount@fs& (0+255),w,b
 13800  000738  26D9               	addwf	fsr2l,f,c
 13801  00073A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13802  00073C  22DA               	addwfc	fsr2h,f,c
 13803  00073E  CFDE F060          	movff	postinc2,??_auto_mount
 13804  000742  CFDD F061          	movff	postdec2,??_auto_mount+1
 13805  000746  C060  F086         	movff	??_auto_mount,auto_mount@fatsize
 13806  00074A  C061  F087         	movff	??_auto_mount+1,auto_mount@fatsize+1
 13807  00074E  6B88               	clrf	(auto_mount@fatsize+2)& (0+255),b
 13808  000750  6B89               	clrf	(auto_mount@fatsize+3)& (0+255),b
 13809                           
 13810                           ; BSR set to: 0
 13811                           ;tff.c: 709: if (!fatsize) fatsize = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[36]));
 13812  000752  5186               	movf	auto_mount@fatsize& (0+255),w,b
 13813  000754  1187               	iorwf	(auto_mount@fatsize+1)& (0+255),w,b
 13814  000756  1188               	iorwf	(auto_mount@fatsize+2)& (0+255),w,b
 13815  000758  1189               	iorwf	(auto_mount@fatsize+3)& (0+255),w,b
 13816  00075A  A4D8               	btfss	status,2,c
 13817  00075C  D00E               	goto	l1074
 13818                           
 13819                           ; BSR set to: 0
 13820  00075E  EE20 F044          	lfsr	2,68
 13821  000762  518A               	movf	auto_mount@fs& (0+255),w,b
 13822  000764  26D9               	addwf	fsr2l,f,c
 13823  000766  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13824  000768  22DA               	addwfc	fsr2h,f,c
 13825  00076A  CFDE F086          	movff	postinc2,auto_mount@fatsize
 13826  00076E  CFDE F087          	movff	postinc2,auto_mount@fatsize+1
 13827  000772  CFDE F088          	movff	postinc2,auto_mount@fatsize+2
 13828  000776  CFDE F089          	movff	postinc2,auto_mount@fatsize+3
 13829  00077A                     l1074:
 13830                           
 13831                           ; BSR set to: 0
 13832                           ;tff.c: 710: fs->sects_fat = (CLUST)fatsize;
 13833  00077A  EE20 F014          	lfsr	2,20
 13834  00077E  518A               	movf	auto_mount@fs& (0+255),w,b
 13835  000780  26D9               	addwf	fsr2l,f,c
 13836  000782  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13837  000784  22DA               	addwfc	fsr2h,f,c
 13838  000786  C086  FFDE         	movff	auto_mount@fatsize,postinc2
 13839  00078A  C087  FFDD         	movff	auto_mount@fatsize+1,postdec2
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;tff.c: 711: fs->n_fats = fs->win[16];
 13843  00078E  EE20 F030          	lfsr	2,48
 13844  000792  518A               	movf	auto_mount@fs& (0+255),w,b
 13845  000794  26D9               	addwf	fsr2l,f,c
 13846  000796  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13847  000798  22DA               	addwfc	fsr2h,f,c
 13848  00079A  EE10 F01E          	lfsr	1,30
 13849  00079E  518A               	movf	auto_mount@fs& (0+255),w,b
 13850  0007A0  26E1               	addwf	fsr1l,f,c
 13851  0007A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13852  0007A4  22E2               	addwfc	fsr1h,f,c
 13853  0007A6  CFDF FFE7          	movff	indf2,indf1
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;tff.c: 712: fatsize *= fs->n_fats;
 13857  0007AA  C086  F00A         	movff	auto_mount@fatsize,___lmul@multiplier
 13858  0007AE  C087  F00B         	movff	auto_mount@fatsize+1,___lmul@multiplier+1
 13859  0007B2  C088  F00C         	movff	auto_mount@fatsize+2,___lmul@multiplier+2
 13860  0007B6  C089  F00D         	movff	auto_mount@fatsize+3,___lmul@multiplier+3
 13861  0007BA  EE20 F01E          	lfsr	2,30
 13862  0007BE  518A               	movf	auto_mount@fs& (0+255),w,b
 13863  0007C0  26D9               	addwf	fsr2l,f,c
 13864  0007C2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13865  0007C4  22DA               	addwfc	fsr2h,f,c
 13866  0007C6  50DF               	movf	indf2,w,c
 13867  0007C8  6F60               	movwf	??_auto_mount& (0+255),b
 13868  0007CA  5160               	movf	??_auto_mount& (0+255),w,b
 13869  0007CC  6E0E               	movwf	___lmul@multiplicand^0,c
 13870  0007CE  6A0F               	clrf	(___lmul@multiplicand+1)^0,c
 13871  0007D0  6A10               	clrf	(___lmul@multiplicand+2)^0,c
 13872  0007D2  6A11               	clrf	(___lmul@multiplicand+3)^0,c
 13873  0007D4  EC66  F028         	call	___lmul	;wreg free
 13874  0007D8  C00A  F086         	movff	?___lmul,auto_mount@fatsize
 13875  0007DC  C00B  F087         	movff	?___lmul+1,auto_mount@fatsize+1
 13876  0007E0  C00C  F088         	movff	?___lmul+2,auto_mount@fatsize+2
 13877  0007E4  C00D  F089         	movff	?___lmul+3,auto_mount@fatsize+3
 13878                           
 13879                           ;tff.c: 713: fs->fatbase = bootsect + (WORD)(*(WORD*)(BYTE*)(&fs->win[14]));
 13880  0007E8  0100               	movlb	0	; () banked
 13881  0007EA  EE20 F02E          	lfsr	2,46
 13882  0007EE  518A               	movf	auto_mount@fs& (0+255),w,b
 13883  0007F0  26D9               	addwf	fsr2l,f,c
 13884  0007F2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13885  0007F4  22DA               	addwfc	fsr2h,f,c
 13886  0007F6  CFDE F060          	movff	postinc2,??_auto_mount
 13887  0007FA  CFDD F061          	movff	postdec2,??_auto_mount+1
 13888  0007FE  5160               	movf	??_auto_mount& (0+255),w,b
 13889  000800  257A               	addwf	auto_mount@bootsect& (0+255),w,b
 13890  000802  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13891  000804  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13892  000806  217B               	addwfc	(auto_mount@bootsect+1)& (0+255),w,b
 13893  000808  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13894  00080A  0E00               	movlw	0
 13895  00080C  217C               	addwfc	(auto_mount@bootsect+2)& (0+255),w,b
 13896  00080E  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13897  000810  0E00               	movlw	0
 13898  000812  217D               	addwfc	(auto_mount@bootsect+3)& (0+255),w,b
 13899  000814  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 13900  000816  EE20 F008          	lfsr	2,8
 13901  00081A  518A               	movf	auto_mount@fs& (0+255),w,b
 13902  00081C  26D9               	addwf	fsr2l,f,c
 13903  00081E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13904  000820  22DA               	addwfc	fsr2h,f,c
 13905  000822  C062  FFDE         	movff	??_auto_mount+2,postinc2
 13906  000826  C063  FFDE         	movff	??_auto_mount+3,postinc2
 13907  00082A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 13908  00082E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;tff.c: 714: fs->csize = fs->win[13];
 13912  000832  EE20 F02D          	lfsr	2,45
 13913  000836  518A               	movf	auto_mount@fs& (0+255),w,b
 13914  000838  26D9               	addwf	fsr2l,f,c
 13915  00083A  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13916  00083C  22DA               	addwfc	fsr2h,f,c
 13917  00083E  EE10 F01D          	lfsr	1,29
 13918  000842  518A               	movf	auto_mount@fs& (0+255),w,b
 13919  000844  26E1               	addwf	fsr1l,f,c
 13920  000846  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13921  000848  22E2               	addwfc	fsr1h,f,c
 13922  00084A  CFDF FFE7          	movff	indf2,indf1
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;tff.c: 715: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(&fs->win[17]));
 13926  00084E  EE20 F031          	lfsr	2,49
 13927  000852  518A               	movf	auto_mount@fs& (0+255),w,b
 13928  000854  26D9               	addwf	fsr2l,f,c
 13929  000856  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13930  000858  22DA               	addwfc	fsr2h,f,c
 13931  00085A  EE10 F002          	lfsr	1,2
 13932  00085E  518A               	movf	auto_mount@fs& (0+255),w,b
 13933  000860  26E1               	addwf	fsr1l,f,c
 13934  000862  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13935  000864  22E2               	addwfc	fsr1h,f,c
 13936  000866  CFDE FFE6          	movff	postinc2,postinc1
 13937  00086A  CFDD FFE5          	movff	postdec2,postdec1
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;tff.c: 716: totalsect = (WORD)(*(WORD*)(BYTE*)(&fs->win[19]));
 13941  00086E  EE20 F033          	lfsr	2,51
 13942  000872  518A               	movf	auto_mount@fs& (0+255),w,b
 13943  000874  26D9               	addwf	fsr2l,f,c
 13944  000876  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13945  000878  22DA               	addwfc	fsr2h,f,c
 13946  00087A  CFDE F060          	movff	postinc2,??_auto_mount
 13947  00087E  CFDD F061          	movff	postdec2,??_auto_mount+1
 13948  000882  C060  F07E         	movff	??_auto_mount,auto_mount@totalsect
 13949  000886  C061  F07F         	movff	??_auto_mount+1,auto_mount@totalsect+1
 13950  00088A  6B80               	clrf	(auto_mount@totalsect+2)& (0+255),b
 13951  00088C  6B81               	clrf	(auto_mount@totalsect+3)& (0+255),b
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;tff.c: 717: if (!totalsect) totalsect = (DWORD)(*(DWORD*)(BYTE*)(&fs->win[32]));
 13955  00088E  517E               	movf	auto_mount@totalsect& (0+255),w,b
 13956  000890  117F               	iorwf	(auto_mount@totalsect+1)& (0+255),w,b
 13957  000892  1180               	iorwf	(auto_mount@totalsect+2)& (0+255),w,b
 13958  000894  1181               	iorwf	(auto_mount@totalsect+3)& (0+255),w,b
 13959  000896  A4D8               	btfss	status,2,c
 13960  000898  D00E               	goto	l11998
 13961                           
 13962                           ; BSR set to: 0
 13963  00089A  EE20 F040          	lfsr	2,64
 13964  00089E  518A               	movf	auto_mount@fs& (0+255),w,b
 13965  0008A0  26D9               	addwf	fsr2l,f,c
 13966  0008A2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13967  0008A4  22DA               	addwfc	fsr2h,f,c
 13968  0008A6  CFDE F07E          	movff	postinc2,auto_mount@totalsect
 13969  0008AA  CFDE F07F          	movff	postinc2,auto_mount@totalsect+1
 13970  0008AE  CFDE F080          	movff	postinc2,auto_mount@totalsect+2
 13971  0008B2  CFDE F081          	movff	postinc2,auto_mount@totalsect+3
 13972  0008B6                     l11998:
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;tff.c: 718: fs->max_clust = maxclust = (totalsect;tff.c: 719: - (WORD)(*(WORD*)(BYTE*)(
      +                          &fs->win[14])) - fatsize - fs->n_rootdir / 16;tff.c: 720: ) / fs->csize + 2;
 13976  0008B6  EE20 F002          	lfsr	2,2
 13977  0008BA  518A               	movf	auto_mount@fs& (0+255),w,b
 13978  0008BC  26D9               	addwf	fsr2l,f,c
 13979  0008BE  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 13980  0008C0  22DA               	addwfc	fsr2h,f,c
 13981  0008C2  CFDE F060          	movff	postinc2,??_auto_mount
 13982  0008C6  CFDD F061          	movff	postdec2,??_auto_mount+1
 13983  0008CA  0E04               	movlw	4
 13984  0008CC  6F62               	movwf	(??_auto_mount+2)& (0+255),b
 13985  0008CE                     u13935:
 13986  0008CE  90D8               	bcf	status,0,c
 13987  0008D0  3361               	rrcf	(??_auto_mount+1)& (0+255),f,b
 13988  0008D2  3360               	rrcf	??_auto_mount& (0+255),f,b
 13989  0008D4  2F62               	decfsz	(??_auto_mount+2)& (0+255),f,b
 13990  0008D6  D7FB               	goto	u13935
 13991  0008D8  5160               	movf	??_auto_mount& (0+255),w,b
 13992  0008DA  6F63               	movwf	(??_auto_mount+3)& (0+255),b
 13993  0008DC  5161               	movf	(??_auto_mount+1)& (0+255),w,b
 13994  0008DE  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 13995  0008E0  6B65               	clrf	(??_auto_mount+5)& (0+255),b
 13996  0008E2  6B66               	clrf	(??_auto_mount+6)& (0+255),b
 13997  0008E4  EE20 F02E          	lfsr	2,46
 13998  0008E8  518A               	movf	auto_mount@fs& (0+255),w,b
 13999  0008EA  26D9               	addwf	fsr2l,f,c
 14000  0008EC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14001  0008EE  22DA               	addwfc	fsr2h,f,c
 14002  0008F0  CFDE F067          	movff	postinc2,??_auto_mount+7
 14003  0008F4  CFDD F068          	movff	postdec2,??_auto_mount+8
 14004  0008F8  5167               	movf	(??_auto_mount+7)& (0+255),w,b
 14005  0008FA  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14006  0008FC  5168               	movf	(??_auto_mount+8)& (0+255),w,b
 14007  0008FE  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14008  000900  6B6B               	clrf	(??_auto_mount+11)& (0+255),b
 14009  000902  6B6C               	clrf	(??_auto_mount+12)& (0+255),b
 14010  000904  1F69               	comf	(??_auto_mount+9)& (0+255),f,b
 14011  000906  1F6A               	comf	(??_auto_mount+10)& (0+255),f,b
 14012  000908  1F6B               	comf	(??_auto_mount+11)& (0+255),f,b
 14013  00090A  1F6C               	comf	(??_auto_mount+12)& (0+255),f,b
 14014  00090C  2B69               	incf	(??_auto_mount+9)& (0+255),f,b
 14015  00090E  0E00               	movlw	0
 14016  000910  236A               	addwfc	(??_auto_mount+10)& (0+255),f,b
 14017  000912  236B               	addwfc	(??_auto_mount+11)& (0+255),f,b
 14018  000914  236C               	addwfc	(??_auto_mount+12)& (0+255),f,b
 14019  000916  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14020  000918  5D69               	subwf	(??_auto_mount+9)& (0+255),w,b
 14021  00091A  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14022  00091C  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14023  00091E  596A               	subwfb	(??_auto_mount+10)& (0+255),w,b
 14024  000920  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14025  000922  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14026  000924  596B               	subwfb	(??_auto_mount+11)& (0+255),w,b
 14027  000926  6F6F               	movwf	(??_auto_mount+15)& (0+255),b
 14028  000928  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14029  00092A  596C               	subwfb	(??_auto_mount+12)& (0+255),w,b
 14030  00092C  6F70               	movwf	(??_auto_mount+16)& (0+255),b
 14031  00092E  5163               	movf	(??_auto_mount+3)& (0+255),w,b
 14032  000930  5D6D               	subwf	(??_auto_mount+13)& (0+255),w,b
 14033  000932  6F71               	movwf	(??_auto_mount+17)& (0+255),b
 14034  000934  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14035  000936  596E               	subwfb	(??_auto_mount+14)& (0+255),w,b
 14036  000938  6F72               	movwf	(??_auto_mount+18)& (0+255),b
 14037  00093A  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14038  00093C  596F               	subwfb	(??_auto_mount+15)& (0+255),w,b
 14039  00093E  6F73               	movwf	(??_auto_mount+19)& (0+255),b
 14040  000940  5166               	movf	(??_auto_mount+6)& (0+255),w,b
 14041  000942  5970               	subwfb	(??_auto_mount+16)& (0+255),w,b
 14042  000944  6F74               	movwf	(??_auto_mount+20)& (0+255),b
 14043  000946  517E               	movf	auto_mount@totalsect& (0+255),w,b
 14044  000948  2571               	addwf	(??_auto_mount+17)& (0+255),w,b
 14045  00094A  6E0A               	movwf	___lldiv@dividend^0,c
 14046  00094C  517F               	movf	(auto_mount@totalsect+1)& (0+255),w,b
 14047  00094E  2172               	addwfc	(??_auto_mount+18)& (0+255),w,b
 14048  000950  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 14049  000952  5180               	movf	(auto_mount@totalsect+2)& (0+255),w,b
 14050  000954  2173               	addwfc	(??_auto_mount+19)& (0+255),w,b
 14051  000956  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 14052  000958  5181               	movf	(auto_mount@totalsect+3)& (0+255),w,b
 14053  00095A  2174               	addwfc	(??_auto_mount+20)& (0+255),w,b
 14054  00095C  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 14055  00095E  EE20 F01D          	lfsr	2,29
 14056  000962  518A               	movf	auto_mount@fs& (0+255),w,b
 14057  000964  26D9               	addwf	fsr2l,f,c
 14058  000966  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14059  000968  22DA               	addwfc	fsr2h,f,c
 14060  00096A  50DF               	movf	indf2,w,c
 14061  00096C  6F75               	movwf	(??_auto_mount+21)& (0+255),b
 14062  00096E  5175               	movf	(??_auto_mount+21)& (0+255),w,b
 14063  000970  6E0E               	movwf	___lldiv@divisor^0,c
 14064  000972  6A0F               	clrf	(___lldiv@divisor+1)^0,c
 14065  000974  6A10               	clrf	(___lldiv@divisor+2)^0,c
 14066  000976  6A11               	clrf	(___lldiv@divisor+3)^0,c
 14067  000978  ECF4  F024         	call	___lldiv	;wreg free
 14068  00097C  0E02               	movlw	2
 14069  00097E  240A               	addwf	?___lldiv^0,w,c
 14070  000980  0100               	movlb	0	; () banked
 14071  000982  6F76               	movwf	auto_mount@maxclust& (0+255),b
 14072  000984  0E00               	movlw	0
 14073  000986  200B               	addwfc	(?___lldiv+1)^0,w,c
 14074  000988  6F77               	movwf	(auto_mount@maxclust+1)& (0+255),b
 14075  00098A  0E00               	movlw	0
 14076  00098C  200C               	addwfc	(?___lldiv+2)^0,w,c
 14077  00098E  6F78               	movwf	(auto_mount@maxclust+2)& (0+255),b
 14078  000990  0E00               	movlw	0
 14079  000992  200D               	addwfc	(?___lldiv+3)^0,w,c
 14080  000994  6F79               	movwf	(auto_mount@maxclust+3)& (0+255),b
 14081  000996  EE20 F016          	lfsr	2,22
 14082  00099A  518A               	movf	auto_mount@fs& (0+255),w,b
 14083  00099C  26D9               	addwf	fsr2l,f,c
 14084  00099E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14085  0009A0  22DA               	addwfc	fsr2h,f,c
 14086  0009A2  C076  FFDE         	movff	auto_mount@maxclust,postinc2
 14087  0009A6  C077  FFDD         	movff	auto_mount@maxclust+1,postdec2
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;tff.c: 722: fmt = 1;
 14091  0009AA  0E01               	movlw	1
 14092  0009AC  6F84               	movwf	auto_mount@fmt& (0+255),b
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;tff.c: 723: if (maxclust >= 0xFF7) fmt = 2;
 14096  0009AE  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14097  0009B0  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14098  0009B2  E106               	bnz	u13940
 14099  0009B4  0EF7               	movlw	247
 14100  0009B6  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14101  0009B8  0E0F               	movlw	15
 14102  0009BA  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14103  0009BC  A0D8               	btfss	status,0,c
 14104  0009BE  D002               	goto	l12006
 14105  0009C0                     u13940:
 14106                           
 14107                           ; BSR set to: 0
 14108  0009C0  0E02               	movlw	2
 14109  0009C2  6F84               	movwf	auto_mount@fmt& (0+255),b
 14110  0009C4                     l12006:
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;tff.c: 724: if (maxclust >= 0xFFF7)
 14114  0009C4  5179               	movf	(auto_mount@maxclust+3)& (0+255),w,b
 14115  0009C6  1178               	iorwf	(auto_mount@maxclust+2)& (0+255),w,b
 14116  0009C8  E107               	bnz	u13950
 14117  0009CA  0EF7               	movlw	247
 14118  0009CC  5D76               	subwf	auto_mount@maxclust& (0+255),w,b
 14119  0009CE  0EFF               	movlw	255
 14120  0009D0  5977               	subwfb	(auto_mount@maxclust+1)& (0+255),w,b
 14121  0009D2  B0D8               	btfsc	status,0,c
 14122  0009D4  D6AC               	goto	u13900
 14123  0009D6  D001               	goto	l12012
 14124  0009D8                     u13950:
 14125  0009D8  D6AA               	goto	u13900
 14126  0009DA                     l12012:
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;tff.c: 733: fs->dirbase = fs->fatbase + fatsize;
 14130  0009DA  EE20 F008          	lfsr	2,8
 14131  0009DE  518A               	movf	auto_mount@fs& (0+255),w,b
 14132  0009E0  26D9               	addwf	fsr2l,f,c
 14133  0009E2  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14134  0009E4  22DA               	addwfc	fsr2h,f,c
 14135  0009E6  CFDE F060          	movff	postinc2,??_auto_mount
 14136  0009EA  CFDE F061          	movff	postinc2,??_auto_mount+1
 14137  0009EE  CFDE F062          	movff	postinc2,??_auto_mount+2
 14138  0009F2  CFDE F063          	movff	postinc2,??_auto_mount+3
 14139  0009F6  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14140  0009F8  2560               	addwf	??_auto_mount& (0+255),w,b
 14141  0009FA  6F64               	movwf	(??_auto_mount+4)& (0+255),b
 14142  0009FC  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14143  0009FE  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14144  000A00  6F65               	movwf	(??_auto_mount+5)& (0+255),b
 14145  000A02  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14146  000A04  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14147  000A06  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14148  000A08  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14149  000A0A  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14150  000A0C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14151  000A0E  EE20 F00C          	lfsr	2,12
 14152  000A12  518A               	movf	auto_mount@fs& (0+255),w,b
 14153  000A14  26D9               	addwf	fsr2l,f,c
 14154  000A16  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14155  000A18  22DA               	addwfc	fsr2h,f,c
 14156  000A1A  C064  FFDE         	movff	??_auto_mount+4,postinc2
 14157  000A1E  C065  FFDE         	movff	??_auto_mount+5,postinc2
 14158  000A22  C066  FFDE         	movff	??_auto_mount+6,postinc2
 14159  000A26  C067  FFDE         	movff	??_auto_mount+7,postinc2
 14160                           
 14161                           ;tff.c: 734: fs->database = fs->fatbase + fatsize + fs->n_rootdir / 16;
 14162  000A2A  EE20 F008          	lfsr	2,8
 14163  000A2E  518A               	movf	auto_mount@fs& (0+255),w,b
 14164  000A30  26D9               	addwf	fsr2l,f,c
 14165  000A32  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14166  000A34  22DA               	addwfc	fsr2h,f,c
 14167  000A36  CFDE F060          	movff	postinc2,??_auto_mount
 14168  000A3A  CFDE F061          	movff	postinc2,??_auto_mount+1
 14169  000A3E  CFDE F062          	movff	postinc2,??_auto_mount+2
 14170  000A42  CFDE F063          	movff	postinc2,??_auto_mount+3
 14171  000A46  EE20 F002          	lfsr	2,2
 14172  000A4A  518A               	movf	auto_mount@fs& (0+255),w,b
 14173  000A4C  26D9               	addwf	fsr2l,f,c
 14174  000A4E  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14175  000A50  22DA               	addwfc	fsr2h,f,c
 14176  000A52  CFDE F064          	movff	postinc2,??_auto_mount+4
 14177  000A56  CFDD F065          	movff	postdec2,??_auto_mount+5
 14178  000A5A  0E04               	movlw	4
 14179  000A5C  6F66               	movwf	(??_auto_mount+6)& (0+255),b
 14180  000A5E                     u13965:
 14181  000A5E  90D8               	bcf	status,0,c
 14182  000A60  3365               	rrcf	(??_auto_mount+5)& (0+255),f,b
 14183  000A62  3364               	rrcf	(??_auto_mount+4)& (0+255),f,b
 14184  000A64  2F66               	decfsz	(??_auto_mount+6)& (0+255),f,b
 14185  000A66  D7FB               	goto	u13965
 14186  000A68  5164               	movf	(??_auto_mount+4)& (0+255),w,b
 14187  000A6A  2560               	addwf	??_auto_mount& (0+255),w,b
 14188  000A6C  6F67               	movwf	(??_auto_mount+7)& (0+255),b
 14189  000A6E  5165               	movf	(??_auto_mount+5)& (0+255),w,b
 14190  000A70  2161               	addwfc	(??_auto_mount+1)& (0+255),w,b
 14191  000A72  6F68               	movwf	(??_auto_mount+8)& (0+255),b
 14192  000A74  0E00               	movlw	0
 14193  000A76  2162               	addwfc	(??_auto_mount+2)& (0+255),w,b
 14194  000A78  6F69               	movwf	(??_auto_mount+9)& (0+255),b
 14195  000A7A  0E00               	movlw	0
 14196  000A7C  2163               	addwfc	(??_auto_mount+3)& (0+255),w,b
 14197  000A7E  6F6A               	movwf	(??_auto_mount+10)& (0+255),b
 14198  000A80  5186               	movf	auto_mount@fatsize& (0+255),w,b
 14199  000A82  2567               	addwf	(??_auto_mount+7)& (0+255),w,b
 14200  000A84  6F6B               	movwf	(??_auto_mount+11)& (0+255),b
 14201  000A86  5187               	movf	(auto_mount@fatsize+1)& (0+255),w,b
 14202  000A88  2168               	addwfc	(??_auto_mount+8)& (0+255),w,b
 14203  000A8A  6F6C               	movwf	(??_auto_mount+12)& (0+255),b
 14204  000A8C  5188               	movf	(auto_mount@fatsize+2)& (0+255),w,b
 14205  000A8E  2169               	addwfc	(??_auto_mount+9)& (0+255),w,b
 14206  000A90  6F6D               	movwf	(??_auto_mount+13)& (0+255),b
 14207  000A92  5189               	movf	(auto_mount@fatsize+3)& (0+255),w,b
 14208  000A94  216A               	addwfc	(??_auto_mount+10)& (0+255),w,b
 14209  000A96  6F6E               	movwf	(??_auto_mount+14)& (0+255),b
 14210  000A98  EE20 F010          	lfsr	2,16
 14211  000A9C  518A               	movf	auto_mount@fs& (0+255),w,b
 14212  000A9E  26D9               	addwf	fsr2l,f,c
 14213  000AA0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14214  000AA2  22DA               	addwfc	fsr2h,f,c
 14215  000AA4  C06B  FFDE         	movff	??_auto_mount+11,postinc2
 14216  000AA8  C06C  FFDE         	movff	??_auto_mount+12,postinc2
 14217  000AAC  C06D  FFDE         	movff	??_auto_mount+13,postinc2
 14218  000AB0  C06E  FFDE         	movff	??_auto_mount+14,postinc2
 14219                           
 14220                           ;tff.c: 738: fs->free_clust = (CLUST)0xFFFFFFFF;
 14221  000AB4  EE20 F01A          	lfsr	2,26
 14222  000AB8  518A               	movf	auto_mount@fs& (0+255),w,b
 14223  000ABA  26D9               	addwf	fsr2l,f,c
 14224  000ABC  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14225  000ABE  22DA               	addwfc	fsr2h,f,c
 14226  000AC0  0EFF               	movlw	255
 14227  000AC2  6EDE               	movwf	postinc2,c
 14228  000AC4  0EFF               	movlw	255
 14229  000AC6  6EDD               	movwf	postdec2,c
 14230                           
 14231                           ;tff.c: 754: fs->fs_type = fmt;
 14232  000AC8  EE20 F01C          	lfsr	2,28
 14233  000ACC  518A               	movf	auto_mount@fs& (0+255),w,b
 14234  000ACE  26D9               	addwf	fsr2l,f,c
 14235  000AD0  518B               	movf	(auto_mount@fs+1)& (0+255),w,b
 14236  000AD2  22DA               	addwfc	fsr2h,f,c
 14237  000AD4  C084  FFDF         	movff	auto_mount@fmt,indf2
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;tff.c: 755: fs->id = ++fsid;
 14241  000AD8  0101               	movlb	1	; () banked
 14242  000ADA  4B72               	infsnz	_fsid& (0+255),f,b
 14243  000ADC  2B73               	incf	(_fsid+1)& (0+255),f,b
 14244  000ADE  C08A  FFD9         	movff	auto_mount@fs,fsr2l
 14245  000AE2  C08B  FFDA         	movff	auto_mount@fs+1,fsr2h
 14246  000AE6  C172  FFDE         	movff	_fsid,postinc2
 14247  000AEA  C173  FFDD         	movff	_fsid+1,postdec2
 14248                           
 14249                           ;tff.c: 756: return FR_OK;
 14250  000AEE  0E00               	movlw	0
 14251  000AF0  0012               	return		;funcret
 14252  000AF2                     __end_of_auto_mount:
 14253                           	callstack 0
 14254                           
 14255 ;; *************** function _memset *****************
 14256 ;; Defined at:
 14257 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;  p1              2    9[COMRAM] PTR void 
 14260 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14261 ;;  c               2   11[COMRAM] int 
 14262 ;;  n               2   13[COMRAM] unsigned int 
 14263 ;; Auto vars:     Size  Location     Type
 14264 ;;  p               2   15[COMRAM] PTR unsigned char 
 14265 ;;		 -> f_opendir@fn(12), f_open@fn(12), NULL(0), fs(544), 
 14266 ;; Return value:  Size  Location     Type
 14267 ;;                  2    9[COMRAM] PTR void 
 14268 ;; Registers used:
 14269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14270 ;; Tracked objects:
 14271 ;;		On entry : 0/0
 14272 ;;		On exit  : 0/0
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14275 ;;      Params:         6       0       0       0       0       0       0       0       0
 14276 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14277 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14278 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14279 ;;Total ram usage:        8 bytes
 14280 ;; Hardware stack levels used:    1
 14281 ;; Hardware stack levels required when called:    2
 14282 ;; This function calls:
 14283 ;;		Nothing
 14284 ;; This function is called by:
 14285 ;;		_make_dirfile
 14286 ;;		_reserve_direntry
 14287 ;;		_auto_mount
 14288 ;;		_f_open
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           	psect	text79
 14293  005806                     __ptext79:
 14294                           	callstack 0
 14295  005806                     _memset:
 14296                           	callstack 21
 14297                           
 14298                           ;incstack = 0
 14299  005806  C00A  F010         	movff	memset@p1,memset@p
 14300  00580A  C00B  F011         	movff	memset@p1+1,memset@p+1
 14301  00580E  D008               	goto	l11136
 14302  005810                     l11132:
 14303  005810  C010  FFD9         	movff	memset@p,fsr2l
 14304  005814  C011  FFDA         	movff	memset@p+1,fsr2h
 14305  005818  C00C  FFDF         	movff	memset@c,indf2
 14306  00581C  4A10               	infsnz	memset@p^0,f,c
 14307  00581E  2A11               	incf	(memset@p+1)^0,f,c
 14308  005820                     l11136:
 14309  005820  060E               	decf	memset@n^0,f,c
 14310  005822  A0D8               	btfss	status,0,c
 14311  005824  060F               	decf	(memset@n+1)^0,f,c
 14312  005826  280E               	incf	memset@n^0,w,c
 14313  005828  E1F3               	bnz	l11132
 14314  00582A  280F               	incf	(memset@n+1)^0,w,c
 14315  00582C  B4D8               	btfsc	status,2,c
 14316  00582E  0012               	return	
 14317  005830  D7EF               	goto	l11132
 14318  005832                     __end_of_memset:
 14319                           	callstack 0
 14320                           
 14321 ;; *************** function _disk_initialize *****************
 14322 ;; Defined at:
 14323 ;;		line 59 in file "bibliotecas/diskio.c"
 14324 ;; Parameters:    Size  Location     Type
 14325 ;;  pdrv            1    wreg     unsigned char 
 14326 ;; Auto vars:     Size  Location     Type
 14327 ;;  pdrv            1   41[COMRAM] unsigned char 
 14328 ;;  result          2    0        int 
 14329 ;;  stat            1   42[COMRAM] unsigned char 
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  1    wreg      unsigned char 
 14332 ;; Registers used:
 14333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/0
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14339 ;;      Params:         0       0       0       0       0       0       0       0       0
 14340 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14341 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14342 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14343 ;;Total ram usage:        2 bytes
 14344 ;; Hardware stack levels used:    1
 14345 ;; Hardware stack levels required when called:    7
 14346 ;; This function calls:
 14347 ;;		_sdc_disk_initialize
 14348 ;; This function is called by:
 14349 ;;		_auto_mount
 14350 ;; This function uses a non-reentrant model
 14351 ;;
 14352                           
 14353                           	psect	text80
 14354  005904                     __ptext80:
 14355                           	callstack 0
 14356  005904                     _disk_initialize:
 14357                           	callstack 17
 14358                           
 14359                           ;incstack = 0
 14360                           ;disk_initialize@pdrv stored from wreg
 14361  005904  6E2A               	movwf	disk_initialize@pdrv^0,c
 14362                           
 14363                           ;diskio.c: 63: DSTATUS stat;;diskio.c: 64: int result;;diskio.c: 66: switch (pdrv) {
 14364  005906  D005               	goto	l11324
 14365  005908                     l11306:
 14366                           
 14367                           ;diskio.c: 68: stat = sdc_disk_initialize();
 14368  005908  EC8A  F00C         	call	_sdc_disk_initialize	;wreg free
 14369  00590C  6E2B               	movwf	disk_initialize@stat^0,c
 14370  00590E                     l11308:
 14371                           
 14372                           ;diskio.c: 72: return stat;
 14373  00590E  502B               	movf	disk_initialize@stat^0,w,c
 14374  005910  0012               	return	
 14375  005912                     l11324:
 14376  005912  502A               	movf	disk_initialize@pdrv^0,w,c
 14377                           
 14378                           ; Switch size 1, requested type "simple"
 14379                           ; Number of cases is 3, Range of values is 0 to 2
 14380                           ; switch strategies available:
 14381                           ; Name         Instructions Cycles
 14382                           ; simple_byte           10     6 (average)
 14383                           ;	Chosen strategy is simple_byte
 14384  005914  0A00               	xorlw	0	; case 0
 14385  005916  B4D8               	btfsc	status,2,c
 14386  005918  D7F7               	goto	l11306
 14387  00591A  0A01               	xorlw	1	; case 1
 14388  00591C  B4D8               	btfsc	status,2,c
 14389  00591E  D7F4               	goto	l11306
 14390  005920  0A03               	xorlw	3	; case 2
 14391  005922  B4D8               	btfsc	status,2,c
 14392  005924  D7F4               	goto	l11308
 14393                           
 14394                           ;diskio.c: 88: return 0x01;
 14395  005926  0E01               	movlw	1
 14396  005928  0012               	return		;funcret
 14397  00592A                     __end_of_disk_initialize:
 14398                           	callstack 0
 14399                           
 14400 ;; *************** function _sdc_disk_initialize *****************
 14401 ;; Defined at:
 14402 ;;		line 275 in file "bibliotecas/diskio.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;		None
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;  count2          2   38[COMRAM] int 
 14407 ;;  crc_number      2   34[COMRAM] int 
 14408 ;;  count1          2   32[COMRAM] int 
 14409 ;;  i               2    0        int 
 14410 ;;  buff            1   40[COMRAM] unsigned char 
 14411 ;;  ocr             1   37[COMRAM] unsigned char 
 14412 ;;  buff_i          1   36[COMRAM] unsigned char 
 14413 ;;  stat            1   31[COMRAM] unsigned char 
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1    wreg      unsigned char 
 14416 ;; Registers used:
 14417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0
 14424 ;;      Locals:        12       0       0       0       0       0       0       0       0
 14425 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14426 ;;      Totals:        13       0       0       0       0       0       0       0       0
 14427 ;;Total ram usage:       13 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; Hardware stack levels required when called:    6
 14430 ;; This function calls:
 14431 ;;		_command
 14432 ;;		_dummy_clocks
 14433 ;;		_escreve_frase_ram_lcd
 14434 ;;		_posicao_cursor_lcd
 14435 ;;		_proceed
 14436 ;;		_response
 14437 ;;		_sdc_reset
 14438 ;; This function is called by:
 14439 ;;		_disk_initialize
 14440 ;; This function uses a non-reentrant model
 14441 ;;
 14442                           
 14443                           	psect	text81
 14444  001914                     __ptext81:
 14445                           	callstack 0
 14446  001914                     _sdc_disk_initialize:
 14447                           	callstack 17
 14448                           
 14449                           ;incstack = 0
 14450  001914  0E00               	movlw	0
 14451  001916  6E22               	movwf	(sdc_disk_initialize@count1+1)^0,c
 14452  001918  0E00               	movlw	0
 14453  00191A  6E21               	movwf	sdc_disk_initialize@count1^0,c
 14454  00191C  0E00               	movlw	0
 14455  00191E  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14456  001920  0E00               	movlw	0
 14457  001922  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14458                           
 14459                           ;diskio.c: 280: BYTE buff = 0;
 14460  001924  0E00               	movlw	0
 14461  001926  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14462                           
 14463                           ;diskio.c: 281: BYTE buff_i;;diskio.c: 282: int crc_number;;diskio.c: 283: _delay((unsig
      +                          ned long)((1)*(48000000/4000.0)));
 14464  001928  0E10               	movlw	16
 14465  00192A  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14466  00192C  0E94               	movlw	148
 14467  00192E                     u16717:
 14468  00192E  2EE8               	decfsz	wreg,f,c
 14469  001930  D7FE               	bra	u16717
 14470  001932  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14471  001934  D7FC               	bra	u16717
 14472  001936  D000               	nop2	
 14473                           
 14474                           ;diskio.c: 284: dummy_clocks(100);
 14475  001938  0E64               	movlw	100
 14476  00193A  ECD1  F02A         	call	_dummy_clocks
 14477                           
 14478                           ;diskio.c: 287: sdc_reset();
 14479  00193E  ECE3  F023         	call	_sdc_reset	;wreg free
 14480                           
 14481                           ;diskio.c: 288: command(0X48, 0x000001AA, 0x87);
 14482  001942  0EAA               	movlw	170
 14483  001944  6E0F               	movwf	command@arg^0,c
 14484  001946  0E01               	movlw	1
 14485  001948  6E10               	movwf	(command@arg+1)^0,c
 14486  00194A  0E00               	movlw	0
 14487  00194C  6E11               	movwf	(command@arg+2)^0,c
 14488  00194E  0E00               	movlw	0
 14489  001950  6E12               	movwf	(command@arg+3)^0,c
 14490  001952  0E87               	movlw	135
 14491  001954  6E13               	movwf	command@CRC^0,c
 14492  001956  0E48               	movlw	72
 14493  001958  ECB5  F027         	call	_command
 14494                           
 14495                           ;diskio.c: 289: proceed();
 14496  00195C  ECF9  F02D         	call	_proceed	;wreg free
 14497  001960                     l10944:
 14498                           
 14499                           ;diskio.c: 291: buff_i = response();
 14500  001960  ECF3  F02D         	call	_response	;wreg free
 14501  001964  6E25               	movwf	sdc_disk_initialize@buff_i^0,c
 14502                           
 14503                           ;diskio.c: 292: if(buff_i == 1)
 14504  001966  0425               	decf	sdc_disk_initialize@buff_i^0,w,c
 14505  001968  A4D8               	btfss	status,2,c
 14506  00196A  D004               	goto	l10950
 14507                           
 14508                           ;diskio.c: 293: {;diskio.c: 294: crc_number = buff_i<<8;
 14509  00196C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14510  00196E  6E24               	movwf	(sdc_disk_initialize@crc_number+1)^0,c
 14511  001970  6A23               	clrf	sdc_disk_initialize@crc_number^0,c
 14512                           
 14513                           ;diskio.c: 295: }
 14514  001972  D006               	goto	l10954
 14515  001974                     l10950:
 14516                           
 14517                           ;diskio.c: 296: else if(buff_i==0xAA)
 14518  001974  0EAA               	movlw	170
 14519  001976  1825               	xorwf	sdc_disk_initialize@buff_i^0,w,c
 14520  001978  A4D8               	btfss	status,2,c
 14521  00197A  D002               	goto	l10954
 14522                           
 14523                           ;diskio.c: 297: {;diskio.c: 298: crc_number |= buff_i;
 14524  00197C  5025               	movf	sdc_disk_initialize@buff_i^0,w,c
 14525  00197E  1223               	iorwf	sdc_disk_initialize@crc_number^0,f,c
 14526  001980                     l10954:
 14527                           
 14528                           ;diskio.c: 299: };diskio.c: 300: count1++;
 14529  001980  4A21               	infsnz	sdc_disk_initialize@count1^0,f,c
 14530  001982  2A22               	incf	(sdc_disk_initialize@count1+1)^0,f,c
 14531                           
 14532                           ;diskio.c: 301: }while(crc_number != 0x1AA && count1<1000);
 14533  001984  0EAA               	movlw	170
 14534  001986  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14535  001988  E103               	bnz	u12290
 14536  00198A  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14537  00198C  B4D8               	btfsc	status,2,c
 14538  00198E  D008               	goto	u12300
 14539  001990                     u12290:
 14540  001990  BE22               	btfsc	(sdc_disk_initialize@count1+1)^0,7,c
 14541  001992  D7E6               	goto	l10944
 14542  001994  0EE8               	movlw	232
 14543  001996  5C21               	subwf	sdc_disk_initialize@count1^0,w,c
 14544  001998  0E03               	movlw	3
 14545  00199A  5822               	subwfb	(sdc_disk_initialize@count1+1)^0,w,c
 14546  00199C  A0D8               	btfss	status,0,c
 14547  00199E  D7E0               	goto	l10944
 14548  0019A0                     u12300:
 14549                           
 14550                           ;diskio.c: 306: if (crc_number == 0x1AA)
 14551  0019A0  0EAA               	movlw	170
 14552  0019A2  1823               	xorwf	sdc_disk_initialize@crc_number^0,w,c
 14553  0019A4  E102               	bnz	u12311
 14554  0019A6  0424               	decf	(sdc_disk_initialize@crc_number+1)^0,w,c
 14555  0019A8  A4D8               	btfss	status,2,c
 14556  0019AA                     u12311:
 14557  0019AA  D099               	goto	l11032
 14558  0019AC                     u12310:
 14559                           
 14560                           ;diskio.c: 310: count2 = 0;
 14561                           
 14562                           ;diskio.c: 309: do{
 14563  0019AC  0E00               	movlw	0
 14564  0019AE  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14565  0019B0  0E00               	movlw	0
 14566  0019B2  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14567  0019B4                     
 14568                           ;diskio.c: 319: dummy_clocks(10);
 14569  0019B4  0E0A               	movlw	10
 14570  0019B6  ECD1  F02A         	call	_dummy_clocks
 14571                           
 14572                           ;diskio.c: 320: command(0X77, 0X00000000, 0X00);
 14573  0019BA  0E00               	movlw	0
 14574  0019BC  6E0F               	movwf	command@arg^0,c
 14575  0019BE  0E00               	movlw	0
 14576  0019C0  6E10               	movwf	(command@arg+1)^0,c
 14577  0019C2  0E00               	movlw	0
 14578  0019C4  6E11               	movwf	(command@arg+2)^0,c
 14579  0019C6  0E00               	movlw	0
 14580  0019C8  6E12               	movwf	(command@arg+3)^0,c
 14581  0019CA  0E00               	movlw	0
 14582  0019CC  6E13               	movwf	command@CRC^0,c
 14583  0019CE  0E77               	movlw	119
 14584  0019D0  ECB5  F027         	call	_command
 14585                           
 14586                           ;diskio.c: 323: proceed();
 14587  0019D4  ECF9  F02D         	call	_proceed	;wreg free
 14588  0019D8                     l10974:
 14589                           
 14590                           ;diskio.c: 325: buff = response();
 14591  0019D8  ECF3  F02D         	call	_response	;wreg free
 14592  0019DC  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14593                           
 14594                           ;diskio.c: 326: count2++;
 14595  0019DE  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14596  0019E0  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14597                           
 14598                           ;diskio.c: 327: }while((buff!=0X01)&&(count2<10));
 14599  0019E2  0429               	decf	sdc_disk_initialize@buff^0,w,c
 14600  0019E4  B4D8               	btfsc	status,2,c
 14601  0019E6  D008               	goto	u12330
 14602  0019E8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14603  0019EA  D7F6               	goto	l10974
 14604  0019EC  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14605  0019EE  E104               	bnz	u12330
 14606  0019F0  0E0A               	movlw	10
 14607  0019F2  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14608  0019F4  A0D8               	btfss	status,0,c
 14609  0019F6  D7F0               	goto	l10974
 14610  0019F8                     u12330:
 14611                           
 14612                           ;diskio.c: 328: count2 = 0;
 14613  0019F8  0E00               	movlw	0
 14614  0019FA  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14615  0019FC  0E00               	movlw	0
 14616  0019FE  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14617                           
 14618                           ;diskio.c: 332: dummy_clocks(10);
 14619  001A00  0E0A               	movlw	10
 14620  001A02  ECD1  F02A         	call	_dummy_clocks
 14621                           
 14622                           ;diskio.c: 333: command(0X69, 0X40000000 , 0x00);
 14623  001A06  0E00               	movlw	0
 14624  001A08  6E0F               	movwf	command@arg^0,c
 14625  001A0A  0E00               	movlw	0
 14626  001A0C  6E10               	movwf	(command@arg+1)^0,c
 14627  001A0E  0E00               	movlw	0
 14628  001A10  6E11               	movwf	(command@arg+2)^0,c
 14629  001A12  0E40               	movlw	64
 14630  001A14  6E12               	movwf	(command@arg+3)^0,c
 14631  001A16  0E00               	movlw	0
 14632  001A18  6E13               	movwf	command@CRC^0,c
 14633  001A1A  0E69               	movlw	105
 14634  001A1C  ECB5  F027         	call	_command
 14635                           
 14636                           ;diskio.c: 334: proceed();
 14637  001A20  ECF9  F02D         	call	_proceed	;wreg free
 14638                           
 14639                           ;diskio.c: 335: buff = response();
 14640  001A24  ECF3  F02D         	call	_response	;wreg free
 14641  001A28  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14642                           
 14643                           ;diskio.c: 336: count2++;
 14644  001A2A  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14645  001A2C  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14646                           
 14647                           ;diskio.c: 337: }while(buff!=0X00);
 14648  001A2E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14649  001A30  A4D8               	btfss	status,2,c
 14650  001A32  D7C0               	goto	l10964
 14651                           
 14652                           ;diskio.c: 342: dummy_clocks(10);
 14653  001A34  0E0A               	movlw	10
 14654  001A36  ECD1  F02A         	call	_dummy_clocks
 14655                           
 14656                           ;diskio.c: 343: command(0X7A, 0X00000000, 0XFF);
 14657  001A3A  0E00               	movlw	0
 14658  001A3C  6E0F               	movwf	command@arg^0,c
 14659  001A3E  0E00               	movlw	0
 14660  001A40  6E10               	movwf	(command@arg+1)^0,c
 14661  001A42  0E00               	movlw	0
 14662  001A44  6E11               	movwf	(command@arg+2)^0,c
 14663  001A46  0E00               	movlw	0
 14664  001A48  6E12               	movwf	(command@arg+3)^0,c
 14665  001A4A  0EFF               	movlw	255
 14666  001A4C  6E13               	movwf	command@CRC^0,c
 14667  001A4E  0E7A               	movlw	122
 14668  001A50  ECB5  F027         	call	_command
 14669                           
 14670                           ;diskio.c: 344: proceed();
 14671  001A54  ECF9  F02D         	call	_proceed	;wreg free
 14672  001A58                     l10998:
 14673                           
 14674                           ;diskio.c: 346: buff = response();
 14675  001A58  ECF3  F02D         	call	_response	;wreg free
 14676  001A5C  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14677                           
 14678                           ;diskio.c: 347: ocr = (buff << 1) & 0b10000000;
 14679  001A5E  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14680  001A60  2429               	addwf	sdc_disk_initialize@buff^0,w,c
 14681  001A62  0B80               	andlw	128
 14682  001A64  6E26               	movwf	sdc_disk_initialize@ocr^0,c
 14683                           
 14684                           ;diskio.c: 348: count2++;
 14685  001A66  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14686  001A68  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14687                           
 14688                           ;diskio.c: 349: }while(ocr!=0X00 && ocr != 0x01 && count2<10);
 14689  001A6A  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14690  001A6C  B4D8               	btfsc	status,2,c
 14691  001A6E  D00B               	goto	u12370
 14692  001A70  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14693  001A72  B4D8               	btfsc	status,2,c
 14694  001A74  D008               	goto	u12370
 14695  001A76  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14696  001A78  D7EF               	goto	l10998
 14697  001A7A  5028               	movf	(sdc_disk_initialize@count2+1)^0,w,c
 14698  001A7C  E104               	bnz	u12370
 14699  001A7E  0E0A               	movlw	10
 14700  001A80  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14701  001A82  A0D8               	btfss	status,0,c
 14702  001A84  D7E9               	goto	l10998
 14703  001A86                     u12370:
 14704                           
 14705                           ;diskio.c: 350: }while(ocr != 0X00 && ocr !=0x01);
 14706  001A86  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14707  001A88  B4D8               	btfsc	status,2,c
 14708  001A8A  D003               	goto	u12390
 14709  001A8C  0426               	decf	sdc_disk_initialize@ocr^0,w,c
 14710  001A8E  A4D8               	btfss	status,2,c
 14711  001A90  D78D               	goto	u12310
 14712  001A92                     u12390:
 14713                           
 14714                           ;diskio.c: 355: _delay((unsigned long)((1)*(48000000/4000.0)));
 14715  001A92  0E10               	movlw	16
 14716  001A94  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14717  001A96  0E94               	movlw	148
 14718  001A98                     u16727:
 14719  001A98  2EE8               	decfsz	wreg,f,c
 14720  001A9A  D7FE               	bra	u16727
 14721  001A9C  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14722  001A9E  D7FC               	bra	u16727
 14723  001AA0  D000               	nop2	
 14724                           
 14725                           ;diskio.c: 356: stat = 0X00;
 14726  001AA2  0E00               	movlw	0
 14727  001AA4  6E20               	movwf	sdc_disk_initialize@stat^0,c
 14728                           
 14729                           ;diskio.c: 358: if(!ocr)
 14730  001AA6  5026               	movf	sdc_disk_initialize@ocr^0,w,c
 14731  001AA8  A4D8               	btfss	status,2,c
 14732  001AAA  D0A6               	goto	u12490
 14733                           
 14734                           ;diskio.c: 359: {;diskio.c: 361: dummy_clocks(10);
 14735  001AAC  0E0A               	movlw	10
 14736  001AAE  ECD1  F02A         	call	_dummy_clocks
 14737                           
 14738                           ;diskio.c: 362: command(0x50, 0x00000200,0XFF);
 14739  001AB2  0E00               	movlw	0
 14740  001AB4  6E0F               	movwf	command@arg^0,c
 14741  001AB6  0E02               	movlw	2
 14742  001AB8  6E10               	movwf	(command@arg+1)^0,c
 14743  001ABA  0E00               	movlw	0
 14744  001ABC  6E11               	movwf	(command@arg+2)^0,c
 14745  001ABE  0E00               	movlw	0
 14746  001AC0  6E12               	movwf	(command@arg+3)^0,c
 14747  001AC2  0EFF               	movlw	255
 14748  001AC4  6E13               	movwf	command@CRC^0,c
 14749  001AC6  0E50               	movlw	80
 14750  001AC8  ECB5  F027         	call	_command
 14751                           
 14752                           ;diskio.c: 363: proceed();
 14753  001ACC  ECF9  F02D         	call	_proceed	;wreg free
 14754  001AD0                     
 14755                           ;diskio.c: 367: buff = response();
 14756  001AD0  ECF3  F02D         	call	_response	;wreg free
 14757  001AD4  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14758                           
 14759                           ;diskio.c: 368: }while(buff!=0X00);
 14760  001AD6  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14761  001AD8  B4D8               	btfsc	status,2,c
 14762  001ADA  D08E               	goto	u12490
 14763  001ADC  D7F9               	goto	l11026
 14764  001ADE                     l11032:
 14765                           
 14766                           ;diskio.c: 373: else;diskio.c: 374: {;diskio.c: 376: count2 = 0;
 14767  001ADE  0E00               	movlw	0
 14768  001AE0  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14769  001AE2  0E00               	movlw	0
 14770  001AE4  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14771                           
 14772                           ;diskio.c: 378: dummy_clocks(1);
 14773  001AE6  0E01               	movlw	1
 14774  001AE8  ECD1  F02A         	call	_dummy_clocks
 14775                           
 14776                           ;diskio.c: 379: command(0X69, 0X00000000, 0XFF);
 14777  001AEC  0E00               	movlw	0
 14778  001AEE  6E0F               	movwf	command@arg^0,c
 14779  001AF0  0E00               	movlw	0
 14780  001AF2  6E10               	movwf	(command@arg+1)^0,c
 14781  001AF4  0E00               	movlw	0
 14782  001AF6  6E11               	movwf	(command@arg+2)^0,c
 14783  001AF8  0E00               	movlw	0
 14784  001AFA  6E12               	movwf	(command@arg+3)^0,c
 14785  001AFC  0EFF               	movlw	255
 14786  001AFE  6E13               	movwf	command@CRC^0,c
 14787  001B00  0E69               	movlw	105
 14788  001B02  ECB5  F027         	call	_command
 14789                           
 14790                           ;diskio.c: 380: proceed();
 14791  001B06  ECF9  F02D         	call	_proceed	;wreg free
 14792  001B0A                     l11042:
 14793                           
 14794                           ;diskio.c: 382: buff = response();
 14795  001B0A  ECF3  F02D         	call	_response	;wreg free
 14796  001B0E  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14797                           
 14798                           ;diskio.c: 383: count2++;
 14799  001B10  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14800  001B12  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14801                           
 14802                           ;diskio.c: 384: if(buff==0x00)
 14803  001B14  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14804  001B16  A4D8               	btfss	status,2,c
 14805  001B18  D00B               	goto	l11052
 14806                           
 14807                           ;diskio.c: 385: {;diskio.c: 386: posicao_cursor_lcd(1,0);
 14808  001B1A  0E00               	movlw	0
 14809  001B1C  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14810  001B1E  0E01               	movlw	1
 14811  001B20  EC58  F027         	call	_posicao_cursor_lcd
 14812                           
 14813                           ;diskio.c: 387: escreve_frase_ram_lcd("SD VER. 1");
 14814  001B24  0E1E               	movlw	low STR_3
 14815  001B26  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14816  001B28  0E62               	movlw	high STR_3
 14817  001B2A  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14818  001B2C  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14819  001B30                     l11052:
 14820                           
 14821                           ;diskio.c: 388: };diskio.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
 14822  001B30  0E10               	movlw	16
 14823  001B32  6E1D               	movwf	??_sdc_disk_initialize^0,c
 14824  001B34  0E94               	movlw	148
 14825  001B36                     u16737:
 14826  001B36  2EE8               	decfsz	wreg,f,c
 14827  001B38  D7FE               	bra	u16737
 14828  001B3A  2E1D               	decfsz	??_sdc_disk_initialize^0,f,c
 14829  001B3C  D7FC               	bra	u16737
 14830  001B3E  D000               	nop2	
 14831                           
 14832                           ;diskio.c: 390: }while(buff!=0X00 && count2<10000);
 14833  001B40  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14834  001B42  B4D8               	btfsc	status,2,c
 14835  001B44  D008               	goto	u12440
 14836  001B46  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14837  001B48  D7E0               	goto	l11042
 14838  001B4A  0E10               	movlw	16
 14839  001B4C  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14840  001B4E  0E27               	movlw	39
 14841  001B50  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14842  001B52  A0D8               	btfss	status,0,c
 14843  001B54  D7DA               	goto	l11042
 14844  001B56                     u12440:
 14845                           
 14846                           ;diskio.c: 393: if(count2==10)
 14847  001B56  0E0A               	movlw	10
 14848  001B58  1827               	xorwf	sdc_disk_initialize@count2^0,w,c
 14849  001B5A  1028               	iorwf	(sdc_disk_initialize@count2+1)^0,w,c
 14850  001B5C  A4D8               	btfss	status,2,c
 14851  001B5E  D034               	goto	u12480
 14852                           
 14853                           ;diskio.c: 394: {;diskio.c: 395: count2 = 0;
 14854  001B60  0E00               	movlw	0
 14855  001B62  6E28               	movwf	(sdc_disk_initialize@count2+1)^0,c
 14856  001B64  0E00               	movlw	0
 14857  001B66  6E27               	movwf	sdc_disk_initialize@count2^0,c
 14858                           
 14859                           ;diskio.c: 396: dummy_clocks(10);
 14860  001B68  0E0A               	movlw	10
 14861  001B6A  ECD1  F02A         	call	_dummy_clocks
 14862                           
 14863                           ;diskio.c: 397: command(0X41, 0X00000000, 0XFF);
 14864  001B6E  0E00               	movlw	0
 14865  001B70  6E0F               	movwf	command@arg^0,c
 14866  001B72  0E00               	movlw	0
 14867  001B74  6E10               	movwf	(command@arg+1)^0,c
 14868  001B76  0E00               	movlw	0
 14869  001B78  6E11               	movwf	(command@arg+2)^0,c
 14870  001B7A  0E00               	movlw	0
 14871  001B7C  6E12               	movwf	(command@arg+3)^0,c
 14872  001B7E  0EFF               	movlw	255
 14873  001B80  6E13               	movwf	command@CRC^0,c
 14874  001B82  0E41               	movlw	65
 14875  001B84  ECB5  F027         	call	_command
 14876                           
 14877                           ;diskio.c: 398: proceed();
 14878  001B88  ECF9  F02D         	call	_proceed	;wreg free
 14879  001B8C                     l11068:
 14880                           
 14881                           ;diskio.c: 400: buff = response();
 14882  001B8C  ECF3  F02D         	call	_response	;wreg free
 14883  001B90  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14884                           
 14885                           ;diskio.c: 401: count2++;
 14886  001B92  4A27               	infsnz	sdc_disk_initialize@count2^0,f,c
 14887  001B94  2A28               	incf	(sdc_disk_initialize@count2+1)^0,f,c
 14888                           
 14889                           ;diskio.c: 402: if(buff==0x00)
 14890  001B96  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14891  001B98  A4D8               	btfss	status,2,c
 14892  001B9A  D00B               	goto	l11078
 14893                           
 14894                           ;diskio.c: 403: {;diskio.c: 404: posicao_cursor_lcd(1,0);
 14895  001B9C  0E00               	movlw	0
 14896  001B9E  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 14897  001BA0  0E01               	movlw	1
 14898  001BA2  EC58  F027         	call	_posicao_cursor_lcd
 14899                           
 14900                           ;diskio.c: 405: escreve_frase_ram_lcd("MMC Ver. 3");
 14901  001BA6  0EE0               	movlw	low STR_4
 14902  001BA8  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 14903  001BAA  0E61               	movlw	high STR_4
 14904  001BAC  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 14905  001BAE  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
 14906  001BB2                     l11078:
 14907                           
 14908                           ;diskio.c: 406: };diskio.c: 408: }while(buff!=0X00 && count2<10000);
 14909  001BB2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14910  001BB4  B4D8               	btfsc	status,2,c
 14911  001BB6  D008               	goto	u12480
 14912  001BB8  BE28               	btfsc	(sdc_disk_initialize@count2+1)^0,7,c
 14913  001BBA  D7E8               	goto	l11068
 14914  001BBC  0E10               	movlw	16
 14915  001BBE  5C27               	subwf	sdc_disk_initialize@count2^0,w,c
 14916  001BC0  0E27               	movlw	39
 14917  001BC2  5828               	subwfb	(sdc_disk_initialize@count2+1)^0,w,c
 14918  001BC4  A0D8               	btfss	status,0,c
 14919  001BC6  D7E2               	goto	l11068
 14920  001BC8                     u12480:
 14921                           
 14922                           ;diskio.c: 409: };diskio.c: 412: dummy_clocks(10);
 14923  001BC8  0E0A               	movlw	10
 14924  001BCA  ECD1  F02A         	call	_dummy_clocks
 14925                           
 14926                           ;diskio.c: 413: command(0X50,0X00000200,0XFF);
 14927  001BCE  0E00               	movlw	0
 14928  001BD0  6E0F               	movwf	command@arg^0,c
 14929  001BD2  0E02               	movlw	2
 14930  001BD4  6E10               	movwf	(command@arg+1)^0,c
 14931  001BD6  0E00               	movlw	0
 14932  001BD8  6E11               	movwf	(command@arg+2)^0,c
 14933  001BDA  0E00               	movlw	0
 14934  001BDC  6E12               	movwf	(command@arg+3)^0,c
 14935  001BDE  0EFF               	movlw	255
 14936  001BE0  6E13               	movwf	command@CRC^0,c
 14937  001BE2  0E50               	movlw	80
 14938  001BE4  ECB5  F027         	call	_command
 14939                           
 14940                           ;diskio.c: 414: proceed();
 14941  001BE8  ECF9  F02D         	call	_proceed	;wreg free
 14942  001BEC                     
 14943                           ;diskio.c: 418: buff = response();
 14944  001BEC  ECF3  F02D         	call	_response	;wreg free
 14945  001BF0  6E29               	movwf	sdc_disk_initialize@buff^0,c
 14946                           
 14947                           ;diskio.c: 419: }while(buff!=0X00);
 14948  001BF2  5029               	movf	sdc_disk_initialize@buff^0,w,c
 14949  001BF4  A4D8               	btfss	status,2,c
 14950  001BF6  D7FA               	goto	l11086
 14951  001BF8                     u12490:
 14952                           
 14953                           ;diskio.c: 421: };diskio.c: 425: return stat;
 14954  001BF8  5020               	movf	sdc_disk_initialize@stat^0,w,c
 14955  001BFA  0012               	return		;funcret
 14956  001BFC                     __end_of_sdc_disk_initialize:
 14957                           	callstack 0
 14958                           
 14959 ;; *************** function _sdc_reset *****************
 14960 ;; Defined at:
 14961 ;;		line 238 in file "bibliotecas/diskio.c"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;		None
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;  teste          10    0        unsigned char [10]
 14966 ;;  count           2   25[COMRAM] int 
 14967 ;;  count_nosd      2   23[COMRAM] int 
 14968 ;;  i               2    0        int 
 14969 ;;  receive         2    0        unsigned int 
 14970 ;;  buff            1   27[COMRAM] unsigned char 
 14971 ;;  stat            1    0        unsigned char 
 14972 ;; Return value:  Size  Location     Type
 14973 ;;                  1    wreg      void 
 14974 ;; Registers used:
 14975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14976 ;; Tracked objects:
 14977 ;;		On entry : 0/0
 14978 ;;		On exit  : 0/0
 14979 ;;		Unchanged: 0/0
 14980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14981 ;;      Params:         0       0       0       0       0       0       0       0       0
 14982 ;;      Locals:         7       0       0       0       0       0       0       0       0
 14983 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14984 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14985 ;;Total ram usage:        7 bytes
 14986 ;; Hardware stack levels used:    1
 14987 ;; Hardware stack levels required when called:    5
 14988 ;; This function calls:
 14989 ;;		_command
 14990 ;;		_escreve_frase_ram_lcd
 14991 ;;		_posicao_cursor_lcd
 14992 ;;		_proceed
 14993 ;;		_response
 14994 ;; This function is called by:
 14995 ;;		_sdc_disk_initialize
 14996 ;; This function uses a non-reentrant model
 14997 ;;
 14998                           
 14999                           	psect	text82
 15000  0047C6                     __ptext82:
 15001                           	callstack 0
 15002  0047C6                     _sdc_reset:
 15003                           	callstack 17
 15004                           
 15005                           ;incstack = 0
 15006  0047C6  0E00               	movlw	0
 15007  0047C8  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15008  0047CA  0E00               	movlw	0
 15009  0047CC  6E1A               	movwf	sdc_reset@count^0,c
 15010  0047CE  0E00               	movlw	0
 15011  0047D0  6E19               	movwf	(sdc_reset@count_nosd+1)^0,c
 15012  0047D2  0E00               	movlw	0
 15013  0047D4  6E18               	movwf	sdc_reset@count_nosd^0,c
 15014  0047D6                     l10774:
 15015                           
 15016                           ;diskio.c: 248: command(0x40, 0X00000000, 0X95);
 15017  0047D6  0E00               	movlw	0
 15018  0047D8  6E0F               	movwf	command@arg^0,c
 15019  0047DA  0E00               	movlw	0
 15020  0047DC  6E10               	movwf	(command@arg+1)^0,c
 15021  0047DE  0E00               	movlw	0
 15022  0047E0  6E11               	movwf	(command@arg+2)^0,c
 15023  0047E2  0E00               	movlw	0
 15024  0047E4  6E12               	movwf	(command@arg+3)^0,c
 15025  0047E6  0E95               	movlw	149
 15026  0047E8  6E13               	movwf	command@CRC^0,c
 15027  0047EA  0E40               	movlw	64
 15028  0047EC  ECB5  F027         	call	_command
 15029                           
 15030                           ;diskio.c: 249: proceed();
 15031  0047F0  ECF9  F02D         	call	_proceed	;wreg free
 15032  0047F4                     l10778:
 15033                           
 15034                           ;diskio.c: 251: buff = response();
 15035  0047F4  ECF3  F02D         	call	_response	;wreg free
 15036  0047F8  6E1C               	movwf	sdc_reset@buff^0,c
 15037                           
 15038                           ;diskio.c: 252: count++;
 15039  0047FA  4A1A               	infsnz	sdc_reset@count^0,f,c
 15040  0047FC  2A1B               	incf	(sdc_reset@count+1)^0,f,c
 15041                           
 15042                           ;diskio.c: 253: }while(buff!=0X01 && count<10);
 15043  0047FE  041C               	decf	sdc_reset@buff^0,w,c
 15044  004800  B4D8               	btfsc	status,2,c
 15045  004802  D008               	goto	u12020
 15046  004804  BE1B               	btfsc	(sdc_reset@count+1)^0,7,c
 15047  004806  D7F6               	goto	l10778
 15048  004808  501B               	movf	(sdc_reset@count+1)^0,w,c
 15049  00480A  E104               	bnz	u12020
 15050  00480C  0E0A               	movlw	10
 15051  00480E  5C1A               	subwf	sdc_reset@count^0,w,c
 15052  004810  A0D8               	btfss	status,0,c
 15053  004812  D7F0               	goto	l10778
 15054  004814                     u12020:
 15055                           
 15056                           ;diskio.c: 254: count = 0;
 15057  004814  0E00               	movlw	0
 15058  004816  6E1B               	movwf	(sdc_reset@count+1)^0,c
 15059  004818  0E00               	movlw	0
 15060  00481A  6E1A               	movwf	sdc_reset@count^0,c
 15061                           
 15062                           ;diskio.c: 255: if(buff != 0x01)
 15063  00481C  041C               	decf	sdc_reset@buff^0,w,c
 15064  00481E  B4D8               	btfsc	status,2,c
 15065  004820  D016               	goto	l10796
 15066                           
 15067                           ;diskio.c: 256: {;diskio.c: 257: posicao_cursor_lcd(1,0);
 15068  004822  0E00               	movlw	0
 15069  004824  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15070  004826  0E01               	movlw	1
 15071  004828  EC58  F027         	call	_posicao_cursor_lcd
 15072                           
 15073                           ;diskio.c: 258: escreve_frase_ram_lcd("Sem Cartao");
 15074  00482C  0EEB               	movlw	low STR_1
 15075  00482E  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15076  004830  0E61               	movlw	high STR_1
 15077  004832  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15078  004834  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15079                           
 15080                           ;diskio.c: 259: posicao_cursor_lcd(2,0);
 15081  004838  0E00               	movlw	0
 15082  00483A  6E0D               	movwf	posicao_cursor_lcd@coluna^0,c
 15083  00483C  0E02               	movlw	2
 15084  00483E  EC58  F027         	call	_posicao_cursor_lcd
 15085                           
 15086                           ;diskio.c: 260: escreve_frase_ram_lcd("Insira o Cartao");
 15087  004842  0E8C               	movlw	low STR_2
 15088  004844  6E0D               	movwf	escreve_frase_ram_lcd@buffer^0,c
 15089  004846  0E61               	movlw	high STR_2
 15090  004848  6E0E               	movwf	(escreve_frase_ram_lcd@buffer+1)^0,c
 15091  00484A  ECBA  F028         	call	_escreve_frase_ram_lcd	;wreg free
 15092  00484E                     l10796:
 15093                           
 15094                           ;diskio.c: 261: };diskio.c: 263: }while(buff!=0X01);
 15095  00484E  041C               	decf	sdc_reset@buff^0,w,c
 15096  004850  B4D8               	btfsc	status,2,c
 15097  004852  0012               	return	
 15098  004854  D7C0               	goto	l10774
 15099  004856                     __end_of_sdc_reset:
 15100                           	callstack 0
 15101                           
 15102 ;; *************** function _posicao_cursor_lcd *****************
 15103 ;; Defined at:
 15104 ;;		line 271 in file "bibliotecas/display_lcd.c"
 15105 ;; Parameters:    Size  Location     Type
 15106 ;;  linha           1    wreg     unsigned char 
 15107 ;;  coluna          1   12[COMRAM] unsigned char 
 15108 ;; Auto vars:     Size  Location     Type
 15109 ;;  linha           1   13[COMRAM] unsigned char 
 15110 ;;  endereco        1   14[COMRAM] unsigned char 
 15111 ;; Return value:  Size  Location     Type
 15112 ;;                  1    wreg      void 
 15113 ;; Registers used:
 15114 ;;		wreg, status,2, status,0, cstack
 15115 ;; Tracked objects:
 15116 ;;		On entry : 0/0
 15117 ;;		On exit  : 0/0
 15118 ;;		Unchanged: 0/0
 15119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15120 ;;      Params:         1       0       0       0       0       0       0       0       0
 15121 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15122 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15123 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15124 ;;Total ram usage:        3 bytes
 15125 ;; Hardware stack levels used:    1
 15126 ;; Hardware stack levels required when called:    4
 15127 ;; This function calls:
 15128 ;;		_endereco_cursor_lcd
 15129 ;; This function is called by:
 15130 ;;		_sdc_reset
 15131 ;;		_sdc_disk_initialize
 15132 ;;		_mostra_dados_display
 15133 ;;		_mensagem_inicial
 15134 ;;		_troca_de_tela
 15135 ;; This function uses a non-reentrant model
 15136 ;;
 15137                           
 15138                           	psect	text83
 15139  004EB0                     __ptext83:
 15140                           	callstack 0
 15141  004EB0                     _posicao_cursor_lcd:
 15142                           	callstack 25
 15143                           
 15144                           ;incstack = 0
 15145                           ;posicao_cursor_lcd@linha stored from wreg
 15146  004EB0  6E0E               	movwf	posicao_cursor_lcd@linha^0,c
 15147                           
 15148                           ;display_lcd.c: 275: if(coluna <= 0x10U)
 15149  004EB2  0E11               	movlw	17
 15150  004EB4  600D               	cpfslt	posicao_cursor_lcd@coluna^0,c
 15151  004EB6  0012               	return	
 15152  004EB8  D01B               	goto	l10638
 15153  004EBA                     l232:
 15154                           
 15155                           ;display_lcd.c: 282: endereco = 0x00U + coluna;
 15156  004EBA  C00D  F00F         	movff	posicao_cursor_lcd@coluna,posicao_cursor_lcd@endereco
 15157                           
 15158                           ;display_lcd.c: 283: endereco_cursor_lcd(endereco);
 15159  004EBE  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15160  004EC0  EC59  F026         	call	_endereco_cursor_lcd
 15161                           
 15162                           ;display_lcd.c: 284: break;
 15163  004EC4  D022               	goto	l10640
 15164  004EC6                     l10622:
 15165                           
 15166                           ;display_lcd.c: 287: endereco = 0x40U + coluna;
 15167  004EC6  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15168  004EC8  0F40               	addlw	64
 15169  004ECA  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15170                           
 15171                           ;display_lcd.c: 288: endereco_cursor_lcd(endereco);
 15172  004ECC  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15173  004ECE  EC59  F026         	call	_endereco_cursor_lcd
 15174                           
 15175                           ;display_lcd.c: 289: break;
 15176  004ED2  D01B               	goto	l10640
 15177  004ED4                     l10626:
 15178                           
 15179                           ;display_lcd.c: 292: endereco = 0x14U + coluna;
 15180  004ED4  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15181  004ED6  0F14               	addlw	20
 15182  004ED8  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15183                           
 15184                           ;display_lcd.c: 293: endereco_cursor_lcd(endereco);
 15185  004EDA  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15186  004EDC  EC59  F026         	call	_endereco_cursor_lcd
 15187                           
 15188                           ;display_lcd.c: 294: break;
 15189  004EE0  D014               	goto	l10640
 15190  004EE2                     l10630:
 15191                           
 15192                           ;display_lcd.c: 297: endereco = 0x54U + coluna;
 15193  004EE2  500D               	movf	posicao_cursor_lcd@coluna^0,w,c
 15194  004EE4  0F54               	addlw	84
 15195  004EE6  6E0F               	movwf	posicao_cursor_lcd@endereco^0,c
 15196                           
 15197                           ;display_lcd.c: 298: endereco_cursor_lcd(endereco);
 15198  004EE8  500F               	movf	posicao_cursor_lcd@endereco^0,w,c
 15199  004EEA  EC59  F026         	call	_endereco_cursor_lcd
 15200                           
 15201                           ;display_lcd.c: 303: break;
 15202                           
 15203                           ;display_lcd.c: 299: break;
 15204  004EEE  D00D               	goto	l10640
 15205  004EF0                     l10638:
 15206  004EF0  500E               	movf	posicao_cursor_lcd@linha^0,w,c
 15207                           
 15208                           ; Switch size 1, requested type "simple"
 15209                           ; Number of cases is 4, Range of values is 1 to 4
 15210                           ; switch strategies available:
 15211                           ; Name         Instructions Cycles
 15212                           ; simple_byte           13     7 (average)
 15213                           ;	Chosen strategy is simple_byte
 15214  004EF2  0A01               	xorlw	1	; case 1
 15215  004EF4  B4D8               	btfsc	status,2,c
 15216  004EF6  D7E1               	goto	l232
 15217  004EF8  0A03               	xorlw	3	; case 2
 15218  004EFA  B4D8               	btfsc	status,2,c
 15219  004EFC  D7E4               	goto	l10622
 15220  004EFE  0A01               	xorlw	1	; case 3
 15221  004F00  B4D8               	btfsc	status,2,c
 15222  004F02  D7E8               	goto	l10626
 15223  004F04  0A07               	xorlw	7	; case 4
 15224  004F06  B4D8               	btfsc	status,2,c
 15225  004F08  D7EC               	goto	l10630
 15226  004F0A                     l10640:
 15227                           
 15228                           ;display_lcd.c: 306: coluna++;
 15229  004F0A  2A0D               	incf	posicao_cursor_lcd@coluna^0,f,c
 15230                           
 15231                           ;display_lcd.c: 307: }
 15232  004F0C  0012               	return	
 15233  004F0E                     __end_of_posicao_cursor_lcd:
 15234                           	callstack 0
 15235                           
 15236 ;; *************** function _endereco_cursor_lcd *****************
 15237 ;; Defined at:
 15238 ;;		line 218 in file "bibliotecas/display_lcd.c"
 15239 ;; Parameters:    Size  Location     Type
 15240 ;;  endereco        1    wreg     unsigned char 
 15241 ;; Auto vars:     Size  Location     Type
 15242 ;;  endereco        1   11[COMRAM] unsigned char 
 15243 ;; Return value:  Size  Location     Type
 15244 ;;                  1    wreg      void 
 15245 ;; Registers used:
 15246 ;;		wreg, status,2, status,0, cstack
 15247 ;; Tracked objects:
 15248 ;;		On entry : 0/0
 15249 ;;		On exit  : 0/0
 15250 ;;		Unchanged: 0/0
 15251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15252 ;;      Params:         0       0       0       0       0       0       0       0       0
 15253 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15254 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15255 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15256 ;;Total ram usage:        1 bytes
 15257 ;; Hardware stack levels used:    1
 15258 ;; Hardware stack levels required when called:    3
 15259 ;; This function calls:
 15260 ;;		_delay
 15261 ;; This function is called by:
 15262 ;;		_posicao_cursor_lcd
 15263 ;; This function uses a non-reentrant model
 15264 ;;
 15265                           
 15266                           	psect	text84
 15267  004CB2                     __ptext84:
 15268                           	callstack 0
 15269  004CB2                     _endereco_cursor_lcd:
 15270                           	callstack 25
 15271                           
 15272                           ;incstack = 0
 15273                           ;endereco_cursor_lcd@endereco stored from wreg
 15274  004CB2  6E0C               	movwf	endereco_cursor_lcd@endereco^0,c
 15275                           
 15276                           ;display_lcd.c: 221: PORTDbits.RD2 = 0;
 15277  004CB4  9483               	bcf	131,2,c	;volatile
 15278                           
 15279                           ;display_lcd.c: 222: PORTDbits.RD1 = 0;
 15280  004CB6  9283               	bcf	131,1,c	;volatile
 15281                           
 15282                           ;display_lcd.c: 223: PORTDbits.RD0 = 0;
 15283  004CB8  9083               	bcf	131,0,c	;volatile
 15284                           
 15285                           ;display_lcd.c: 226: PORTDbits.RD7 = 1;
 15286  004CBA  8E83               	bsf	131,7,c	;volatile
 15287                           
 15288                           ;display_lcd.c: 227: if(endereco&0b00010000){PORTDbits.RD4=1;}
 15289  004CBC  A80C               	btfss	endereco_cursor_lcd@endereco^0,4,c
 15290  004CBE  D002               	goto	l213
 15291  004CC0  8883               	bsf	131,4,c	;volatile
 15292  004CC2  D001               	goto	l10476
 15293  004CC4                     l213:
 15294                           
 15295                           ;display_lcd.c: 228: else {PORTDbits.RD4=0;}
 15296  004CC4  9883               	bcf	131,4,c	;volatile
 15297  004CC6                     l10476:
 15298                           
 15299                           ;display_lcd.c: 229: if(endereco&0b00100000){PORTDbits.RD5=1;}
 15300  004CC6  AA0C               	btfss	endereco_cursor_lcd@endereco^0,5,c
 15301  004CC8  D002               	goto	l215
 15302  004CCA  8A83               	bsf	131,5,c	;volatile
 15303  004CCC  D001               	goto	l10480
 15304  004CCE                     l215:
 15305                           
 15306                           ;display_lcd.c: 230: else {PORTDbits.RD5=0;}
 15307  004CCE  9A83               	bcf	131,5,c	;volatile
 15308  004CD0                     l10480:
 15309                           
 15310                           ;display_lcd.c: 231: if(endereco&0b01000000){PORTDbits.RD6=1;}
 15311  004CD0  AC0C               	btfss	endereco_cursor_lcd@endereco^0,6,c
 15312  004CD2  D002               	goto	l217
 15313  004CD4  8C83               	bsf	131,6,c	;volatile
 15314  004CD6  D001               	goto	l218
 15315  004CD8                     l217:
 15316                           
 15317                           ;display_lcd.c: 232: else {PORTDbits.RD6=0;}
 15318  004CD8  9C83               	bcf	131,6,c	;volatile
 15319  004CDA                     l218:
 15320                           
 15321                           ;display_lcd.c: 235: PORTDbits.RD0 = 1;
 15322  004CDA  8083               	bsf	131,0,c	;volatile
 15323                           
 15324                           ;display_lcd.c: 236: delay();
 15325  004CDC  EC61  F02D         	call	_delay	;wreg free
 15326                           
 15327                           ;display_lcd.c: 237: PORTDbits.RD0 = 0;
 15328  004CE0  9083               	bcf	131,0,c	;volatile
 15329                           
 15330                           ;display_lcd.c: 238: delay();
 15331  004CE2  EC61  F02D         	call	_delay	;wreg free
 15332                           
 15333                           ;display_lcd.c: 241: if(endereco&0b00000001){PORTDbits.RD4=1;}
 15334  004CE6  A00C               	btfss	endereco_cursor_lcd@endereco^0,0,c
 15335  004CE8  D002               	goto	l219
 15336  004CEA  8883               	bsf	131,4,c	;volatile
 15337  004CEC  D001               	goto	l220
 15338  004CEE                     l219:
 15339                           
 15340                           ;display_lcd.c: 242: else {PORTDbits.RD4=0;}
 15341  004CEE  9883               	bcf	131,4,c	;volatile
 15342  004CF0                     l220:
 15343                           
 15344                           ;display_lcd.c: 243: if(endereco&0b00000010){PORTDbits.RD5=1;}
 15345  004CF0  A20C               	btfss	endereco_cursor_lcd@endereco^0,1,c
 15346  004CF2  D002               	goto	l221
 15347  004CF4  8A83               	bsf	131,5,c	;volatile
 15348  004CF6  D001               	goto	l222
 15349  004CF8                     l221:
 15350                           
 15351                           ;display_lcd.c: 244: else {PORTDbits.RD5=0;}
 15352  004CF8  9A83               	bcf	131,5,c	;volatile
 15353  004CFA                     l222:
 15354                           
 15355                           ;display_lcd.c: 245: if(endereco&0b00000100){PORTDbits.RD6=1;}
 15356  004CFA  A40C               	btfss	endereco_cursor_lcd@endereco^0,2,c
 15357  004CFC  D002               	goto	l223
 15358  004CFE  8C83               	bsf	131,6,c	;volatile
 15359  004D00  D001               	goto	l224
 15360  004D02                     l223:
 15361                           
 15362                           ;display_lcd.c: 246: else {PORTDbits.RD6=0;}
 15363  004D02  9C83               	bcf	131,6,c	;volatile
 15364  004D04                     l224:
 15365                           
 15366                           ;display_lcd.c: 247: if(endereco&0b00001000){PORTDbits.RD7=1;}
 15367  004D04  A60C               	btfss	endereco_cursor_lcd@endereco^0,3,c
 15368  004D06  D002               	goto	l225
 15369  004D08  8E83               	bsf	131,7,c	;volatile
 15370  004D0A  D001               	goto	l226
 15371  004D0C                     l225:
 15372                           
 15373                           ;display_lcd.c: 248: else {PORTDbits.RD7=0;}
 15374  004D0C  9E83               	bcf	131,7,c	;volatile
 15375  004D0E                     l226:
 15376                           
 15377                           ;display_lcd.c: 251: PORTDbits.RD0 = 1;
 15378  004D0E  8083               	bsf	131,0,c	;volatile
 15379                           
 15380                           ;display_lcd.c: 252: delay();
 15381  004D10  EC61  F02D         	call	_delay	;wreg free
 15382                           
 15383                           ;display_lcd.c: 253: PORTDbits.RD0 = 0;
 15384  004D14  9083               	bcf	131,0,c	;volatile
 15385                           
 15386                           ;display_lcd.c: 254: delay();
 15387  004D16  EC61  F02D         	call	_delay	;wreg free
 15388  004D1A  0012               	return		;funcret
 15389  004D1C                     __end_of_endereco_cursor_lcd:
 15390                           	callstack 0
 15391                           
 15392 ;; *************** function _escreve_frase_ram_lcd *****************
 15393 ;; Defined at:
 15394 ;;		line 445 in file "bibliotecas/display_lcd.c"
 15395 ;; Parameters:    Size  Location     Type
 15396 ;;  buffer          2   12[COMRAM] PTR unsigned char 
 15397 ;;		 -> STR_33(8), STR_32(9), STR_31(4), STR_30(4), 
 15398 ;;		 -> STR_29(5), STR_28(2), STR_27(6), STR_26(7), 
 15399 ;;		 -> STR_25(7), STR_24(2), STR_23(5), STR_22(7), 
 15400 ;;		 -> STR_19(11), mensagem_inicial@msg_dois(17), mensagem_inicial@msg_linha_um(17), STR_10(9), 
 15401 ;;		 -> STR_9(10), STR_8(10), STR_7(14), STR_6(21), 
 15402 ;;		 -> STR_5(15), rawLongitude(13), rawLatitude(12), escreve_inteiro_lcd@texto(7), 
 15403 ;;		 -> STR_4(11), STR_3(10), STR_2(16), STR_1(11), 
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;		None
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15415 ;;      Params:         2       0       0       0       0       0       0       0       0
 15416 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15417 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15418 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15419 ;;Total ram usage:        2 bytes
 15420 ;; Hardware stack levels used:    1
 15421 ;; Hardware stack levels required when called:    4
 15422 ;; This function calls:
 15423 ;;		_escreve_caractere_lcd
 15424 ;; This function is called by:
 15425 ;;		_sdc_reset
 15426 ;;		_sdc_disk_initialize
 15427 ;;		_escreve_inteiro_lcd
 15428 ;;		_mostra_dados_display
 15429 ;;		_mensagem_inicial
 15430 ;;		_troca_de_tela
 15431 ;; This function uses a non-reentrant model
 15432 ;;
 15433                           
 15434                           	psect	text85
 15435  005174                     __ptext85:
 15436                           	callstack 0
 15437  005174                     _escreve_frase_ram_lcd:
 15438                           	callstack 25
 15439                           
 15440                           ;display_lcd.c: 447: while(*buffer)
 15441                           
 15442                           ;incstack = 0
 15443  005174  D014               	goto	l10650
 15444  005176                     l10646:
 15445                           
 15446                           ;display_lcd.c: 448: {;display_lcd.c: 449: escreve_caractere_lcd(*buffer);
 15447  005176  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15448  00517A  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15449  00517E  6AF8               	clrf	tblptru,c
 15450  005180  0E07               	movlw	(high __ramtop+-1)
 15451  005182  64F7               	cpfsgt	tblptrh,c
 15452  005184  D003               	bra	u11797
 15453  005186  0008               	tblrd		*
 15454  005188  50F5               	movf	tablat,w,c
 15455  00518A  D005               	bra	u11790
 15456  00518C                     u11797:
 15457  00518C  CFF6 FFE1          	movff	tblptrl,fsr1l
 15458  005190  CFF7 FFE2          	movff	tblptrh,fsr1h
 15459  005194  50E7               	movf	indf1,w,c
 15460  005196                     u11790:
 15461  005196  ECE9  F025         	call	_escreve_caractere_lcd
 15462                           
 15463                           ;display_lcd.c: 450: buffer++;
 15464  00519A  4A0D               	infsnz	escreve_frase_ram_lcd@buffer^0,f,c
 15465  00519C  2A0E               	incf	(escreve_frase_ram_lcd@buffer+1)^0,f,c
 15466  00519E                     l10650:
 15467  00519E  C00D  FFF6         	movff	escreve_frase_ram_lcd@buffer,tblptrl
 15468  0051A2  C00E  FFF7         	movff	escreve_frase_ram_lcd@buffer+1,tblptrh
 15469  0051A6  6AF8               	clrf	tblptru,c
 15470  0051A8  0E07               	movlw	(high __ramtop+-1)
 15471  0051AA  64F7               	cpfsgt	tblptrh,c
 15472  0051AC  D003               	bra	u11807
 15473  0051AE  0008               	tblrd		*
 15474  0051B0  50F5               	movf	tablat,w,c
 15475  0051B2  D005               	bra	u11800
 15476  0051B4                     u11807:
 15477  0051B4  CFF6 FFE1          	movff	tblptrl,fsr1l
 15478  0051B8  CFF7 FFE2          	movff	tblptrh,fsr1h
 15479  0051BC  50E7               	movf	indf1,w,c
 15480  0051BE                     u11800:
 15481  0051BE  0900               	iorlw	0
 15482  0051C0  B4D8               	btfsc	status,2,c
 15483  0051C2  0012               	return	
 15484  0051C4  D7D8               	goto	l10646
 15485  0051C6                     __end_of_escreve_frase_ram_lcd:
 15486                           	callstack 0
 15487                           
 15488 ;; *************** function _escreve_caractere_lcd *****************
 15489 ;; Defined at:
 15490 ;;		line 323 in file "bibliotecas/display_lcd.c"
 15491 ;; Parameters:    Size  Location     Type
 15492 ;;  data            1    wreg     unsigned char 
 15493 ;; Auto vars:     Size  Location     Type
 15494 ;;  data            1   11[COMRAM] unsigned char 
 15495 ;; Return value:  Size  Location     Type
 15496 ;;                  1    wreg      void 
 15497 ;; Registers used:
 15498 ;;		wreg, status,2, status,0, cstack
 15499 ;; Tracked objects:
 15500 ;;		On entry : 0/0
 15501 ;;		On exit  : 0/0
 15502 ;;		Unchanged: 0/0
 15503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15504 ;;      Params:         0       0       0       0       0       0       0       0       0
 15505 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15506 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15507 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15508 ;;Total ram usage:        1 bytes
 15509 ;; Hardware stack levels used:    1
 15510 ;; Hardware stack levels required when called:    3
 15511 ;; This function calls:
 15512 ;;		_delay
 15513 ;; This function is called by:
 15514 ;;		_escreve_frase_ram_lcd
 15515 ;;		_troca_de_tela
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           	psect	text86
 15520  004BD2                     __ptext86:
 15521                           	callstack 0
 15522  004BD2                     _escreve_caractere_lcd:
 15523                           	callstack 25
 15524                           
 15525                           ;incstack = 0
 15526                           ;escreve_caractere_lcd@data stored from wreg
 15527  004BD2  6E0C               	movwf	escreve_caractere_lcd@data^0,c
 15528                           
 15529                           ;display_lcd.c: 326: PORTDbits.RD2 = 0;
 15530  004BD4  9483               	bcf	131,2,c	;volatile
 15531                           
 15532                           ;display_lcd.c: 327: PORTDbits.RD1 = 1;
 15533  004BD6  8283               	bsf	131,1,c	;volatile
 15534                           
 15535                           ;display_lcd.c: 328: PORTDbits.RD0 = 0;
 15536  004BD8  9083               	bcf	131,0,c	;volatile
 15537                           
 15538                           ;display_lcd.c: 331: if(data&0b00010000){PORTDbits.RD4=1;}
 15539  004BDA  A80C               	btfss	escreve_caractere_lcd@data^0,4,c
 15540  004BDC  D002               	goto	l242
 15541  004BDE  8883               	bsf	131,4,c	;volatile
 15542  004BE0  D001               	goto	l10508
 15543  004BE2                     l242:
 15544                           
 15545                           ;display_lcd.c: 332: else {PORTDbits.RD4=0;}
 15546  004BE2  9883               	bcf	131,4,c	;volatile
 15547  004BE4                     l10508:
 15548                           
 15549                           ;display_lcd.c: 333: if(data&0b00100000){PORTDbits.RD5=1;}
 15550  004BE4  AA0C               	btfss	escreve_caractere_lcd@data^0,5,c
 15551  004BE6  D002               	goto	l244
 15552  004BE8  8A83               	bsf	131,5,c	;volatile
 15553  004BEA  D001               	goto	l10512
 15554  004BEC                     l244:
 15555                           
 15556                           ;display_lcd.c: 334: else {PORTDbits.RD5=0;}
 15557  004BEC  9A83               	bcf	131,5,c	;volatile
 15558  004BEE                     l10512:
 15559                           
 15560                           ;display_lcd.c: 335: if(data&0b01000000){PORTDbits.RD6=1;}
 15561  004BEE  AC0C               	btfss	escreve_caractere_lcd@data^0,6,c
 15562  004BF0  D002               	goto	l246
 15563  004BF2  8C83               	bsf	131,6,c	;volatile
 15564  004BF4  D001               	goto	l10516
 15565  004BF6                     l246:
 15566                           
 15567                           ;display_lcd.c: 336: else {PORTDbits.RD6=0;}
 15568  004BF6  9C83               	bcf	131,6,c	;volatile
 15569  004BF8                     l10516:
 15570                           
 15571                           ;display_lcd.c: 337: if(data&0b10000000){PORTDbits.RD7=1;}
 15572  004BF8  AE0C               	btfss	escreve_caractere_lcd@data^0,7,c
 15573  004BFA  D002               	goto	l248
 15574  004BFC  8E83               	bsf	131,7,c	;volatile
 15575  004BFE  D001               	goto	l249
 15576  004C00                     l248:
 15577                           
 15578                           ;display_lcd.c: 338: else {PORTDbits.RD7=0;}
 15579  004C00  9E83               	bcf	131,7,c	;volatile
 15580  004C02                     l249:
 15581                           
 15582                           ;display_lcd.c: 341: PORTDbits.RD0 = 1;
 15583  004C02  8083               	bsf	131,0,c	;volatile
 15584                           
 15585                           ;display_lcd.c: 342: delay();
 15586  004C04  EC61  F02D         	call	_delay	;wreg free
 15587                           
 15588                           ;display_lcd.c: 343: PORTDbits.RD0 = 0;
 15589  004C08  9083               	bcf	131,0,c	;volatile
 15590                           
 15591                           ;display_lcd.c: 344: delay();
 15592  004C0A  EC61  F02D         	call	_delay	;wreg free
 15593                           
 15594                           ;display_lcd.c: 348: if(data&0b00000001){PORTDbits.RD4=1;}
 15595  004C0E  A00C               	btfss	escreve_caractere_lcd@data^0,0,c
 15596  004C10  D002               	goto	l250
 15597  004C12  8883               	bsf	131,4,c	;volatile
 15598  004C14  D001               	goto	l251
 15599  004C16                     l250:
 15600                           
 15601                           ;display_lcd.c: 349: else {PORTDbits.RD4=0;}
 15602  004C16  9883               	bcf	131,4,c	;volatile
 15603  004C18                     l251:
 15604                           
 15605                           ;display_lcd.c: 350: if(data&0b00000010){PORTDbits.RD5=1;}
 15606  004C18  A20C               	btfss	escreve_caractere_lcd@data^0,1,c
 15607  004C1A  D002               	goto	l252
 15608  004C1C  8A83               	bsf	131,5,c	;volatile
 15609  004C1E  D001               	goto	l253
 15610  004C20                     l252:
 15611                           
 15612                           ;display_lcd.c: 351: else {PORTDbits.RD5=0;}
 15613  004C20  9A83               	bcf	131,5,c	;volatile
 15614  004C22                     l253:
 15615                           
 15616                           ;display_lcd.c: 352: if(data&0b00000100){PORTDbits.RD6=1;}
 15617  004C22  A40C               	btfss	escreve_caractere_lcd@data^0,2,c
 15618  004C24  D002               	goto	l254
 15619  004C26  8C83               	bsf	131,6,c	;volatile
 15620  004C28  D001               	goto	l255
 15621  004C2A                     l254:
 15622                           
 15623                           ;display_lcd.c: 353: else {PORTDbits.RD6=0;}
 15624  004C2A  9C83               	bcf	131,6,c	;volatile
 15625  004C2C                     l255:
 15626                           
 15627                           ;display_lcd.c: 354: if(data&0b00001000){PORTDbits.RD7=1;}
 15628  004C2C  A60C               	btfss	escreve_caractere_lcd@data^0,3,c
 15629  004C2E  D002               	goto	l256
 15630  004C30  8E83               	bsf	131,7,c	;volatile
 15631  004C32  D001               	goto	l257
 15632  004C34                     l256:
 15633                           
 15634                           ;display_lcd.c: 355: else {PORTDbits.RD7=0;}
 15635  004C34  9E83               	bcf	131,7,c	;volatile
 15636  004C36                     l257:
 15637                           
 15638                           ;display_lcd.c: 358: PORTDbits.RD0 = 1;
 15639  004C36  8083               	bsf	131,0,c	;volatile
 15640                           
 15641                           ;display_lcd.c: 359: delay();
 15642  004C38  EC61  F02D         	call	_delay	;wreg free
 15643                           
 15644                           ;display_lcd.c: 360: PORTDbits.RD0 = 0;
 15645  004C3C  9083               	bcf	131,0,c	;volatile
 15646                           
 15647                           ;display_lcd.c: 361: delay();
 15648  004C3E  EC61  F02D         	call	_delay	;wreg free
 15649  004C42  0012               	return		;funcret
 15650  004C44                     __end_of_escreve_caractere_lcd:
 15651                           	callstack 0
 15652                           
 15653 ;; *************** function _delay *****************
 15654 ;; Defined at:
 15655 ;;		line 45 in file "bibliotecas/display_lcd.c"
 15656 ;; Parameters:    Size  Location     Type
 15657 ;;		None
 15658 ;; Auto vars:     Size  Location     Type
 15659 ;;  contador_int    1   10[COMRAM] unsigned char 
 15660 ;;  contador_ext    1    9[COMRAM] unsigned char 
 15661 ;; Return value:  Size  Location     Type
 15662 ;;                  1    wreg      void 
 15663 ;; Registers used:
 15664 ;;		wreg, status,2, status,0
 15665 ;; Tracked objects:
 15666 ;;		On entry : 0/0
 15667 ;;		On exit  : 0/0
 15668 ;;		Unchanged: 0/0
 15669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15670 ;;      Params:         0       0       0       0       0       0       0       0       0
 15671 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15672 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15673 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15674 ;;Total ram usage:        2 bytes
 15675 ;; Hardware stack levels used:    1
 15676 ;; Hardware stack levels required when called:    2
 15677 ;; This function calls:
 15678 ;;		Nothing
 15679 ;; This function is called by:
 15680 ;;		_init_lcd
 15681 ;;		_escreve_cmd_lcd
 15682 ;;		_endereco_cursor_lcd
 15683 ;;		_escreve_caractere_lcd
 15684 ;; This function uses a non-reentrant model
 15685 ;;
 15686                           
 15687                           	psect	text87
 15688  005AC2                     __ptext87:
 15689                           	callstack 0
 15690  005AC2                     _delay:
 15691                           	callstack 25
 15692                           
 15693                           ;display_lcd.c: 47: unsigned char contador_ext, contador_int;;display_lcd.c: 49: for(con
      +                          tador_ext = 0; contador_ext<100; contador_ext++)
 15694                           
 15695                           ;incstack = 0
 15696  005AC2  0E00               	movlw	0
 15697  005AC4  6E0A               	movwf	delay@contador_ext^0,c
 15698  005AC6                     l181:
 15699                           
 15700                           ;display_lcd.c: 50: {;display_lcd.c: 51: __nop();
 15701  005AC6  F000               	nop	
 15702                           
 15703                           ;display_lcd.c: 52: for(contador_int = 0; contador_int<50; contador_int++)
 15704  005AC8  0E00               	movlw	0
 15705  005ACA  6E0B               	movwf	delay@contador_int^0,c
 15706  005ACC                     l183:
 15707                           
 15708                           ;display_lcd.c: 53: {;display_lcd.c: 54: __nop();
 15709  005ACC  F000               	nop	
 15710  005ACE  2A0B               	incf	delay@contador_int^0,f,c
 15711  005AD0  0E31               	movlw	49
 15712  005AD2  640B               	cpfsgt	delay@contador_int^0,c
 15713  005AD4  D7FB               	goto	l183
 15714  005AD6  2A0A               	incf	delay@contador_ext^0,f,c
 15715  005AD8  0E63               	movlw	99
 15716  005ADA  640A               	cpfsgt	delay@contador_ext^0,c
 15717  005ADC  D7F4               	goto	l181
 15718  005ADE  0012               	return	
 15719  005AE0                     __end_of_delay:
 15720                           	callstack 0
 15721                           
 15722 ;; *************** function _check_fs *****************
 15723 ;; Defined at:
 15724 ;;		line 624 in file "bibliotecas/tff.c"
 15725 ;; Parameters:    Size  Location     Type
 15726 ;;  sect            4   52[COMRAM] unsigned long 
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;  fs              2   58[COMRAM] PTR struct _FATFS
 15729 ;;		 -> NULL(0), fs(544), 
 15730 ;; Return value:  Size  Location     Type
 15731 ;;                  1    wreg      unsigned char 
 15732 ;; Registers used:
 15733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15734 ;; Tracked objects:
 15735 ;;		On entry : 3F/0
 15736 ;;		On exit  : 0/0
 15737 ;;		Unchanged: 0/0
 15738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15739 ;;      Params:         4       0       0       0       0       0       0       0       0
 15740 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15741 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15742 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15743 ;;Total ram usage:        8 bytes
 15744 ;; Hardware stack levels used:    1
 15745 ;; Hardware stack levels required when called:    7
 15746 ;; This function calls:
 15747 ;;		_disk_read
 15748 ;;		_memcmp
 15749 ;; This function is called by:
 15750 ;;		_auto_mount
 15751 ;; This function uses a non-reentrant model
 15752 ;;
 15753                           
 15754                           	psect	text88
 15755  004966                     __ptext88:
 15756                           	callstack 0
 15757  004966                     _check_fs:
 15758                           	callstack 17
 15759                           
 15760                           ; BSR set to: 0
 15761                           ;tff.c: 628: FATFS *fs = FatFs;
 15762                           
 15763                           ;incstack = 0
 15764  004966  C04D  F03B         	movff	_FatFs,check_fs@fs
 15765  00496A  C04E  F03C         	movff	_FatFs+1,check_fs@fs+1
 15766                           
 15767                           ; BSR set to: 0
 15768                           ;tff.c: 630: if (disk_read(0, fs->win, sect, 1) != RES_OK)
 15769  00496E  0E20               	movlw	32
 15770  004970  243B               	addwf	check_fs@fs^0,w,c
 15771  004972  6E29               	movwf	disk_read@buff^0,c
 15772  004974  0E00               	movlw	0
 15773  004976  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15774  004978  6E2A               	movwf	(disk_read@buff+1)^0,c
 15775  00497A  C035  F02B         	movff	check_fs@sect,disk_read@sector
 15776  00497E  C036  F02C         	movff	check_fs@sect+1,disk_read@sector+1
 15777  004982  C037  F02D         	movff	check_fs@sect+2,disk_read@sector+2
 15778  004986  C038  F02E         	movff	check_fs@sect+3,disk_read@sector+3
 15779  00498A  0E01               	movlw	1
 15780  00498C  6E2F               	movwf	disk_read@count^0,c
 15781  00498E  0E00               	movlw	0
 15782  004990  EC22  F026         	call	_disk_read
 15783  004994  0900               	iorlw	0
 15784  004996  B4D8               	btfsc	status,2,c
 15785  004998  D002               	goto	l11514
 15786  00499A                     u13200:
 15787  00499A                     l11510:
 15788                           
 15789                           ;tff.c: 631: return 2;
 15790  00499A  0E02               	movlw	2
 15791  00499C  0012               	return	
 15792  00499E                     l11514:
 15793                           
 15794                           ;tff.c: 632: if ((WORD)(*(WORD*)(BYTE*)(&fs->win[510])) != 0xAA55)
 15795  00499E  EE22 F01E          	lfsr	2,542
 15796  0049A2  503B               	movf	check_fs@fs^0,w,c
 15797  0049A4  26D9               	addwf	fsr2l,f,c
 15798  0049A6  503C               	movf	(check_fs@fs+1)^0,w,c
 15799  0049A8  22DA               	addwfc	fsr2h,f,c
 15800  0049AA  0E55               	movlw	85
 15801  0049AC  18DE               	xorwf	postinc2,w,c
 15802  0049AE  E1F5               	bnz	l11510
 15803  0049B0  0EAA               	movlw	170
 15804  0049B2  18DE               	xorwf	postinc2,w,c
 15805  0049B4  A4D8               	btfss	status,2,c
 15806  0049B6  D7F1               	goto	u13200
 15807                           
 15808                           ;tff.c: 635: if (!memcmp(&fs->win[54], "FAT", 3))
 15809  0049B8  0E56               	movlw	86
 15810  0049BA  243B               	addwf	check_fs@fs^0,w,c
 15811  0049BC  6E0A               	movwf	memcmp@s1^0,c
 15812  0049BE  0E00               	movlw	0
 15813  0049C0  203C               	addwfc	(check_fs@fs+1)^0,w,c
 15814  0049C2  6E0B               	movwf	(memcmp@s1+1)^0,c
 15815  0049C4  0E73               	movlw	low STR_17
 15816  0049C6  6E0C               	movwf	memcmp@s2^0,c
 15817  0049C8  0E62               	movlw	high STR_17
 15818  0049CA  6E0D               	movwf	(memcmp@s2+1)^0,c
 15819  0049CC  0E00               	movlw	0
 15820  0049CE  6E0F               	movwf	(memcmp@n+1)^0,c
 15821  0049D0  0E03               	movlw	3
 15822  0049D2  6E0E               	movwf	memcmp@n^0,c
 15823  0049D4  EC9A  F023         	call	_memcmp	;wreg free
 15824  0049D8  500A               	movf	?_memcmp^0,w,c
 15825  0049DA  100B               	iorwf	(?_memcmp+1)^0,w,c
 15826  0049DC  A4D8               	btfss	status,2,c
 15827  0049DE  D002               	goto	l11526
 15828                           
 15829                           ;tff.c: 636: return 0;
 15830  0049E0  0E00               	movlw	0
 15831  0049E2  0012               	return	
 15832  0049E4                     l11526:
 15833                           
 15834                           ;tff.c: 641: return 1;
 15835  0049E4  0E01               	movlw	1
 15836  0049E6  0012               	return		;funcret
 15837  0049E8                     __end_of_check_fs:
 15838                           	callstack 0
 15839                           
 15840 ;; *************** function _memcmp *****************
 15841 ;; Defined at:
 15842 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\memcmp.c"
 15843 ;; Parameters:    Size  Location     Type
 15844 ;;  s1              2    9[COMRAM] PTR const void 
 15845 ;;		 -> fs.win(512), NULL(0), fs(544), 
 15846 ;;  s2              2   11[COMRAM] PTR const void 
 15847 ;;		 -> f_opendir@fn(12), f_open@fn(12), STR_17(4), 
 15848 ;;  n               2   13[COMRAM] unsigned int 
 15849 ;; Auto vars:     Size  Location     Type
 15850 ;;		None
 15851 ;; Return value:  Size  Location     Type
 15852 ;;                  2    9[COMRAM] int 
 15853 ;; Registers used:
 15854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15855 ;; Tracked objects:
 15856 ;;		On entry : 0/0
 15857 ;;		On exit  : 0/0
 15858 ;;		Unchanged: 0/0
 15859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15860 ;;      Params:         6       0       0       0       0       0       0       0       0
 15861 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15862 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15863 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15864 ;;Total ram usage:        8 bytes
 15865 ;; Hardware stack levels used:    1
 15866 ;; Hardware stack levels required when called:    2
 15867 ;; This function calls:
 15868 ;;		Nothing
 15869 ;; This function is called by:
 15870 ;;		_trace_path
 15871 ;;		_check_fs
 15872 ;; This function uses a non-reentrant model
 15873 ;;
 15874                           
 15875                           	psect	text89
 15876  004734                     __ptext89:
 15877                           	callstack 0
 15878  004734                     _memcmp:
 15879                           	callstack 22
 15880                           
 15881                           ;incstack = 0
 15882  004734  D03B               	goto	l11148
 15883  004736                     l11140:
 15884  004736  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15885  00473A  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15886  00473E  50DF               	movf	indf2,w,c
 15887  004740  6E10               	movwf	??_memcmp^0,c
 15888  004742  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15889  004746  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15890  00474A  6AF8               	clrf	tblptru,c
 15891  00474C  0E07               	movlw	(high __ramtop+-1)
 15892  00474E  64F7               	cpfsgt	tblptrh,c
 15893  004750  D003               	bra	u12517
 15894  004752  0008               	tblrd		*
 15895  004754  50F5               	movf	tablat,w,c
 15896  004756  D005               	bra	u12510
 15897  004758                     u12517:
 15898  004758  CFF6 FFE1          	movff	tblptrl,fsr1l
 15899  00475C  CFF7 FFE2          	movff	tblptrh,fsr1h
 15900  004760  50E7               	movf	indf1,w,c
 15901  004762                     u12510:
 15902  004762  1810               	xorwf	??_memcmp^0,w,c
 15903  004764  B4D8               	btfsc	status,2,c
 15904  004766  D01E               	goto	l11146
 15905  004768  C00A  FFD9         	movff	memcmp@s1,fsr2l
 15906  00476C  C00B  FFDA         	movff	memcmp@s1+1,fsr2h
 15907  004770  50DF               	movf	indf2,w,c
 15908  004772  6E10               	movwf	??_memcmp^0,c
 15909  004774  C00C  FFF6         	movff	memcmp@s2,tblptrl
 15910  004778  C00D  FFF7         	movff	memcmp@s2+1,tblptrh
 15911  00477C  6AF8               	clrf	tblptru,c
 15912  00477E  0E07               	movlw	(high __ramtop+-1)
 15913  004780  64F7               	cpfsgt	tblptrh,c
 15914  004782  D003               	bra	u12537
 15915  004784  0008               	tblrd		*
 15916  004786  50F5               	movf	tablat,w,c
 15917  004788  D005               	bra	u12530
 15918  00478A                     u12537:
 15919  00478A  CFF6 FFE1          	movff	tblptrl,fsr1l
 15920  00478E  CFF7 FFE2          	movff	tblptrh,fsr1h
 15921  004792  50E7               	movf	indf1,w,c
 15922  004794                     u12530:
 15923  004794  6E11               	movwf	(??_memcmp+1)^0,c
 15924  004796  5011               	movf	(??_memcmp+1)^0,w,c
 15925  004798  5C10               	subwf	??_memcmp^0,w,c
 15926  00479A  6E0A               	movwf	?_memcmp^0,c
 15927  00479C  6A0B               	clrf	(?_memcmp+1)^0,c
 15928  00479E  A0D8               	btfss	status,0,c
 15929  0047A0  060B               	decf	(?_memcmp+1)^0,f,c
 15930  0047A2  0012               	return	
 15931  0047A4                     l11146:
 15932  0047A4  4A0A               	infsnz	memcmp@s1^0,f,c
 15933  0047A6  2A0B               	incf	(memcmp@s1+1)^0,f,c
 15934  0047A8  4A0C               	infsnz	memcmp@s2^0,f,c
 15935  0047AA  2A0D               	incf	(memcmp@s2+1)^0,f,c
 15936  0047AC                     l11148:
 15937  0047AC  060E               	decf	memcmp@n^0,f,c
 15938  0047AE  A0D8               	btfss	status,0,c
 15939  0047B0  060F               	decf	(memcmp@n+1)^0,f,c
 15940  0047B2  280E               	incf	memcmp@n^0,w,c
 15941  0047B4  E1C0               	bnz	l11140
 15942  0047B6  280F               	incf	(memcmp@n+1)^0,w,c
 15943  0047B8  A4D8               	btfss	status,2,c
 15944  0047BA  D7BD               	goto	l11140
 15945  0047BC  0E00               	movlw	0
 15946  0047BE  6E0B               	movwf	(?_memcmp+1)^0,c
 15947  0047C0  0E00               	movlw	0
 15948  0047C2  6E0A               	movwf	?_memcmp^0,c
 15949  0047C4  0012               	return		;funcret
 15950  0047C6                     __end_of_memcmp:
 15951                           	callstack 0
 15952                           
 15953 ;; *************** function ___lmul *****************
 15954 ;; Defined at:
 15955 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 15956 ;; Parameters:    Size  Location     Type
 15957 ;;  multiplier      4    9[COMRAM] unsigned long 
 15958 ;;  multiplicand    4   13[COMRAM] unsigned long 
 15959 ;; Auto vars:     Size  Location     Type
 15960 ;;  product         4   17[COMRAM] unsigned long 
 15961 ;; Return value:  Size  Location     Type
 15962 ;;                  4    9[COMRAM] unsigned long 
 15963 ;; Registers used:
 15964 ;;		wreg, status,2, status,0
 15965 ;; Tracked objects:
 15966 ;;		On entry : 0/0
 15967 ;;		On exit  : 0/0
 15968 ;;		Unchanged: 0/0
 15969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15970 ;;      Params:         8       0       0       0       0       0       0       0       0
 15971 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15972 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15973 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15974 ;;Total ram usage:       12 bytes
 15975 ;; Hardware stack levels used:    1
 15976 ;; Hardware stack levels required when called:    2
 15977 ;; This function calls:
 15978 ;;		Nothing
 15979 ;; This function is called by:
 15980 ;;		_clust2sect
 15981 ;;		_auto_mount
 15982 ;;		_atol
 15983 ;; This function uses a non-reentrant model
 15984 ;;
 15985                           
 15986                           	psect	text90
 15987  0050CC                     __ptext90:
 15988                           	callstack 0
 15989  0050CC                     ___lmul:
 15990                           	callstack 20
 15991                           
 15992                           ;incstack = 0
 15993  0050CC  0E00               	movlw	0
 15994  0050CE  6E12               	movwf	___lmul@product^0,c
 15995  0050D0  0E00               	movlw	0
 15996  0050D2  6E13               	movwf	(___lmul@product+1)^0,c
 15997  0050D4  0E00               	movlw	0
 15998  0050D6  6E14               	movwf	(___lmul@product+2)^0,c
 15999  0050D8  0E00               	movlw	0
 16000  0050DA  6E15               	movwf	(___lmul@product+3)^0,c
 16001  0050DC                     l10764:
 16002  0050DC  A00A               	btfss	___lmul@multiplier^0,0,c
 16003  0050DE  D008               	goto	l10768
 16004  0050E0  500E               	movf	___lmul@multiplicand^0,w,c
 16005  0050E2  2612               	addwf	___lmul@product^0,f,c
 16006  0050E4  500F               	movf	(___lmul@multiplicand+1)^0,w,c
 16007  0050E6  2213               	addwfc	(___lmul@product+1)^0,f,c
 16008  0050E8  5010               	movf	(___lmul@multiplicand+2)^0,w,c
 16009  0050EA  2214               	addwfc	(___lmul@product+2)^0,f,c
 16010  0050EC  5011               	movf	(___lmul@multiplicand+3)^0,w,c
 16011  0050EE  2215               	addwfc	(___lmul@product+3)^0,f,c
 16012  0050F0                     l10768:
 16013  0050F0  90D8               	bcf	status,0,c
 16014  0050F2  360E               	rlcf	___lmul@multiplicand^0,f,c
 16015  0050F4  360F               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16016  0050F6  3610               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16017  0050F8  3611               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16018  0050FA  90D8               	bcf	status,0,c
 16019  0050FC  320D               	rrcf	(___lmul@multiplier+3)^0,f,c
 16020  0050FE  320C               	rrcf	(___lmul@multiplier+2)^0,f,c
 16021  005100  320B               	rrcf	(___lmul@multiplier+1)^0,f,c
 16022  005102  320A               	rrcf	___lmul@multiplier^0,f,c
 16023  005104  500A               	movf	___lmul@multiplier^0,w,c
 16024  005106  100B               	iorwf	(___lmul@multiplier+1)^0,w,c
 16025  005108  100C               	iorwf	(___lmul@multiplier+2)^0,w,c
 16026  00510A  100D               	iorwf	(___lmul@multiplier+3)^0,w,c
 16027  00510C  A4D8               	btfss	status,2,c
 16028  00510E  D7E6               	goto	l10764
 16029  005110  C012  F00A         	movff	___lmul@product,?___lmul
 16030  005114  C013  F00B         	movff	___lmul@product+1,?___lmul+1
 16031  005118  C014  F00C         	movff	___lmul@product+2,?___lmul+2
 16032  00511C  C015  F00D         	movff	___lmul@product+3,?___lmul+3
 16033  005120  0012               	return		;funcret
 16034  005122                     __end_of___lmul:
 16035                           	callstack 0
 16036                           
 16037 ;; *************** function _f_mount *****************
 16038 ;; Defined at:
 16039 ;;		line 794 in file "bibliotecas/tff.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;  drv             1    wreg     unsigned char 
 16042 ;;  fs              2    9[COMRAM] PTR struct _FATFS
 16043 ;;		 -> fs(544), 
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;  drv             1   11[COMRAM] unsigned char 
 16046 ;; Return value:  Size  Location     Type
 16047 ;;                  1    wreg      enum E3231
 16048 ;; Registers used:
 16049 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16050 ;; Tracked objects:
 16051 ;;		On entry : 0/1
 16052 ;;		On exit  : 0/0
 16053 ;;		Unchanged: 0/0
 16054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16055 ;;      Params:         2       0       0       0       0       0       0       0       0
 16056 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16057 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16058 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16059 ;;Total ram usage:        3 bytes
 16060 ;; Hardware stack levels used:    1
 16061 ;; Hardware stack levels required when called:    2
 16062 ;; This function calls:
 16063 ;;		Nothing
 16064 ;; This function is called by:
 16065 ;;		_escrita_sdcard
 16066 ;; This function uses a non-reentrant model
 16067 ;;
 16068                           
 16069                           	psect	text91
 16070  005344                     __ptext91:
 16071                           	callstack 0
 16072  005344                     _f_mount:
 16073                           	callstack 24
 16074                           
 16075                           ;incstack = 0
 16076                           ;f_mount@drv stored from wreg
 16077  005344  6E0C               	movwf	f_mount@drv^0,c
 16078                           
 16079                           ;tff.c: 799: if (drv) return FR_INVALID_DRIVE;
 16080  005346  500C               	movf	f_mount@drv^0,w,c
 16081  005348  B4D8               	btfsc	status,2,c
 16082  00534A  D002               	goto	l12226
 16083  00534C  0E05               	movlw	5
 16084  00534E  0012               	return	
 16085  005350                     l12226:
 16086                           
 16087                           ;tff.c: 801: if (FatFs) FatFs->fs_type = 0;
 16088  005350  504D               	movf	_FatFs^0,w,c
 16089  005352  104E               	iorwf	(_FatFs+1)^0,w,c
 16090  005354  B4D8               	btfsc	status,2,c
 16091  005356  D008               	goto	l12230
 16092  005358  EE20 F01C          	lfsr	2,28
 16093  00535C  504D               	movf	_FatFs^0,w,c
 16094  00535E  26D9               	addwf	fsr2l,f,c
 16095  005360  504E               	movf	(_FatFs+1)^0,w,c
 16096  005362  22DA               	addwfc	fsr2h,f,c
 16097  005364  0E00               	movlw	0
 16098  005366  6EDF               	movwf	indf2,c
 16099  005368                     l12230:
 16100                           
 16101                           ;tff.c: 803: FatFs = fs;
 16102  005368  C00A  F04D         	movff	f_mount@fs,_FatFs
 16103  00536C  C00B  F04E         	movff	f_mount@fs+1,_FatFs+1
 16104                           
 16105                           ;tff.c: 804: if (fs) fs->fs_type = 0;
 16106  005370  500A               	movf	f_mount@fs^0,w,c
 16107  005372  100B               	iorwf	(f_mount@fs+1)^0,w,c
 16108  005374  B4D8               	btfsc	status,2,c
 16109  005376  D008               	goto	l12236
 16110  005378  EE20 F01C          	lfsr	2,28
 16111  00537C  500A               	movf	f_mount@fs^0,w,c
 16112  00537E  26D9               	addwf	fsr2l,f,c
 16113  005380  500B               	movf	(f_mount@fs+1)^0,w,c
 16114  005382  22DA               	addwfc	fsr2h,f,c
 16115  005384  0E00               	movlw	0
 16116  005386  6EDF               	movwf	indf2,c
 16117  005388                     l12236:
 16118                           
 16119                           ;tff.c: 806: return FR_OK;
 16120  005388  0E00               	movlw	0
 16121  00538A  0012               	return		;funcret
 16122  00538C                     __end_of_f_mount:
 16123                           	callstack 0
 16124                           
 16125 ;; *************** function _f_lseek *****************
 16126 ;; Defined at:
 16127 ;;		line 1140 in file "bibliotecas/tff.c"
 16128 ;; Parameters:    Size  Location     Type
 16129 ;;  fp              2   38[BANK0 ] PTR struct _FIL
 16130 ;;		 -> fil(28), 
 16131 ;;  ofs             4   40[BANK0 ] unsigned long 
 16132 ;; Auto vars:     Size  Location     Type
 16133 ;;  csize           4   65[BANK0 ] unsigned long 
 16134 ;;  ifptr           4   61[BANK0 ] unsigned long 
 16135 ;;  clust           2   69[BANK0 ] unsigned short 
 16136 ;;  res             1   60[BANK0 ] enum E155
 16137 ;; Return value:  Size  Location     Type
 16138 ;;                  1    wreg      enum E3231
 16139 ;; Registers used:
 16140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16141 ;; Tracked objects:
 16142 ;;		On entry : 3F/0
 16143 ;;		On exit  : 3F/0
 16144 ;;		Unchanged: 0/0
 16145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16146 ;;      Params:         0       6       0       0       0       0       0       0       0
 16147 ;;      Locals:         0      11       0       0       0       0       0       0       0
 16148 ;;      Temps:          0      16       0       0       0       0       0       0       0
 16149 ;;      Totals:         0      33       0       0       0       0       0       0       0
 16150 ;;Total ram usage:       33 bytes
 16151 ;; Hardware stack levels used:    1
 16152 ;; Hardware stack levels required when called:   10
 16153 ;; This function calls:
 16154 ;;		___lldiv
 16155 ;;		_create_chain
 16156 ;;		_get_cluster
 16157 ;;		_validate
 16158 ;; This function is called by:
 16159 ;;		_escrita_sdcard
 16160 ;; This function uses a non-reentrant model
 16161 ;;
 16162                           
 16163                           	psect	text92
 16164  000AF2                     __ptext92:
 16165                           	callstack 0
 16166  000AF2                     _f_lseek:
 16167                           	callstack 16
 16168                           
 16169                           ; BSR set to: 0
 16170                           ;tff.c: 1145: FRESULT res;;tff.c: 1146: CLUST clust;;tff.c: 1147: DWORD csize, ifptr;;tf
      +                          f.c: 1150: res = validate(fp->fs, fp->id);
 16171                           
 16172                           ;incstack = 0
 16173  000AF2  EE20 F004          	lfsr	2,4
 16174  000AF6  5186               	movf	f_lseek@fp& (0+255),w,b
 16175  000AF8  26D9               	addwf	fsr2l,f,c
 16176  000AFA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16177  000AFC  22DA               	addwfc	fsr2h,f,c
 16178  000AFE  CFDE F010          	movff	postinc2,validate@fs
 16179  000B02  CFDD F011          	movff	postdec2,validate@fs+1
 16180  000B06  C086  FFD9         	movff	f_lseek@fp,fsr2l
 16181  000B0A  C087  FFDA         	movff	f_lseek@fp+1,fsr2h
 16182  000B0E  CFDE F012          	movff	postinc2,validate@id
 16183  000B12  CFDD F013          	movff	postdec2,validate@id+1
 16184  000B16  ECC6  F029         	call	_validate	;wreg free
 16185  000B1A  0100               	movlb	0	; () banked
 16186  000B1C  6F9C               	movwf	f_lseek@res& (0+255),b
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;tff.c: 1151: if (res != FR_OK) return res;
 16190  000B1E  519C               	movf	f_lseek@res& (0+255),w,b
 16191  000B20  A4D8               	btfss	status,2,c
 16192  000B22  0012               	return	
 16193                           
 16194                           ; BSR set to: 0
 16195                           ;tff.c: 1152: if (fp->flag & 0x80) return FR_RW_ERROR;
 16196  000B24  EE20 F002          	lfsr	2,2
 16197  000B28  5186               	movf	f_lseek@fp& (0+255),w,b
 16198  000B2A  26D9               	addwf	fsr2l,f,c
 16199  000B2C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16200  000B2E  22DA               	addwfc	fsr2h,f,c
 16201  000B30  BEDF               	btfsc	indf2,7,c
 16202  000B32  0012               	return	
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;tff.c: 1153: if (ofs > fp->fsize;tff.c: 1155: && !(fp->flag & 0x02);tff.c: 1157: ) ofs 
      +                          = fp->fsize;
 16206  000B34  EE20 F00A          	lfsr	2,10
 16207  000B38  5186               	movf	f_lseek@fp& (0+255),w,b
 16208  000B3A  26D9               	addwf	fsr2l,f,c
 16209  000B3C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16210  000B3E  22DA               	addwfc	fsr2h,f,c
 16211  000B40  5188               	movf	f_lseek@ofs& (0+255),w,b
 16212  000B42  5CDE               	subwf	postinc2,w,c
 16213  000B44  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16214  000B46  58DE               	subwfb	postinc2,w,c
 16215  000B48  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16216  000B4A  58DE               	subwfb	postinc2,w,c
 16217  000B4C  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16218  000B4E  58DE               	subwfb	postinc2,w,c
 16219  000B50  B0D8               	btfsc	status,0,c
 16220  000B52  D016               	goto	l1188
 16221                           
 16222                           ; BSR set to: 0
 16223  000B54  EE20 F002          	lfsr	2,2
 16224  000B58  5186               	movf	f_lseek@fp& (0+255),w,b
 16225  000B5A  26D9               	addwf	fsr2l,f,c
 16226  000B5C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16227  000B5E  22DA               	addwfc	fsr2h,f,c
 16228  000B60  B2DF               	btfsc	indf2,1,c
 16229  000B62  D00E               	goto	l1188
 16230                           
 16231                           ; BSR set to: 0
 16232  000B64  EE20 F00A          	lfsr	2,10
 16233  000B68  5186               	movf	f_lseek@fp& (0+255),w,b
 16234  000B6A  26D9               	addwf	fsr2l,f,c
 16235  000B6C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16236  000B6E  22DA               	addwfc	fsr2h,f,c
 16237  000B70  CFDE F088          	movff	postinc2,f_lseek@ofs
 16238  000B74  CFDE F089          	movff	postinc2,f_lseek@ofs+1
 16239  000B78  CFDE F08A          	movff	postinc2,f_lseek@ofs+2
 16240  000B7C  CFDE F08B          	movff	postinc2,f_lseek@ofs+3
 16241  000B80                     l1188:
 16242                           
 16243                           ; BSR set to: 0
 16244                           ;tff.c: 1159: ifptr = fp->fptr;
 16245  000B80  EE20 F006          	lfsr	2,6
 16246  000B84  5186               	movf	f_lseek@fp& (0+255),w,b
 16247  000B86  26D9               	addwf	fsr2l,f,c
 16248  000B88  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16249  000B8A  22DA               	addwfc	fsr2h,f,c
 16250  000B8C  CFDE F09D          	movff	postinc2,f_lseek@ifptr
 16251  000B90  CFDE F09E          	movff	postinc2,f_lseek@ifptr+1
 16252  000B94  CFDE F09F          	movff	postinc2,f_lseek@ifptr+2
 16253  000B98  CFDE F0A0          	movff	postinc2,f_lseek@ifptr+3
 16254                           
 16255                           ;tff.c: 1160: fp->fptr = 0; fp->csect = 255;
 16256  000B9C  EE20 F006          	lfsr	2,6
 16257  000BA0  5186               	movf	f_lseek@fp& (0+255),w,b
 16258  000BA2  26D9               	addwf	fsr2l,f,c
 16259  000BA4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16260  000BA6  22DA               	addwfc	fsr2h,f,c
 16261  000BA8  6ADE               	clrf	postinc2,c
 16262  000BAA  6ADE               	clrf	postinc2,c
 16263  000BAC  6ADE               	clrf	postinc2,c
 16264  000BAE  6ADD               	clrf	postdec2,c
 16265  000BB0  EE20 F003          	lfsr	2,3
 16266  000BB4  5186               	movf	f_lseek@fp& (0+255),w,b
 16267  000BB6  26D9               	addwf	fsr2l,f,c
 16268  000BB8  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16269  000BBA  22DA               	addwfc	fsr2h,f,c
 16270  000BBC  0EFF               	movlw	255
 16271  000BBE  6EDF               	movwf	indf2,c
 16272                           
 16273                           ; BSR set to: 0
 16274                           ;tff.c: 1161: if (ofs > 0) {
 16275  000BC0  5188               	movf	f_lseek@ofs& (0+255),w,b
 16276  000BC2  1189               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 16277  000BC4  118A               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 16278  000BC6  118B               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 16279  000BC8  B4D8               	btfsc	status,2,c
 16280  000BCA  D19D               	goto	l12466
 16281                           
 16282                           ; BSR set to: 0
 16283                           ;tff.c: 1162: csize = (DWORD)fp->fs->csize * 512U;
 16284  000BCC  EE20 F004          	lfsr	2,4
 16285  000BD0  5186               	movf	f_lseek@fp& (0+255),w,b
 16286  000BD2  26D9               	addwf	fsr2l,f,c
 16287  000BD4  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16288  000BD6  22DA               	addwfc	fsr2h,f,c
 16289  000BD8  EE10 F01D          	lfsr	1,29
 16290  000BDC  50DE               	movf	postinc2,w,c
 16291  000BDE  26E1               	addwf	fsr1l,f,c
 16292  000BE0  50DD               	movf	postdec2,w,c
 16293  000BE2  22E2               	addwfc	fsr1h,f,c
 16294  000BE4  50E7               	movf	indf1,w,c
 16295  000BE6  6F8C               	movwf	??_f_lseek& (0+255),b
 16296  000BE8  C08C  F08D         	movff	??_f_lseek,??_f_lseek+1
 16297  000BEC  6B8E               	clrf	(??_f_lseek+2)& (0+255),b
 16298  000BEE  6B8F               	clrf	(??_f_lseek+3)& (0+255),b
 16299  000BF0  6B90               	clrf	(??_f_lseek+4)& (0+255),b
 16300  000BF2  0E09               	movlw	9
 16301  000BF4                     u14525:
 16302  000BF4  90D8               	bcf	status,0,c
 16303  000BF6  378D               	rlcf	(??_f_lseek+1)& (0+255),f,b
 16304  000BF8  378E               	rlcf	(??_f_lseek+2)& (0+255),f,b
 16305  000BFA  378F               	rlcf	(??_f_lseek+3)& (0+255),f,b
 16306  000BFC  3790               	rlcf	(??_f_lseek+4)& (0+255),f,b
 16307  000BFE  2EE8               	decfsz	wreg,f,c
 16308  000C00  D7F9               	goto	u14525
 16309  000C02  C08D  F0A1         	movff	??_f_lseek+1,f_lseek@csize
 16310  000C06  C08E  F0A2         	movff	??_f_lseek+2,f_lseek@csize+1
 16311  000C0A  C08F  F0A3         	movff	??_f_lseek+3,f_lseek@csize+2
 16312  000C0E  C090  F0A4         	movff	??_f_lseek+4,f_lseek@csize+3
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;tff.c: 1163: if (ifptr > 0 &&;tff.c: 1164: (ofs - 1) / csize >= (ifptr - 1) / csize) {
 16316  000C12  519D               	movf	f_lseek@ifptr& (0+255),w,b
 16317  000C14  119E               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 16318  000C16  119F               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 16319  000C18  11A0               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 16320  000C1A  B4D8               	btfsc	status,2,c
 16321  000C1C  D093               	goto	l12424
 16322                           
 16323                           ; BSR set to: 0
 16324  000C1E  0EFF               	movlw	255
 16325  000C20  2588               	addwf	f_lseek@ofs& (0+255),w,b
 16326  000C22  6E0A               	movwf	___lldiv@dividend^0,c
 16327  000C24  0EFF               	movlw	255
 16328  000C26  2189               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 16329  000C28  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16330  000C2A  0EFF               	movlw	255
 16331  000C2C  218A               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 16332  000C2E  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16333  000C30  0EFF               	movlw	255
 16334  000C32  218B               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 16335  000C34  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16336  000C36  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16337  000C3A  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16338  000C3E  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16339  000C42  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16340  000C46  ECF4  F024         	call	___lldiv	;wreg free
 16341  000C4A  C00A  F08C         	movff	?___lldiv,??_f_lseek
 16342  000C4E  C00B  F08D         	movff	?___lldiv+1,??_f_lseek+1
 16343  000C52  C00C  F08E         	movff	?___lldiv+2,??_f_lseek+2
 16344  000C56  C00D  F08F         	movff	?___lldiv+3,??_f_lseek+3
 16345  000C5A  0EFF               	movlw	255
 16346  000C5C  0100               	movlb	0	; () banked
 16347  000C5E  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16348  000C60  6E0A               	movwf	___lldiv@dividend^0,c
 16349  000C62  0EFF               	movlw	255
 16350  000C64  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16351  000C66  6E0B               	movwf	(___lldiv@dividend+1)^0,c
 16352  000C68  0EFF               	movlw	255
 16353  000C6A  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16354  000C6C  6E0C               	movwf	(___lldiv@dividend+2)^0,c
 16355  000C6E  0EFF               	movlw	255
 16356  000C70  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16357  000C72  6E0D               	movwf	(___lldiv@dividend+3)^0,c
 16358  000C74  C0A1  F00E         	movff	f_lseek@csize,___lldiv@divisor
 16359  000C78  C0A2  F00F         	movff	f_lseek@csize+1,___lldiv@divisor+1
 16360  000C7C  C0A3  F010         	movff	f_lseek@csize+2,___lldiv@divisor+2
 16361  000C80  C0A4  F011         	movff	f_lseek@csize+3,___lldiv@divisor+3
 16362  000C84  ECF4  F024         	call	___lldiv	;wreg free
 16363  000C88  500A               	movf	?___lldiv^0,w,c
 16364  000C8A  0100               	movlb	0	; () banked
 16365  000C8C  5D8C               	subwf	??_f_lseek& (0+255),w,b
 16366  000C8E  500B               	movf	(?___lldiv+1)^0,w,c
 16367  000C90  598D               	subwfb	(??_f_lseek+1)& (0+255),w,b
 16368  000C92  500C               	movf	(?___lldiv+2)^0,w,c
 16369  000C94  598E               	subwfb	(??_f_lseek+2)& (0+255),w,b
 16370  000C96  500D               	movf	(?___lldiv+3)^0,w,c
 16371  000C98  598F               	subwfb	(??_f_lseek+3)& (0+255),w,b
 16372  000C9A  A0D8               	btfss	status,0,c
 16373  000C9C  D053               	goto	l12424
 16374                           
 16375                           ; BSR set to: 0
 16376                           ;tff.c: 1165: fp->fptr = (ifptr - 1) & ~(csize - 1);
 16377  000C9E  0EFF               	movlw	255
 16378  000CA0  25A1               	addwf	f_lseek@csize& (0+255),w,b
 16379  000CA2  6F8C               	movwf	??_f_lseek& (0+255),b
 16380  000CA4  0EFF               	movlw	255
 16381  000CA6  21A2               	addwfc	(f_lseek@csize+1)& (0+255),w,b
 16382  000CA8  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16383  000CAA  0EFF               	movlw	255
 16384  000CAC  21A3               	addwfc	(f_lseek@csize+2)& (0+255),w,b
 16385  000CAE  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16386  000CB0  0EFF               	movlw	255
 16387  000CB2  21A4               	addwfc	(f_lseek@csize+3)& (0+255),w,b
 16388  000CB4  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16389  000CB6  1D8C               	comf	??_f_lseek& (0+255),w,b
 16390  000CB8  6F90               	movwf	(??_f_lseek+4)& (0+255),b
 16391  000CBA  1D8D               	comf	(??_f_lseek+1)& (0+255),w,b
 16392  000CBC  6F91               	movwf	(??_f_lseek+5)& (0+255),b
 16393  000CBE  1D8E               	comf	(??_f_lseek+2)& (0+255),w,b
 16394  000CC0  6F92               	movwf	(??_f_lseek+6)& (0+255),b
 16395  000CC2  1D8F               	comf	(??_f_lseek+3)& (0+255),w,b
 16396  000CC4  6F93               	movwf	(??_f_lseek+7)& (0+255),b
 16397  000CC6  0EFF               	movlw	255
 16398  000CC8  259D               	addwf	f_lseek@ifptr& (0+255),w,b
 16399  000CCA  6F94               	movwf	(??_f_lseek+8)& (0+255),b
 16400  000CCC  0EFF               	movlw	255
 16401  000CCE  219E               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 16402  000CD0  6F95               	movwf	(??_f_lseek+9)& (0+255),b
 16403  000CD2  0EFF               	movlw	255
 16404  000CD4  219F               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 16405  000CD6  6F96               	movwf	(??_f_lseek+10)& (0+255),b
 16406  000CD8  0EFF               	movlw	255
 16407  000CDA  21A0               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 16408  000CDC  6F97               	movwf	(??_f_lseek+11)& (0+255),b
 16409  000CDE  5190               	movf	(??_f_lseek+4)& (0+255),w,b
 16410  000CE0  1594               	andwf	(??_f_lseek+8)& (0+255),w,b
 16411  000CE2  6F98               	movwf	(??_f_lseek+12)& (0+255),b
 16412  000CE4  5191               	movf	(??_f_lseek+5)& (0+255),w,b
 16413  000CE6  1595               	andwf	(??_f_lseek+9)& (0+255),w,b
 16414  000CE8  6F99               	movwf	(??_f_lseek+13)& (0+255),b
 16415  000CEA  5192               	movf	(??_f_lseek+6)& (0+255),w,b
 16416  000CEC  1596               	andwf	(??_f_lseek+10)& (0+255),w,b
 16417  000CEE  6F9A               	movwf	(??_f_lseek+14)& (0+255),b
 16418  000CF0  5193               	movf	(??_f_lseek+7)& (0+255),w,b
 16419  000CF2  1597               	andwf	(??_f_lseek+11)& (0+255),w,b
 16420  000CF4  6F9B               	movwf	(??_f_lseek+15)& (0+255),b
 16421  000CF6  EE20 F006          	lfsr	2,6
 16422  000CFA  5186               	movf	f_lseek@fp& (0+255),w,b
 16423  000CFC  26D9               	addwf	fsr2l,f,c
 16424  000CFE  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16425  000D00  22DA               	addwfc	fsr2h,f,c
 16426  000D02  C098  FFDE         	movff	??_f_lseek+12,postinc2
 16427  000D06  C099  FFDE         	movff	??_f_lseek+13,postinc2
 16428  000D0A  C09A  FFDE         	movff	??_f_lseek+14,postinc2
 16429  000D0E  C09B  FFDE         	movff	??_f_lseek+15,postinc2
 16430                           
 16431                           ;tff.c: 1166: ofs -= fp->fptr;
 16432  000D12  EE20 F006          	lfsr	2,6
 16433  000D16  5186               	movf	f_lseek@fp& (0+255),w,b
 16434  000D18  26D9               	addwf	fsr2l,f,c
 16435  000D1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16436  000D1C  22DA               	addwfc	fsr2h,f,c
 16437  000D1E  50DE               	movf	postinc2,w,c
 16438  000D20  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16439  000D22  50DE               	movf	postinc2,w,c
 16440  000D24  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16441  000D26  50DE               	movf	postinc2,w,c
 16442  000D28  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16443  000D2A  50DD               	movf	postdec2,w,c
 16444  000D2C  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16445                           
 16446                           ;tff.c: 1167: clust = fp->curr_clust;
 16447  000D2E  EE20 F010          	lfsr	2,16
 16448  000D32  5186               	movf	f_lseek@fp& (0+255),w,b
 16449  000D34  26D9               	addwf	fsr2l,f,c
 16450  000D36  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16451  000D38  22DA               	addwfc	fsr2h,f,c
 16452  000D3A  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16453  000D3E  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16454                           
 16455                           ;tff.c: 1168: } else {
 16456  000D42  D030               	goto	l12436
 16457  000D44                     l12424:
 16458                           
 16459                           ; BSR set to: 0
 16460                           ;tff.c: 1169: clust = fp->org_clust;
 16461  000D44  EE20 F00E          	lfsr	2,14
 16462  000D48  5186               	movf	f_lseek@fp& (0+255),w,b
 16463  000D4A  26D9               	addwf	fsr2l,f,c
 16464  000D4C  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16465  000D4E  22DA               	addwfc	fsr2h,f,c
 16466  000D50  CFDE F0A5          	movff	postinc2,f_lseek@clust
 16467  000D54  CFDD F0A6          	movff	postdec2,f_lseek@clust+1
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;tff.c: 1171: if (clust == 0) {
 16471  000D58  51A5               	movf	f_lseek@clust& (0+255),w,b
 16472  000D5A  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16473  000D5C  A4D8               	btfss	status,2,c
 16474  000D5E  D018               	goto	l1192
 16475                           
 16476                           ; BSR set to: 0
 16477                           ;tff.c: 1172: clust = create_chain(0);
 16478  000D60  0E00               	movlw	0
 16479  000D62  6F79               	movwf	(create_chain@clust+1)& (0+255),b
 16480  000D64  0E00               	movlw	0
 16481  000D66  6F78               	movwf	create_chain@clust& (0+255),b
 16482  000D68  ECBB  F016         	call	_create_chain	;wreg free
 16483  000D6C  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16484  000D70  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;tff.c: 1173: if (clust == 1) goto fk_error;
 16488  000D74  05A5               	decf	f_lseek@clust& (0+255),w,b
 16489  000D76  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16490  000D78  B4D8               	btfsc	status,2,c
 16491  000D7A  D0F8               	goto	l12474
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;tff.c: 1174: fp->org_clust = clust;
 16495  000D7C  EE20 F00E          	lfsr	2,14
 16496  000D80  5186               	movf	f_lseek@fp& (0+255),w,b
 16497  000D82  26D9               	addwf	fsr2l,f,c
 16498  000D84  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16499  000D86  22DA               	addwfc	fsr2h,f,c
 16500  000D88  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16501  000D8C  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16502  000D90                     l1192:
 16503                           
 16504                           ; BSR set to: 0
 16505                           ;tff.c: 1175: };tff.c: 1177: fp->curr_clust = clust;
 16506  000D90  EE20 F010          	lfsr	2,16
 16507  000D94  5186               	movf	f_lseek@fp& (0+255),w,b
 16508  000D96  26D9               	addwf	fsr2l,f,c
 16509  000D98  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16510  000D9A  22DA               	addwfc	fsr2h,f,c
 16511  000D9C  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16512  000DA0  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16513  000DA4                     l12436:
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;tff.c: 1178: };tff.c: 1179: if (clust != 0) {
 16517  000DA4  51A5               	movf	f_lseek@clust& (0+255),w,b
 16518  000DA6  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16519  000DA8  A4D8               	btfss	status,2,c
 16520  000DAA  D063               	goto	l12458
 16521  000DAC  D0AC               	goto	l12466
 16522  000DAE                     l12440:
 16523                           
 16524                           ; BSR set to: 0
 16525                           ;tff.c: 1182: if (fp->flag & 0x02) {
 16526  000DAE  EE20 F002          	lfsr	2,2
 16527  000DB2  5186               	movf	f_lseek@fp& (0+255),w,b
 16528  000DB4  26D9               	addwf	fsr2l,f,c
 16529  000DB6  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16530  000DB8  22DA               	addwfc	fsr2h,f,c
 16531  000DBA  A2DF               	btfss	indf2,1,c
 16532  000DBC  D017               	goto	l12448
 16533                           
 16534                           ; BSR set to: 0
 16535                           ;tff.c: 1183: clust = create_chain(clust);
 16536  000DBE  C0A5  F078         	movff	f_lseek@clust,create_chain@clust
 16537  000DC2  C0A6  F079         	movff	f_lseek@clust+1,create_chain@clust+1
 16538  000DC6  ECBB  F016         	call	_create_chain	;wreg free
 16539  000DCA  C078  F0A5         	movff	?_create_chain,f_lseek@clust
 16540  000DCE  C079  F0A6         	movff	?_create_chain+1,f_lseek@clust+1
 16541                           
 16542                           ; BSR set to: 0
 16543                           ;tff.c: 1184: if (clust == 0) {
 16544  000DD2  51A5               	movf	f_lseek@clust& (0+255),w,b
 16545  000DD4  11A6               	iorwf	(f_lseek@clust+1)& (0+255),w,b
 16546  000DD6  A4D8               	btfss	status,2,c
 16547  000DD8  D013               	goto	l12450
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;tff.c: 1185: ofs = csize; break;
 16551  000DDA  C0A1  F088         	movff	f_lseek@csize,f_lseek@ofs
 16552  000DDE  C0A2  F089         	movff	f_lseek@csize+1,f_lseek@ofs+1
 16553  000DE2  C0A3  F08A         	movff	f_lseek@csize+2,f_lseek@ofs+2
 16554  000DE6  C0A4  F08B         	movff	f_lseek@csize+3,f_lseek@ofs+3
 16555  000DEA  D04D               	goto	u14620
 16556  000DEC                     l12448:
 16557                           
 16558                           ; BSR set to: 0
 16559                           ;tff.c: 1189: clust = get_cluster(clust);
 16560  000DEC  C0A5  F04A         	movff	f_lseek@clust,get_cluster@clust
 16561  000DF0  C0A6  F04B         	movff	f_lseek@clust+1,get_cluster@clust+1
 16562  000DF4  ECF4  F012         	call	_get_cluster	;wreg free
 16563  000DF8  C04A  F0A5         	movff	?_get_cluster,f_lseek@clust
 16564  000DFC  C04B  F0A6         	movff	?_get_cluster+1,f_lseek@clust+1
 16565  000E00                     l12450:
 16566                           
 16567                           ;tff.c: 1190: if (clust < 2 || clust >= fp->fs->max_clust) goto fk_error;
 16568  000E00  0100               	movlb	0	; () banked
 16569  000E02  51A6               	movf	(f_lseek@clust+1)& (0+255),w,b
 16570  000E04  E104               	bnz	u14600
 16571  000E06  0E02               	movlw	2
 16572  000E08  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16573  000E0A  A0D8               	btfss	status,0,c
 16574  000E0C  D0AF               	goto	l12474
 16575  000E0E                     u14600:
 16576                           
 16577                           ; BSR set to: 0
 16578  000E0E  EE20 F004          	lfsr	2,4
 16579  000E12  5186               	movf	f_lseek@fp& (0+255),w,b
 16580  000E14  26D9               	addwf	fsr2l,f,c
 16581  000E16  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16582  000E18  22DA               	addwfc	fsr2h,f,c
 16583  000E1A  EE10 F016          	lfsr	1,22
 16584  000E1E  50DE               	movf	postinc2,w,c
 16585  000E20  26E1               	addwf	fsr1l,f,c
 16586  000E22  50DD               	movf	postdec2,w,c
 16587  000E24  22E2               	addwfc	fsr1h,f,c
 16588  000E26  50E6               	movf	postinc1,w,c
 16589  000E28  5DA5               	subwf	f_lseek@clust& (0+255),w,b
 16590  000E2A  50E6               	movf	postinc1,w,c
 16591  000E2C  59A6               	subwfb	(f_lseek@clust+1)& (0+255),w,b
 16592  000E2E  B0D8               	btfsc	status,0,c
 16593  000E30  D09D               	goto	l12474
 16594                           
 16595                           ; BSR set to: 0
 16596                           ;tff.c: 1191: fp->curr_clust = clust;
 16597  000E32  EE20 F010          	lfsr	2,16
 16598  000E36  5186               	movf	f_lseek@fp& (0+255),w,b
 16599  000E38  26D9               	addwf	fsr2l,f,c
 16600  000E3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16601  000E3C  22DA               	addwfc	fsr2h,f,c
 16602  000E3E  C0A5  FFDE         	movff	f_lseek@clust,postinc2
 16603  000E42  C0A6  FFDD         	movff	f_lseek@clust+1,postdec2
 16604                           
 16605                           ;tff.c: 1192: fp->fptr += csize;
 16606  000E46  EE20 F006          	lfsr	2,6
 16607  000E4A  5186               	movf	f_lseek@fp& (0+255),w,b
 16608  000E4C  26D9               	addwf	fsr2l,f,c
 16609  000E4E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16610  000E50  22DA               	addwfc	fsr2h,f,c
 16611  000E52  51A1               	movf	f_lseek@csize& (0+255),w,b
 16612  000E54  26DE               	addwf	postinc2,f,c
 16613  000E56  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16614  000E58  22DE               	addwfc	postinc2,f,c
 16615  000E5A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16616  000E5C  22DE               	addwfc	postinc2,f,c
 16617  000E5E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16618  000E60  22DE               	addwfc	postinc2,f,c
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;tff.c: 1193: ofs -= csize;
 16622  000E62  51A1               	movf	f_lseek@csize& (0+255),w,b
 16623  000E64  5F88               	subwf	f_lseek@ofs& (0+255),f,b
 16624  000E66  51A2               	movf	(f_lseek@csize+1)& (0+255),w,b
 16625  000E68  5B89               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 16626  000E6A  51A3               	movf	(f_lseek@csize+2)& (0+255),w,b
 16627  000E6C  5B8A               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 16628  000E6E  51A4               	movf	(f_lseek@csize+3)& (0+255),w,b
 16629  000E70  5B8B               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 16630  000E72                     l12458:
 16631                           
 16632                           ; BSR set to: 0
 16633  000E72  5188               	movf	f_lseek@ofs& (0+255),w,b
 16634  000E74  5DA1               	subwf	f_lseek@csize& (0+255),w,b
 16635  000E76  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16636  000E78  59A2               	subwfb	(f_lseek@csize+1)& (0+255),w,b
 16637  000E7A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16638  000E7C  59A3               	subwfb	(f_lseek@csize+2)& (0+255),w,b
 16639  000E7E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16640  000E80  59A4               	subwfb	(f_lseek@csize+3)& (0+255),w,b
 16641  000E82  A0D8               	btfss	status,0,c
 16642  000E84  D794               	goto	l12440
 16643  000E86                     u14620:
 16644                           
 16645                           ; BSR set to: 0
 16646                           ;tff.c: 1194: };tff.c: 1195: fp->fptr += ofs;
 16647  000E86  EE20 F006          	lfsr	2,6
 16648  000E8A  5186               	movf	f_lseek@fp& (0+255),w,b
 16649  000E8C  26D9               	addwf	fsr2l,f,c
 16650  000E8E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16651  000E90  22DA               	addwfc	fsr2h,f,c
 16652  000E92  5188               	movf	f_lseek@ofs& (0+255),w,b
 16653  000E94  26DE               	addwf	postinc2,f,c
 16654  000E96  5189               	movf	(f_lseek@ofs+1)& (0+255),w,b
 16655  000E98  22DE               	addwfc	postinc2,f,c
 16656  000E9A  518A               	movf	(f_lseek@ofs+2)& (0+255),w,b
 16657  000E9C  22DE               	addwfc	postinc2,f,c
 16658  000E9E  518B               	movf	(f_lseek@ofs+3)& (0+255),w,b
 16659  000EA0  22DE               	addwfc	postinc2,f,c
 16660                           
 16661                           ;tff.c: 1196: fp->csect = (BYTE)(ofs / 512U);
 16662  000EA2  EE20 F003          	lfsr	2,3
 16663  000EA6  5186               	movf	f_lseek@fp& (0+255),w,b
 16664  000EA8  26D9               	addwf	fsr2l,f,c
 16665  000EAA  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16666  000EAC  22DA               	addwfc	fsr2h,f,c
 16667  000EAE  C088  F08C         	movff	f_lseek@ofs,??_f_lseek
 16668  000EB2  C089  F08D         	movff	f_lseek@ofs+1,??_f_lseek+1
 16669  000EB6  C08A  F08E         	movff	f_lseek@ofs+2,??_f_lseek+2
 16670  000EBA  C08B  F08F         	movff	f_lseek@ofs+3,??_f_lseek+3
 16671  000EBE  0E0A               	movlw	10
 16672  000EC0  D005               	goto	u14630
 16673  000EC2                     u14635:
 16674  000EC2  90D8               	bcf	status,0,c
 16675  000EC4  338F               	rrcf	(??_f_lseek+3)& (0+255),f,b
 16676  000EC6  338E               	rrcf	(??_f_lseek+2)& (0+255),f,b
 16677  000EC8  338D               	rrcf	(??_f_lseek+1)& (0+255),f,b
 16678  000ECA  338C               	rrcf	??_f_lseek& (0+255),f,b
 16679  000ECC                     u14630:
 16680  000ECC  2EE8               	decfsz	wreg,f,c
 16681  000ECE  D7F9               	goto	u14635
 16682  000ED0  518C               	movf	??_f_lseek& (0+255),w,b
 16683  000ED2  6EDF               	movwf	indf2,c
 16684                           
 16685                           ; BSR set to: 0
 16686                           ;tff.c: 1197: if (ofs % 512U) fp->csect++;
 16687  000ED4  0EFF               	movlw	255
 16688  000ED6  1588               	andwf	f_lseek@ofs& (0+255),w,b
 16689  000ED8  6F8C               	movwf	??_f_lseek& (0+255),b
 16690  000EDA  0E01               	movlw	1
 16691  000EDC  1589               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 16692  000EDE  6F8D               	movwf	(??_f_lseek+1)& (0+255),b
 16693  000EE0  0E00               	movlw	0
 16694  000EE2  158A               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 16695  000EE4  6F8E               	movwf	(??_f_lseek+2)& (0+255),b
 16696  000EE6  0E00               	movlw	0
 16697  000EE8  158B               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 16698  000EEA  6F8F               	movwf	(??_f_lseek+3)& (0+255),b
 16699  000EEC  518C               	movf	??_f_lseek& (0+255),w,b
 16700  000EEE  118D               	iorwf	(??_f_lseek+1)& (0+255),w,b
 16701  000EF0  118E               	iorwf	(??_f_lseek+2)& (0+255),w,b
 16702  000EF2  118F               	iorwf	(??_f_lseek+3)& (0+255),w,b
 16703  000EF4  B4D8               	btfsc	status,2,c
 16704  000EF6  D007               	goto	l12466
 16705                           
 16706                           ; BSR set to: 0
 16707  000EF8  EE20 F003          	lfsr	2,3
 16708  000EFC  5186               	movf	f_lseek@fp& (0+255),w,b
 16709  000EFE  26D9               	addwf	fsr2l,f,c
 16710  000F00  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16711  000F02  22DA               	addwfc	fsr2h,f,c
 16712  000F04  2ADF               	incf	indf2,f,c
 16713  000F06                     l12466:
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;tff.c: 1198: };tff.c: 1199: };tff.c: 1202: if (fp->fptr > fp->fsize) {
 16717  000F06  EE20 F006          	lfsr	2,6
 16718  000F0A  5186               	movf	f_lseek@fp& (0+255),w,b
 16719  000F0C  26D9               	addwf	fsr2l,f,c
 16720  000F0E  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16721  000F10  22DA               	addwfc	fsr2h,f,c
 16722  000F12  EE10 F00A          	lfsr	1,10
 16723  000F16  5186               	movf	f_lseek@fp& (0+255),w,b
 16724  000F18  26E1               	addwf	fsr1l,f,c
 16725  000F1A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16726  000F1C  22E2               	addwfc	fsr1h,f,c
 16727  000F1E  50DE               	movf	postinc2,w,c
 16728  000F20  5CE6               	subwf	postinc1,w,c
 16729  000F22  50DE               	movf	postinc2,w,c
 16730  000F24  58E6               	subwfb	postinc1,w,c
 16731  000F26  50DE               	movf	postinc2,w,c
 16732  000F28  58E6               	subwfb	postinc1,w,c
 16733  000F2A  50DE               	movf	postinc2,w,c
 16734  000F2C  58E6               	subwfb	postinc1,w,c
 16735  000F2E  B0D8               	btfsc	status,0,c
 16736  000F30  0012               	return	
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;tff.c: 1203: fp->fsize = fp->fptr;
 16740  000F32  EE20 F006          	lfsr	2,6
 16741  000F36  5186               	movf	f_lseek@fp& (0+255),w,b
 16742  000F38  26D9               	addwf	fsr2l,f,c
 16743  000F3A  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16744  000F3C  22DA               	addwfc	fsr2h,f,c
 16745  000F3E  EE10 F00A          	lfsr	1,10
 16746  000F42  5186               	movf	f_lseek@fp& (0+255),w,b
 16747  000F44  26E1               	addwf	fsr1l,f,c
 16748  000F46  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16749  000F48  22E2               	addwfc	fsr1h,f,c
 16750  000F4A  CFDE FFE6          	movff	postinc2,postinc1
 16751  000F4E  CFDE FFE6          	movff	postinc2,postinc1
 16752  000F52  CFDE FFE6          	movff	postinc2,postinc1
 16753  000F56  CFDE FFE6          	movff	postinc2,postinc1
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;tff.c: 1204: fp->flag |= 0x20;
 16757  000F5A  EE20 F002          	lfsr	2,2
 16758  000F5E  5186               	movf	f_lseek@fp& (0+255),w,b
 16759  000F60  26D9               	addwf	fsr2l,f,c
 16760  000F62  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16761  000F64  22DA               	addwfc	fsr2h,f,c
 16762  000F66  0E00               	movlw	0
 16763  000F68  8ADB               	bsf	plusw2,5,c
 16764  000F6A  0012               	return	
 16765  000F6C                     l12474:
 16766                           
 16767                           ; BSR set to: 0
 16768                           ;tff.c: 1211: fp->flag |= 0x80;
 16769  000F6C  EE20 F002          	lfsr	2,2
 16770  000F70  5186               	movf	f_lseek@fp& (0+255),w,b
 16771  000F72  26D9               	addwf	fsr2l,f,c
 16772  000F74  5187               	movf	(f_lseek@fp+1)& (0+255),w,b
 16773  000F76  22DA               	addwfc	fsr2h,f,c
 16774  000F78  0E00               	movlw	0
 16775  000F7A  8EDB               	bsf	plusw2,7,c
 16776                           
 16777                           ; BSR set to: 0
 16778  000F7C  0012               	return		;funcret
 16779  000F7E                     __end_of_f_lseek:
 16780                           	callstack 0
 16781                           
 16782 ;; *************** function _create_chain *****************
 16783 ;; Defined at:
 16784 ;;		line 283 in file "bibliotecas/tff.c"
 16785 ;; Parameters:    Size  Location     Type
 16786 ;;  clust           2   24[BANK0 ] unsigned short 
 16787 ;; Auto vars:     Size  Location     Type
 16788 ;;  ncl             2   36[BANK0 ] unsigned short 
 16789 ;;  scl             2   34[BANK0 ] unsigned short 
 16790 ;;  cstat           2   32[BANK0 ] unsigned short 
 16791 ;;  fs              2   30[BANK0 ] PTR struct _FATFS
 16792 ;;		 -> NULL(0), fs(544), 
 16793 ;;  mcl             2   28[BANK0 ] unsigned short 
 16794 ;; Return value:  Size  Location     Type
 16795 ;;                  2   24[BANK0 ] unsigned short 
 16796 ;; Registers used:
 16797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16798 ;; Tracked objects:
 16799 ;;		On entry : 3F/0
 16800 ;;		On exit  : 3F/0
 16801 ;;		Unchanged: 0/0
 16802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16803 ;;      Params:         0       2       0       0       0       0       0       0       0
 16804 ;;      Locals:         0      10       0       0       0       0       0       0       0
 16805 ;;      Temps:          0       2       0       0       0       0       0       0       0
 16806 ;;      Totals:         0      14       0       0       0       0       0       0       0
 16807 ;;Total ram usage:       14 bytes
 16808 ;; Hardware stack levels used:    1
 16809 ;; Hardware stack levels required when called:    9
 16810 ;; This function calls:
 16811 ;;		_get_cluster
 16812 ;;		_put_cluster
 16813 ;; This function is called by:
 16814 ;;		_reserve_direntry
 16815 ;;		_f_write
 16816 ;;		_f_lseek
 16817 ;; This function uses a non-reentrant model
 16818 ;;
 16819                           
 16820                           	psect	text93
 16821  002D76                     __ptext93:
 16822                           	callstack 0
 16823  002D76                     _create_chain:
 16824                           	callstack 13
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;tff.c: 287: CLUST cstat, ncl, scl, mcl;;tff.c: 288: FATFS *fs = FatFs;
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;incstack = 0
 16831  002D76  C04D  F07E         	movff	_FatFs,create_chain@fs
 16832  002D7A  C04E  F07F         	movff	_FatFs+1,create_chain@fs+1
 16833                           
 16834                           ; BSR set to: 0
 16835                           ;tff.c: 291: mcl = fs->max_clust;
 16836  002D7E  EE20 F016          	lfsr	2,22
 16837  002D82  517E               	movf	create_chain@fs& (0+255),w,b
 16838  002D84  26D9               	addwf	fsr2l,f,c
 16839  002D86  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16840  002D88  22DA               	addwfc	fsr2h,f,c
 16841  002D8A  CFDE F07C          	movff	postinc2,create_chain@mcl
 16842  002D8E  CFDD F07D          	movff	postdec2,create_chain@mcl+1
 16843                           
 16844                           ; BSR set to: 0
 16845                           ;tff.c: 292: if (clust == 0) {
 16846  002D92  5178               	movf	create_chain@clust& (0+255),w,b
 16847  002D94  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 16848  002D96  A4D8               	btfss	status,2,c
 16849  002D98  D01B               	goto	l10812
 16850                           
 16851                           ; BSR set to: 0
 16852                           ;tff.c: 293: scl = fs->last_clust;
 16853  002D9A  EE20 F018          	lfsr	2,24
 16854  002D9E  517E               	movf	create_chain@fs& (0+255),w,b
 16855  002DA0  26D9               	addwf	fsr2l,f,c
 16856  002DA2  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 16857  002DA4  22DA               	addwfc	fsr2h,f,c
 16858  002DA6  CFDE F082          	movff	postinc2,create_chain@scl
 16859  002DAA  CFDD F083          	movff	postdec2,create_chain@scl+1
 16860                           
 16861                           ; BSR set to: 0
 16862                           ;tff.c: 294: if (scl < 2 || scl >= mcl) scl = 1;
 16863  002DAE  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16864  002DB0  E104               	bnz	u12060
 16865  002DB2  0E02               	movlw	2
 16866  002DB4  5D82               	subwf	create_chain@scl& (0+255),w,b
 16867  002DB6  A0D8               	btfss	status,0,c
 16868  002DB8  D006               	goto	u12070
 16869  002DBA                     u12060:
 16870                           
 16871                           ; BSR set to: 0
 16872  002DBA  517C               	movf	create_chain@mcl& (0+255),w,b
 16873  002DBC  5D82               	subwf	create_chain@scl& (0+255),w,b
 16874  002DBE  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16875  002DC0  5983               	subwfb	(create_chain@scl+1)& (0+255),w,b
 16876  002DC2  A0D8               	btfss	status,0,c
 16877  002DC4  D02B               	goto	l913
 16878  002DC6                     u12070:
 16879                           
 16880                           ; BSR set to: 0
 16881  002DC6  0E00               	movlw	0
 16882  002DC8  6F83               	movwf	(create_chain@scl+1)& (0+255),b
 16883  002DCA  0E01               	movlw	1
 16884  002DCC  6F82               	movwf	create_chain@scl& (0+255),b
 16885  002DCE  D026               	goto	l913
 16886  002DD0                     l10812:
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;tff.c: 296: else {;tff.c: 297: cstat = get_cluster(clust);
 16890  002DD0  C078  F04A         	movff	create_chain@clust,get_cluster@clust
 16891  002DD4  C079  F04B         	movff	create_chain@clust+1,get_cluster@clust+1
 16892  002DD8  ECF4  F012         	call	_get_cluster	;wreg free
 16893  002DDC  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16894  002DE0  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16895                           
 16896                           ;tff.c: 298: if (cstat < 2) return 1;
 16897  002DE4  0100               	movlb	0	; () banked
 16898  002DE6  5181               	movf	(create_chain@cstat+1)& (0+255),w,b
 16899  002DE8  E10A               	bnz	l10820
 16900  002DEA  0E02               	movlw	2
 16901  002DEC  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16902  002DEE  B0D8               	btfsc	status,0,c
 16903  002DF0  D006               	goto	l10820
 16904  002DF2                     u12080:
 16905  002DF2  0E00               	movlw	0
 16906  002DF4  0100               	movlb	0	; () banked
 16907  002DF6  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16908  002DF8  0E01               	movlw	1
 16909  002DFA  6F78               	movwf	?_create_chain& (0+255),b
 16910  002DFC  0012               	return	
 16911  002DFE                     l10820:
 16912                           
 16913                           ; BSR set to: 0
 16914                           ;tff.c: 299: if (cstat < mcl) return cstat;
 16915  002DFE  517C               	movf	create_chain@mcl& (0+255),w,b
 16916  002E00  5D80               	subwf	create_chain@cstat& (0+255),w,b
 16917  002E02  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16918  002E04  5981               	subwfb	(create_chain@cstat+1)& (0+255),w,b
 16919  002E06  B0D8               	btfsc	status,0,c
 16920  002E08  D005               	goto	l916
 16921                           
 16922                           ; BSR set to: 0
 16923  002E0A  C080  F078         	movff	create_chain@cstat,?_create_chain
 16924  002E0E  C081  F079         	movff	create_chain@cstat+1,?_create_chain+1
 16925  002E12  0012               	return	
 16926  002E14                     l916:
 16927                           
 16928                           ; BSR set to: 0
 16929                           ;tff.c: 300: scl = clust;
 16930  002E14  C078  F082         	movff	create_chain@clust,create_chain@scl
 16931  002E18  C079  F083         	movff	create_chain@clust+1,create_chain@scl+1
 16932  002E1C                     l913:
 16933                           
 16934                           ; BSR set to: 0
 16935                           ;tff.c: 301: };tff.c: 303: ncl = scl;
 16936  002E1C  C082  F084         	movff	create_chain@scl,create_chain@ncl
 16937  002E20  C083  F085         	movff	create_chain@scl+1,create_chain@ncl+1
 16938  002E24                     l10824:
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;tff.c: 305: ncl++;
 16942  002E24  4B84               	infsnz	create_chain@ncl& (0+255),f,b
 16943  002E26  2B85               	incf	(create_chain@ncl+1)& (0+255),f,b
 16944                           
 16945                           ; BSR set to: 0
 16946                           ;tff.c: 306: if (ncl >= mcl) {
 16947  002E28  517C               	movf	create_chain@mcl& (0+255),w,b
 16948  002E2A  5D84               	subwf	create_chain@ncl& (0+255),w,b
 16949  002E2C  517D               	movf	(create_chain@mcl+1)& (0+255),w,b
 16950  002E2E  5985               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 16951  002E30  A0D8               	btfss	status,0,c
 16952  002E32  D00F               	goto	l10836
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;tff.c: 307: ncl = 2;
 16956  002E34  0E00               	movlw	0
 16957  002E36  6F85               	movwf	(create_chain@ncl+1)& (0+255),b
 16958  002E38  0E02               	movlw	2
 16959  002E3A  6F84               	movwf	create_chain@ncl& (0+255),b
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;tff.c: 308: if (ncl > scl) return 0;
 16963  002E3C  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 16964  002E3E  E109               	bnz	l10836
 16965  002E40  0E02               	movlw	2
 16966  002E42  5D82               	subwf	create_chain@scl& (0+255),w,b
 16967  002E44  B0D8               	btfsc	status,0,c
 16968  002E46  D005               	goto	l10836
 16969  002E48                     u12110:
 16970                           
 16971                           ; BSR set to: 0
 16972  002E48  0E00               	movlw	0
 16973  002E4A  6F79               	movwf	(?_create_chain+1)& (0+255),b
 16974  002E4C  0E00               	movlw	0
 16975  002E4E  6F78               	movwf	?_create_chain& (0+255),b
 16976  002E50  0012               	return	
 16977  002E52                     l10836:
 16978                           
 16979                           ; BSR set to: 0
 16980                           ;tff.c: 309: };tff.c: 310: cstat = get_cluster(ncl);
 16981  002E52  C084  F04A         	movff	create_chain@ncl,get_cluster@clust
 16982  002E56  C085  F04B         	movff	create_chain@ncl+1,get_cluster@clust+1
 16983  002E5A  ECF4  F012         	call	_get_cluster	;wreg free
 16984  002E5E  C04A  F080         	movff	?_get_cluster,create_chain@cstat
 16985  002E62  C04B  F081         	movff	?_get_cluster+1,create_chain@cstat+1
 16986                           
 16987                           ;tff.c: 311: if (cstat == 0) break;
 16988  002E66  0100               	movlb	0	; () banked
 16989  002E68  5180               	movf	create_chain@cstat& (0+255),w,b
 16990  002E6A  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16991  002E6C  B4D8               	btfsc	status,2,c
 16992  002E6E  D00C               	goto	l10854
 16993                           
 16994                           ; BSR set to: 0
 16995                           ;tff.c: 312: if (cstat == 1) return 1;
 16996  002E70  0580               	decf	create_chain@cstat& (0+255),w,b
 16997  002E72  1181               	iorwf	(create_chain@cstat+1)& (0+255),w,b
 16998  002E74  B4D8               	btfsc	status,2,c
 16999  002E76  D7BD               	goto	u12080
 17000                           
 17001                           ; BSR set to: 0
 17002                           ;tff.c: 313: if (ncl == scl) return 0;
 17003  002E78  5182               	movf	create_chain@scl& (0+255),w,b
 17004  002E7A  1984               	xorwf	create_chain@ncl& (0+255),w,b
 17005  002E7C  E1D3               	bnz	l10824
 17006  002E7E  5183               	movf	(create_chain@scl+1)& (0+255),w,b
 17007  002E80  1985               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 17008  002E82  B4D8               	btfsc	status,2,c
 17009  002E84  D7E1               	goto	u12110
 17010  002E86  D7CE               	goto	l10824
 17011  002E88                     l10854:
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;tff.c: 316: if (!put_cluster(ncl, (CLUST)0x0FFFFFFF)) return 1;
 17015  002E88  C084  F060         	movff	create_chain@ncl,put_cluster@clust
 17016  002E8C  C085  F061         	movff	create_chain@ncl+1,put_cluster@clust+1
 17017  002E90  0EFF               	movlw	255
 17018  002E92  6F63               	movwf	(put_cluster@val+1)& (0+255),b
 17019  002E94  6962               	setf	put_cluster@val& (0+255),b
 17020  002E96  ECBE  F011         	call	_put_cluster	;wreg free
 17021  002E9A  0900               	iorlw	0
 17022  002E9C  B4D8               	btfsc	status,2,c
 17023  002E9E  D7A9               	goto	u12080
 17024                           
 17025                           ;tff.c: 317: if (clust != 0 && !put_cluster(clust, ncl)) return 1;
 17026  002EA0  0100               	movlb	0	; () banked
 17027  002EA2  5178               	movf	create_chain@clust& (0+255),w,b
 17028  002EA4  1179               	iorwf	(create_chain@clust+1)& (0+255),w,b
 17029  002EA6  B4D8               	btfsc	status,2,c
 17030  002EA8  D00D               	goto	l10868
 17031                           
 17032                           ; BSR set to: 0
 17033  002EAA  C078  F060         	movff	create_chain@clust,put_cluster@clust
 17034  002EAE  C079  F061         	movff	create_chain@clust+1,put_cluster@clust+1
 17035  002EB2  C084  F062         	movff	create_chain@ncl,put_cluster@val
 17036  002EB6  C085  F063         	movff	create_chain@ncl+1,put_cluster@val+1
 17037  002EBA  ECBE  F011         	call	_put_cluster	;wreg free
 17038  002EBE  0900               	iorlw	0
 17039  002EC0  B4D8               	btfsc	status,2,c
 17040  002EC2  D797               	goto	u12080
 17041  002EC4                     l10868:
 17042                           
 17043                           ;tff.c: 319: fs->last_clust = ncl;
 17044  002EC4  0100               	movlb	0	; () banked
 17045  002EC6  EE20 F018          	lfsr	2,24
 17046  002ECA  517E               	movf	create_chain@fs& (0+255),w,b
 17047  002ECC  26D9               	addwf	fsr2l,f,c
 17048  002ECE  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17049  002ED0  22DA               	addwfc	fsr2h,f,c
 17050  002ED2  C084  FFDE         	movff	create_chain@ncl,postinc2
 17051  002ED6  C085  FFDD         	movff	create_chain@ncl+1,postdec2
 17052                           
 17053                           ;tff.c: 320: if (fs->free_clust != (CLUST)0xFFFFFFFF) {
 17054  002EDA  EE20 F01A          	lfsr	2,26
 17055  002EDE  517E               	movf	create_chain@fs& (0+255),w,b
 17056  002EE0  26D9               	addwf	fsr2l,f,c
 17057  002EE2  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17058  002EE4  22DA               	addwfc	fsr2h,f,c
 17059  002EE6  28DE               	incf	postinc2,w,c
 17060  002EE8  E103               	bnz	u12180
 17061  002EEA  28DE               	incf	postinc2,w,c
 17062  002EEC  B4D8               	btfsc	status,2,c
 17063  002EEE  D009               	goto	l10872
 17064  002EF0                     u12180:
 17065                           
 17066                           ; BSR set to: 0
 17067                           ;tff.c: 321: fs->free_clust--;
 17068  002EF0  EE20 F01A          	lfsr	2,26
 17069  002EF4  517E               	movf	create_chain@fs& (0+255),w,b
 17070  002EF6  26D9               	addwf	fsr2l,f,c
 17071  002EF8  517F               	movf	(create_chain@fs+1)& (0+255),w,b
 17072  002EFA  22DA               	addwfc	fsr2h,f,c
 17073  002EFC  06DE               	decf	postinc2,f,c
 17074  002EFE  0E00               	movlw	0
 17075  002F00  5ADD               	subwfb	postdec2,f,c
 17076  002F02                     l10872:
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;tff.c: 325: };tff.c: 327: return ncl;
 17080  002F02  C084  F078         	movff	create_chain@ncl,?_create_chain
 17081  002F06  C085  F079         	movff	create_chain@ncl+1,?_create_chain+1
 17082                           
 17083                           ; BSR set to: 0
 17084  002F0A  0012               	return		;funcret
 17085  002F0C                     __end_of_create_chain:
 17086                           	callstack 0
 17087                           
 17088 ;; *************** function _put_cluster *****************
 17089 ;; Defined at:
 17090 ;;		line 198 in file "bibliotecas/tff.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;  clust           2    0[BANK0 ] unsigned short 
 17093 ;;  val             2    2[BANK0 ] unsigned short 
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;  fatsect         4   14[BANK0 ] unsigned long 
 17096 ;;  fs              2   22[BANK0 ] PTR struct _FATFS
 17097 ;;		 -> NULL(0), fs(544), 
 17098 ;;  p               2   20[BANK0 ] PTR unsigned char 
 17099 ;;		 -> fs.win(512), NULL(0), fs(544), 
 17100 ;;  bc              2   18[BANK0 ] unsigned short 
 17101 ;; Return value:  Size  Location     Type
 17102 ;;                  1    wreg      enum E105
 17103 ;; Registers used:
 17104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17105 ;; Tracked objects:
 17106 ;;		On entry : 3F/0
 17107 ;;		On exit  : 0/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17110 ;;      Params:         0       4       0       0       0       0       0       0       0
 17111 ;;      Locals:         0      14       0       0       0       0       0       0       0
 17112 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17113 ;;      Totals:         0      24       0       0       0       0       0       0       0
 17114 ;;Total ram usage:       24 bytes
 17115 ;; Hardware stack levels used:    1
 17116 ;; Hardware stack levels required when called:    8
 17117 ;; This function calls:
 17118 ;;		___wmul
 17119 ;;		_move_window
 17120 ;; This function is called by:
 17121 ;;		_remove_chain
 17122 ;;		_create_chain
 17123 ;; This function uses a non-reentrant model
 17124 ;;
 17125                           
 17126                           	psect	text94
 17127  00237C                     __ptext94:
 17128                           	callstack 0
 17129  00237C                     _put_cluster:
 17130                           	callstack 13
 17131                           
 17132                           ; BSR set to: 0
 17133                           ;tff.c: 203: WORD bc;;tff.c: 204: BYTE *p;;tff.c: 205: DWORD fatsect;;tff.c: 206: FATFS 
      +                          *fs = FatFs;
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;incstack = 0
 17137  00237C  C04D  F076         	movff	_FatFs,put_cluster@fs
 17138  002380  C04E  F077         	movff	_FatFs+1,put_cluster@fs+1
 17139                           
 17140                           ; BSR set to: 0
 17141                           ;tff.c: 209: fatsect = fs->fatbase;
 17142  002384  EE20 F008          	lfsr	2,8
 17143  002388  5176               	movf	put_cluster@fs& (0+255),w,b
 17144  00238A  26D9               	addwf	fsr2l,f,c
 17145  00238C  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17146  00238E  22DA               	addwfc	fsr2h,f,c
 17147  002390  CFDE F06E          	movff	postinc2,put_cluster@fatsect
 17148  002394  CFDE F06F          	movff	postinc2,put_cluster@fatsect+1
 17149  002398  CFDE F070          	movff	postinc2,put_cluster@fatsect+2
 17150  00239C  CFDE F071          	movff	postinc2,put_cluster@fatsect+3
 17151                           
 17152                           ;tff.c: 210: switch (fs->fs_type) {
 17153  0023A0  D10B               	goto	l10754
 17154  0023A2                     l10702:
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;tff.c: 212: bc = (WORD)clust * 3 / 2;
 17158  0023A2  C060  F00A         	movff	put_cluster@clust,___wmul@multiplier
 17159  0023A6  C061  F00B         	movff	put_cluster@clust+1,___wmul@multiplier+1
 17160  0023AA  0E00               	movlw	0
 17161  0023AC  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17162  0023AE  0E03               	movlw	3
 17163  0023B0  6E0C               	movwf	___wmul@multiplicand^0,c
 17164  0023B2  EC95  F02C         	call	___wmul	;wreg free
 17165  0023B6  90D8               	bcf	status,0,c
 17166  0023B8  300B               	rrcf	(?___wmul+1)^0,w,c
 17167  0023BA  0100               	movlb	0	; () banked
 17168  0023BC  6F64               	movwf	??_put_cluster& (0+255),b
 17169  0023BE  300A               	rrcf	?___wmul^0,w,c
 17170  0023C0  6F72               	movwf	put_cluster@bc& (0+255),b
 17171  0023C2  C064  F073         	movff	??_put_cluster,put_cluster@bc+1
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;tff.c: 213: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17175  0023C6  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17176  0023CA  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17177  0023CE  0E09               	movlw	9
 17178  0023D0  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17179  0023D2                     u11915:
 17180  0023D2  90D8               	bcf	status,0,c
 17181  0023D4  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17182  0023D6  3364               	rrcf	??_put_cluster& (0+255),f,b
 17183  0023D8  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17184  0023DA  D7FB               	goto	u11915
 17185  0023DC  5164               	movf	??_put_cluster& (0+255),w,b
 17186  0023DE  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17187  0023E0  6E35               	movwf	move_window@sector^0,c
 17188  0023E2  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17189  0023E4  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17190  0023E6  6E36               	movwf	(move_window@sector+1)^0,c
 17191  0023E8  0E00               	movlw	0
 17192  0023EA  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17193  0023EC  6E37               	movwf	(move_window@sector+2)^0,c
 17194  0023EE  0E00               	movlw	0
 17195  0023F0  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17196  0023F2  6E38               	movwf	(move_window@sector+3)^0,c
 17197  0023F4  EC15  F015         	call	_move_window	;wreg free
 17198  0023F8  0900               	iorlw	0
 17199  0023FA  A4D8               	btfss	status,2,c
 17200  0023FC  D002               	goto	l10710
 17201  0023FE                     u11920:
 17202  0023FE  0E00               	movlw	0
 17203  002400  0012               	return	
 17204  002402                     l10710:
 17205                           
 17206                           ;tff.c: 214: p = &fs->win[bc % 512U];
 17207  002402  0EFF               	movlw	255
 17208  002404  0100               	movlb	0	; () banked
 17209  002406  6F64               	movwf	??_put_cluster& (0+255),b
 17210  002408  0E01               	movlw	1
 17211  00240A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17212  00240C  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17213  002410  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17214  002414  5164               	movf	??_put_cluster& (0+255),w,b
 17215  002416  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17216  002418  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17217  00241A  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17218  00241C  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17219  002420  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17220  002424  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17221  002426  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17222  002428  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17223  00242A  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17224  00242C  0E20               	movlw	32
 17225  00242E  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17226  002430  6F74               	movwf	put_cluster@p& (0+255),b
 17227  002432  0E00               	movlw	0
 17228  002434  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17229  002436  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;tff.c: 215: *p = (clust & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 17233  002438  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17234  00243A  D004               	goto	l10716
 17235                           
 17236                           ; BSR set to: 0
 17237  00243C  C062  F06A         	movff	put_cluster@val,_put_cluster$1623
 17238  002440  6B6B               	clrf	(_put_cluster$1623+1)& (0+255),b
 17239  002442  D01A               	goto	l10718
 17240  002444                     l10716:
 17241                           
 17242                           ; BSR set to: 0
 17243  002444  5162               	movf	put_cluster@val& (0+255),w,b
 17244  002446  6F64               	movwf	??_put_cluster& (0+255),b
 17245  002448  6B65               	clrf	(??_put_cluster+1)& (0+255),b
 17246  00244A  3B64               	swapf	??_put_cluster& (0+255),f,b
 17247  00244C  3B65               	swapf	(??_put_cluster+1)& (0+255),f,b
 17248  00244E  0EF0               	movlw	240
 17249  002450  1765               	andwf	(??_put_cluster+1)& (0+255),f,b
 17250  002452  5164               	movf	??_put_cluster& (0+255),w,b
 17251  002454  0B0F               	andlw	15
 17252  002456  1365               	iorwf	(??_put_cluster+1)& (0+255),f,b
 17253  002458  0EF0               	movlw	240
 17254  00245A  1764               	andwf	??_put_cluster& (0+255),f,b
 17255  00245C  C074  FFD9         	movff	put_cluster@p,fsr2l
 17256  002460  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17257  002464  50DF               	movf	indf2,w,c
 17258  002466  0B0F               	andlw	15
 17259  002468  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17260  00246A  6B67               	clrf	(??_put_cluster+3)& (0+255),b
 17261  00246C  5164               	movf	??_put_cluster& (0+255),w,b
 17262  00246E  1166               	iorwf	(??_put_cluster+2)& (0+255),w,b
 17263  002470  6F6A               	movwf	_put_cluster$1623& (0+255),b
 17264  002472  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17265  002474  1167               	iorwf	(??_put_cluster+3)& (0+255),w,b
 17266  002476  6F6B               	movwf	(_put_cluster$1623+1)& (0+255),b
 17267  002478                     l10718:
 17268                           
 17269                           ; BSR set to: 0
 17270  002478  C074  FFD9         	movff	put_cluster@p,fsr2l
 17271  00247C  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17272  002480  C06A  FFDF         	movff	_put_cluster$1623,indf2
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;tff.c: 216: bc++;
 17276  002484  4B72               	infsnz	put_cluster@bc& (0+255),f,b
 17277  002486  2B73               	incf	(put_cluster@bc+1)& (0+255),f,b
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;tff.c: 217: fs->winflag = 1;
 17281  002488  EE20 F01F          	lfsr	2,31
 17282  00248C  5176               	movf	put_cluster@fs& (0+255),w,b
 17283  00248E  26D9               	addwf	fsr2l,f,c
 17284  002490  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17285  002492  22DA               	addwfc	fsr2h,f,c
 17286  002494  0E01               	movlw	1
 17287  002496  6EDF               	movwf	indf2,c
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;tff.c: 218: if (!move_window(fatsect + bc / 512U)) return FALSE;
 17291  002498  C072  F064         	movff	put_cluster@bc,??_put_cluster
 17292  00249C  C073  F065         	movff	put_cluster@bc+1,??_put_cluster+1
 17293  0024A0  0E09               	movlw	9
 17294  0024A2  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17295  0024A4                     u11945:
 17296  0024A4  90D8               	bcf	status,0,c
 17297  0024A6  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17298  0024A8  3364               	rrcf	??_put_cluster& (0+255),f,b
 17299  0024AA  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17300  0024AC  D7FB               	goto	u11945
 17301  0024AE  5164               	movf	??_put_cluster& (0+255),w,b
 17302  0024B0  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17303  0024B2  6E35               	movwf	move_window@sector^0,c
 17304  0024B4  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17305  0024B6  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17306  0024B8  6E36               	movwf	(move_window@sector+1)^0,c
 17307  0024BA  0E00               	movlw	0
 17308  0024BC  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17309  0024BE  6E37               	movwf	(move_window@sector+2)^0,c
 17310  0024C0  0E00               	movlw	0
 17311  0024C2  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17312  0024C4  6E38               	movwf	(move_window@sector+3)^0,c
 17313  0024C6  EC15  F015         	call	_move_window	;wreg free
 17314  0024CA  0900               	iorlw	0
 17315  0024CC  B4D8               	btfsc	status,2,c
 17316  0024CE  D797               	goto	u11920
 17317                           
 17318                           ;tff.c: 219: p = &fs->win[bc % 512U];
 17319  0024D0  0EFF               	movlw	255
 17320  0024D2  0100               	movlb	0	; () banked
 17321  0024D4  6F64               	movwf	??_put_cluster& (0+255),b
 17322  0024D6  0E01               	movlw	1
 17323  0024D8  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17324  0024DA  C072  F066         	movff	put_cluster@bc,??_put_cluster+2
 17325  0024DE  C073  F067         	movff	put_cluster@bc+1,??_put_cluster+3
 17326  0024E2  5164               	movf	??_put_cluster& (0+255),w,b
 17327  0024E4  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17328  0024E6  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17329  0024E8  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17330  0024EA  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17331  0024EE  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17332  0024F2  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17333  0024F4  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17334  0024F6  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17335  0024F8  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17336  0024FA  0E20               	movlw	32
 17337  0024FC  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17338  0024FE  6F74               	movwf	put_cluster@p& (0+255),b
 17339  002500  0E00               	movlw	0
 17340  002502  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17341  002504  6F75               	movwf	(put_cluster@p+1)& (0+255),b
 17342                           
 17343                           ; BSR set to: 0
 17344                           ;tff.c: 220: *p = (clust & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x
      +                          0F));
 17345  002506  B160               	btfsc	put_cluster@clust& (0+255),0,b
 17346  002508  D00E               	goto	l10736
 17347                           
 17348                           ; BSR set to: 0
 17349  00250A  C063  F064         	movff	put_cluster@val+1,??_put_cluster
 17350  00250E  0E0F               	movlw	15
 17351  002510  1764               	andwf	??_put_cluster& (0+255),f,b
 17352  002512  C074  FFD9         	movff	put_cluster@p,fsr2l
 17353  002516  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17354  00251A  50DF               	movf	indf2,w,c
 17355  00251C  0BF0               	andlw	240
 17356  00251E  1164               	iorwf	??_put_cluster& (0+255),w,b
 17357  002520  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17358  002522  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17359  002524  D00C               	goto	L6
 17360  002526                     l10736:
 17361                           
 17362                           ; BSR set to: 0
 17363  002526  C062  F064         	movff	put_cluster@val,??_put_cluster
 17364  00252A  C063  F065         	movff	put_cluster@val+1,??_put_cluster+1
 17365  00252E  0E04               	movlw	4
 17366  002530  6F66               	movwf	(??_put_cluster+2)& (0+255),b
 17367  002532                     u11975:
 17368  002532  90D8               	bcf	status,0,c
 17369  002534  3365               	rrcf	(??_put_cluster+1)& (0+255),f,b
 17370  002536  3364               	rrcf	??_put_cluster& (0+255),f,b
 17371  002538  2F66               	decfsz	(??_put_cluster+2)& (0+255),f,b
 17372  00253A  D7FB               	goto	u11975
 17373  00253C  5164               	movf	??_put_cluster& (0+255),w,b
 17374  00253E                     L6:
 17375  00253E  6F6C               	movwf	_put_cluster$1624& (0+255),b
 17376  002540  6B6D               	clrf	(_put_cluster$1624+1)& (0+255),b
 17377                           
 17378                           ; BSR set to: 0
 17379  002542  C074  FFD9         	movff	put_cluster@p,fsr2l
 17380  002546  C075  FFDA         	movff	put_cluster@p+1,fsr2h
 17381  00254A  C06C  FFDF         	movff	_put_cluster$1624,indf2
 17382                           
 17383                           ;tff.c: 221: break;
 17384  00254E  D042               	goto	l10756
 17385  002550                     l10740:
 17386                           
 17387                           ; BSR set to: 0
 17388                           ;tff.c: 224: if (!move_window(fatsect + clust / 256)) return FALSE;
 17389  002550  5161               	movf	(put_cluster@clust+1)& (0+255),w,b
 17390  002552  256E               	addwf	put_cluster@fatsect& (0+255),w,b
 17391  002554  6E35               	movwf	move_window@sector^0,c
 17392  002556  0E00               	movlw	0
 17393  002558  216F               	addwfc	(put_cluster@fatsect+1)& (0+255),w,b
 17394  00255A  6E36               	movwf	(move_window@sector+1)^0,c
 17395  00255C  0E00               	movlw	0
 17396  00255E  2170               	addwfc	(put_cluster@fatsect+2)& (0+255),w,b
 17397  002560  6E37               	movwf	(move_window@sector+2)^0,c
 17398  002562  0E00               	movlw	0
 17399  002564  2171               	addwfc	(put_cluster@fatsect+3)& (0+255),w,b
 17400  002566  6E38               	movwf	(move_window@sector+3)^0,c
 17401  002568  EC15  F015         	call	_move_window	;wreg free
 17402  00256C  0900               	iorlw	0
 17403  00256E  B4D8               	btfsc	status,2,c
 17404  002570  D746               	goto	u11920
 17405                           
 17406                           ;tff.c: 225: *(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U])=(WORD)((WORD)val);
 17407  002572  0EFF               	movlw	255
 17408  002574  0100               	movlb	0	; () banked
 17409  002576  6F64               	movwf	??_put_cluster& (0+255),b
 17410  002578  0E01               	movlw	1
 17411  00257A  6F65               	movwf	(??_put_cluster+1)& (0+255),b
 17412  00257C  C060  F066         	movff	put_cluster@clust,??_put_cluster+2
 17413  002580  C061  F067         	movff	put_cluster@clust+1,??_put_cluster+3
 17414  002584  90D8               	bcf	status,0,c
 17415  002586  3766               	rlcf	(??_put_cluster+2)& (0+255),f,b
 17416  002588  3767               	rlcf	(??_put_cluster+3)& (0+255),f,b
 17417  00258A  5164               	movf	??_put_cluster& (0+255),w,b
 17418  00258C  1766               	andwf	(??_put_cluster+2)& (0+255),f,b
 17419  00258E  5165               	movf	(??_put_cluster+1)& (0+255),w,b
 17420  002590  1767               	andwf	(??_put_cluster+3)& (0+255),f,b
 17421  002592  C076  F068         	movff	put_cluster@fs,??_put_cluster+4
 17422  002596  C077  F069         	movff	put_cluster@fs+1,??_put_cluster+5
 17423  00259A  5166               	movf	(??_put_cluster+2)& (0+255),w,b
 17424  00259C  2768               	addwf	(??_put_cluster+4)& (0+255),f,b
 17425  00259E  5167               	movf	(??_put_cluster+3)& (0+255),w,b
 17426  0025A0  2369               	addwfc	(??_put_cluster+5)& (0+255),f,b
 17427  0025A2  0E20               	movlw	32
 17428  0025A4  2568               	addwf	(??_put_cluster+4)& (0+255),w,b
 17429  0025A6  6ED9               	movwf	fsr2l,c
 17430  0025A8  0E00               	movlw	0
 17431  0025AA  2169               	addwfc	(??_put_cluster+5)& (0+255),w,b
 17432  0025AC  6EDA               	movwf	fsr2h,c
 17433  0025AE  C062  FFDE         	movff	put_cluster@val,postinc2
 17434  0025B2  C063  FFDD         	movff	put_cluster@val+1,postdec2
 17435                           
 17436                           ;tff.c: 226: break;
 17437  0025B6  D00E               	goto	l10756
 17438  0025B8                     l10754:
 17439                           
 17440                           ; BSR set to: 0
 17441  0025B8  EE20 F01C          	lfsr	2,28
 17442  0025BC  5176               	movf	put_cluster@fs& (0+255),w,b
 17443  0025BE  26D9               	addwf	fsr2l,f,c
 17444  0025C0  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17445  0025C2  22DA               	addwfc	fsr2h,f,c
 17446  0025C4  50DF               	movf	indf2,w,c
 17447                           
 17448                           ; Switch size 1, requested type "simple"
 17449                           ; Number of cases is 2, Range of values is 1 to 2
 17450                           ; switch strategies available:
 17451                           ; Name         Instructions Cycles
 17452                           ; simple_byte            7     4 (average)
 17453                           ;	Chosen strategy is simple_byte
 17454  0025C6  0A01               	xorlw	1	; case 1
 17455  0025C8  B4D8               	btfsc	status,2,c
 17456  0025CA  D6EB               	goto	l10702
 17457  0025CC  0A03               	xorlw	3	; case 2
 17458  0025CE  B4D8               	btfsc	status,2,c
 17459  0025D0  D7BF               	goto	l10740
 17460  0025D2  D715               	goto	u11920
 17461  0025D4                     l10756:
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;tff.c: 236: fs->winflag = 1;
 17465  0025D4  EE20 F01F          	lfsr	2,31
 17466  0025D8  5176               	movf	put_cluster@fs& (0+255),w,b
 17467  0025DA  26D9               	addwf	fsr2l,f,c
 17468  0025DC  5177               	movf	(put_cluster@fs+1)& (0+255),w,b
 17469  0025DE  22DA               	addwfc	fsr2h,f,c
 17470  0025E0  0E01               	movlw	1
 17471  0025E2  6EDF               	movwf	indf2,c
 17472                           
 17473                           ; BSR set to: 0
 17474                           ;tff.c: 237: return TRUE;
 17475  0025E4  0E01               	movlw	1
 17476  0025E6  0012               	return		;funcret
 17477  0025E8                     __end_of_put_cluster:
 17478                           	callstack 0
 17479                           
 17480 ;; *************** function _get_cluster *****************
 17481 ;; Defined at:
 17482 ;;		line 155 in file "bibliotecas/tff.c"
 17483 ;; Parameters:    Size  Location     Type
 17484 ;;  clust           2   73[COMRAM] unsigned short 
 17485 ;; Auto vars:     Size  Location     Type
 17486 ;;  fatsect         4   11[BANK0 ] unsigned long 
 17487 ;;  fs              2   17[BANK0 ] PTR struct _FATFS
 17488 ;;		 -> NULL(0), fs(544), 
 17489 ;;  bc              2   15[BANK0 ] unsigned short 
 17490 ;;  wc              2    9[BANK0 ] unsigned short 
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  2   73[COMRAM] unsigned short 
 17493 ;; Registers used:
 17494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17495 ;; Tracked objects:
 17496 ;;		On entry : 3F/0
 17497 ;;		On exit  : 0/0
 17498 ;;		Unchanged: 0/0
 17499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17500 ;;      Params:         2       0       0       0       0       0       0       0       0
 17501 ;;      Locals:         0      10       0       0       0       0       0       0       0
 17502 ;;      Temps:          0       9       0       0       0       0       0       0       0
 17503 ;;      Totals:         2      19       0       0       0       0       0       0       0
 17504 ;;Total ram usage:       21 bytes
 17505 ;; Hardware stack levels used:    1
 17506 ;; Hardware stack levels required when called:    8
 17507 ;; This function calls:
 17508 ;;		___wmul
 17509 ;;		_move_window
 17510 ;; This function is called by:
 17511 ;;		_remove_chain
 17512 ;;		_create_chain
 17513 ;;		_next_dir_entry
 17514 ;;		_f_lseek
 17515 ;;		_f_read
 17516 ;; This function uses a non-reentrant model
 17517 ;;
 17518                           
 17519                           	psect	text95
 17520  0025E8                     __ptext95:
 17521                           	callstack 0
 17522  0025E8                     _get_cluster:
 17523                           	callstack 13
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;tff.c: 159: WORD wc, bc;;tff.c: 160: DWORD fatsect;;tff.c: 161: FATFS *fs = FatFs;
 17527                           
 17528                           ;incstack = 0
 17529  0025E8  C04D  F071         	movff	_FatFs,get_cluster@fs
 17530  0025EC  C04E  F072         	movff	_FatFs+1,get_cluster@fs+1
 17531                           
 17532                           ;tff.c: 164: if (clust >= 2 && clust < fs->max_clust) {
 17533  0025F0  504B               	movf	(get_cluster@clust+1)^0,w,c
 17534  0025F2  E104               	bnz	u11820
 17535  0025F4  0E02               	movlw	2
 17536  0025F6  5C4A               	subwf	get_cluster@clust^0,w,c
 17537  0025F8  A0D8               	btfss	status,0,c
 17538  0025FA  D105               	goto	l10694
 17539  0025FC                     u11820:
 17540                           
 17541                           ; BSR set to: 0
 17542  0025FC  EE20 F016          	lfsr	2,22
 17543  002600  5171               	movf	get_cluster@fs& (0+255),w,b
 17544  002602  26D9               	addwf	fsr2l,f,c
 17545  002604  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17546  002606  22DA               	addwfc	fsr2h,f,c
 17547  002608  50DE               	movf	postinc2,w,c
 17548  00260A  5C4A               	subwf	get_cluster@clust^0,w,c
 17549  00260C  50DE               	movf	postinc2,w,c
 17550  00260E  584B               	subwfb	(get_cluster@clust+1)^0,w,c
 17551  002610  B0D8               	btfsc	status,0,c
 17552  002612  D0F9               	goto	l10694
 17553                           
 17554                           ; BSR set to: 0
 17555                           ;tff.c: 165: fatsect = fs->fatbase;
 17556  002614  EE20 F008          	lfsr	2,8
 17557  002618  5171               	movf	get_cluster@fs& (0+255),w,b
 17558  00261A  26D9               	addwf	fsr2l,f,c
 17559  00261C  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17560  00261E  22DA               	addwfc	fsr2h,f,c
 17561  002620  CFDE F06B          	movff	postinc2,get_cluster@fatsect
 17562  002624  CFDE F06C          	movff	postinc2,get_cluster@fatsect+1
 17563  002628  CFDE F06D          	movff	postinc2,get_cluster@fatsect+2
 17564  00262C  CFDE F06E          	movff	postinc2,get_cluster@fatsect+3
 17565                           
 17566                           ;tff.c: 166: switch (fs->fs_type) {
 17567  002630  D0DD               	goto	l10692
 17568  002632                     l10658:
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;tff.c: 168: bc = (WORD)clust * 3 / 2;
 17572  002632  C04A  F00A         	movff	get_cluster@clust,___wmul@multiplier
 17573  002636  C04B  F00B         	movff	get_cluster@clust+1,___wmul@multiplier+1
 17574  00263A  0E00               	movlw	0
 17575  00263C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 17576  00263E  0E03               	movlw	3
 17577  002640  6E0C               	movwf	___wmul@multiplicand^0,c
 17578  002642  EC95  F02C         	call	___wmul	;wreg free
 17579  002646  90D8               	bcf	status,0,c
 17580  002648  300B               	rrcf	(?___wmul+1)^0,w,c
 17581  00264A  0100               	movlb	0	; () banked
 17582  00264C  6F60               	movwf	??_get_cluster& (0+255),b
 17583  00264E  300A               	rrcf	?___wmul^0,w,c
 17584  002650  6F6F               	movwf	get_cluster@bc& (0+255),b
 17585  002652  C060  F070         	movff	??_get_cluster,get_cluster@bc+1
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;tff.c: 169: if (!move_window(fatsect + bc / 512U)) break;
 17589  002656  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17590  00265A  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17591  00265E  0E09               	movlw	9
 17592  002660  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17593  002662                     u11845:
 17594  002662  90D8               	bcf	status,0,c
 17595  002664  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17596  002666  3360               	rrcf	??_get_cluster& (0+255),f,b
 17597  002668  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17598  00266A  D7FB               	goto	u11845
 17599  00266C  5160               	movf	??_get_cluster& (0+255),w,b
 17600  00266E  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17601  002670  6E35               	movwf	move_window@sector^0,c
 17602  002672  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17603  002674  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17604  002676  6E36               	movwf	(move_window@sector+1)^0,c
 17605  002678  0E00               	movlw	0
 17606  00267A  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17607  00267C  6E37               	movwf	(move_window@sector+2)^0,c
 17608  00267E  0E00               	movlw	0
 17609  002680  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17610  002682  6E38               	movwf	(move_window@sector+3)^0,c
 17611  002684  EC15  F015         	call	_move_window	;wreg free
 17612  002688  0900               	iorlw	0
 17613  00268A  B4D8               	btfsc	status,2,c
 17614  00268C  D0BC               	goto	l10694
 17615                           
 17616                           ;tff.c: 170: wc = fs->win[bc % 512U]; bc++;
 17617  00268E  0EFF               	movlw	255
 17618  002690  0100               	movlb	0	; () banked
 17619  002692  6F60               	movwf	??_get_cluster& (0+255),b
 17620  002694  0E01               	movlw	1
 17621  002696  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17622  002698  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17623  00269C  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17624  0026A0  5160               	movf	??_get_cluster& (0+255),w,b
 17625  0026A2  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17626  0026A4  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17627  0026A6  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17628  0026A8  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17629  0026AC  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17630  0026B0  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17631  0026B2  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17632  0026B4  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17633  0026B6  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17634  0026B8  0E20               	movlw	32
 17635  0026BA  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17636  0026BC  6ED9               	movwf	fsr2l,c
 17637  0026BE  0E00               	movlw	0
 17638  0026C0  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17639  0026C2  6EDA               	movwf	fsr2h,c
 17640  0026C4  50DF               	movf	indf2,w,c
 17641  0026C6  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17642  0026C8  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17643  0026CA  6F69               	movwf	get_cluster@wc& (0+255),b
 17644  0026CC  6B6A               	clrf	(get_cluster@wc+1)& (0+255),b
 17645                           
 17646                           ; BSR set to: 0
 17647  0026CE  4B6F               	infsnz	get_cluster@bc& (0+255),f,b
 17648  0026D0  2B70               	incf	(get_cluster@bc+1)& (0+255),f,b
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;tff.c: 171: if (!move_window(fatsect + bc / 512U)) break;
 17652  0026D2  C06F  F060         	movff	get_cluster@bc,??_get_cluster
 17653  0026D6  C070  F061         	movff	get_cluster@bc+1,??_get_cluster+1
 17654  0026DA  0E09               	movlw	9
 17655  0026DC  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17656  0026DE                     u11865:
 17657  0026DE  90D8               	bcf	status,0,c
 17658  0026E0  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17659  0026E2  3360               	rrcf	??_get_cluster& (0+255),f,b
 17660  0026E4  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17661  0026E6  D7FB               	goto	u11865
 17662  0026E8  5160               	movf	??_get_cluster& (0+255),w,b
 17663  0026EA  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17664  0026EC  6E35               	movwf	move_window@sector^0,c
 17665  0026EE  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17666  0026F0  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17667  0026F2  6E36               	movwf	(move_window@sector+1)^0,c
 17668  0026F4  0E00               	movlw	0
 17669  0026F6  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17670  0026F8  6E37               	movwf	(move_window@sector+2)^0,c
 17671  0026FA  0E00               	movlw	0
 17672  0026FC  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17673  0026FE  6E38               	movwf	(move_window@sector+3)^0,c
 17674  002700  EC15  F015         	call	_move_window	;wreg free
 17675  002704  0900               	iorlw	0
 17676  002706  B4D8               	btfsc	status,2,c
 17677  002708  D07E               	goto	l10694
 17678                           
 17679                           ;tff.c: 172: wc |= (WORD)fs->win[bc % 512U] << 8;
 17680  00270A  0EFF               	movlw	255
 17681  00270C  0100               	movlb	0	; () banked
 17682  00270E  6F60               	movwf	??_get_cluster& (0+255),b
 17683  002710  0E01               	movlw	1
 17684  002712  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17685  002714  C06F  F062         	movff	get_cluster@bc,??_get_cluster+2
 17686  002718  C070  F063         	movff	get_cluster@bc+1,??_get_cluster+3
 17687  00271C  5160               	movf	??_get_cluster& (0+255),w,b
 17688  00271E  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17689  002720  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17690  002722  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17691  002724  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17692  002728  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17693  00272C  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17694  00272E  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17695  002730  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17696  002732  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17697  002734  0E20               	movlw	32
 17698  002736  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17699  002738  6ED9               	movwf	fsr2l,c
 17700  00273A  0E00               	movlw	0
 17701  00273C  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17702  00273E  6EDA               	movwf	fsr2h,c
 17703  002740  50DF               	movf	indf2,w,c
 17704  002742  6F66               	movwf	(??_get_cluster+6)& (0+255),b
 17705  002744  5166               	movf	(??_get_cluster+6)& (0+255),w,b
 17706  002746  6F68               	movwf	(??_get_cluster+8)& (0+255),b
 17707  002748  6B67               	clrf	(??_get_cluster+7)& (0+255),b
 17708  00274A  5167               	movf	(??_get_cluster+7)& (0+255),w,b
 17709  00274C  1369               	iorwf	get_cluster@wc& (0+255),f,b
 17710  00274E  5168               	movf	(??_get_cluster+8)& (0+255),w,b
 17711  002750  136A               	iorwf	(get_cluster@wc+1)& (0+255),f,b
 17712                           
 17713                           ; BSR set to: 0
 17714                           ;tff.c: 173: return (clust & 1) ? (wc >> 4) : (wc & 0xFFF);
 17715  002752  B04A               	btfsc	get_cluster@clust^0,0,c
 17716  002754  D007               	goto	l10678
 17717                           
 17718                           ; BSR set to: 0
 17719  002756  0EFF               	movlw	255
 17720  002758  1569               	andwf	get_cluster@wc& (0+255),w,b
 17721  00275A  6E4A               	movwf	?_get_cluster^0,c
 17722  00275C  0E0F               	movlw	15
 17723  00275E  156A               	andwf	(get_cluster@wc+1)& (0+255),w,b
 17724  002760  6E4B               	movwf	(?_get_cluster+1)^0,c
 17725  002762  0012               	return	
 17726  002764                     l10678:
 17727                           
 17728                           ; BSR set to: 0
 17729  002764  C069  F060         	movff	get_cluster@wc,??_get_cluster
 17730  002768  C06A  F061         	movff	get_cluster@wc+1,??_get_cluster+1
 17731  00276C  0E04               	movlw	4
 17732  00276E  6F62               	movwf	(??_get_cluster+2)& (0+255),b
 17733  002770                     u11895:
 17734  002770  90D8               	bcf	status,0,c
 17735  002772  3361               	rrcf	(??_get_cluster+1)& (0+255),f,b
 17736  002774  3360               	rrcf	??_get_cluster& (0+255),f,b
 17737  002776  2F62               	decfsz	(??_get_cluster+2)& (0+255),f,b
 17738  002778  D7FB               	goto	u11895
 17739  00277A  C060  F04A         	movff	??_get_cluster,?_get_cluster
 17740  00277E  C061  F04B         	movff	??_get_cluster+1,?_get_cluster+1
 17741  002782  0012               	return	
 17742  002784                     l10682:
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;tff.c: 176: if (!move_window(fatsect + clust / 256)) break;
 17746  002784  504B               	movf	(get_cluster@clust+1)^0,w,c
 17747  002786  256B               	addwf	get_cluster@fatsect& (0+255),w,b
 17748  002788  6E35               	movwf	move_window@sector^0,c
 17749  00278A  0E00               	movlw	0
 17750  00278C  216C               	addwfc	(get_cluster@fatsect+1)& (0+255),w,b
 17751  00278E  6E36               	movwf	(move_window@sector+1)^0,c
 17752  002790  0E00               	movlw	0
 17753  002792  216D               	addwfc	(get_cluster@fatsect+2)& (0+255),w,b
 17754  002794  6E37               	movwf	(move_window@sector+2)^0,c
 17755  002796  0E00               	movlw	0
 17756  002798  216E               	addwfc	(get_cluster@fatsect+3)& (0+255),w,b
 17757  00279A  6E38               	movwf	(move_window@sector+3)^0,c
 17758  00279C  EC15  F015         	call	_move_window	;wreg free
 17759  0027A0  0900               	iorlw	0
 17760  0027A2  B4D8               	btfsc	status,2,c
 17761  0027A4  D030               	goto	l10694
 17762                           
 17763                           ;tff.c: 177: return (WORD)(*(WORD*)(BYTE*)(&fs->win[((WORD)clust * 2) % 512U]));
 17764  0027A6  0EFF               	movlw	255
 17765  0027A8  0100               	movlb	0	; () banked
 17766  0027AA  6F60               	movwf	??_get_cluster& (0+255),b
 17767  0027AC  0E01               	movlw	1
 17768  0027AE  6F61               	movwf	(??_get_cluster+1)& (0+255),b
 17769  0027B0  C04A  F062         	movff	get_cluster@clust,??_get_cluster+2
 17770  0027B4  C04B  F063         	movff	get_cluster@clust+1,??_get_cluster+3
 17771  0027B8  90D8               	bcf	status,0,c
 17772  0027BA  3762               	rlcf	(??_get_cluster+2)& (0+255),f,b
 17773  0027BC  3763               	rlcf	(??_get_cluster+3)& (0+255),f,b
 17774  0027BE  5160               	movf	??_get_cluster& (0+255),w,b
 17775  0027C0  1762               	andwf	(??_get_cluster+2)& (0+255),f,b
 17776  0027C2  5161               	movf	(??_get_cluster+1)& (0+255),w,b
 17777  0027C4  1763               	andwf	(??_get_cluster+3)& (0+255),f,b
 17778  0027C6  C071  F064         	movff	get_cluster@fs,??_get_cluster+4
 17779  0027CA  C072  F065         	movff	get_cluster@fs+1,??_get_cluster+5
 17780  0027CE  5162               	movf	(??_get_cluster+2)& (0+255),w,b
 17781  0027D0  2764               	addwf	(??_get_cluster+4)& (0+255),f,b
 17782  0027D2  5163               	movf	(??_get_cluster+3)& (0+255),w,b
 17783  0027D4  2365               	addwfc	(??_get_cluster+5)& (0+255),f,b
 17784  0027D6  0E20               	movlw	32
 17785  0027D8  2564               	addwf	(??_get_cluster+4)& (0+255),w,b
 17786  0027DA  6ED9               	movwf	fsr2l,c
 17787  0027DC  0E00               	movlw	0
 17788  0027DE  2165               	addwfc	(??_get_cluster+5)& (0+255),w,b
 17789  0027E0  6EDA               	movwf	fsr2h,c
 17790  0027E2  CFDE F04A          	movff	postinc2,?_get_cluster
 17791  0027E6  CFDD F04B          	movff	postdec2,?_get_cluster+1
 17792  0027EA  0012               	return	
 17793  0027EC                     l10692:
 17794                           
 17795                           ; BSR set to: 0
 17796  0027EC  EE20 F01C          	lfsr	2,28
 17797  0027F0  5171               	movf	get_cluster@fs& (0+255),w,b
 17798  0027F2  26D9               	addwf	fsr2l,f,c
 17799  0027F4  5172               	movf	(get_cluster@fs+1)& (0+255),w,b
 17800  0027F6  22DA               	addwfc	fsr2h,f,c
 17801  0027F8  50DF               	movf	indf2,w,c
 17802                           
 17803                           ; Switch size 1, requested type "simple"
 17804                           ; Number of cases is 2, Range of values is 1 to 2
 17805                           ; switch strategies available:
 17806                           ; Name         Instructions Cycles
 17807                           ; simple_byte            7     4 (average)
 17808                           ;	Chosen strategy is simple_byte
 17809  0027FA  0A01               	xorlw	1	; case 1
 17810  0027FC  B4D8               	btfsc	status,2,c
 17811  0027FE  D719               	goto	l10658
 17812  002800  0A03               	xorlw	3	; case 2
 17813  002802  B4D8               	btfsc	status,2,c
 17814  002804  D7BF               	goto	l10682
 17815  002806                     l10694:
 17816                           
 17817                           ;tff.c: 184: };tff.c: 186: return 1;
 17818  002806  0E00               	movlw	0
 17819  002808  6E4B               	movwf	(?_get_cluster+1)^0,c
 17820  00280A  0E01               	movlw	1
 17821  00280C  6E4A               	movwf	?_get_cluster^0,c
 17822  00280E  0012               	return		;funcret
 17823  002810                     __end_of_get_cluster:
 17824                           	callstack 0
 17825                           
 17826 ;; *************** function ___lldiv *****************
 17827 ;; Defined at:
 17828 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 17829 ;; Parameters:    Size  Location     Type
 17830 ;;  dividend        4    9[COMRAM] unsigned long 
 17831 ;;  divisor         4   13[COMRAM] unsigned long 
 17832 ;; Auto vars:     Size  Location     Type
 17833 ;;  quotient        4   17[COMRAM] unsigned long 
 17834 ;;  counter         1   21[COMRAM] unsigned char 
 17835 ;; Return value:  Size  Location     Type
 17836 ;;                  4    9[COMRAM] unsigned long 
 17837 ;; Registers used:
 17838 ;;		wreg, status,2, status,0
 17839 ;; Tracked objects:
 17840 ;;		On entry : 0/0
 17841 ;;		On exit  : 0/0
 17842 ;;		Unchanged: 0/0
 17843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17844 ;;      Params:         8       0       0       0       0       0       0       0       0
 17845 ;;      Locals:         5       0       0       0       0       0       0       0       0
 17846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17847 ;;      Totals:        13       0       0       0       0       0       0       0       0
 17848 ;;Total ram usage:       13 bytes
 17849 ;; Hardware stack levels used:    1
 17850 ;; Hardware stack levels required when called:    2
 17851 ;; This function calls:
 17852 ;;		Nothing
 17853 ;; This function is called by:
 17854 ;;		_auto_mount
 17855 ;;		_f_lseek
 17856 ;;		_fprintf
 17857 ;;		_ultoa
 17858 ;; This function uses a non-reentrant model
 17859 ;;
 17860                           
 17861                           	psect	text96
 17862  0049E8                     __ptext96:
 17863                           	callstack 0
 17864  0049E8                     ___lldiv:
 17865                           	callstack 23
 17866                           
 17867                           ;incstack = 0
 17868  0049E8  0E00               	movlw	0
 17869  0049EA  6E12               	movwf	___lldiv@quotient^0,c
 17870  0049EC  0E00               	movlw	0
 17871  0049EE  6E13               	movwf	(___lldiv@quotient+1)^0,c
 17872  0049F0  0E00               	movlw	0
 17873  0049F2  6E14               	movwf	(___lldiv@quotient+2)^0,c
 17874  0049F4  0E00               	movlw	0
 17875  0049F6  6E15               	movwf	(___lldiv@quotient+3)^0,c
 17876  0049F8  500E               	movf	___lldiv@divisor^0,w,c
 17877  0049FA  100F               	iorwf	(___lldiv@divisor+1)^0,w,c
 17878  0049FC  1010               	iorwf	(___lldiv@divisor+2)^0,w,c
 17879  0049FE  1011               	iorwf	(___lldiv@divisor+3)^0,w,c
 17880  004A00  B4D8               	btfsc	status,2,c
 17881  004A02  D02A               	goto	l1772
 17882  004A04  0E01               	movlw	1
 17883  004A06  6E16               	movwf	___lldiv@counter^0,c
 17884  004A08  D006               	goto	l11602
 17885  004A0A                     l11600:
 17886  004A0A  90D8               	bcf	status,0,c
 17887  004A0C  360E               	rlcf	___lldiv@divisor^0,f,c
 17888  004A0E  360F               	rlcf	(___lldiv@divisor+1)^0,f,c
 17889  004A10  3610               	rlcf	(___lldiv@divisor+2)^0,f,c
 17890  004A12  3611               	rlcf	(___lldiv@divisor+3)^0,f,c
 17891  004A14  2A16               	incf	___lldiv@counter^0,f,c
 17892  004A16                     l11602:
 17893  004A16  AE11               	btfss	(___lldiv@divisor+3)^0,7,c
 17894  004A18  D7F8               	goto	l11600
 17895  004A1A                     u13340:
 17896  004A1A  90D8               	bcf	status,0,c
 17897  004A1C  3612               	rlcf	___lldiv@quotient^0,f,c
 17898  004A1E  3613               	rlcf	(___lldiv@quotient+1)^0,f,c
 17899  004A20  3614               	rlcf	(___lldiv@quotient+2)^0,f,c
 17900  004A22  3615               	rlcf	(___lldiv@quotient+3)^0,f,c
 17901  004A24  500E               	movf	___lldiv@divisor^0,w,c
 17902  004A26  5C0A               	subwf	___lldiv@dividend^0,w,c
 17903  004A28  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17904  004A2A  580B               	subwfb	(___lldiv@dividend+1)^0,w,c
 17905  004A2C  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17906  004A2E  580C               	subwfb	(___lldiv@dividend+2)^0,w,c
 17907  004A30  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17908  004A32  580D               	subwfb	(___lldiv@dividend+3)^0,w,c
 17909  004A34  A0D8               	btfss	status,0,c
 17910  004A36  D009               	goto	l11612
 17911  004A38  500E               	movf	___lldiv@divisor^0,w,c
 17912  004A3A  5E0A               	subwf	___lldiv@dividend^0,f,c
 17913  004A3C  500F               	movf	(___lldiv@divisor+1)^0,w,c
 17914  004A3E  5A0B               	subwfb	(___lldiv@dividend+1)^0,f,c
 17915  004A40  5010               	movf	(___lldiv@divisor+2)^0,w,c
 17916  004A42  5A0C               	subwfb	(___lldiv@dividend+2)^0,f,c
 17917  004A44  5011               	movf	(___lldiv@divisor+3)^0,w,c
 17918  004A46  5A0D               	subwfb	(___lldiv@dividend+3)^0,f,c
 17919  004A48  8012               	bsf	___lldiv@quotient^0,0,c
 17920  004A4A                     l11612:
 17921  004A4A  90D8               	bcf	status,0,c
 17922  004A4C  3211               	rrcf	(___lldiv@divisor+3)^0,f,c
 17923  004A4E  3210               	rrcf	(___lldiv@divisor+2)^0,f,c
 17924  004A50  320F               	rrcf	(___lldiv@divisor+1)^0,f,c
 17925  004A52  320E               	rrcf	___lldiv@divisor^0,f,c
 17926  004A54  2E16               	decfsz	___lldiv@counter^0,f,c
 17927  004A56  D7E1               	goto	u13340
 17928  004A58                     l1772:
 17929  004A58  C012  F00A         	movff	___lldiv@quotient,?___lldiv
 17930  004A5C  C013  F00B         	movff	___lldiv@quotient+1,?___lldiv+1
 17931  004A60  C014  F00C         	movff	___lldiv@quotient+2,?___lldiv+2
 17932  004A64  C015  F00D         	movff	___lldiv@quotient+3,?___lldiv+3
 17933  004A68  0012               	return		;funcret
 17934  004A6A                     __end_of___lldiv:
 17935                           	callstack 0
 17936                           
 17937 ;; *************** function _f_close *****************
 17938 ;; Defined at:
 17939 ;;		line 1116 in file "bibliotecas/tff.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;  fp              2    9[BANK0 ] PTR struct _FIL
 17942 ;;		 -> fil(28), 
 17943 ;; Auto vars:     Size  Location     Type
 17944 ;;  res             1   75[COMRAM] enum E155
 17945 ;; Return value:  Size  Location     Type
 17946 ;;                  1    wreg      enum E3231
 17947 ;; Registers used:
 17948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17949 ;; Tracked objects:
 17950 ;;		On entry : 3F/0
 17951 ;;		On exit  : 0/0
 17952 ;;		Unchanged: 0/0
 17953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17954 ;;      Params:         0       2       0       0       0       0       0       0       0
 17955 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17956 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17957 ;;      Totals:         1       2       0       0       0       0       0       0       0
 17958 ;;Total ram usage:        3 bytes
 17959 ;; Hardware stack levels used:    1
 17960 ;; Hardware stack levels required when called:   10
 17961 ;; This function calls:
 17962 ;;		_f_sync
 17963 ;; This function is called by:
 17964 ;;		_escrita_sdcard
 17965 ;; This function uses a non-reentrant model
 17966 ;;
 17967                           
 17968                           	psect	text97
 17969  005832                     __ptext97:
 17970                           	callstack 0
 17971  005832                     _f_close:
 17972                           	callstack 16
 17973                           
 17974                           ; BSR set to: 0
 17975                           ;tff.c: 1120: FRESULT res;;tff.c: 1124: res = f_sync(fp);
 17976                           
 17977                           ;incstack = 0
 17978  005832  C069  F060         	movff	f_close@fp,f_sync@fp
 17979  005836  C06A  F061         	movff	f_close@fp+1,f_sync@fp+1
 17980  00583A  ECA8  F01B         	call	_f_sync	;wreg free
 17981  00583E  6E4C               	movwf	f_close@res^0,c
 17982                           
 17983                           ;tff.c: 1128: if (res == FR_OK) fp->fs = (0);
 17984  005840  504C               	movf	f_close@res^0,w,c
 17985  005842  A4D8               	btfss	status,2,c
 17986  005844  0012               	return	
 17987  005846  0100               	movlb	0	; () banked
 17988  005848  EE20 F004          	lfsr	2,4
 17989  00584C  5169               	movf	f_close@fp& (0+255),w,b
 17990  00584E  26D9               	addwf	fsr2l,f,c
 17991  005850  516A               	movf	(f_close@fp+1)& (0+255),w,b
 17992  005852  22DA               	addwfc	fsr2h,f,c
 17993  005854  0E00               	movlw	0
 17994  005856  6EDE               	movwf	postinc2,c
 17995  005858  0E00               	movlw	0
 17996  00585A  6EDD               	movwf	postdec2,c
 17997  00585C  0012               	return		;funcret
 17998  00585E                     __end_of_f_close:
 17999                           	callstack 0
 18000                           
 18001 ;; *************** function _f_sync *****************
 18002 ;; Defined at:
 18003 ;;		line 1077 in file "bibliotecas/tff.c"
 18004 ;; Parameters:    Size  Location     Type
 18005 ;;  fp              2    0[BANK0 ] PTR struct _FIL
 18006 ;;		 -> fil(28), 
 18007 ;; Auto vars:     Size  Location     Type
 18008 ;;  tim             4    2[BANK0 ] unsigned long 
 18009 ;;  dir             2    7[BANK0 ] PTR unsigned char 
 18010 ;;		 -> NULL(0), fs(544), 
 18011 ;;  res             1    6[BANK0 ] enum E155
 18012 ;; Return value:  Size  Location     Type
 18013 ;;                  1    wreg      enum E155
 18014 ;; Registers used:
 18015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18016 ;; Tracked objects:
 18017 ;;		On entry : 3F/0
 18018 ;;		On exit  : 0/0
 18019 ;;		Unchanged: 0/0
 18020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18021 ;;      Params:         0       2       0       0       0       0       0       0       0
 18022 ;;      Locals:         0       7       0       0       0       0       0       0       0
 18023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18024 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18025 ;;Total ram usage:        9 bytes
 18026 ;; Hardware stack levels used:    1
 18027 ;; Hardware stack levels required when called:    9
 18028 ;; This function calls:
 18029 ;;		_get_fattime
 18030 ;;		_move_window
 18031 ;;		_sync
 18032 ;;		_validate
 18033 ;; This function is called by:
 18034 ;;		_f_close
 18035 ;; This function uses a non-reentrant model
 18036 ;;
 18037                           
 18038                           	psect	text98
 18039  003750                     __ptext98:
 18040                           	callstack 0
 18041  003750                     _f_sync:
 18042                           	callstack 16
 18043                           
 18044                           ; BSR set to: 0
 18045                           ;tff.c: 1081: FRESULT res;;tff.c: 1082: DWORD tim;;tff.c: 1083: BYTE *dir;;tff.c: 1086: 
      +                          res = validate(fp->fs, fp->id);
 18046                           
 18047                           ;incstack = 0
 18048  003750  EE20 F004          	lfsr	2,4
 18049  003754  5160               	movf	f_sync@fp& (0+255),w,b
 18050  003756  26D9               	addwf	fsr2l,f,c
 18051  003758  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18052  00375A  22DA               	addwfc	fsr2h,f,c
 18053  00375C  CFDE F010          	movff	postinc2,validate@fs
 18054  003760  CFDD F011          	movff	postdec2,validate@fs+1
 18055  003764  C060  FFD9         	movff	f_sync@fp,fsr2l
 18056  003768  C061  FFDA         	movff	f_sync@fp+1,fsr2h
 18057  00376C  CFDE F012          	movff	postinc2,validate@id
 18058  003770  CFDD F013          	movff	postdec2,validate@id+1
 18059  003774  ECC6  F029         	call	_validate	;wreg free
 18060  003778  0100               	movlb	0	; () banked
 18061  00377A  6F66               	movwf	f_sync@res& (0+255),b
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;tff.c: 1087: if (res == FR_OK) {
 18065  00377C  5166               	movf	f_sync@res& (0+255),w,b
 18066  00377E  A4D8               	btfss	status,2,c
 18067  003780  D079               	goto	l12044
 18068                           
 18069                           ; BSR set to: 0
 18070                           ;tff.c: 1088: if (fp->flag & 0x20) {
 18071  003782  EE20 F002          	lfsr	2,2
 18072  003786  5160               	movf	f_sync@fp& (0+255),w,b
 18073  003788  26D9               	addwf	fsr2l,f,c
 18074  00378A  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18075  00378C  22DA               	addwfc	fsr2h,f,c
 18076  00378E  AADF               	btfss	indf2,5,c
 18077  003790  D071               	goto	l12044
 18078                           
 18079                           ; BSR set to: 0
 18080                           ;tff.c: 1090: if (!move_window(fp->dir_sect))
 18081  003792  EE20 F016          	lfsr	2,22
 18082  003796  5160               	movf	f_sync@fp& (0+255),w,b
 18083  003798  26D9               	addwf	fsr2l,f,c
 18084  00379A  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18085  00379C  22DA               	addwfc	fsr2h,f,c
 18086  00379E  CFDE F035          	movff	postinc2,move_window@sector
 18087  0037A2  CFDE F036          	movff	postinc2,move_window@sector+1
 18088  0037A6  CFDE F037          	movff	postinc2,move_window@sector+2
 18089  0037AA  CFDE F038          	movff	postinc2,move_window@sector+3
 18090  0037AE  EC15  F015         	call	_move_window	;wreg free
 18091  0037B2  0900               	iorlw	0
 18092  0037B4  A4D8               	btfss	status,2,c
 18093  0037B6  D002               	goto	l12030
 18094                           
 18095                           ;tff.c: 1091: return FR_RW_ERROR;
 18096  0037B8  0E08               	movlw	8
 18097  0037BA  0012               	return	
 18098  0037BC                     l12030:
 18099                           
 18100                           ;tff.c: 1092: dir = fp->dir_ptr;
 18101  0037BC  0100               	movlb	0	; () banked
 18102  0037BE  EE20 F01A          	lfsr	2,26
 18103  0037C2  5160               	movf	f_sync@fp& (0+255),w,b
 18104  0037C4  26D9               	addwf	fsr2l,f,c
 18105  0037C6  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18106  0037C8  22DA               	addwfc	fsr2h,f,c
 18107  0037CA  CFDE F067          	movff	postinc2,f_sync@dir
 18108  0037CE  CFDD F068          	movff	postdec2,f_sync@dir+1
 18109                           
 18110                           ;tff.c: 1093: dir[11] |= 0x20;
 18111  0037D2  EE20 F00B          	lfsr	2,11
 18112  0037D6  5167               	movf	f_sync@dir& (0+255),w,b
 18113  0037D8  26D9               	addwf	fsr2l,f,c
 18114  0037DA  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18115  0037DC  22DA               	addwfc	fsr2h,f,c
 18116  0037DE  0E00               	movlw	0
 18117  0037E0  8ADB               	bsf	plusw2,5,c
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;tff.c: 1094: *(DWORD*)(BYTE*)(&dir[28])=(DWORD)(fp->fsize);
 18121  0037E2  EE20 F00A          	lfsr	2,10
 18122  0037E6  5160               	movf	f_sync@fp& (0+255),w,b
 18123  0037E8  26D9               	addwf	fsr2l,f,c
 18124  0037EA  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18125  0037EC  22DA               	addwfc	fsr2h,f,c
 18126  0037EE  EE10 F01C          	lfsr	1,28
 18127  0037F2  5167               	movf	f_sync@dir& (0+255),w,b
 18128  0037F4  26E1               	addwf	fsr1l,f,c
 18129  0037F6  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18130  0037F8  22E2               	addwfc	fsr1h,f,c
 18131  0037FA  CFDE FFE6          	movff	postinc2,postinc1
 18132  0037FE  CFDE FFE6          	movff	postinc2,postinc1
 18133  003802  CFDE FFE6          	movff	postinc2,postinc1
 18134  003806  CFDE FFE6          	movff	postinc2,postinc1
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;tff.c: 1095: *(WORD*)(BYTE*)(&dir[26])=(WORD)(fp->org_clust);
 18138  00380A  EE20 F00E          	lfsr	2,14
 18139  00380E  5160               	movf	f_sync@fp& (0+255),w,b
 18140  003810  26D9               	addwf	fsr2l,f,c
 18141  003812  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18142  003814  22DA               	addwfc	fsr2h,f,c
 18143  003816  EE10 F01A          	lfsr	1,26
 18144  00381A  5167               	movf	f_sync@dir& (0+255),w,b
 18145  00381C  26E1               	addwf	fsr1l,f,c
 18146  00381E  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18147  003820  22E2               	addwfc	fsr1h,f,c
 18148  003822  CFDE FFE6          	movff	postinc2,postinc1
 18149  003826  CFDD FFE5          	movff	postdec2,postdec1
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;tff.c: 1099: tim = get_fattime();
 18153  00382A  EC58  F01A         	call	_get_fattime	;wreg free
 18154  00382E  C00E  F062         	movff	?_get_fattime,f_sync@tim
 18155  003832  C00F  F063         	movff	?_get_fattime+1,f_sync@tim+1
 18156  003836  C010  F064         	movff	?_get_fattime+2,f_sync@tim+2
 18157  00383A  C011  F065         	movff	?_get_fattime+3,f_sync@tim+3
 18158                           
 18159                           ; BSR set to: 1
 18160                           ;tff.c: 1100: *(DWORD*)(BYTE*)(&dir[22])=(DWORD)(tim);
 18161  00383E  0100               	movlb	0	; () banked
 18162  003840  EE20 F016          	lfsr	2,22
 18163  003844  5167               	movf	f_sync@dir& (0+255),w,b
 18164  003846  26D9               	addwf	fsr2l,f,c
 18165  003848  5168               	movf	(f_sync@dir+1)& (0+255),w,b
 18166  00384A  22DA               	addwfc	fsr2h,f,c
 18167  00384C  C062  FFDE         	movff	f_sync@tim,postinc2
 18168  003850  C063  FFDE         	movff	f_sync@tim+1,postinc2
 18169  003854  C064  FFDE         	movff	f_sync@tim+2,postinc2
 18170  003858  C065  FFDE         	movff	f_sync@tim+3,postinc2
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;tff.c: 1101: fp->flag &= (BYTE)~0x20;
 18174  00385C  EE20 F002          	lfsr	2,2
 18175  003860  5160               	movf	f_sync@fp& (0+255),w,b
 18176  003862  26D9               	addwf	fsr2l,f,c
 18177  003864  5161               	movf	(f_sync@fp+1)& (0+255),w,b
 18178  003866  22DA               	addwfc	fsr2h,f,c
 18179  003868  0EDF               	movlw	223
 18180  00386A  16DF               	andwf	indf2,f,c
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;tff.c: 1102: res = sync();
 18184  00386C  ECE3  F028         	call	_sync	;wreg free
 18185  003870  0100               	movlb	0	; () banked
 18186  003872  6F66               	movwf	f_sync@res& (0+255),b
 18187  003874                     l12044:
 18188                           
 18189                           ; BSR set to: 0
 18190                           ;tff.c: 1103: };tff.c: 1104: };tff.c: 1105: return res;
 18191  003874  5166               	movf	f_sync@res& (0+255),w,b
 18192  003876  0012               	return		;funcret
 18193  003878                     __end_of_f_sync:
 18194                           	callstack 0
 18195                           
 18196 ;; *************** function _validate *****************
 18197 ;; Defined at:
 18198 ;;		line 767 in file "bibliotecas/tff.c"
 18199 ;; Parameters:    Size  Location     Type
 18200 ;;  fs              2   15[COMRAM] PTR const struct _FATFS
 18201 ;;		 -> NULL(0), fs(544), 
 18202 ;;  id              2   17[COMRAM] unsigned short 
 18203 ;; Auto vars:     Size  Location     Type
 18204 ;;		None
 18205 ;; Return value:  Size  Location     Type
 18206 ;;                  1    wreg      enum E155
 18207 ;; Registers used:
 18208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18209 ;; Tracked objects:
 18210 ;;		On entry : 3F/0
 18211 ;;		On exit  : 0/0
 18212 ;;		Unchanged: 0/0
 18213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18214 ;;      Params:         4       0       0       0       0       0       0       0       0
 18215 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18216 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18217 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18218 ;;Total ram usage:        6 bytes
 18219 ;; Hardware stack levels used:    1
 18220 ;; Hardware stack levels required when called:    4
 18221 ;; This function calls:
 18222 ;;		_disk_status
 18223 ;; This function is called by:
 18224 ;;		_f_write
 18225 ;;		_f_sync
 18226 ;;		_f_lseek
 18227 ;;		_f_read
 18228 ;; This function uses a non-reentrant model
 18229 ;;
 18230                           
 18231                           	psect	text99
 18232  00538C                     __ptext99:
 18233                           	callstack 0
 18234  00538C                     _validate:
 18235                           	callstack 18
 18236                           
 18237                           ; BSR set to: 0
 18238                           ;tff.c: 772: if (!fs || !fs->fs_type || fs->id != id)
 18239                           
 18240                           ;incstack = 0
 18241  00538C  5010               	movf	validate@fs^0,w,c
 18242  00538E  1011               	iorwf	(validate@fs+1)^0,w,c
 18243  005390  B4D8               	btfsc	status,2,c
 18244  005392  D014               	goto	u12220
 18245                           
 18246                           ; BSR set to: 0
 18247  005394  EE20 F01C          	lfsr	2,28
 18248  005398  5010               	movf	validate@fs^0,w,c
 18249  00539A  26D9               	addwf	fsr2l,f,c
 18250  00539C  5011               	movf	(validate@fs+1)^0,w,c
 18251  00539E  22DA               	addwfc	fsr2h,f,c
 18252  0053A0  50DF               	movf	indf2,w,c
 18253  0053A2  B4D8               	btfsc	status,2,c
 18254  0053A4  D00B               	goto	u12220
 18255                           
 18256                           ; BSR set to: 0
 18257  0053A6  C010  FFD9         	movff	validate@fs,fsr2l
 18258  0053AA  C011  FFDA         	movff	validate@fs+1,fsr2h
 18259  0053AE  5012               	movf	validate@id^0,w,c
 18260  0053B0  18DE               	xorwf	postinc2,w,c
 18261  0053B2  E104               	bnz	u12220
 18262  0053B4  5013               	movf	(validate@id+1)^0,w,c
 18263  0053B6  18DE               	xorwf	postinc2,w,c
 18264  0053B8  B4D8               	btfsc	status,2,c
 18265  0053BA  D002               	goto	l10898
 18266  0053BC                     u12220:
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;tff.c: 773: return FR_INVALID_OBJECT;
 18270  0053BC  0E0C               	movlw	12
 18271  0053BE  0012               	return	
 18272  0053C0                     l10898:
 18273                           
 18274                           ; BSR set to: 0
 18275                           ;tff.c: 774: if (disk_status(0) & 0x01)
 18276  0053C0  0E00               	movlw	0
 18277  0053C2  ECA6  F02B         	call	_disk_status
 18278  0053C6  6E14               	movwf	??_validate^0,c
 18279  0053C8  A014               	btfss	??_validate^0,0,c
 18280  0053CA  D002               	goto	l10904
 18281                           
 18282                           ;tff.c: 775: return FR_NOT_READY;
 18283  0053CC  0E01               	movlw	1
 18284  0053CE  0012               	return	
 18285  0053D0                     l10904:
 18286                           
 18287                           ;tff.c: 777: return FR_OK;
 18288  0053D0  0E00               	movlw	0
 18289  0053D2  0012               	return		;funcret
 18290  0053D4                     __end_of_validate:
 18291                           	callstack 0
 18292                           
 18293 ;; *************** function _disk_status *****************
 18294 ;; Defined at:
 18295 ;;		line 27 in file "bibliotecas/diskio.c"
 18296 ;; Parameters:    Size  Location     Type
 18297 ;;  pdrv            1    wreg     unsigned char 
 18298 ;; Auto vars:     Size  Location     Type
 18299 ;;  pdrv            1   13[COMRAM] unsigned char 
 18300 ;;  result          2    0        int 
 18301 ;;  stat            1   14[COMRAM] unsigned char 
 18302 ;; Return value:  Size  Location     Type
 18303 ;;                  1    wreg      unsigned char 
 18304 ;; Registers used:
 18305 ;;		wreg, status,2, status,0, cstack
 18306 ;; Tracked objects:
 18307 ;;		On entry : 3F/0
 18308 ;;		On exit  : 0/0
 18309 ;;		Unchanged: 0/0
 18310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18311 ;;      Params:         0       0       0       0       0       0       0       0       0
 18312 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18313 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18314 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18315 ;;Total ram usage:        4 bytes
 18316 ;; Hardware stack levels used:    1
 18317 ;; Hardware stack levels required when called:    3
 18318 ;; This function calls:
 18319 ;;		_sdc_disk_status
 18320 ;; This function is called by:
 18321 ;;		_auto_mount
 18322 ;;		_validate
 18323 ;; This function uses a non-reentrant model
 18324 ;;
 18325                           
 18326                           	psect	text100
 18327  00574C                     __ptext100:
 18328                           	callstack 0
 18329  00574C                     _disk_status:
 18330                           	callstack 18
 18331                           
 18332                           ;incstack = 0
 18333                           ;disk_status@pdrv stored from wreg
 18334  00574C  6E0E               	movwf	disk_status@pdrv^0,c
 18335                           
 18336                           ;diskio.c: 31: DSTATUS stat;;diskio.c: 32: int result;;diskio.c: 34: switch (pdrv) {
 18337  00574E  D00A               	goto	l10608
 18338  005750                     l10590:
 18339                           
 18340                           ;diskio.c: 36: stat = sdc_disk_status(pdrv);
 18341  005750  500E               	movf	disk_status@pdrv^0,w,c
 18342  005752  ECCD  F02D         	call	_sdc_disk_status
 18343  005756  6E0F               	movwf	disk_status@stat^0,c
 18344  005758                     l10592:
 18345                           
 18346                           ;diskio.c: 39: return stat;
 18347  005758  500F               	movf	disk_status@stat^0,w,c
 18348  00575A  0012               	return	
 18349  00575C                     l10596:
 18350  00575C  500E               	movf	disk_status@pdrv^0,w,c
 18351  00575E  ECCD  F02D         	call	_sdc_disk_status
 18352  005762  D7FA               	goto	l10592
 18353  005764                     l10608:
 18354  005764  500E               	movf	disk_status@pdrv^0,w,c
 18355                           
 18356                           ; Switch size 1, requested type "simple"
 18357                           ; Number of cases is 3, Range of values is 0 to 2
 18358                           ; switch strategies available:
 18359                           ; Name         Instructions Cycles
 18360                           ; simple_byte           10     6 (average)
 18361                           ;	Chosen strategy is simple_byte
 18362  005766  0A00               	xorlw	0	; case 0
 18363  005768  B4D8               	btfsc	status,2,c
 18364  00576A  D7F2               	goto	l10590
 18365  00576C  0A01               	xorlw	1	; case 1
 18366  00576E  B4D8               	btfsc	status,2,c
 18367  005770  D7F5               	goto	l10596
 18368  005772  0A03               	xorlw	3	; case 2
 18369  005774  B4D8               	btfsc	status,2,c
 18370  005776  D7F0               	goto	l10592
 18371                           
 18372                           ;diskio.c: 50: return 0x01;
 18373  005778  0E01               	movlw	1
 18374  00577A  0012               	return		;funcret
 18375  00577C                     __end_of_disk_status:
 18376                           	callstack 0
 18377                           
 18378 ;; *************** function _sdc_disk_status *****************
 18379 ;; Defined at:
 18380 ;;		line 588 in file "bibliotecas/diskio.c"
 18381 ;; Parameters:    Size  Location     Type
 18382 ;;  pdrv            1    wreg     unsigned char 
 18383 ;; Auto vars:     Size  Location     Type
 18384 ;;  pdrv            1   10[COMRAM] unsigned char 
 18385 ;;  stat            1    0        unsigned char 
 18386 ;;  cont            1    0        unsigned char 
 18387 ;;  buff            1    0        unsigned char 
 18388 ;; Return value:  Size  Location     Type
 18389 ;;                  1    wreg      unsigned char 
 18390 ;; Registers used:
 18391 ;;		wreg, status,2
 18392 ;; Tracked objects:
 18393 ;;		On entry : 0/0
 18394 ;;		On exit  : 0/0
 18395 ;;		Unchanged: 0/0
 18396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18397 ;;      Params:         0       0       0       0       0       0       0       0       0
 18398 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18399 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18400 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18401 ;;Total ram usage:        2 bytes
 18402 ;; Hardware stack levels used:    1
 18403 ;; Hardware stack levels required when called:    2
 18404 ;; This function calls:
 18405 ;;		Nothing
 18406 ;; This function is called by:
 18407 ;;		_disk_status
 18408 ;; This function uses a non-reentrant model
 18409 ;;
 18410                           
 18411                           	psect	text101
 18412  005B9A                     __ptext101:
 18413                           	callstack 0
 18414  005B9A                     _sdc_disk_status:
 18415                           	callstack 18
 18416                           
 18417                           ;incstack = 0
 18418                           ;sdc_disk_status@pdrv stored from wreg
 18419  005B9A  6E0B               	movwf	sdc_disk_status@pdrv^0,c
 18420                           
 18421                           ;diskio.c: 591: unsigned char buff, cont;;diskio.c: 593: if (pdrv != 0) return 0x01;
 18422  005B9C  500B               	movf	sdc_disk_status@pdrv^0,w,c
 18423  005B9E  B4D8               	btfsc	status,2,c
 18424  005BA0  D002               	goto	l10466
 18425  005BA2  0E01               	movlw	1
 18426  005BA4  0012               	return	
 18427  005BA6                     l10466:
 18428                           
 18429                           ;diskio.c: 595: return FR_OK;
 18430  005BA6  0E00               	movlw	0
 18431  005BA8  0012               	return		;funcret
 18432  005BAA                     __end_of_sdc_disk_status:
 18433                           	callstack 0
 18434                           
 18435 ;; *************** function _sync *****************
 18436 ;; Defined at:
 18437 ;;		line 119 in file "bibliotecas/tff.c"
 18438 ;; Parameters:    Size  Location     Type
 18439 ;;		None
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;  fs              2   73[COMRAM] PTR struct _FATFS
 18442 ;;		 -> NULL(0), fs(544), 
 18443 ;; Return value:  Size  Location     Type
 18444 ;;                  1    wreg      enum E155
 18445 ;; Registers used:
 18446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18447 ;; Tracked objects:
 18448 ;;		On entry : 3F/0
 18449 ;;		On exit  : 0/0
 18450 ;;		Unchanged: 0/0
 18451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18452 ;;      Params:         0       0       0       0       0       0       0       0       0
 18453 ;;      Locals:         2       0       0       0       0       0       0       0       0
 18454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18455 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18456 ;;Total ram usage:        2 bytes
 18457 ;; Hardware stack levels used:    1
 18458 ;; Hardware stack levels required when called:    8
 18459 ;; This function calls:
 18460 ;;		_disk_ioctl
 18461 ;;		_move_window
 18462 ;; This function is called by:
 18463 ;;		_f_sync
 18464 ;; This function uses a non-reentrant model
 18465 ;;
 18466                           
 18467                           	psect	text102
 18468  0051C6                     __ptext102:
 18469                           	callstack 0
 18470  0051C6                     _sync:
 18471                           	callstack 16
 18472                           
 18473                           ; BSR set to: 0
 18474                           ;tff.c: 121: FATFS *fs = FatFs;
 18475                           
 18476                           ;incstack = 0
 18477  0051C6  C04D  F04A         	movff	_FatFs,sync@fs
 18478  0051CA  C04E  F04B         	movff	_FatFs+1,sync@fs+1
 18479                           
 18480                           ; BSR set to: 0
 18481                           ;tff.c: 124: fs->winflag = 1;
 18482  0051CE  EE20 F01F          	lfsr	2,31
 18483  0051D2  504A               	movf	sync@fs^0,w,c
 18484  0051D4  26D9               	addwf	fsr2l,f,c
 18485  0051D6  504B               	movf	(sync@fs+1)^0,w,c
 18486  0051D8  22DA               	addwfc	fsr2h,f,c
 18487  0051DA  0E01               	movlw	1
 18488  0051DC  6EDF               	movwf	indf2,c
 18489                           
 18490                           ; BSR set to: 0
 18491                           ;tff.c: 125: if (!move_window(0)) return FR_RW_ERROR;
 18492  0051DE  0E00               	movlw	0
 18493  0051E0  6E35               	movwf	move_window@sector^0,c
 18494  0051E2  0E00               	movlw	0
 18495  0051E4  6E36               	movwf	(move_window@sector+1)^0,c
 18496  0051E6  0E00               	movlw	0
 18497  0051E8  6E37               	movwf	(move_window@sector+2)^0,c
 18498  0051EA  0E00               	movlw	0
 18499  0051EC  6E38               	movwf	(move_window@sector+3)^0,c
 18500  0051EE  EC15  F015         	call	_move_window	;wreg free
 18501  0051F2  0900               	iorlw	0
 18502  0051F4  A4D8               	btfss	status,2,c
 18503  0051F6  D002               	goto	l11340
 18504  0051F8                     u12850:
 18505  0051F8  0E08               	movlw	8
 18506  0051FA  0012               	return	
 18507  0051FC                     l11340:
 18508                           
 18509                           ;tff.c: 141: if (disk_ioctl(0, 0, (0)) != RES_OK)
 18510  0051FC  0E00               	movlw	0
 18511  0051FE  6E0A               	movwf	disk_ioctl@cmd^0,c
 18512  005200  0E00               	movlw	0
 18513  005202  6E0B               	movwf	disk_ioctl@buff^0,c
 18514  005204  0E00               	movlw	0
 18515  005206  6E0C               	movwf	(disk_ioctl@buff+1)^0,c
 18516  005208  0E00               	movlw	0
 18517  00520A  EC51  F02D         	call	_disk_ioctl
 18518  00520E  0900               	iorlw	0
 18519  005210  A4D8               	btfss	status,2,c
 18520  005212  D7F2               	goto	u12850
 18521                           
 18522                           ;tff.c: 143: return FR_OK;
 18523  005214  0E00               	movlw	0
 18524  005216  0012               	return		;funcret
 18525  005218                     __end_of_sync:
 18526                           	callstack 0
 18527                           
 18528 ;; *************** function _move_window *****************
 18529 ;; Defined at:
 18530 ;;		line 77 in file "bibliotecas/tff.c"
 18531 ;; Parameters:    Size  Location     Type
 18532 ;;  sector          4   52[COMRAM] unsigned long 
 18533 ;; Auto vars:     Size  Location     Type
 18534 ;;  n               1   66[COMRAM] unsigned char 
 18535 ;;  wsect           4   67[COMRAM] unsigned long 
 18536 ;;  fs              2   71[COMRAM] PTR struct _FATFS
 18537 ;;		 -> NULL(0), fs(544), 
 18538 ;; Return value:  Size  Location     Type
 18539 ;;                  1    wreg      enum E105
 18540 ;; Registers used:
 18541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18542 ;; Tracked objects:
 18543 ;;		On entry : 0/0
 18544 ;;		On exit  : 0/0
 18545 ;;		Unchanged: 0/0
 18546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18547 ;;      Params:         4       0       0       0       0       0       0       0       0
 18548 ;;      Locals:         7       0       0       0       0       0       0       0       0
 18549 ;;      Temps:         10       0       0       0       0       0       0       0       0
 18550 ;;      Totals:        21       0       0       0       0       0       0       0       0
 18551 ;;Total ram usage:       21 bytes
 18552 ;; Hardware stack levels used:    1
 18553 ;; Hardware stack levels required when called:    7
 18554 ;; This function calls:
 18555 ;;		_disk_read
 18556 ;;		_disk_write
 18557 ;; This function is called by:
 18558 ;;		_sync
 18559 ;;		_get_cluster
 18560 ;;		_put_cluster
 18561 ;;		_trace_path
 18562 ;;		_reserve_direntry
 18563 ;;		_f_open
 18564 ;;		_f_write
 18565 ;;		_f_sync
 18566 ;;		_f_read
 18567 ;; This function uses a non-reentrant model
 18568 ;;
 18569                           
 18570                           	psect	text103
 18571  002A2A                     __ptext103:
 18572                           	callstack 0
 18573  002A2A                     _move_window:
 18574                           	callstack 15
 18575                           
 18576                           ;tff.c: 81: DWORD wsect;;tff.c: 82: FATFS *fs = FatFs;
 18577                           
 18578                           ;incstack = 0
 18579  002A2A  C04D  F048         	movff	_FatFs,move_window@fs
 18580  002A2E  C04E  F049         	movff	_FatFs+1,move_window@fs+1
 18581                           
 18582                           ;tff.c: 85: wsect = fs->winsect;
 18583  002A32  EE20 F004          	lfsr	2,4
 18584  002A36  5048               	movf	move_window@fs^0,w,c
 18585  002A38  26D9               	addwf	fsr2l,f,c
 18586  002A3A  5049               	movf	(move_window@fs+1)^0,w,c
 18587  002A3C  22DA               	addwfc	fsr2h,f,c
 18588  002A3E  CFDE F044          	movff	postinc2,move_window@wsect
 18589  002A42  CFDE F045          	movff	postinc2,move_window@wsect+1
 18590  002A46  CFDE F046          	movff	postinc2,move_window@wsect+2
 18591  002A4A  CFDE F047          	movff	postinc2,move_window@wsect+3
 18592                           
 18593                           ;tff.c: 86: if (wsect != sector) {
 18594  002A4E  5035               	movf	move_window@sector^0,w,c
 18595  002A50  1844               	xorwf	move_window@wsect^0,w,c
 18596  002A52  E10A               	bnz	u11710
 18597  002A54  5036               	movf	(move_window@sector+1)^0,w,c
 18598  002A56  1845               	xorwf	(move_window@wsect+1)^0,w,c
 18599  002A58  E107               	bnz	u11710
 18600  002A5A  5037               	movf	(move_window@sector+2)^0,w,c
 18601  002A5C  1846               	xorwf	(move_window@wsect+2)^0,w,c
 18602  002A5E  E104               	bnz	u11710
 18603  002A60  5038               	movf	(move_window@sector+3)^0,w,c
 18604  002A62  1847               	xorwf	(move_window@wsect+3)^0,w,c
 18605  002A64  B4D8               	btfsc	status,2,c
 18606  002A66  D0B4               	goto	l10578
 18607  002A68                     u11710:
 18608                           
 18609                           ;tff.c: 88: BYTE n;;tff.c: 89: if (fs->winflag) {
 18610  002A68  EE20 F01F          	lfsr	2,31
 18611  002A6C  5048               	movf	move_window@fs^0,w,c
 18612  002A6E  26D9               	addwf	fsr2l,f,c
 18613  002A70  5049               	movf	(move_window@fs+1)^0,w,c
 18614  002A72  22DA               	addwfc	fsr2h,f,c
 18615  002A74  50DF               	movf	indf2,w,c
 18616  002A76  B4D8               	btfsc	status,2,c
 18617  002A78  D081               	goto	l10568
 18618                           
 18619                           ;tff.c: 90: if (disk_write(0, fs->win, wsect, 1) != RES_OK)
 18620  002A7A  0E20               	movlw	32
 18621  002A7C  2448               	addwf	move_window@fs^0,w,c
 18622  002A7E  6E29               	movwf	disk_write@buff^0,c
 18623  002A80  0E00               	movlw	0
 18624  002A82  2049               	addwfc	(move_window@fs+1)^0,w,c
 18625  002A84  6E2A               	movwf	(disk_write@buff+1)^0,c
 18626  002A86  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18627  002A8A  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18628  002A8E  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18629  002A92  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18630  002A96  0E01               	movlw	1
 18631  002A98  6E2F               	movwf	disk_write@count^0,c
 18632  002A9A  0E00               	movlw	0
 18633  002A9C  EC34  F029         	call	_disk_write
 18634  002AA0  0900               	iorlw	0
 18635  002AA2  B4D8               	btfsc	status,2,c
 18636  002AA4  D002               	goto	l10552
 18637  002AA6                     u11730:
 18638                           
 18639                           ;tff.c: 91: return FALSE;
 18640  002AA6  0E00               	movlw	0
 18641  002AA8  0012               	return	
 18642  002AAA                     l10552:
 18643                           
 18644                           ;tff.c: 92: fs->winflag = 0;
 18645  002AAA  EE20 F01F          	lfsr	2,31
 18646  002AAE  5048               	movf	move_window@fs^0,w,c
 18647  002AB0  26D9               	addwf	fsr2l,f,c
 18648  002AB2  5049               	movf	(move_window@fs+1)^0,w,c
 18649  002AB4  22DA               	addwfc	fsr2h,f,c
 18650  002AB6  0E00               	movlw	0
 18651  002AB8  6EDF               	movwf	indf2,c
 18652                           
 18653                           ;tff.c: 93: if (wsect < (fs->fatbase + fs->sects_fat)) {
 18654  002ABA  EE20 F008          	lfsr	2,8
 18655  002ABE  5048               	movf	move_window@fs^0,w,c
 18656  002AC0  26D9               	addwf	fsr2l,f,c
 18657  002AC2  5049               	movf	(move_window@fs+1)^0,w,c
 18658  002AC4  22DA               	addwfc	fsr2h,f,c
 18659  002AC6  CFDE F039          	movff	postinc2,??_move_window
 18660  002ACA  CFDE F03A          	movff	postinc2,??_move_window+1
 18661  002ACE  CFDE F03B          	movff	postinc2,??_move_window+2
 18662  002AD2  CFDE F03C          	movff	postinc2,??_move_window+3
 18663  002AD6  EE20 F014          	lfsr	2,20
 18664  002ADA  5048               	movf	move_window@fs^0,w,c
 18665  002ADC  26D9               	addwf	fsr2l,f,c
 18666  002ADE  5049               	movf	(move_window@fs+1)^0,w,c
 18667  002AE0  22DA               	addwfc	fsr2h,f,c
 18668  002AE2  CFDE F03D          	movff	postinc2,??_move_window+4
 18669  002AE6  CFDD F03E          	movff	postdec2,??_move_window+5
 18670  002AEA  503D               	movf	(??_move_window+4)^0,w,c
 18671  002AEC  2439               	addwf	??_move_window^0,w,c
 18672  002AEE  6E3F               	movwf	(??_move_window+6)^0,c
 18673  002AF0  503E               	movf	(??_move_window+5)^0,w,c
 18674  002AF2  203A               	addwfc	(??_move_window+1)^0,w,c
 18675  002AF4  6E40               	movwf	(??_move_window+7)^0,c
 18676  002AF6  0E00               	movlw	0
 18677  002AF8  203B               	addwfc	(??_move_window+2)^0,w,c
 18678  002AFA  6E41               	movwf	(??_move_window+8)^0,c
 18679  002AFC  0E00               	movlw	0
 18680  002AFE  203C               	addwfc	(??_move_window+3)^0,w,c
 18681  002B00  6E42               	movwf	(??_move_window+9)^0,c
 18682  002B02  503F               	movf	(??_move_window+6)^0,w,c
 18683  002B04  5C44               	subwf	move_window@wsect^0,w,c
 18684  002B06  5040               	movf	(??_move_window+7)^0,w,c
 18685  002B08  5845               	subwfb	(move_window@wsect+1)^0,w,c
 18686  002B0A  5041               	movf	(??_move_window+8)^0,w,c
 18687  002B0C  5846               	subwfb	(move_window@wsect+2)^0,w,c
 18688  002B0E  5042               	movf	(??_move_window+9)^0,w,c
 18689  002B10  5847               	subwfb	(move_window@wsect+3)^0,w,c
 18690  002B12  B0D8               	btfsc	status,0,c
 18691  002B14  D033               	goto	l10568
 18692                           
 18693                           ;tff.c: 94: for (n = fs->n_fats; n >= 2; n--) {
 18694  002B16  EE20 F01E          	lfsr	2,30
 18695  002B1A  5048               	movf	move_window@fs^0,w,c
 18696  002B1C  26D9               	addwf	fsr2l,f,c
 18697  002B1E  5049               	movf	(move_window@fs+1)^0,w,c
 18698  002B20  22DA               	addwfc	fsr2h,f,c
 18699  002B22  50DF               	movf	indf2,w,c
 18700  002B24  6E43               	movwf	move_window@n^0,c
 18701  002B26                     l10556:
 18702  002B26  0E02               	movlw	2
 18703  002B28  6043               	cpfslt	move_window@n^0,c
 18704  002B2A  D001               	goto	l10560
 18705  002B2C  D027               	goto	l10568
 18706  002B2E                     l10560:
 18707                           
 18708                           ;tff.c: 95: wsect += fs->sects_fat;
 18709  002B2E  EE20 F014          	lfsr	2,20
 18710  002B32  5048               	movf	move_window@fs^0,w,c
 18711  002B34  26D9               	addwf	fsr2l,f,c
 18712  002B36  5049               	movf	(move_window@fs+1)^0,w,c
 18713  002B38  22DA               	addwfc	fsr2h,f,c
 18714  002B3A  CFDE F039          	movff	postinc2,??_move_window
 18715  002B3E  CFDD F03A          	movff	postdec2,??_move_window+1
 18716  002B42  5039               	movf	??_move_window^0,w,c
 18717  002B44  2644               	addwf	move_window@wsect^0,f,c
 18718  002B46  503A               	movf	(??_move_window+1)^0,w,c
 18719  002B48  2245               	addwfc	(move_window@wsect+1)^0,f,c
 18720  002B4A  0E00               	movlw	0
 18721  002B4C  2246               	addwfc	(move_window@wsect+2)^0,f,c
 18722  002B4E  0E00               	movlw	0
 18723  002B50  2247               	addwfc	(move_window@wsect+3)^0,f,c
 18724                           
 18725                           ;tff.c: 96: disk_write(0, fs->win, wsect, 1);
 18726  002B52  0E20               	movlw	32
 18727  002B54  2448               	addwf	move_window@fs^0,w,c
 18728  002B56  6E29               	movwf	disk_write@buff^0,c
 18729  002B58  0E00               	movlw	0
 18730  002B5A  2049               	addwfc	(move_window@fs+1)^0,w,c
 18731  002B5C  6E2A               	movwf	(disk_write@buff+1)^0,c
 18732  002B5E  C044  F02B         	movff	move_window@wsect,disk_write@sector
 18733  002B62  C045  F02C         	movff	move_window@wsect+1,disk_write@sector+1
 18734  002B66  C046  F02D         	movff	move_window@wsect+2,disk_write@sector+2
 18735  002B6A  C047  F02E         	movff	move_window@wsect+3,disk_write@sector+3
 18736  002B6E  0E01               	movlw	1
 18737  002B70  6E2F               	movwf	disk_write@count^0,c
 18738  002B72  0E00               	movlw	0
 18739  002B74  EC34  F029         	call	_disk_write
 18740  002B78  0643               	decf	move_window@n^0,f,c
 18741  002B7A  D7D5               	goto	l10556
 18742  002B7C                     l10568:
 18743                           
 18744                           ;tff.c: 97: };tff.c: 98: };tff.c: 99: };tff.c: 101: if (sector) {
 18745  002B7C  5035               	movf	move_window@sector^0,w,c
 18746  002B7E  1036               	iorwf	(move_window@sector+1)^0,w,c
 18747  002B80  1037               	iorwf	(move_window@sector+2)^0,w,c
 18748  002B82  1038               	iorwf	(move_window@sector+3)^0,w,c
 18749  002B84  B4D8               	btfsc	status,2,c
 18750  002B86  D024               	goto	l10578
 18751                           
 18752                           ;tff.c: 102: if (disk_read(0, fs->win, sector, 1) != RES_OK)
 18753  002B88  0E20               	movlw	32
 18754  002B8A  2448               	addwf	move_window@fs^0,w,c
 18755  002B8C  6E29               	movwf	disk_read@buff^0,c
 18756  002B8E  0E00               	movlw	0
 18757  002B90  2049               	addwfc	(move_window@fs+1)^0,w,c
 18758  002B92  6E2A               	movwf	(disk_read@buff+1)^0,c
 18759  002B94  C035  F02B         	movff	move_window@sector,disk_read@sector
 18760  002B98  C036  F02C         	movff	move_window@sector+1,disk_read@sector+1
 18761  002B9C  C037  F02D         	movff	move_window@sector+2,disk_read@sector+2
 18762  002BA0  C038  F02E         	movff	move_window@sector+3,disk_read@sector+3
 18763  002BA4  0E01               	movlw	1
 18764  002BA6  6E2F               	movwf	disk_read@count^0,c
 18765  002BA8  0E00               	movlw	0
 18766  002BAA  EC22  F026         	call	_disk_read
 18767  002BAE  0900               	iorlw	0
 18768  002BB0  A4D8               	btfss	status,2,c
 18769  002BB2  D779               	goto	u11730
 18770                           
 18771                           ;tff.c: 104: fs->winsect = sector;
 18772  002BB4  EE20 F004          	lfsr	2,4
 18773  002BB8  5048               	movf	move_window@fs^0,w,c
 18774  002BBA  26D9               	addwf	fsr2l,f,c
 18775  002BBC  5049               	movf	(move_window@fs+1)^0,w,c
 18776  002BBE  22DA               	addwfc	fsr2h,f,c
 18777  002BC0  C035  FFDE         	movff	move_window@sector,postinc2
 18778  002BC4  C036  FFDE         	movff	move_window@sector+1,postinc2
 18779  002BC8  C037  FFDE         	movff	move_window@sector+2,postinc2
 18780  002BCC  C038  FFDE         	movff	move_window@sector+3,postinc2
 18781  002BD0                     l10578:
 18782                           
 18783                           ;tff.c: 105: };tff.c: 106: };tff.c: 107: return TRUE;
 18784  002BD0  0E01               	movlw	1
 18785  002BD2  0012               	return		;funcret
 18786  002BD4                     __end_of_move_window:
 18787                           	callstack 0
 18788                           
 18789 ;; *************** function _disk_write *****************
 18790 ;; Defined at:
 18791 ;;		line 150 in file "bibliotecas/diskio.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;  pdrv            1    wreg     unsigned char 
 18794 ;;  buff            2   40[COMRAM] PTR const unsigned char 
 18795 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18796 ;;  sector          4   42[COMRAM] unsigned long 
 18797 ;;  count           1   46[COMRAM] unsigned char 
 18798 ;; Auto vars:     Size  Location     Type
 18799 ;;  pdrv            1   48[COMRAM] unsigned char 
 18800 ;;  result          2   49[COMRAM] int 
 18801 ;;  res             1   51[COMRAM] enum E25
 18802 ;; Return value:  Size  Location     Type
 18803 ;;                  1    wreg      enum E25
 18804 ;; Registers used:
 18805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18806 ;; Tracked objects:
 18807 ;;		On entry : 0/0
 18808 ;;		On exit  : 0/0
 18809 ;;		Unchanged: 0/0
 18810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18811 ;;      Params:         7       0       0       0       0       0       0       0       0
 18812 ;;      Locals:         4       0       0       0       0       0       0       0       0
 18813 ;;      Temps:          1       0       0       0       0       0       0       0       0
 18814 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18815 ;;Total ram usage:       12 bytes
 18816 ;; Hardware stack levels used:    1
 18817 ;; Hardware stack levels required when called:    6
 18818 ;; This function calls:
 18819 ;;		_sdc_disk_write
 18820 ;; This function is called by:
 18821 ;;		_move_window
 18822 ;;		_reserve_direntry
 18823 ;;		_f_write
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           	psect	text104
 18828  005268                     __ptext104:
 18829                           	callstack 0
 18830  005268                     _disk_write:
 18831                           	callstack 15
 18832                           
 18833                           ;incstack = 0
 18834                           ;disk_write@pdrv stored from wreg
 18835  005268  6E31               	movwf	disk_write@pdrv^0,c
 18836                           
 18837                           ;diskio.c: 157: DRESULT res;;diskio.c: 158: int result;;diskio.c: 160: switch (pdrv) {
 18838  00526A  D018               	goto	l10432
 18839  00526C                     l10410:
 18840                           
 18841                           ;diskio.c: 163: result = sdc_disk_write(buff, sector, count);
 18842  00526C  C029  F016         	movff	disk_write@buff,sdc_disk_write@p_buff
 18843  005270  C02A  F017         	movff	disk_write@buff+1,sdc_disk_write@p_buff+1
 18844  005274  C02B  F018         	movff	disk_write@sector,sdc_disk_write@sector
 18845  005278  C02C  F019         	movff	disk_write@sector+1,sdc_disk_write@sector+1
 18846  00527C  C02D  F01A         	movff	disk_write@sector+2,sdc_disk_write@sector+2
 18847  005280  C02E  F01B         	movff	disk_write@sector+3,sdc_disk_write@sector+3
 18848  005284  C02F  F01C         	movff	disk_write@count,sdc_disk_write@count
 18849  005288  ECEA  F015         	call	_sdc_disk_write	;wreg free
 18850  00528C  6E30               	movwf	??_disk_write^0,c
 18851  00528E  5030               	movf	??_disk_write^0,w,c
 18852  005290  6E32               	movwf	disk_write@result^0,c
 18853  005292  6A33               	clrf	(disk_write@result+1)^0,c
 18854                           
 18855                           ;diskio.c: 165: res = result;
 18856  005294  C032  F034         	movff	disk_write@result,disk_write@res
 18857  005298                     l10414:
 18858                           
 18859                           ;diskio.c: 168: return res;
 18860  005298  5034               	movf	disk_write@res^0,w,c
 18861  00529A  0012               	return	
 18862  00529C                     l10432:
 18863  00529C  5031               	movf	disk_write@pdrv^0,w,c
 18864                           
 18865                           ; Switch size 1, requested type "simple"
 18866                           ; Number of cases is 3, Range of values is 0 to 2
 18867                           ; switch strategies available:
 18868                           ; Name         Instructions Cycles
 18869                           ; simple_byte           10     6 (average)
 18870                           ;	Chosen strategy is simple_byte
 18871  00529E  0A00               	xorlw	0	; case 0
 18872  0052A0  B4D8               	btfsc	status,2,c
 18873  0052A2  D7E4               	goto	l10410
 18874  0052A4  0A01               	xorlw	1	; case 1
 18875  0052A6  B4D8               	btfsc	status,2,c
 18876  0052A8  D7E1               	goto	l10410
 18877  0052AA  0A03               	xorlw	3	; case 2
 18878  0052AC  B4D8               	btfsc	status,2,c
 18879  0052AE  D7F4               	goto	l10414
 18880                           
 18881                           ;diskio.c: 189: return RES_PARERR;
 18882  0052B0  0E04               	movlw	4
 18883  0052B2  0012               	return		;funcret
 18884  0052B4                     __end_of_disk_write:
 18885                           	callstack 0
 18886                           
 18887 ;; *************** function _sdc_disk_write *****************
 18888 ;; Defined at:
 18889 ;;		line 509 in file "bibliotecas/diskio.c"
 18890 ;; Parameters:    Size  Location     Type
 18891 ;;  p_buff          2   21[COMRAM] PTR const unsigned char 
 18892 ;;		 -> fs.win(512), fputc@c(1), NULL(0), fs(544), 
 18893 ;;  sector          4   23[COMRAM] unsigned long 
 18894 ;;  count           1   27[COMRAM] unsigned char 
 18895 ;; Auto vars:     Size  Location     Type
 18896 ;;  j               2   37[COMRAM] int 
 18897 ;;  count1          2   34[COMRAM] int 
 18898 ;;  i               2    0        int 
 18899 ;;  buff            1   39[COMRAM] unsigned char 
 18900 ;;  res             1   36[COMRAM] enum E25
 18901 ;; Return value:  Size  Location     Type
 18902 ;;                  1    wreg      enum E25
 18903 ;; Registers used:
 18904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18905 ;; Tracked objects:
 18906 ;;		On entry : 0/0
 18907 ;;		On exit  : 0/0
 18908 ;;		Unchanged: 0/0
 18909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18910 ;;      Params:         7       0       0       0       0       0       0       0       0
 18911 ;;      Locals:         8       0       0       0       0       0       0       0       0
 18912 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18913 ;;      Totals:        19       0       0       0       0       0       0       0       0
 18914 ;;Total ram usage:       19 bytes
 18915 ;; Hardware stack levels used:    1
 18916 ;; Hardware stack levels required when called:    5
 18917 ;; This function calls:
 18918 ;;		_command
 18919 ;;		_dummy_clocks
 18920 ;;		_escreve_SPI
 18921 ;;		_leitura_SPI
 18922 ;;		_proceed
 18923 ;;		_response
 18924 ;; This function is called by:
 18925 ;;		_disk_write
 18926 ;; This function uses a non-reentrant model
 18927 ;;
 18928                           
 18929                           	psect	text105
 18930  002BD4                     __ptext105:
 18931                           	callstack 0
 18932  002BD4                     _sdc_disk_write:
 18933                           	callstack 15
 18934                           
 18935                           ;incstack = 0
 18936  002BD4  0E00               	movlw	0
 18937  002BD6  6E24               	movwf	(sdc_disk_write@count1+1)^0,c
 18938  002BD8  0E00               	movlw	0
 18939  002BDA  6E23               	movwf	sdc_disk_write@count1^0,c
 18940                           
 18941                           ;diskio.c: 515: if(count>1)
 18942  002BDC  0E01               	movlw	1
 18943  002BDE  641C               	cpfsgt	sdc_disk_write@count^0,c
 18944  002BE0  D065               	goto	l144
 18945                           
 18946                           ;diskio.c: 516: {;diskio.c: 517: LATCbits.LATC7 = 0;
 18947  002BE2  9E8B               	bcf	139,7,c	;volatile
 18948                           
 18949                           ;diskio.c: 518: LATBbits.LATB5 = 0;
 18950  002BE4  9A8A               	bcf	138,5,c	;volatile
 18951                           
 18952                           ;diskio.c: 519: dummy_clocks(10);
 18953  002BE6  0E0A               	movlw	10
 18954  002BE8  ECD1  F02A         	call	_dummy_clocks
 18955                           
 18956                           ;diskio.c: 520: command(0X57, count, 0XFF);
 18957  002BEC  501C               	movf	sdc_disk_write@count^0,w,c
 18958  002BEE  6E0F               	movwf	command@arg^0,c
 18959  002BF0  6A10               	clrf	(command@arg+1)^0,c
 18960  002BF2  6A11               	clrf	(command@arg+2)^0,c
 18961  002BF4  6A12               	clrf	(command@arg+3)^0,c
 18962  002BF6  0EFF               	movlw	255
 18963  002BF8  6E13               	movwf	command@CRC^0,c
 18964  002BFA  0E57               	movlw	87
 18965  002BFC  ECB5  F027         	call	_command
 18966                           
 18967                           ;diskio.c: 521: proceed();
 18968  002C00  ECF9  F02D         	call	_proceed	;wreg free
 18969  002C04                     l10298:
 18970                           
 18971                           ;diskio.c: 523: buff = response();
 18972  002C04  ECF3  F02D         	call	_response	;wreg free
 18973  002C08  6E28               	movwf	sdc_disk_write@buff^0,c
 18974                           
 18975                           ;diskio.c: 524: }while(buff!=0X00);
 18976  002C0A  5028               	movf	sdc_disk_write@buff^0,w,c
 18977  002C0C  A4D8               	btfss	status,2,c
 18978  002C0E  D7FA               	goto	l10298
 18979                           
 18980                           ;diskio.c: 526: dummy_clocks(10);
 18981  002C10  0E0A               	movlw	10
 18982  002C12  ECD1  F02A         	call	_dummy_clocks
 18983                           
 18984                           ;diskio.c: 527: command(0X59, sector*512, 0XFF);
 18985  002C16  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 18986  002C1A  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 18987  002C1E  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 18988  002C22  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 18989  002C26  0E09               	movlw	9
 18990  002C28                     u11465:
 18991  002C28  90D8               	bcf	status,0,c
 18992  002C2A  361D               	rlcf	??_sdc_disk_write^0,f,c
 18993  002C2C  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 18994  002C2E  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 18995  002C30  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 18996  002C32  2EE8               	decfsz	wreg,f,c
 18997  002C34  D7F9               	goto	u11465
 18998  002C36  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 18999  002C3A  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 19000  002C3E  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 19001  002C42  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 19002  002C46  0EFF               	movlw	255
 19003  002C48  6E13               	movwf	command@CRC^0,c
 19004  002C4A  0E59               	movlw	89
 19005  002C4C  ECB5  F027         	call	_command
 19006                           
 19007                           ;diskio.c: 528: proceed();
 19008  002C50  ECF9  F02D         	call	_proceed	;wreg free
 19009  002C54                     l10306:
 19010                           
 19011                           ;diskio.c: 530: buff = response();
 19012  002C54  ECF3  F02D         	call	_response	;wreg free
 19013  002C58  6E28               	movwf	sdc_disk_write@buff^0,c
 19014                           
 19015                           ;diskio.c: 531: }while(buff!=0X00);
 19016  002C5A  5028               	movf	sdc_disk_write@buff^0,w,c
 19017  002C5C  A4D8               	btfss	status,2,c
 19018  002C5E  D7FA               	goto	l10306
 19019                           
 19020                           ;diskio.c: 533: dummy_clocks(1);
 19021  002C60  0E01               	movlw	1
 19022  002C62  ECD1  F02A         	call	_dummy_clocks
 19023                           
 19024                           ;diskio.c: 534: escreve_SPI(0XFC);
 19025  002C66  0EFC               	movlw	252
 19026  002C68  ECD5  F02D         	call	_escreve_SPI
 19027                           
 19028                           ;diskio.c: 535: for(j=0;j<512;j++)
 19029  002C6C  0E00               	movlw	0
 19030  002C6E  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19031  002C70  0E00               	movlw	0
 19032  002C72  6E26               	movwf	sdc_disk_write@j^0,c
 19033  002C74                     l10320:
 19034                           
 19035                           ;diskio.c: 536: {;diskio.c: 537: escreve_SPI(*p_buff);
 19036  002C74  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19037  002C78  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19038  002C7C  50DF               	movf	indf2,w,c
 19039  002C7E  ECD5  F02D         	call	_escreve_SPI
 19040                           
 19041                           ;diskio.c: 538: p_buff++;
 19042  002C82  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19043  002C84  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19044  002C86  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19045  002C88  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19046  002C8A  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19047  002C8C  D7F3               	goto	l10320
 19048  002C8E  0E02               	movlw	2
 19049  002C90  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19050  002C92  A0D8               	btfss	status,0,c
 19051  002C94  D7EF               	goto	l10320
 19052                           
 19053                           ;diskio.c: 539: };diskio.c: 540: leitura_SPI();
 19054  002C96  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19055                           
 19056                           ;diskio.c: 541: leitura_SPI();
 19057  002C9A  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19058                           
 19059                           ;diskio.c: 543: dummy_clocks(1);
 19060  002C9E  0E01               	movlw	1
 19061  002CA0  ECD1  F02A         	call	_dummy_clocks
 19062                           
 19063                           ;diskio.c: 544: escreve_SPI(0XFD);
 19064  002CA4  0EFD               	movlw	253
 19065  002CA6  ECD5  F02D         	call	_escreve_SPI
 19066                           
 19067                           ;diskio.c: 546: }
 19068  002CAA  D063               	goto	u11520
 19069  002CAC                     l144:
 19070                           
 19071                           ;diskio.c: 547: else;diskio.c: 548: {;diskio.c: 549: LATCbits.LATC7 = 0;
 19072  002CAC  9E8B               	bcf	139,7,c	;volatile
 19073                           
 19074                           ;diskio.c: 550: LATBbits.LATB5 = 0;
 19075  002CAE  9A8A               	bcf	138,5,c	;volatile
 19076                           
 19077                           ;diskio.c: 551: dummy_clocks(10);
 19078  002CB0  0E0A               	movlw	10
 19079  002CB2  ECD1  F02A         	call	_dummy_clocks
 19080                           
 19081                           ;diskio.c: 552: command(0X58, sector*512, 0X00);
 19082  002CB6  C018  F01D         	movff	sdc_disk_write@sector,??_sdc_disk_write
 19083  002CBA  C019  F01E         	movff	sdc_disk_write@sector+1,??_sdc_disk_write+1
 19084  002CBE  C01A  F01F         	movff	sdc_disk_write@sector+2,??_sdc_disk_write+2
 19085  002CC2  C01B  F020         	movff	sdc_disk_write@sector+3,??_sdc_disk_write+3
 19086  002CC6  0E09               	movlw	9
 19087  002CC8                     u11495:
 19088  002CC8  90D8               	bcf	status,0,c
 19089  002CCA  361D               	rlcf	??_sdc_disk_write^0,f,c
 19090  002CCC  361E               	rlcf	(??_sdc_disk_write+1)^0,f,c
 19091  002CCE  361F               	rlcf	(??_sdc_disk_write+2)^0,f,c
 19092  002CD0  3620               	rlcf	(??_sdc_disk_write+3)^0,f,c
 19093  002CD2  2EE8               	decfsz	wreg,f,c
 19094  002CD4  D7F9               	goto	u11495
 19095  002CD6  C01D  F00F         	movff	??_sdc_disk_write,command@arg
 19096  002CDA  C01E  F010         	movff	??_sdc_disk_write+1,command@arg+1
 19097  002CDE  C01F  F011         	movff	??_sdc_disk_write+2,command@arg+2
 19098  002CE2  C020  F012         	movff	??_sdc_disk_write+3,command@arg+3
 19099  002CE6  0E00               	movlw	0
 19100  002CE8  6E13               	movwf	command@CRC^0,c
 19101  002CEA  0E58               	movlw	88
 19102  002CEC  ECB5  F027         	call	_command
 19103                           
 19104                           ;diskio.c: 553: proceed();
 19105  002CF0  ECF9  F02D         	call	_proceed	;wreg free
 19106  002CF4                     l10338:
 19107                           
 19108                           ;diskio.c: 555: buff = response();
 19109  002CF4  ECF3  F02D         	call	_response	;wreg free
 19110  002CF8  6E28               	movwf	sdc_disk_write@buff^0,c
 19111                           
 19112                           ;diskio.c: 556: }while(buff!=0X00);
 19113  002CFA  5028               	movf	sdc_disk_write@buff^0,w,c
 19114  002CFC  A4D8               	btfss	status,2,c
 19115  002CFE  D7FA               	goto	l10338
 19116                           
 19117                           ;diskio.c: 558: LATBbits.LATB5 = 0;
 19118  002D00  9A8A               	bcf	138,5,c	;volatile
 19119                           
 19120                           ;diskio.c: 559: LATCbits.LATC7 = 0;
 19121  002D02  9E8B               	bcf	139,7,c	;volatile
 19122                           
 19123                           ;diskio.c: 560: dummy_clocks(1);
 19124  002D04  0E01               	movlw	1
 19125  002D06  ECD1  F02A         	call	_dummy_clocks
 19126                           
 19127                           ;diskio.c: 561: escreve_SPI(0XFE);
 19128  002D0A  0EFE               	movlw	254
 19129  002D0C  ECD5  F02D         	call	_escreve_SPI
 19130                           
 19131                           ;diskio.c: 562: for(j=0;j<512;j++)
 19132  002D10  0E00               	movlw	0
 19133  002D12  6E27               	movwf	(sdc_disk_write@j+1)^0,c
 19134  002D14  0E00               	movlw	0
 19135  002D16  6E26               	movwf	sdc_disk_write@j^0,c
 19136  002D18                     l10352:
 19137                           
 19138                           ;diskio.c: 563: {;diskio.c: 564: escreve_SPI(*p_buff);
 19139  002D18  C016  FFD9         	movff	sdc_disk_write@p_buff,fsr2l
 19140  002D1C  C017  FFDA         	movff	sdc_disk_write@p_buff+1,fsr2h
 19141  002D20  50DF               	movf	indf2,w,c
 19142  002D22  ECD5  F02D         	call	_escreve_SPI
 19143                           
 19144                           ;diskio.c: 565: p_buff++;
 19145  002D26  4A16               	infsnz	sdc_disk_write@p_buff^0,f,c
 19146  002D28  2A17               	incf	(sdc_disk_write@p_buff+1)^0,f,c
 19147  002D2A  4A26               	infsnz	sdc_disk_write@j^0,f,c
 19148  002D2C  2A27               	incf	(sdc_disk_write@j+1)^0,f,c
 19149  002D2E  BE27               	btfsc	(sdc_disk_write@j+1)^0,7,c
 19150  002D30  D7F3               	goto	l10352
 19151  002D32  0E02               	movlw	2
 19152  002D34  5C27               	subwf	(sdc_disk_write@j+1)^0,w,c
 19153  002D36  A0D8               	btfss	status,0,c
 19154  002D38  D7EF               	goto	l10352
 19155                           
 19156                           ;diskio.c: 566: };diskio.c: 567: leitura_SPI();
 19157  002D3A  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19158                           
 19159                           ;diskio.c: 568: leitura_SPI();
 19160  002D3E  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19161                           
 19162                           ;diskio.c: 570: dummy_clocks(10);
 19163  002D42  0E0A               	movlw	10
 19164  002D44  ECD1  F02A         	call	_dummy_clocks
 19165                           
 19166                           ;diskio.c: 571: command(0X4D,0X00000000,0X00);
 19167  002D48  0E00               	movlw	0
 19168  002D4A  6E0F               	movwf	command@arg^0,c
 19169  002D4C  0E00               	movlw	0
 19170  002D4E  6E10               	movwf	(command@arg+1)^0,c
 19171  002D50  0E00               	movlw	0
 19172  002D52  6E11               	movwf	(command@arg+2)^0,c
 19173  002D54  0E00               	movlw	0
 19174  002D56  6E12               	movwf	(command@arg+3)^0,c
 19175  002D58  0E00               	movlw	0
 19176  002D5A  6E13               	movwf	command@CRC^0,c
 19177  002D5C  0E4D               	movlw	77
 19178  002D5E  ECB5  F027         	call	_command
 19179                           
 19180                           ;diskio.c: 572: proceed();
 19181  002D62  ECF9  F02D         	call	_proceed	;wreg free
 19182  002D66                     l10368:
 19183                           
 19184                           ;diskio.c: 574: buff = response();
 19185  002D66  ECF3  F02D         	call	_response	;wreg free
 19186  002D6A  6E28               	movwf	sdc_disk_write@buff^0,c
 19187                           
 19188                           ;diskio.c: 575: }while(buff!=0X00 );
 19189  002D6C  5028               	movf	sdc_disk_write@buff^0,w,c
 19190  002D6E  A4D8               	btfss	status,2,c
 19191  002D70  D7FA               	goto	l10368
 19192  002D72                     u11520:
 19193                           
 19194                           ;diskio.c: 576: };diskio.c: 577: return res;
 19195  002D72  5025               	movf	sdc_disk_write@res^0,w,c
 19196  002D74  0012               	return		;funcret
 19197  002D76                     __end_of_sdc_disk_write:
 19198                           	callstack 0
 19199                           
 19200 ;; *************** function _disk_read *****************
 19201 ;; Defined at:
 19202 ;;		line 97 in file "bibliotecas/diskio.c"
 19203 ;; Parameters:    Size  Location     Type
 19204 ;;  pdrv            1    wreg     unsigned char 
 19205 ;;  buff            2   40[COMRAM] PTR unsigned char 
 19206 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19207 ;;  sector          4   42[COMRAM] unsigned long 
 19208 ;;  count           1   46[COMRAM] unsigned char 
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;  pdrv            1   48[COMRAM] unsigned char 
 19211 ;;  result          2   49[COMRAM] int 
 19212 ;;  res             1   51[COMRAM] enum E25
 19213 ;; Return value:  Size  Location     Type
 19214 ;;                  1    wreg      enum E25
 19215 ;; Registers used:
 19216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19217 ;; Tracked objects:
 19218 ;;		On entry : 0/0
 19219 ;;		On exit  : 0/0
 19220 ;;		Unchanged: 0/0
 19221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19222 ;;      Params:         7       0       0       0       0       0       0       0       0
 19223 ;;      Locals:         4       0       0       0       0       0       0       0       0
 19224 ;;      Temps:          1       0       0       0       0       0       0       0       0
 19225 ;;      Totals:        12       0       0       0       0       0       0       0       0
 19226 ;;Total ram usage:       12 bytes
 19227 ;; Hardware stack levels used:    1
 19228 ;; Hardware stack levels required when called:    6
 19229 ;; This function calls:
 19230 ;;		_sdc_disk_read
 19231 ;; This function is called by:
 19232 ;;		_move_window
 19233 ;;		_check_fs
 19234 ;;		_f_read
 19235 ;; This function uses a non-reentrant model
 19236 ;;
 19237                           
 19238                           	psect	text106
 19239  004C44                     __ptext106:
 19240                           	callstack 0
 19241  004C44                     _disk_read:
 19242                           	callstack 15
 19243                           
 19244                           ;incstack = 0
 19245                           ;disk_read@pdrv stored from wreg
 19246  004C44  6E31               	movwf	disk_read@pdrv^0,c
 19247                           
 19248                           ;diskio.c: 104: DRESULT res;;diskio.c: 105: int result;;diskio.c: 107: switch (pdrv) {
 19249  004C46  D029               	goto	l10402
 19250  004C48                     l10378:
 19251                           
 19252                           ;diskio.c: 111: result = sdc_disk_read(buff, sector, count);
 19253  004C48  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19254  004C4C  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19255  004C50  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19256  004C54  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19257  004C58  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19258  004C5C  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19259  004C60  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19260  004C64  ECCD  F01C         	call	_sdc_disk_read	;wreg free
 19261  004C68  6E30               	movwf	??_disk_read^0,c
 19262  004C6A  5030               	movf	??_disk_read^0,w,c
 19263  004C6C  6E32               	movwf	disk_read@result^0,c
 19264  004C6E  6A33               	clrf	(disk_read@result+1)^0,c
 19265                           
 19266                           ;diskio.c: 115: res = result;
 19267  004C70  C032  F034         	movff	disk_read@result,disk_read@res
 19268  004C74                     l10382:
 19269                           
 19270                           ;diskio.c: 117: return res;
 19271  004C74  5034               	movf	disk_read@res^0,w,c
 19272  004C76  0012               	return	
 19273  004C78                     l10386:
 19274                           
 19275                           ;diskio.c: 122: result = sdc_disk_read(buff, sector, count);
 19276  004C78  C029  F016         	movff	disk_read@buff,sdc_disk_read@p_buff
 19277  004C7C  C02A  F017         	movff	disk_read@buff+1,sdc_disk_read@p_buff+1
 19278  004C80  C02B  F018         	movff	disk_read@sector,sdc_disk_read@sector
 19279  004C84  C02C  F019         	movff	disk_read@sector+1,sdc_disk_read@sector+1
 19280  004C88  C02D  F01A         	movff	disk_read@sector+2,sdc_disk_read@sector+2
 19281  004C8C  C02E  F01B         	movff	disk_read@sector+3,sdc_disk_read@sector+3
 19282  004C90  C02F  F01C         	movff	disk_read@count,sdc_disk_read@count
 19283  004C94  ECCD  F01C         	call	_sdc_disk_read	;wreg free
 19284  004C98  D7E7               	goto	L7
 19285  004C9A                     l10402:
 19286  004C9A  5031               	movf	disk_read@pdrv^0,w,c
 19287                           
 19288                           ; Switch size 1, requested type "simple"
 19289                           ; Number of cases is 3, Range of values is 0 to 2
 19290                           ; switch strategies available:
 19291                           ; Name         Instructions Cycles
 19292                           ; simple_byte           10     6 (average)
 19293                           ;	Chosen strategy is simple_byte
 19294  004C9C  0A00               	xorlw	0	; case 0
 19295  004C9E  B4D8               	btfsc	status,2,c
 19296  004CA0  D7D3               	goto	l10378
 19297  004CA2  0A01               	xorlw	1	; case 1
 19298  004CA4  B4D8               	btfsc	status,2,c
 19299  004CA6  D7E8               	goto	l10386
 19300  004CA8  0A03               	xorlw	3	; case 2
 19301  004CAA  B4D8               	btfsc	status,2,c
 19302  004CAC  D7E3               	goto	l10382
 19303                           
 19304                           ;diskio.c: 141: return RES_PARERR;
 19305  004CAE  0E04               	movlw	4
 19306  004CB0  0012               	return		;funcret
 19307  004CB2                     __end_of_disk_read:
 19308                           	callstack 0
 19309                           
 19310 ;; *************** function _sdc_disk_read *****************
 19311 ;; Defined at:
 19312 ;;		line 439 in file "bibliotecas/diskio.c"
 19313 ;; Parameters:    Size  Location     Type
 19314 ;;  p_buff          2   21[COMRAM] PTR unsigned char 
 19315 ;;		 -> NULL(0), dado_arquivo(20), fs(544), 
 19316 ;;  sector          4   23[COMRAM] unsigned long 
 19317 ;;  count           1   27[COMRAM] unsigned char 
 19318 ;; Auto vars:     Size  Location     Type
 19319 ;;  start_add       4   33[COMRAM] unsigned long 
 19320 ;;  length          2   37[COMRAM] int 
 19321 ;;  count1          2    0        int 
 19322 ;;  i               2    0        int 
 19323 ;;  buff            1   39[COMRAM] unsigned char 
 19324 ;;  ptr             1    0        unsigned char 
 19325 ;;  res             1    0        enum E25
 19326 ;; Return value:  Size  Location     Type
 19327 ;;                  1    wreg      enum E25
 19328 ;; Registers used:
 19329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19330 ;; Tracked objects:
 19331 ;;		On entry : 0/0
 19332 ;;		On exit  : 0/0
 19333 ;;		Unchanged: 0/0
 19334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19335 ;;      Params:         7       0       0       0       0       0       0       0       0
 19336 ;;      Locals:         8       0       0       0       0       0       0       0       0
 19337 ;;      Temps:          4       0       0       0       0       0       0       0       0
 19338 ;;      Totals:        19       0       0       0       0       0       0       0       0
 19339 ;;Total ram usage:       19 bytes
 19340 ;; Hardware stack levels used:    1
 19341 ;; Hardware stack levels required when called:    5
 19342 ;; This function calls:
 19343 ;;		_command
 19344 ;;		_dummy_clocks
 19345 ;;		_proceed
 19346 ;;		_response
 19347 ;; This function is called by:
 19348 ;;		_disk_read
 19349 ;; This function uses a non-reentrant model
 19350 ;;
 19351                           
 19352                           	psect	text107
 19353  00399A                     __ptext107:
 19354                           	callstack 0
 19355  00399A                     _sdc_disk_read:
 19356                           	callstack 15
 19357                           
 19358                           ;diskio.c: 448: unsigned long int start_add;;diskio.c: 449: int length,i, count1;;diskio
      +                          .c: 450: dummy_clocks(10);
 19359                           
 19360                           ;incstack = 0
 19361  00399A  0E0A               	movlw	10
 19362  00399C  ECD1  F02A         	call	_dummy_clocks
 19363                           
 19364                           ;diskio.c: 452: start_add = sector*512;
 19365  0039A0  C018  F01D         	movff	sdc_disk_read@sector,??_sdc_disk_read
 19366  0039A4  C019  F01E         	movff	sdc_disk_read@sector+1,??_sdc_disk_read+1
 19367  0039A8  C01A  F01F         	movff	sdc_disk_read@sector+2,??_sdc_disk_read+2
 19368  0039AC  C01B  F020         	movff	sdc_disk_read@sector+3,??_sdc_disk_read+3
 19369  0039B0  0E09               	movlw	9
 19370  0039B2                     u11375:
 19371  0039B2  90D8               	bcf	status,0,c
 19372  0039B4  361D               	rlcf	??_sdc_disk_read^0,f,c
 19373  0039B6  361E               	rlcf	(??_sdc_disk_read+1)^0,f,c
 19374  0039B8  361F               	rlcf	(??_sdc_disk_read+2)^0,f,c
 19375  0039BA  3620               	rlcf	(??_sdc_disk_read+3)^0,f,c
 19376  0039BC  2EE8               	decfsz	wreg,f,c
 19377  0039BE  D7F9               	goto	u11375
 19378  0039C0  C01D  F022         	movff	??_sdc_disk_read,sdc_disk_read@start_add
 19379  0039C4  C01E  F023         	movff	??_sdc_disk_read+1,sdc_disk_read@start_add+1
 19380  0039C8  C01F  F024         	movff	??_sdc_disk_read+2,sdc_disk_read@start_add+2
 19381  0039CC  C020  F025         	movff	??_sdc_disk_read+3,sdc_disk_read@start_add+3
 19382                           
 19383                           ;diskio.c: 455: if(sector != 1)
 19384  0039D0  0418               	decf	sdc_disk_read@sector^0,w,c
 19385  0039D2  1019               	iorwf	(sdc_disk_read@sector+1)^0,w,c
 19386  0039D4  101A               	iorwf	(sdc_disk_read@sector+2)^0,w,c
 19387  0039D6  101B               	iorwf	(sdc_disk_read@sector+3)^0,w,c
 19388  0039D8  B4D8               	btfsc	status,2,c
 19389  0039DA  D01B               	goto	l10248
 19390                           
 19391                           ;diskio.c: 456: {;diskio.c: 457: dummy_clocks(10);
 19392  0039DC  0E0A               	movlw	10
 19393  0039DE  ECD1  F02A         	call	_dummy_clocks
 19394                           
 19395                           ;diskio.c: 458: command(0X52,start_add ,0X00);
 19396  0039E2  C022  F00F         	movff	sdc_disk_read@start_add,command@arg
 19397  0039E6  C023  F010         	movff	sdc_disk_read@start_add+1,command@arg+1
 19398  0039EA  C024  F011         	movff	sdc_disk_read@start_add+2,command@arg+2
 19399  0039EE  C025  F012         	movff	sdc_disk_read@start_add+3,command@arg+3
 19400  0039F2  0E00               	movlw	0
 19401  0039F4  6E13               	movwf	command@CRC^0,c
 19402  0039F6  0E52               	movlw	82
 19403  0039F8  ECB5  F027         	call	_command
 19404                           
 19405                           ;diskio.c: 459: proceed();
 19406  0039FC  ECF9  F02D         	call	_proceed	;wreg free
 19407  003A00                     l10242:
 19408                           
 19409                           ;diskio.c: 461: buff = response();
 19410  003A00  ECF3  F02D         	call	_response	;wreg free
 19411  003A04  6E28               	movwf	sdc_disk_read@buff^0,c
 19412                           
 19413                           ;diskio.c: 462: }while(buff!=0X00);
 19414  003A06  5028               	movf	sdc_disk_read@buff^0,w,c
 19415  003A08  A4D8               	btfss	status,2,c
 19416  003A0A  D7FA               	goto	l10242
 19417  003A0C                     u11390:
 19418                           
 19419                           ;diskio.c: 463: proceed();
 19420  003A0C  ECF9  F02D         	call	_proceed	;wreg free
 19421                           
 19422                           ;diskio.c: 464: }
 19423  003A10  D01C               	goto	l10260
 19424  003A12                     l10248:
 19425                           
 19426                           ;diskio.c: 465: else;diskio.c: 466: {;diskio.c: 467: dummy_clocks(10);
 19427  003A12  0E0A               	movlw	10
 19428  003A14  ECD1  F02A         	call	_dummy_clocks
 19429                           
 19430                           ;diskio.c: 468: command(0X51,sector ,0X00);
 19431  003A18  C018  F00F         	movff	sdc_disk_read@sector,command@arg
 19432  003A1C  C019  F010         	movff	sdc_disk_read@sector+1,command@arg+1
 19433  003A20  C01A  F011         	movff	sdc_disk_read@sector+2,command@arg+2
 19434  003A24  C01B  F012         	movff	sdc_disk_read@sector+3,command@arg+3
 19435  003A28  0E00               	movlw	0
 19436  003A2A  6E13               	movwf	command@CRC^0,c
 19437  003A2C  0E51               	movlw	81
 19438  003A2E  ECB5  F027         	call	_command
 19439                           
 19440                           ;diskio.c: 469: proceed();
 19441  003A32  ECF9  F02D         	call	_proceed	;wreg free
 19442  003A36                     l10252:
 19443                           
 19444                           ;diskio.c: 471: buff = response();
 19445  003A36  ECF3  F02D         	call	_response	;wreg free
 19446  003A3A  6E28               	movwf	sdc_disk_read@buff^0,c
 19447                           
 19448                           ;diskio.c: 472: }while(buff!=0X00);
 19449  003A3C  5028               	movf	sdc_disk_read@buff^0,w,c
 19450  003A3E  B4D8               	btfsc	status,2,c
 19451  003A40  D7E5               	goto	u11390
 19452  003A42  D7F9               	goto	l10252
 19453  003A44                     l10258:
 19454                           
 19455                           ;diskio.c: 479: {;diskio.c: 480: buff = response();
 19456  003A44  ECF3  F02D         	call	_response	;wreg free
 19457  003A48  6E28               	movwf	sdc_disk_read@buff^0,c
 19458  003A4A                     l10260:
 19459  003A4A  0EFE               	movlw	254
 19460  003A4C  1828               	xorwf	sdc_disk_read@buff^0,w,c
 19461  003A4E  A4D8               	btfss	status,2,c
 19462  003A50  D7F9               	goto	l10258
 19463                           
 19464                           ;diskio.c: 481: };diskio.c: 483: length = 0;
 19465  003A52  0E00               	movlw	0
 19466  003A54  6E27               	movwf	(sdc_disk_read@length+1)^0,c
 19467  003A56  0E00               	movlw	0
 19468  003A58  6E26               	movwf	sdc_disk_read@length^0,c
 19469                           
 19470                           ;diskio.c: 484: while ( length < 512 )
 19471  003A5A  D00B               	goto	l10268
 19472  003A5C                     l10264:
 19473                           
 19474                           ;diskio.c: 485: {;diskio.c: 486: p_buff[length] = response();
 19475  003A5C  5026               	movf	sdc_disk_read@length^0,w,c
 19476  003A5E  2416               	addwf	sdc_disk_read@p_buff^0,w,c
 19477  003A60  6ED9               	movwf	fsr2l,c
 19478  003A62  5027               	movf	(sdc_disk_read@length+1)^0,w,c
 19479  003A64  2017               	addwfc	(sdc_disk_read@p_buff+1)^0,w,c
 19480  003A66  6EDA               	movwf	fsr2h,c
 19481  003A68  ECF3  F02D         	call	_response	;wreg free
 19482  003A6C  6EDF               	movwf	indf2,c
 19483                           
 19484                           ;diskio.c: 487: length++;
 19485  003A6E  4A26               	infsnz	sdc_disk_read@length^0,f,c
 19486  003A70  2A27               	incf	(sdc_disk_read@length+1)^0,f,c
 19487  003A72                     l10268:
 19488  003A72  BE27               	btfsc	(sdc_disk_read@length+1)^0,7,c
 19489  003A74  D7F3               	goto	l10264
 19490  003A76  0E02               	movlw	2
 19491  003A78  5C27               	subwf	(sdc_disk_read@length+1)^0,w,c
 19492  003A7A  A0D8               	btfss	status,0,c
 19493  003A7C  D7EF               	goto	l10264
 19494                           
 19495                           ;diskio.c: 491: dummy_clocks(10);
 19496  003A7E  0E0A               	movlw	10
 19497  003A80  ECD1  F02A         	call	_dummy_clocks
 19498                           
 19499                           ;diskio.c: 493: command(0X4C,0X00000000,0X00);
 19500  003A84  0E00               	movlw	0
 19501  003A86  6E0F               	movwf	command@arg^0,c
 19502  003A88  0E00               	movlw	0
 19503  003A8A  6E10               	movwf	(command@arg+1)^0,c
 19504  003A8C  0E00               	movlw	0
 19505  003A8E  6E11               	movwf	(command@arg+2)^0,c
 19506  003A90  0E00               	movlw	0
 19507  003A92  6E12               	movwf	(command@arg+3)^0,c
 19508  003A94  0E00               	movlw	0
 19509  003A96  6E13               	movwf	command@CRC^0,c
 19510  003A98  0E4C               	movlw	76
 19511  003A9A  ECB5  F027         	call	_command
 19512                           
 19513                           ;diskio.c: 494: proceed();
 19514  003A9E  ECF9  F02D         	call	_proceed	;wreg free
 19515  003AA2                     l10278:
 19516                           
 19517                           ;diskio.c: 496: buff = response();
 19518  003AA2  ECF3  F02D         	call	_response	;wreg free
 19519  003AA6  6E28               	movwf	sdc_disk_read@buff^0,c
 19520                           
 19521                           ;diskio.c: 497: }while(buff!=0xFF);
 19522  003AA8  2828               	incf	sdc_disk_read@buff^0,w,c
 19523  003AAA  A4D8               	btfss	status,2,c
 19524  003AAC  D7FA               	goto	l10278
 19525                           
 19526                           ;diskio.c: 500: return RES_OK;
 19527  003AAE  0E00               	movlw	0
 19528  003AB0  0012               	return		;funcret
 19529  003AB2                     __end_of_sdc_disk_read:
 19530                           	callstack 0
 19531                           
 19532 ;; *************** function _response *****************
 19533 ;; Defined at:
 19534 ;;		line 61 in file "bibliotecas/SDCard.c"
 19535 ;; Parameters:    Size  Location     Type
 19536 ;;		None
 19537 ;; Auto vars:     Size  Location     Type
 19538 ;;  buff            1    9[COMRAM] unsigned char 
 19539 ;; Return value:  Size  Location     Type
 19540 ;;                  1    wreg      unsigned char 
 19541 ;; Registers used:
 19542 ;;		wreg, status,2, cstack
 19543 ;; Tracked objects:
 19544 ;;		On entry : 0/0
 19545 ;;		On exit  : 0/0
 19546 ;;		Unchanged: 0/0
 19547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19548 ;;      Params:         0       0       0       0       0       0       0       0       0
 19549 ;;      Locals:         1       0       0       0       0       0       0       0       0
 19550 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19551 ;;      Totals:         1       0       0       0       0       0       0       0       0
 19552 ;;Total ram usage:        1 bytes
 19553 ;; Hardware stack levels used:    1
 19554 ;; Hardware stack levels required when called:    3
 19555 ;; This function calls:
 19556 ;;		_leitura_SPI
 19557 ;; This function is called by:
 19558 ;;		_sdc_reset
 19559 ;;		_sdc_disk_initialize
 19560 ;;		_sdc_disk_read
 19561 ;;		_sdc_disk_write
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text108
 19566  005BE6                     __ptext108:
 19567                           	callstack 0
 19568  005BE6                     _response:
 19569                           	callstack 16
 19570                           
 19571                           ;SDCard.c: 63: unsigned char buff;;SDCard.c: 64: LATBbits.LATB5 = 0;
 19572                           
 19573                           ;incstack = 0
 19574  005BE6  9A8A               	bcf	138,5,c	;volatile
 19575                           
 19576                           ;SDCard.c: 65: buff= leitura_SPI();
 19577  005BE8  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19578  005BEC  6E0A               	movwf	response@buff^0,c
 19579                           
 19580                           ;SDCard.c: 66: return buff;
 19581  005BEE  500A               	movf	response@buff^0,w,c
 19582  005BF0  0012               	return		;funcret
 19583  005BF2                     __end_of_response:
 19584                           	callstack 0
 19585                           
 19586 ;; *************** function _proceed *****************
 19587 ;; Defined at:
 19588 ;;		line 94 in file "bibliotecas/SDCard.c"
 19589 ;; Parameters:    Size  Location     Type
 19590 ;;		None
 19591 ;; Auto vars:     Size  Location     Type
 19592 ;;		None
 19593 ;; Return value:  Size  Location     Type
 19594 ;;                  1    wreg      void 
 19595 ;; Registers used:
 19596 ;;		wreg, cstack
 19597 ;; Tracked objects:
 19598 ;;		On entry : 0/0
 19599 ;;		On exit  : 0/0
 19600 ;;		Unchanged: 0/0
 19601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19602 ;;      Params:         0       0       0       0       0       0       0       0       0
 19603 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19604 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19605 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19606 ;;Total ram usage:        0 bytes
 19607 ;; Hardware stack levels used:    1
 19608 ;; Hardware stack levels required when called:    3
 19609 ;; This function calls:
 19610 ;;		_escreve_SPI
 19611 ;; This function is called by:
 19612 ;;		_sdc_reset
 19613 ;;		_sdc_disk_initialize
 19614 ;;		_sdc_disk_read
 19615 ;;		_sdc_disk_write
 19616 ;; This function uses a non-reentrant model
 19617 ;;
 19618                           
 19619                           	psect	text109
 19620  005BF2                     __ptext109:
 19621                           	callstack 0
 19622  005BF2                     _proceed:
 19623                           	callstack 16
 19624                           
 19625                           ;SDCard.c: 96: LATBbits.LATB5 = 0;
 19626                           
 19627                           ;incstack = 0
 19628  005BF2  9A8A               	bcf	138,5,c	;volatile
 19629                           
 19630                           ;SDCard.c: 97: escreve_SPI(0xFF);
 19631  005BF4  0EFF               	movlw	255
 19632  005BF6  ECD5  F02D         	call	_escreve_SPI
 19633                           
 19634                           ;SDCard.c: 98: LATBbits.LATB5 = 1;
 19635  005BFA  8A8A               	bsf	138,5,c	;volatile
 19636  005BFC  0012               	return		;funcret
 19637  005BFE                     __end_of_proceed:
 19638                           	callstack 0
 19639                           
 19640 ;; *************** function _command *****************
 19641 ;; Defined at:
 19642 ;;		line 127 in file "bibliotecas/SDCard.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;  CMD             1    wreg     unsigned char 
 19645 ;;  arg             4   14[COMRAM] unsigned long 
 19646 ;;  CRC             1   18[COMRAM] unsigned char 
 19647 ;; Auto vars:     Size  Location     Type
 19648 ;;  CMD             1   19[COMRAM] unsigned char 
 19649 ;;  argument        1   20[COMRAM] unsigned char 
 19650 ;; Return value:  Size  Location     Type
 19651 ;;                  1    wreg      void 
 19652 ;; Registers used:
 19653 ;;		wreg, status,2, status,0, cstack
 19654 ;; Tracked objects:
 19655 ;;		On entry : 0/0
 19656 ;;		On exit  : 0/0
 19657 ;;		Unchanged: 0/0
 19658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19659 ;;      Params:         5       0       0       0       0       0       0       0       0
 19660 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19661 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19662 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19663 ;;Total ram usage:        7 bytes
 19664 ;; Hardware stack levels used:    1
 19665 ;; Hardware stack levels required when called:    4
 19666 ;; This function calls:
 19667 ;;		_dummy_clocks
 19668 ;;		_escreve_SPI
 19669 ;;		_wait_ready
 19670 ;; This function is called by:
 19671 ;;		_sdc_reset
 19672 ;;		_sdc_disk_initialize
 19673 ;;		_sdc_disk_read
 19674 ;;		_sdc_disk_write
 19675 ;; This function uses a non-reentrant model
 19676 ;;
 19677                           
 19678                           	psect	text110
 19679  004F6A                     __ptext110:
 19680                           	callstack 0
 19681  004F6A                     _command:
 19682                           	callstack 15
 19683                           
 19684                           ;incstack = 0
 19685                           ;command@CMD stored from wreg
 19686  004F6A  6E14               	movwf	command@CMD^0,c
 19687                           
 19688                           ;SDCard.c: 129: unsigned char argument;;SDCard.c: 131: if (wait_ready() != 0xFF)
 19689  004F6C  EC43  F02B         	call	_wait_ready	;wreg free
 19690  004F70  0AFF               	xorlw	255
 19691  004F72  A4D8               	btfss	status,2,c
 19692  004F74  D004               	goto	l702
 19693  004F76  D008               	goto	u11360
 19694  004F78                     l10192:
 19695                           
 19696                           ;SDCard.c: 134: {;SDCard.c: 135: dummy_clocks(10);
 19697  004F78  0E0A               	movlw	10
 19698  004F7A  ECD1  F02A         	call	_dummy_clocks
 19699  004F7E                     l702:
 19700  004F7E  EC43  F02B         	call	_wait_ready	;wreg free
 19701  004F82  0AFF               	xorlw	255
 19702  004F84  A4D8               	btfss	status,2,c
 19703  004F86  D7F8               	goto	l10192
 19704  004F88                     u11360:
 19705                           
 19706                           ;SDCard.c: 136: };SDCard.c: 137: };SDCard.c: 138: escreve_SPI(0xFF);
 19707  004F88  0EFF               	movlw	255
 19708  004F8A  ECD5  F02D         	call	_escreve_SPI
 19709                           
 19710                           ;SDCard.c: 139: escreve_SPI(CMD);
 19711  004F8E  5014               	movf	command@CMD^0,w,c
 19712  004F90  ECD5  F02D         	call	_escreve_SPI
 19713                           
 19714                           ;SDCard.c: 140: argument = arg>>24;
 19715  004F94  C012  F015         	movff	command@arg+3,command@argument
 19716                           
 19717                           ;SDCard.c: 141: escreve_SPI(argument);
 19718  004F98  5015               	movf	command@argument^0,w,c
 19719  004F9A  ECD5  F02D         	call	_escreve_SPI
 19720                           
 19721                           ;SDCard.c: 142: argument = arg>>16;
 19722  004F9E  C011  F015         	movff	command@arg+2,command@argument
 19723                           
 19724                           ;SDCard.c: 143: escreve_SPI(argument);
 19725  004FA2  5015               	movf	command@argument^0,w,c
 19726  004FA4  ECD5  F02D         	call	_escreve_SPI
 19727                           
 19728                           ;SDCard.c: 144: argument = arg>>8;
 19729  004FA8  C010  F015         	movff	command@arg+1,command@argument
 19730                           
 19731                           ;SDCard.c: 145: escreve_SPI(argument);
 19732  004FAC  5015               	movf	command@argument^0,w,c
 19733  004FAE  ECD5  F02D         	call	_escreve_SPI
 19734                           
 19735                           ;SDCard.c: 146: argument = arg;
 19736  004FB2  C00F  F015         	movff	command@arg,command@argument
 19737                           
 19738                           ;SDCard.c: 147: escreve_SPI(argument);
 19739  004FB6  5015               	movf	command@argument^0,w,c
 19740  004FB8  ECD5  F02D         	call	_escreve_SPI
 19741                           
 19742                           ;SDCard.c: 148: escreve_SPI(CRC);
 19743  004FBC  5013               	movf	command@CRC^0,w,c
 19744  004FBE  ECD5  F02D         	call	_escreve_SPI
 19745  004FC2  0012               	return		;funcret
 19746  004FC4                     __end_of_command:
 19747                           	callstack 0
 19748                           
 19749 ;; *************** function _wait_ready *****************
 19750 ;; Defined at:
 19751 ;;		line 107 in file "bibliotecas/SDCard.c"
 19752 ;; Parameters:    Size  Location     Type
 19753 ;;		None
 19754 ;; Auto vars:     Size  Location     Type
 19755 ;;  msg            10    0        unsigned char [10]
 19756 ;;  timeout         4    9[COMRAM] unsigned long 
 19757 ;;  res             1   13[COMRAM] unsigned char 
 19758 ;; Return value:  Size  Location     Type
 19759 ;;                  1    wreg      unsigned char 
 19760 ;; Registers used:
 19761 ;;		wreg, status,2, status,0, cstack
 19762 ;; Tracked objects:
 19763 ;;		On entry : 0/0
 19764 ;;		On exit  : 0/0
 19765 ;;		Unchanged: 0/0
 19766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19767 ;;      Params:         0       0       0       0       0       0       0       0       0
 19768 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19769 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19770 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19771 ;;Total ram usage:        5 bytes
 19772 ;; Hardware stack levels used:    1
 19773 ;; Hardware stack levels required when called:    3
 19774 ;; This function calls:
 19775 ;;		_leitura_SPI
 19776 ;; This function is called by:
 19777 ;;		_command
 19778 ;; This function uses a non-reentrant model
 19779 ;;
 19780                           
 19781                           	psect	text111
 19782  005686                     __ptext111:
 19783                           	callstack 0
 19784  005686                     _wait_ready:
 19785                           	callstack 15
 19786                           
 19787                           ;SDCard.c: 109: BYTE res;;SDCard.c: 110: DWORD timeout = 0x7FFF;
 19788                           
 19789                           ;incstack = 0
 19790  005686  0EFF               	movlw	255
 19791  005688  6E0A               	movwf	wait_ready@timeout^0,c
 19792  00568A  0E7F               	movlw	127
 19793  00568C  6E0B               	movwf	(wait_ready@timeout+1)^0,c
 19794  00568E  0E00               	movlw	0
 19795  005690  6E0C               	movwf	(wait_ready@timeout+2)^0,c
 19796  005692  0E00               	movlw	0
 19797  005694  6E0D               	movwf	(wait_ready@timeout+3)^0,c
 19798  005696                     l10178:
 19799                           
 19800                           ;SDCard.c: 114: res = leitura_SPI();
 19801  005696  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19802  00569A  6E0E               	movwf	wait_ready@res^0,c
 19803                           
 19804                           ;SDCard.c: 115: }while ((res != 0xFF) && (--timeout));
 19805  00569C  280E               	incf	wait_ready@res^0,w,c
 19806  00569E  B4D8               	btfsc	status,2,c
 19807  0056A0  D00B               	goto	u11340
 19808  0056A2  060A               	decf	wait_ready@timeout^0,f,c
 19809  0056A4  0E00               	movlw	0
 19810  0056A6  5A0B               	subwfb	(wait_ready@timeout+1)^0,f,c
 19811  0056A8  5A0C               	subwfb	(wait_ready@timeout+2)^0,f,c
 19812  0056AA  5A0D               	subwfb	(wait_ready@timeout+3)^0,f,c
 19813  0056AC  500A               	movf	wait_ready@timeout^0,w,c
 19814  0056AE  100B               	iorwf	(wait_ready@timeout+1)^0,w,c
 19815  0056B0  100C               	iorwf	(wait_ready@timeout+2)^0,w,c
 19816  0056B2  100D               	iorwf	(wait_ready@timeout+3)^0,w,c
 19817  0056B4  A4D8               	btfss	status,2,c
 19818  0056B6  D7EF               	goto	l10178
 19819  0056B8                     u11340:
 19820                           
 19821                           ;SDCard.c: 117: return res;
 19822  0056B8  500E               	movf	wait_ready@res^0,w,c
 19823  0056BA  0012               	return		;funcret
 19824  0056BC                     __end_of_wait_ready:
 19825                           	callstack 0
 19826                           
 19827 ;; *************** function _escreve_SPI *****************
 19828 ;; Defined at:
 19829 ;;		line 105 in file "bibliotecas/SPI.c"
 19830 ;; Parameters:    Size  Location     Type
 19831 ;;  dado            1    wreg     unsigned char 
 19832 ;; Auto vars:     Size  Location     Type
 19833 ;;  dado            1   10[COMRAM] unsigned char 
 19834 ;;  TempVar         1    0        unsigned char 
 19835 ;; Return value:  Size  Location     Type
 19836 ;;                  1    wreg      void 
 19837 ;; Registers used:
 19838 ;;		wreg
 19839 ;; Tracked objects:
 19840 ;;		On entry : 0/0
 19841 ;;		On exit  : 0/0
 19842 ;;		Unchanged: 0/0
 19843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19844 ;;      Params:         0       0       0       0       0       0       0       0       0
 19845 ;;      Locals:         2       0       0       0       0       0       0       0       0
 19846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19847 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19848 ;;Total ram usage:        2 bytes
 19849 ;; Hardware stack levels used:    1
 19850 ;; Hardware stack levels required when called:    2
 19851 ;; This function calls:
 19852 ;;		Nothing
 19853 ;; This function is called by:
 19854 ;;		_sdc_disk_write
 19855 ;;		_proceed
 19856 ;;		_command
 19857 ;; This function uses a non-reentrant model
 19858 ;;
 19859                           
 19860                           	psect	text112
 19861  005BAA                     __ptext112:
 19862                           	callstack 0
 19863  005BAA                     _escreve_SPI:
 19864                           	callstack 16
 19865                           
 19866                           ;incstack = 0
 19867                           ;escreve_SPI@dado stored from wreg
 19868  005BAA  6E0B               	movwf	escreve_SPI@dado^0,c
 19869  005BAC  50C9               	movf	201,w,c	;volatile
 19870                           
 19871                           ;SPI.c: 109: PIR1bits.SSPIF = 0;
 19872  005BAE  969E               	bcf	158,3,c	;volatile
 19873                           
 19874                           ;SPI.c: 111: SSPBUF = dado;
 19875  005BB0  C00B  FFC9         	movff	escreve_SPI@dado,4041	;volatile
 19876  005BB4                     l806:
 19877  005BB4  B69E               	btfsc	158,3,c	;volatile
 19878  005BB6  0012               	return	
 19879  005BB8  D7FD               	goto	l806
 19880  005BBA                     __end_of_escreve_SPI:
 19881                           	callstack 0
 19882                           
 19883 ;; *************** function _dummy_clocks *****************
 19884 ;; Defined at:
 19885 ;;		line 76 in file "bibliotecas/SDCard.c"
 19886 ;; Parameters:    Size  Location     Type
 19887 ;;  n               1    wreg     unsigned char 
 19888 ;; Auto vars:     Size  Location     Type
 19889 ;;  n               1   11[COMRAM] unsigned char 
 19890 ;;  i               2   12[COMRAM] unsigned int 
 19891 ;; Return value:  Size  Location     Type
 19892 ;;                  1    wreg      void 
 19893 ;; Registers used:
 19894 ;;		wreg, status,2, status,0, cstack
 19895 ;; Tracked objects:
 19896 ;;		On entry : 0/0
 19897 ;;		On exit  : 0/0
 19898 ;;		Unchanged: 0/0
 19899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19900 ;;      Params:         0       0       0       0       0       0       0       0       0
 19901 ;;      Locals:         3       0       0       0       0       0       0       0       0
 19902 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19903 ;;      Totals:         5       0       0       0       0       0       0       0       0
 19904 ;;Total ram usage:        5 bytes
 19905 ;; Hardware stack levels used:    1
 19906 ;; Hardware stack levels required when called:    3
 19907 ;; This function calls:
 19908 ;;		_leitura_SPI
 19909 ;; This function is called by:
 19910 ;;		_sdc_disk_initialize
 19911 ;;		_sdc_disk_read
 19912 ;;		_sdc_disk_write
 19913 ;;		_command
 19914 ;; This function uses a non-reentrant model
 19915 ;;
 19916                           
 19917                           	psect	text113
 19918  0055A2                     __ptext113:
 19919                           	callstack 0
 19920  0055A2                     _dummy_clocks:
 19921                           	callstack 16
 19922                           
 19923                           ;incstack = 0
 19924                           ;dummy_clocks@n stored from wreg
 19925  0055A2  6E0C               	movwf	dummy_clocks@n^0,c
 19926                           
 19927                           ;SDCard.c: 78: unsigned int i;;SDCard.c: 79: _delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
 19928  0055A4  0E10               	movlw	16
 19929  0055A6  6E0A               	movwf	??_dummy_clocks^0,c
 19930  0055A8  0E94               	movlw	148
 19931  0055AA                     u16747:
 19932  0055AA  2EE8               	decfsz	wreg,f,c
 19933  0055AC  D7FE               	bra	u16747
 19934  0055AE  2E0A               	decfsz	??_dummy_clocks^0,f,c
 19935  0055B0  D7FC               	bra	u16747
 19936  0055B2  D000               	nop2	
 19937                           
 19938                           ;SDCard.c: 80: for(i=0;i<n;i++)
 19939  0055B4  0E00               	movlw	0
 19940  0055B6  6E0E               	movwf	(dummy_clocks@i+1)^0,c
 19941  0055B8  0E00               	movlw	0
 19942  0055BA  6E0D               	movwf	dummy_clocks@i^0,c
 19943  0055BC  D006               	goto	l10170
 19944  0055BE                     l686:
 19945                           
 19946                           ;SDCard.c: 81: {;SDCard.c: 82: LATBbits.LATB5 = 1;
 19947  0055BE  8A8A               	bsf	138,5,c	;volatile
 19948                           
 19949                           ;SDCard.c: 83: leitura_SPI();
 19950  0055C0  ECFF  F02D         	call	_leitura_SPI	;wreg free
 19951                           
 19952                           ;SDCard.c: 84: LATBbits.LATB5 = 0;
 19953  0055C4  9A8A               	bcf	138,5,c	;volatile
 19954  0055C6  4A0D               	infsnz	dummy_clocks@i^0,f,c
 19955  0055C8  2A0E               	incf	(dummy_clocks@i+1)^0,f,c
 19956  0055CA                     l10170:
 19957  0055CA  500C               	movf	dummy_clocks@n^0,w,c
 19958  0055CC  6E0A               	movwf	??_dummy_clocks^0,c
 19959  0055CE  6A0B               	clrf	(??_dummy_clocks+1)^0,c
 19960  0055D0  500A               	movf	??_dummy_clocks^0,w,c
 19961  0055D2  5C0D               	subwf	dummy_clocks@i^0,w,c
 19962  0055D4  500B               	movf	(??_dummy_clocks+1)^0,w,c
 19963  0055D6  580E               	subwfb	(dummy_clocks@i+1)^0,w,c
 19964  0055D8  B0D8               	btfsc	status,0,c
 19965  0055DA  0012               	return	
 19966  0055DC  D7F0               	goto	l686
 19967  0055DE                     __end_of_dummy_clocks:
 19968                           	callstack 0
 19969                           
 19970 ;; *************** function _leitura_SPI *****************
 19971 ;; Defined at:
 19972 ;;		line 90 in file "bibliotecas/SPI.c"
 19973 ;; Parameters:    Size  Location     Type
 19974 ;;		None
 19975 ;; Auto vars:     Size  Location     Type
 19976 ;;		None
 19977 ;; Return value:  Size  Location     Type
 19978 ;;                  1    wreg      unsigned char 
 19979 ;; Registers used:
 19980 ;;		wreg, status,2
 19981 ;; Tracked objects:
 19982 ;;		On entry : 0/0
 19983 ;;		On exit  : 0/0
 19984 ;;		Unchanged: 0/0
 19985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19986 ;;      Params:         0       0       0       0       0       0       0       0       0
 19987 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19988 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19989 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19990 ;;Total ram usage:        0 bytes
 19991 ;; Hardware stack levels used:    1
 19992 ;; Hardware stack levels required when called:    2
 19993 ;; This function calls:
 19994 ;;		Nothing
 19995 ;; This function is called by:
 19996 ;;		_sdc_disk_write
 19997 ;;		_response
 19998 ;;		_dummy_clocks
 19999 ;;		_wait_ready
 20000 ;; This function uses a non-reentrant model
 20001 ;;
 20002                           
 20003                           	psect	text114
 20004  005BFE                     __ptext114:
 20005                           	callstack 0
 20006  005BFE                     _leitura_SPI:
 20007                           	callstack 16
 20008                           
 20009                           ;SPI.c: 92: SSPBUF = 0xFF;
 20010                           
 20011                           ;incstack = 0
 20012  005BFE  68C9               	setf	201,c	;volatile
 20013                           
 20014                           ;SPI.c: 93: SSPSTATbits.BF = 0;
 20015  005C00  90C7               	bcf	199,0,c	;volatile
 20016  005C02                     l800:
 20017  005C02  A0C7               	btfss	199,0,c	;volatile
 20018  005C04  D7FE               	goto	l800
 20019                           
 20020                           ;SPI.c: 95: return (SSPBUF);
 20021  005C06  50C9               	movf	201,w,c	;volatile
 20022  005C08  0012               	return		;funcret
 20023  005C0A                     __end_of_leitura_SPI:
 20024                           	callstack 0
 20025                           
 20026 ;; *************** function _disk_ioctl *****************
 20027 ;; Defined at:
 20028 ;;		line 198 in file "bibliotecas/diskio.c"
 20029 ;; Parameters:    Size  Location     Type
 20030 ;;  pdrv            1    wreg     unsigned char 
 20031 ;;  cmd             1    9[COMRAM] unsigned char 
 20032 ;;  buff            2   10[COMRAM] PTR void 
 20033 ;;		 -> NULL(0), 
 20034 ;; Auto vars:     Size  Location     Type
 20035 ;;  pdrv            1   12[COMRAM] unsigned char 
 20036 ;;  result          2    0        int 
 20037 ;;  res             1   13[COMRAM] enum E25
 20038 ;; Return value:  Size  Location     Type
 20039 ;;                  1    wreg      enum E25
 20040 ;; Registers used:
 20041 ;;		wreg, status,2, status,0
 20042 ;; Tracked objects:
 20043 ;;		On entry : 0/0
 20044 ;;		On exit  : 0/0
 20045 ;;		Unchanged: 0/0
 20046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20047 ;;      Params:         3       0       0       0       0       0       0       0       0
 20048 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20050 ;;      Totals:         5       0       0       0       0       0       0       0       0
 20051 ;;Total ram usage:        5 bytes
 20052 ;; Hardware stack levels used:    1
 20053 ;; Hardware stack levels required when called:    2
 20054 ;; This function calls:
 20055 ;;		Nothing
 20056 ;; This function is called by:
 20057 ;;		_sync
 20058 ;; This function uses a non-reentrant model
 20059 ;;
 20060                           
 20061                           	psect	text115
 20062  005AA2                     __ptext115:
 20063                           	callstack 0
 20064  005AA2                     _disk_ioctl:
 20065                           	callstack 21
 20066                           
 20067                           ;incstack = 0
 20068                           ;disk_ioctl@pdrv stored from wreg
 20069  005AA2  6E0D               	movwf	disk_ioctl@pdrv^0,c
 20070                           
 20071                           ;diskio.c: 204: DRESULT res;;diskio.c: 205: int result;;diskio.c: 207: switch (pdrv) {
 20072  005AA4  D002               	goto	l11100
 20073  005AA6                     l68:
 20074                           
 20075                           ;diskio.c: 212: return res;
 20076  005AA6  500E               	movf	disk_ioctl@res^0,w,c
 20077  005AA8  0012               	return	
 20078  005AAA                     l11100:
 20079  005AAA  500D               	movf	disk_ioctl@pdrv^0,w,c
 20080                           
 20081                           ; Switch size 1, requested type "simple"
 20082                           ; Number of cases is 3, Range of values is 0 to 2
 20083                           ; switch strategies available:
 20084                           ; Name         Instructions Cycles
 20085                           ; simple_byte           10     6 (average)
 20086                           ;	Chosen strategy is simple_byte
 20087  005AAC  0A00               	xorlw	0	; case 0
 20088  005AAE  B4D8               	btfsc	status,2,c
 20089  005AB0  D7FA               	goto	l68
 20090  005AB2  0A01               	xorlw	1	; case 1
 20091  005AB4  B4D8               	btfsc	status,2,c
 20092  005AB6  D7F7               	goto	l68
 20093  005AB8  0A03               	xorlw	3	; case 2
 20094  005ABA  B4D8               	btfsc	status,2,c
 20095  005ABC  D7F4               	goto	l68
 20096                           
 20097                           ;diskio.c: 227: return RES_PARERR;
 20098  005ABE  0E04               	movlw	4
 20099  005AC0  0012               	return		;funcret
 20100  005AC2                     __end_of_disk_ioctl:
 20101                           	callstack 0
 20102                           
 20103 ;; *************** function _get_fattime *****************
 20104 ;; Defined at:
 20105 ;;		line 810 in file "bibliotecas/tff.c"
 20106 ;; Parameters:    Size  Location     Type
 20107 ;;		None
 20108 ;; Auto vars:     Size  Location     Type
 20109 ;;  f_time         10   55[COMRAM] struct .
 20110 ;; Return value:  Size  Location     Type
 20111 ;;                  4   13[COMRAM] unsigned long 
 20112 ;; Registers used:
 20113 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20114 ;; Tracked objects:
 20115 ;;		On entry : 3F/0
 20116 ;;		On exit  : 3F/1
 20117 ;;		Unchanged: 0/0
 20118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20119 ;;      Params:         4       0       0       0       0       0       0       0       0
 20120 ;;      Locals:        10       0       0       0       0       0       0       0       0
 20121 ;;      Temps:         38       0       0       0       0       0       0       0       0
 20122 ;;      Totals:        52       0       0       0       0       0       0       0       0
 20123 ;;Total ram usage:       52 bytes
 20124 ;; Hardware stack levels used:    1
 20125 ;; Hardware stack levels required when called:    3
 20126 ;; This function calls:
 20127 ;;		_gps_ano
 20128 ;;		_gps_dia
 20129 ;;		_gps_hora
 20130 ;;		_gps_mes
 20131 ;;		_gps_minutos
 20132 ;;		_gps_segundos
 20133 ;; This function is called by:
 20134 ;;		_f_open
 20135 ;;		_f_sync
 20136 ;; This function uses a non-reentrant model
 20137 ;;
 20138                           
 20139                           	psect	text116
 20140  0034B0                     __ptext116:
 20141                           	callstack 0
 20142  0034B0                     _get_fattime:
 20143                           	callstack 22
 20144                           
 20145                           ; BSR set to: 0
 20146                           ;tff.c: 812: fat_time f_time;;tff.c: 814: f_time.hora = gps_hora() - 3;
 20147                           
 20148                           ;incstack = 0
 20149  0034B0  ECA8  F02C         	call	_gps_hora	;wreg free
 20150  0034B4  0EFD               	movlw	253
 20151  0034B6  240A               	addwf	?_gps_hora^0,w,c
 20152  0034B8  6E38               	movwf	get_fattime@f_time^0,c
 20153  0034BA  0EFF               	movlw	255
 20154  0034BC  200B               	addwfc	(?_gps_hora+1)^0,w,c
 20155  0034BE  6E39               	movwf	(get_fattime@f_time+1)^0,c
 20156                           
 20157                           ;tff.c: 815: f_time.min = gps_minutos();
 20158  0034C0  ECED  F02C         	call	_gps_minutos	;wreg free
 20159  0034C4  C00A  F03A         	movff	?_gps_minutos,get_fattime@f_time+2
 20160  0034C8  C00B  F03B         	movff	?_gps_minutos+1,get_fattime@f_time+3
 20161                           
 20162                           ;tff.c: 816: f_time.seg = gps_segundos();
 20163  0034CC  ECDC  F02C         	call	_gps_segundos	;wreg free
 20164  0034D0  C00A  F03C         	movff	?_gps_segundos,get_fattime@f_time+4
 20165  0034D4  C00B  F03D         	movff	?_gps_segundos+1,get_fattime@f_time+5
 20166                           
 20167                           ;tff.c: 817: f_time.ano = gps_ano() + 2000;
 20168  0034D8  EC20  F02D         	call	_gps_ano	;wreg free
 20169  0034DC  0ED0               	movlw	208
 20170  0034DE  240A               	addwf	?_gps_ano^0,w,c
 20171  0034E0  6E40               	movwf	(get_fattime@f_time+8)^0,c
 20172  0034E2  0E07               	movlw	7
 20173  0034E4  200B               	addwfc	(?_gps_ano+1)^0,w,c
 20174  0034E6  6E41               	movwf	(get_fattime@f_time+9)^0,c
 20175                           
 20176                           ;tff.c: 818: f_time.mes = gps_mes();
 20177  0034E8  ECFE  F02C         	call	_gps_mes	;wreg free
 20178  0034EC  500A               	movf	?_gps_mes^0,w,c
 20179  0034EE  6E3F               	movwf	(get_fattime@f_time+7)^0,c
 20180                           
 20181                           ;tff.c: 819: f_time.dia = gps_dia();
 20182  0034F0  EC0F  F02D         	call	_gps_dia	;wreg free
 20183  0034F4  500A               	movf	?_gps_dia^0,w,c
 20184  0034F6  6E3E               	movwf	(get_fattime@f_time+6)^0,c
 20185                           
 20186                           ; BSR set to: 1
 20187                           ;tff.c: 821: return (DWORD)(f_time.ano - 60) << 25 |;tff.c: 822: (DWORD)(f_time.mes) << 
      +                          21 |;tff.c: 823: (DWORD)(f_time.dia) << 16 |;tff.c: 824: (DWORD)(f_time.hora) << 11 |;tf
      +                          f.c: 825: (DWORD)(f_time.min) << 5 |;tff.c: 826: (DWORD)(f_time.seg) >> 1;
 20188  0034F8  90D8               	bcf	status,0,c
 20189  0034FA  303D               	rrcf	(get_fattime@f_time+5)^0,w,c
 20190  0034FC  6E13               	movwf	(??_get_fattime+1)^0,c
 20191  0034FE  303C               	rrcf	(get_fattime@f_time+4)^0,w,c
 20192  003500  6E12               	movwf	??_get_fattime^0,c
 20193  003502  503A               	movf	(get_fattime@f_time+2)^0,w,c
 20194  003504  6E14               	movwf	(??_get_fattime+2)^0,c
 20195  003506  503B               	movf	(get_fattime@f_time+3)^0,w,c
 20196  003508  6E15               	movwf	(??_get_fattime+3)^0,c
 20197  00350A  6A16               	clrf	(??_get_fattime+4)^0,c
 20198  00350C  6A17               	clrf	(??_get_fattime+5)^0,c
 20199  00350E  0E05               	movlw	5
 20200  003510                     u13235:
 20201  003510  90D8               	bcf	status,0,c
 20202  003512  3614               	rlcf	(??_get_fattime+2)^0,f,c
 20203  003514  3615               	rlcf	(??_get_fattime+3)^0,f,c
 20204  003516  3616               	rlcf	(??_get_fattime+4)^0,f,c
 20205  003518  3617               	rlcf	(??_get_fattime+5)^0,f,c
 20206  00351A  2EE8               	decfsz	wreg,f,c
 20207  00351C  D7F9               	goto	u13235
 20208  00351E  5038               	movf	get_fattime@f_time^0,w,c
 20209  003520  6E18               	movwf	(??_get_fattime+6)^0,c
 20210  003522  5039               	movf	(get_fattime@f_time+1)^0,w,c
 20211  003524  6E19               	movwf	(??_get_fattime+7)^0,c
 20212  003526  6A1A               	clrf	(??_get_fattime+8)^0,c
 20213  003528  6A1B               	clrf	(??_get_fattime+9)^0,c
 20214  00352A  0E0B               	movlw	11
 20215  00352C                     u13245:
 20216  00352C  90D8               	bcf	status,0,c
 20217  00352E  3618               	rlcf	(??_get_fattime+6)^0,f,c
 20218  003530  3619               	rlcf	(??_get_fattime+7)^0,f,c
 20219  003532  361A               	rlcf	(??_get_fattime+8)^0,f,c
 20220  003534  361B               	rlcf	(??_get_fattime+9)^0,f,c
 20221  003536  2EE8               	decfsz	wreg,f,c
 20222  003538  D7F9               	goto	u13245
 20223  00353A  C03E  F01C         	movff	get_fattime@f_time+6,??_get_fattime+10
 20224  00353E  6A1D               	clrf	(??_get_fattime+11)^0,c
 20225  003540  6A1E               	clrf	(??_get_fattime+12)^0,c
 20226  003542  6A1F               	clrf	(??_get_fattime+13)^0,c
 20227  003544  C01D  F01F         	movff	??_get_fattime+11,??_get_fattime+13
 20228  003548  C01C  F01E         	movff	??_get_fattime+10,??_get_fattime+12
 20229  00354C  6A1D               	clrf	(??_get_fattime+11)^0,c
 20230  00354E  6A1C               	clrf	(??_get_fattime+10)^0,c
 20231  003550  C03F  F020         	movff	get_fattime@f_time+7,??_get_fattime+14
 20232  003554  6A21               	clrf	(??_get_fattime+15)^0,c
 20233  003556  6A22               	clrf	(??_get_fattime+16)^0,c
 20234  003558  6A23               	clrf	(??_get_fattime+17)^0,c
 20235  00355A  0E15               	movlw	21
 20236  00355C                     u13255:
 20237  00355C  90D8               	bcf	status,0,c
 20238  00355E  3620               	rlcf	(??_get_fattime+14)^0,f,c
 20239  003560  3621               	rlcf	(??_get_fattime+15)^0,f,c
 20240  003562  3622               	rlcf	(??_get_fattime+16)^0,f,c
 20241  003564  3623               	rlcf	(??_get_fattime+17)^0,f,c
 20242  003566  2EE8               	decfsz	wreg,f,c
 20243  003568  D7F9               	goto	u13255
 20244  00356A  0EC4               	movlw	196
 20245  00356C  2440               	addwf	(get_fattime@f_time+8)^0,w,c
 20246  00356E  6E24               	movwf	(??_get_fattime+18)^0,c
 20247  003570  0EFF               	movlw	255
 20248  003572  2041               	addwfc	(get_fattime@f_time+9)^0,w,c
 20249  003574  6E25               	movwf	(??_get_fattime+19)^0,c
 20250  003576  6A26               	clrf	(??_get_fattime+20)^0,c
 20251  003578  6A27               	clrf	(??_get_fattime+21)^0,c
 20252  00357A  0E19               	movlw	25
 20253  00357C                     u13265:
 20254  00357C  90D8               	bcf	status,0,c
 20255  00357E  3624               	rlcf	(??_get_fattime+18)^0,f,c
 20256  003580  3625               	rlcf	(??_get_fattime+19)^0,f,c
 20257  003582  3626               	rlcf	(??_get_fattime+20)^0,f,c
 20258  003584  3627               	rlcf	(??_get_fattime+21)^0,f,c
 20259  003586  2EE8               	decfsz	wreg,f,c
 20260  003588  D7F9               	goto	u13265
 20261  00358A  5020               	movf	(??_get_fattime+14)^0,w,c
 20262  00358C  1024               	iorwf	(??_get_fattime+18)^0,w,c
 20263  00358E  6E28               	movwf	(??_get_fattime+22)^0,c
 20264  003590  5021               	movf	(??_get_fattime+15)^0,w,c
 20265  003592  1025               	iorwf	(??_get_fattime+19)^0,w,c
 20266  003594  6E29               	movwf	(??_get_fattime+23)^0,c
 20267  003596  5022               	movf	(??_get_fattime+16)^0,w,c
 20268  003598  1026               	iorwf	(??_get_fattime+20)^0,w,c
 20269  00359A  6E2A               	movwf	(??_get_fattime+24)^0,c
 20270  00359C  5023               	movf	(??_get_fattime+17)^0,w,c
 20271  00359E  1027               	iorwf	(??_get_fattime+21)^0,w,c
 20272  0035A0  6E2B               	movwf	(??_get_fattime+25)^0,c
 20273  0035A2  501C               	movf	(??_get_fattime+10)^0,w,c
 20274  0035A4  1028               	iorwf	(??_get_fattime+22)^0,w,c
 20275  0035A6  6E2C               	movwf	(??_get_fattime+26)^0,c
 20276  0035A8  501D               	movf	(??_get_fattime+11)^0,w,c
 20277  0035AA  1029               	iorwf	(??_get_fattime+23)^0,w,c
 20278  0035AC  6E2D               	movwf	(??_get_fattime+27)^0,c
 20279  0035AE  501E               	movf	(??_get_fattime+12)^0,w,c
 20280  0035B0  102A               	iorwf	(??_get_fattime+24)^0,w,c
 20281  0035B2  6E2E               	movwf	(??_get_fattime+28)^0,c
 20282  0035B4  501F               	movf	(??_get_fattime+13)^0,w,c
 20283  0035B6  102B               	iorwf	(??_get_fattime+25)^0,w,c
 20284  0035B8  6E2F               	movwf	(??_get_fattime+29)^0,c
 20285  0035BA  5018               	movf	(??_get_fattime+6)^0,w,c
 20286  0035BC  102C               	iorwf	(??_get_fattime+26)^0,w,c
 20287  0035BE  6E30               	movwf	(??_get_fattime+30)^0,c
 20288  0035C0  5019               	movf	(??_get_fattime+7)^0,w,c
 20289  0035C2  102D               	iorwf	(??_get_fattime+27)^0,w,c
 20290  0035C4  6E31               	movwf	(??_get_fattime+31)^0,c
 20291  0035C6  501A               	movf	(??_get_fattime+8)^0,w,c
 20292  0035C8  102E               	iorwf	(??_get_fattime+28)^0,w,c
 20293  0035CA  6E32               	movwf	(??_get_fattime+32)^0,c
 20294  0035CC  501B               	movf	(??_get_fattime+9)^0,w,c
 20295  0035CE  102F               	iorwf	(??_get_fattime+29)^0,w,c
 20296  0035D0  6E33               	movwf	(??_get_fattime+33)^0,c
 20297  0035D2  5014               	movf	(??_get_fattime+2)^0,w,c
 20298  0035D4  1030               	iorwf	(??_get_fattime+30)^0,w,c
 20299  0035D6  6E34               	movwf	(??_get_fattime+34)^0,c
 20300  0035D8  5015               	movf	(??_get_fattime+3)^0,w,c
 20301  0035DA  1031               	iorwf	(??_get_fattime+31)^0,w,c
 20302  0035DC  6E35               	movwf	(??_get_fattime+35)^0,c
 20303  0035DE  5016               	movf	(??_get_fattime+4)^0,w,c
 20304  0035E0  1032               	iorwf	(??_get_fattime+32)^0,w,c
 20305  0035E2  6E36               	movwf	(??_get_fattime+36)^0,c
 20306  0035E4  5017               	movf	(??_get_fattime+5)^0,w,c
 20307  0035E6  1033               	iorwf	(??_get_fattime+33)^0,w,c
 20308  0035E8  6E37               	movwf	(??_get_fattime+37)^0,c
 20309  0035EA  5012               	movf	??_get_fattime^0,w,c
 20310  0035EC  1034               	iorwf	(??_get_fattime+34)^0,w,c
 20311  0035EE  6E0E               	movwf	?_get_fattime^0,c
 20312  0035F0  5013               	movf	(??_get_fattime+1)^0,w,c
 20313  0035F2  1035               	iorwf	(??_get_fattime+35)^0,w,c
 20314  0035F4  6E0F               	movwf	(?_get_fattime+1)^0,c
 20315  0035F6  0E00               	movlw	0
 20316  0035F8  1036               	iorwf	(??_get_fattime+36)^0,w,c
 20317  0035FA  6E10               	movwf	(?_get_fattime+2)^0,c
 20318  0035FC  0E00               	movlw	0
 20319  0035FE  1037               	iorwf	(??_get_fattime+37)^0,w,c
 20320  003600  6E11               	movwf	(?_get_fattime+3)^0,c
 20321                           
 20322                           ; BSR set to: 1
 20323  003602  0012               	return		;funcret
 20324  003604                     __end_of_get_fattime:
 20325                           	callstack 0
 20326                           
 20327 ;; *************** function _gps_segundos *****************
 20328 ;; Defined at:
 20329 ;;		line 530 in file "bibliotecas/GPS.c"
 20330 ;; Parameters:    Size  Location     Type
 20331 ;;		None
 20332 ;; Auto vars:     Size  Location     Type
 20333 ;;		None
 20334 ;; Return value:  Size  Location     Type
 20335 ;;                  2    9[COMRAM] unsigned int 
 20336 ;; Registers used:
 20337 ;;		wreg, status,2, status,0, prodl, prodh
 20338 ;; Tracked objects:
 20339 ;;		On entry : 3F/1
 20340 ;;		On exit  : 3F/1
 20341 ;;		Unchanged: 0/0
 20342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20343 ;;      Params:         2       0       0       0       0       0       0       0       0
 20344 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20345 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20346 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20347 ;;Total ram usage:        4 bytes
 20348 ;; Hardware stack levels used:    1
 20349 ;; Hardware stack levels required when called:    2
 20350 ;; This function calls:
 20351 ;;		Nothing
 20352 ;; This function is called by:
 20353 ;;		_get_fattime
 20354 ;; This function uses a non-reentrant model
 20355 ;;
 20356                           
 20357                           	psect	text117
 20358  0059B8                     __ptext117:
 20359                           	callstack 0
 20360  0059B8                     _gps_segundos:
 20361                           	callstack 22
 20362                           
 20363                           ; BSR set to: 1
 20364                           ;GPS.c: 532: return ((rawTime[4] - '0') * 10 + (rawTime[5] - '0'));
 20365                           
 20366                           ; BSR set to: 1
 20367                           ;incstack = 0
 20368  0059B8  51D5               	movf	(_rawTime+4)& (0+255),w,b
 20369  0059BA  0D0A               	mullw	10
 20370  0059BC  CFF3 F00C          	movff	prodl,??_gps_segundos
 20371  0059C0  CFF4 F00D          	movff	prodh,??_gps_segundos+1
 20372  0059C4  51D6               	movf	(_rawTime+5)& (0+255),w,b
 20373  0059C6  260C               	addwf	??_gps_segundos^0,f,c
 20374  0059C8  0E00               	movlw	0
 20375  0059CA  220D               	addwfc	(??_gps_segundos+1)^0,f,c
 20376  0059CC  0EF0               	movlw	240
 20377  0059CE  240C               	addwf	??_gps_segundos^0,w,c
 20378  0059D0  6E0A               	movwf	?_gps_segundos^0,c
 20379  0059D2  0EFD               	movlw	253
 20380  0059D4  200D               	addwfc	(??_gps_segundos+1)^0,w,c
 20381  0059D6  6E0B               	movwf	(?_gps_segundos+1)^0,c
 20382                           
 20383                           ; BSR set to: 1
 20384  0059D8  0012               	return		;funcret
 20385  0059DA                     __end_of_gps_segundos:
 20386                           	callstack 0
 20387                           
 20388 ;; *************** function _gps_minutos *****************
 20389 ;; Defined at:
 20390 ;;		line 541 in file "bibliotecas/GPS.c"
 20391 ;; Parameters:    Size  Location     Type
 20392 ;;		None
 20393 ;; Auto vars:     Size  Location     Type
 20394 ;;		None
 20395 ;; Return value:  Size  Location     Type
 20396 ;;                  2    9[COMRAM] unsigned int 
 20397 ;; Registers used:
 20398 ;;		wreg, status,2, status,0, prodl, prodh
 20399 ;; Tracked objects:
 20400 ;;		On entry : 3F/1
 20401 ;;		On exit  : 3F/1
 20402 ;;		Unchanged: 0/0
 20403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20404 ;;      Params:         2       0       0       0       0       0       0       0       0
 20405 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20406 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20407 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20408 ;;Total ram usage:        4 bytes
 20409 ;; Hardware stack levels used:    1
 20410 ;; Hardware stack levels required when called:    2
 20411 ;; This function calls:
 20412 ;;		Nothing
 20413 ;; This function is called by:
 20414 ;;		_get_fattime
 20415 ;; This function uses a non-reentrant model
 20416 ;;
 20417                           
 20418                           	psect	text118
 20419  0059DA                     __ptext118:
 20420                           	callstack 0
 20421  0059DA                     _gps_minutos:
 20422                           	callstack 22
 20423                           
 20424                           ; BSR set to: 1
 20425                           ;GPS.c: 543: return ((rawTime[2] - '0') * 10 + (rawTime[3] - '0'));
 20426                           
 20427                           ; BSR set to: 1
 20428                           ;incstack = 0
 20429  0059DA  51D3               	movf	(_rawTime+2)& (0+255),w,b
 20430  0059DC  0D0A               	mullw	10
 20431  0059DE  CFF3 F00C          	movff	prodl,??_gps_minutos
 20432  0059E2  CFF4 F00D          	movff	prodh,??_gps_minutos+1
 20433  0059E6  51D4               	movf	(_rawTime+3)& (0+255),w,b
 20434  0059E8  260C               	addwf	??_gps_minutos^0,f,c
 20435  0059EA  0E00               	movlw	0
 20436  0059EC  220D               	addwfc	(??_gps_minutos+1)^0,f,c
 20437  0059EE  0EF0               	movlw	240
 20438  0059F0  240C               	addwf	??_gps_minutos^0,w,c
 20439  0059F2  6E0A               	movwf	?_gps_minutos^0,c
 20440  0059F4  0EFD               	movlw	253
 20441  0059F6  200D               	addwfc	(??_gps_minutos+1)^0,w,c
 20442  0059F8  6E0B               	movwf	(?_gps_minutos+1)^0,c
 20443                           
 20444                           ; BSR set to: 1
 20445  0059FA  0012               	return		;funcret
 20446  0059FC                     __end_of_gps_minutos:
 20447                           	callstack 0
 20448                           
 20449 ;; *************** function _gps_mes *****************
 20450 ;; Defined at:
 20451 ;;		line 578 in file "bibliotecas/GPS.c"
 20452 ;; Parameters:    Size  Location     Type
 20453 ;;		None
 20454 ;; Auto vars:     Size  Location     Type
 20455 ;;		None
 20456 ;; Return value:  Size  Location     Type
 20457 ;;                  2    9[COMRAM] unsigned int 
 20458 ;; Registers used:
 20459 ;;		wreg, status,2, status,0, prodl, prodh
 20460 ;; Tracked objects:
 20461 ;;		On entry : 3F/1
 20462 ;;		On exit  : 3F/1
 20463 ;;		Unchanged: 0/0
 20464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20465 ;;      Params:         2       0       0       0       0       0       0       0       0
 20466 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20467 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20468 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20469 ;;Total ram usage:        4 bytes
 20470 ;; Hardware stack levels used:    1
 20471 ;; Hardware stack levels required when called:    2
 20472 ;; This function calls:
 20473 ;;		Nothing
 20474 ;; This function is called by:
 20475 ;;		_get_fattime
 20476 ;; This function uses a non-reentrant model
 20477 ;;
 20478                           
 20479                           	psect	text119
 20480  0059FC                     __ptext119:
 20481                           	callstack 0
 20482  0059FC                     _gps_mes:
 20483                           	callstack 22
 20484                           
 20485                           ; BSR set to: 1
 20486                           ;GPS.c: 580: return ((rawDate[2] - '0') * 10 + (rawDate[3] - '0'));
 20487                           
 20488                           ; BSR set to: 1
 20489                           ;incstack = 0
 20490  0059FC  51E6               	movf	(_rawDate+2)& (0+255),w,b
 20491  0059FE  0D0A               	mullw	10
 20492  005A00  CFF3 F00C          	movff	prodl,??_gps_mes
 20493  005A04  CFF4 F00D          	movff	prodh,??_gps_mes+1
 20494  005A08  51E7               	movf	(_rawDate+3)& (0+255),w,b
 20495  005A0A  260C               	addwf	??_gps_mes^0,f,c
 20496  005A0C  0E00               	movlw	0
 20497  005A0E  220D               	addwfc	(??_gps_mes+1)^0,f,c
 20498  005A10  0EF0               	movlw	240
 20499  005A12  240C               	addwf	??_gps_mes^0,w,c
 20500  005A14  6E0A               	movwf	?_gps_mes^0,c
 20501  005A16  0EFD               	movlw	253
 20502  005A18  200D               	addwfc	(??_gps_mes+1)^0,w,c
 20503  005A1A  6E0B               	movwf	(?_gps_mes+1)^0,c
 20504                           
 20505                           ; BSR set to: 1
 20506  005A1C  0012               	return		;funcret
 20507  005A1E                     __end_of_gps_mes:
 20508                           	callstack 0
 20509                           
 20510 ;; *************** function _gps_hora *****************
 20511 ;; Defined at:
 20512 ;;		line 553 in file "bibliotecas/GPS.c"
 20513 ;; Parameters:    Size  Location     Type
 20514 ;;		None
 20515 ;; Auto vars:     Size  Location     Type
 20516 ;;		None
 20517 ;; Return value:  Size  Location     Type
 20518 ;;                  2    9[COMRAM] unsigned int 
 20519 ;; Registers used:
 20520 ;;		wreg, status,2, status,0, prodl, prodh
 20521 ;; Tracked objects:
 20522 ;;		On entry : 3F/0
 20523 ;;		On exit  : 3F/1
 20524 ;;		Unchanged: 0/0
 20525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20526 ;;      Params:         2       0       0       0       0       0       0       0       0
 20527 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20528 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20529 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20530 ;;Total ram usage:        4 bytes
 20531 ;; Hardware stack levels used:    1
 20532 ;; Hardware stack levels required when called:    2
 20533 ;; This function calls:
 20534 ;;		Nothing
 20535 ;; This function is called by:
 20536 ;;		_get_fattime
 20537 ;; This function uses a non-reentrant model
 20538 ;;
 20539                           
 20540                           	psect	text120
 20541  005950                     __ptext120:
 20542                           	callstack 0
 20543  005950                     _gps_hora:
 20544                           	callstack 22
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;GPS.c: 555: return (((rawTime[0] - '0') * 10 + (rawTime[1] - '0')));
 20548                           
 20549                           ; BSR set to: 1
 20550                           ;incstack = 0
 20551  005950  0101               	movlb	1	; () banked
 20552  005952  51D1               	movf	_rawTime& (0+255),w,b
 20553  005954  0D0A               	mullw	10
 20554  005956  CFF3 F00C          	movff	prodl,??_gps_hora
 20555  00595A  CFF4 F00D          	movff	prodh,??_gps_hora+1
 20556  00595E  51D2               	movf	(_rawTime+1)& (0+255),w,b
 20557  005960  260C               	addwf	??_gps_hora^0,f,c
 20558  005962  0E00               	movlw	0
 20559  005964  220D               	addwfc	(??_gps_hora+1)^0,f,c
 20560  005966  0EF0               	movlw	240
 20561  005968  240C               	addwf	??_gps_hora^0,w,c
 20562  00596A  6E0A               	movwf	?_gps_hora^0,c
 20563  00596C  0EFD               	movlw	253
 20564  00596E  200D               	addwfc	(??_gps_hora+1)^0,w,c
 20565  005970  6E0B               	movwf	(?_gps_hora+1)^0,c
 20566                           
 20567                           ; BSR set to: 1
 20568  005972  0012               	return		;funcret
 20569  005974                     __end_of_gps_hora:
 20570                           	callstack 0
 20571                           
 20572 ;; *************** function _gps_dia *****************
 20573 ;; Defined at:
 20574 ;;		line 565 in file "bibliotecas/GPS.c"
 20575 ;; Parameters:    Size  Location     Type
 20576 ;;		None
 20577 ;; Auto vars:     Size  Location     Type
 20578 ;;		None
 20579 ;; Return value:  Size  Location     Type
 20580 ;;                  2    9[COMRAM] unsigned int 
 20581 ;; Registers used:
 20582 ;;		wreg, status,2, status,0, prodl, prodh
 20583 ;; Tracked objects:
 20584 ;;		On entry : 3F/1
 20585 ;;		On exit  : 3F/1
 20586 ;;		Unchanged: 0/0
 20587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20588 ;;      Params:         2       0       0       0       0       0       0       0       0
 20589 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20590 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20591 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20592 ;;Total ram usage:        4 bytes
 20593 ;; Hardware stack levels used:    1
 20594 ;; Hardware stack levels required when called:    2
 20595 ;; This function calls:
 20596 ;;		Nothing
 20597 ;; This function is called by:
 20598 ;;		_get_fattime
 20599 ;; This function uses a non-reentrant model
 20600 ;;
 20601                           
 20602                           	psect	text121
 20603  005A1E                     __ptext121:
 20604                           	callstack 0
 20605  005A1E                     _gps_dia:
 20606                           	callstack 22
 20607                           
 20608                           ; BSR set to: 1
 20609                           ;GPS.c: 567: return ((rawDate[0] - '0') * 10 + (rawDate[1] - '0'));
 20610                           
 20611                           ; BSR set to: 1
 20612                           ;incstack = 0
 20613  005A1E  51E4               	movf	_rawDate& (0+255),w,b
 20614  005A20  0D0A               	mullw	10
 20615  005A22  CFF3 F00C          	movff	prodl,??_gps_dia
 20616  005A26  CFF4 F00D          	movff	prodh,??_gps_dia+1
 20617  005A2A  51E5               	movf	(_rawDate+1)& (0+255),w,b
 20618  005A2C  260C               	addwf	??_gps_dia^0,f,c
 20619  005A2E  0E00               	movlw	0
 20620  005A30  220D               	addwfc	(??_gps_dia+1)^0,f,c
 20621  005A32  0EF0               	movlw	240
 20622  005A34  240C               	addwf	??_gps_dia^0,w,c
 20623  005A36  6E0A               	movwf	?_gps_dia^0,c
 20624  005A38  0EFD               	movlw	253
 20625  005A3A  200D               	addwfc	(??_gps_dia+1)^0,w,c
 20626  005A3C  6E0B               	movwf	(?_gps_dia+1)^0,c
 20627                           
 20628                           ; BSR set to: 1
 20629  005A3E  0012               	return		;funcret
 20630  005A40                     __end_of_gps_dia:
 20631                           	callstack 0
 20632                           
 20633 ;; *************** function _gps_ano *****************
 20634 ;; Defined at:
 20635 ;;		line 590 in file "bibliotecas/GPS.c"
 20636 ;; Parameters:    Size  Location     Type
 20637 ;;		None
 20638 ;; Auto vars:     Size  Location     Type
 20639 ;;		None
 20640 ;; Return value:  Size  Location     Type
 20641 ;;                  2    9[COMRAM] unsigned int 
 20642 ;; Registers used:
 20643 ;;		wreg, status,2, status,0, prodl, prodh
 20644 ;; Tracked objects:
 20645 ;;		On entry : 3F/1
 20646 ;;		On exit  : 3F/1
 20647 ;;		Unchanged: 0/0
 20648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20649 ;;      Params:         2       0       0       0       0       0       0       0       0
 20650 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20651 ;;      Temps:          2       0       0       0       0       0       0       0       0
 20652 ;;      Totals:         4       0       0       0       0       0       0       0       0
 20653 ;;Total ram usage:        4 bytes
 20654 ;; Hardware stack levels used:    1
 20655 ;; Hardware stack levels required when called:    2
 20656 ;; This function calls:
 20657 ;;		Nothing
 20658 ;; This function is called by:
 20659 ;;		_get_fattime
 20660 ;; This function uses a non-reentrant model
 20661 ;;
 20662                           
 20663                           	psect	text122
 20664  005A40                     __ptext122:
 20665                           	callstack 0
 20666  005A40                     _gps_ano:
 20667                           	callstack 22
 20668                           
 20669                           ; BSR set to: 1
 20670                           ;GPS.c: 592: return ((rawDate[4] - '0') * 10 + (rawDate[5] - '0'));
 20671                           
 20672                           ; BSR set to: 1
 20673                           ;incstack = 0
 20674  005A40  51E8               	movf	(_rawDate+4)& (0+255),w,b
 20675  005A42  0D0A               	mullw	10
 20676  005A44  CFF3 F00C          	movff	prodl,??_gps_ano
 20677  005A48  CFF4 F00D          	movff	prodh,??_gps_ano+1
 20678  005A4C  51E9               	movf	(_rawDate+5)& (0+255),w,b
 20679  005A4E  260C               	addwf	??_gps_ano^0,f,c
 20680  005A50  0E00               	movlw	0
 20681  005A52  220D               	addwfc	(??_gps_ano+1)^0,f,c
 20682  005A54  0EF0               	movlw	240
 20683  005A56  240C               	addwf	??_gps_ano^0,w,c
 20684  005A58  6E0A               	movwf	?_gps_ano^0,c
 20685  005A5A  0EFD               	movlw	253
 20686  005A5C  200D               	addwfc	(??_gps_ano+1)^0,w,c
 20687  005A5E  6E0B               	movwf	(?_gps_ano+1)^0,c
 20688                           
 20689                           ; BSR set to: 1
 20690  005A60  0012               	return		;funcret
 20691  005A62                     __end_of_gps_ano:
 20692                           	callstack 0
 20693                           
 20694 ;; *************** function _data_nome *****************
 20695 ;; Defined at:
 20696 ;;		line 396 in file "bibliotecas/SDCard.c"
 20697 ;; Parameters:    Size  Location     Type
 20698 ;;  p_buff          2    9[COMRAM] PTR unsigned char 
 20699 ;;		 -> data(6), 
 20700 ;; Auto vars:     Size  Location     Type
 20701 ;;  i               1   11[COMRAM] unsigned char 
 20702 ;; Return value:  Size  Location     Type
 20703 ;;                  1    wreg      void 
 20704 ;; Registers used:
 20705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20706 ;; Tracked objects:
 20707 ;;		On entry : 3F/1
 20708 ;;		On exit  : 3F/1
 20709 ;;		Unchanged: 3F/0
 20710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20711 ;;      Params:         2       0       0       0       0       0       0       0       0
 20712 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20713 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20714 ;;      Totals:         3       0       0       0       0       0       0       0       0
 20715 ;;Total ram usage:        3 bytes
 20716 ;; Hardware stack levels used:    1
 20717 ;; Hardware stack levels required when called:    2
 20718 ;; This function calls:
 20719 ;;		Nothing
 20720 ;; This function is called by:
 20721 ;;		_escrita_sdcard
 20722 ;; This function uses a non-reentrant model
 20723 ;;
 20724                           
 20725                           	psect	text123
 20726  0058B2                     __ptext123:
 20727                           	callstack 0
 20728  0058B2                     _data_nome:
 20729                           	callstack 24
 20730                           
 20731                           ; BSR set to: 1
 20732                           ;SDCard.c: 398: unsigned char i;;SDCard.c: 399: for(i=0; i<4;i++)
 20733                           
 20734                           ; BSR set to: 1
 20735                           ;incstack = 0
 20736  0058B2  0E00               	movlw	0
 20737  0058B4  6E0C               	movwf	data_nome@i^0,c
 20738  0058B6                     l12366:
 20739                           
 20740                           ; BSR set to: 1
 20741                           ;SDCard.c: 400: {;SDCard.c: 401: filename[i] = *p_buff;
 20742  0058B6  C00A  FFD9         	movff	data_nome@p_buff,fsr2l
 20743  0058BA  C00B  FFDA         	movff	data_nome@p_buff+1,fsr2h
 20744  0058BE  0E56               	movlw	low _filename
 20745  0058C0  240C               	addwf	data_nome@i^0,w,c
 20746  0058C2  6EE1               	movwf	fsr1l,c
 20747  0058C4  6AE2               	clrf	fsr1h,c
 20748  0058C6  0E02               	movlw	high _filename
 20749  0058C8  22E2               	addwfc	fsr1h,f,c
 20750  0058CA  CFDF FFE7          	movff	indf2,indf1
 20751                           
 20752                           ; BSR set to: 1
 20753                           ;SDCard.c: 402: p_buff++;
 20754  0058CE  4A0A               	infsnz	data_nome@p_buff^0,f,c
 20755  0058D0  2A0B               	incf	(data_nome@p_buff+1)^0,f,c
 20756                           
 20757                           ; BSR set to: 1
 20758  0058D2  2A0C               	incf	data_nome@i^0,f,c
 20759                           
 20760                           ; BSR set to: 1
 20761  0058D4  0E03               	movlw	3
 20762  0058D6  640C               	cpfsgt	data_nome@i^0,c
 20763  0058D8  D7EE               	goto	l12366
 20764  0058DA  0012               	return	
 20765  0058DC                     __end_of_data_nome:
 20766                           	callstack 0
 20767                           
 20768 ;; *************** function _desliga_uart *****************
 20769 ;; Defined at:
 20770 ;;		line 223 in file "bibliotecas/uart.c"
 20771 ;; Parameters:    Size  Location     Type
 20772 ;;		None
 20773 ;; Auto vars:     Size  Location     Type
 20774 ;;		None
 20775 ;; Return value:  Size  Location     Type
 20776 ;;                  1    wreg      void 
 20777 ;; Registers used:
 20778 ;;		wreg, status,2
 20779 ;; Tracked objects:
 20780 ;;		On entry : 0/1
 20781 ;;		On exit  : 0/0
 20782 ;;		Unchanged: 0/0
 20783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20784 ;;      Params:         0       0       0       0       0       0       0       0       0
 20785 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20786 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20787 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20788 ;;Total ram usage:        0 bytes
 20789 ;; Hardware stack levels used:    1
 20790 ;; Hardware stack levels required when called:    2
 20791 ;; This function calls:
 20792 ;;		Nothing
 20793 ;; This function is called by:
 20794 ;;		_grava_sd
 20795 ;; This function uses a non-reentrant model
 20796 ;;
 20797                           
 20798                           	psect	text124
 20799  005B76                     __ptext124:
 20800                           	callstack 0
 20801  005B76                     _desliga_uart:
 20802                           	callstack 25
 20803                           
 20804                           ;uart.c: 226: TRISCbits.RC6 = 1;
 20805                           
 20806                           ; BSR set to: 1
 20807                           ;incstack = 0
 20808  005B76  8C94               	bsf	148,6,c	;volatile
 20809                           
 20810                           ;uart.c: 227: TRISCbits.RC7 = 1;
 20811  005B78  8E94               	bsf	148,7,c	;volatile
 20812                           
 20813                           ;uart.c: 230: TXSTA = 0x00;
 20814  005B7A  0E00               	movlw	0
 20815  005B7C  6EAC               	movwf	172,c	;volatile
 20816                           
 20817                           ;uart.c: 232: RCSTA = 0x00;
 20818  005B7E  0E00               	movlw	0
 20819  005B80  6EAB               	movwf	171,c	;volatile
 20820                           
 20821                           ;uart.c: 233: RCREG = 0x00;
 20822  005B82  0E00               	movlw	0
 20823  005B84  6EAE               	movwf	174,c	;volatile
 20824  005B86  0012               	return		;funcret
 20825  005B88                     __end_of_desliga_uart:
 20826                           	callstack 0
 20827                           
 20828 ;; *************** function _desliga_SPI *****************
 20829 ;; Defined at:
 20830 ;;		line 75 in file "bibliotecas/SPI.c"
 20831 ;; Parameters:    Size  Location     Type
 20832 ;;		None
 20833 ;; Auto vars:     Size  Location     Type
 20834 ;;		None
 20835 ;; Return value:  Size  Location     Type
 20836 ;;                  1    wreg      void 
 20837 ;; Registers used:
 20838 ;;		wreg, status,2
 20839 ;; Tracked objects:
 20840 ;;		On entry : 0/1
 20841 ;;		On exit  : 0/0
 20842 ;;		Unchanged: 0/0
 20843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20844 ;;      Params:         0       0       0       0       0       0       0       0       0
 20845 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20847 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20848 ;;Total ram usage:        0 bytes
 20849 ;; Hardware stack levels used:    1
 20850 ;; Hardware stack levels required when called:    2
 20851 ;; This function calls:
 20852 ;;		Nothing
 20853 ;; This function is called by:
 20854 ;;		_grava_sd
 20855 ;; This function uses a non-reentrant model
 20856 ;;
 20857                           
 20858                           	psect	text125
 20859  005BBA                     __ptext125:
 20860                           	callstack 0
 20861  005BBA                     _desliga_SPI:
 20862                           	callstack 25
 20863                           
 20864                           ;SPI.c: 77: SSPSTAT = 0x00;
 20865                           
 20866                           ;incstack = 0
 20867  005BBA  0E00               	movlw	0
 20868  005BBC  6EC7               	movwf	199,c	;volatile
 20869                           
 20870                           ;SPI.c: 78: SSPCON1 = 0x00;
 20871  005BBE  0E00               	movlw	0
 20872  005BC0  6EC6               	movwf	198,c	;volatile
 20873                           
 20874                           ;SPI.c: 79: SSPCON1bits.SSPEN = 0;
 20875  005BC2  9AC6               	bcf	198,5,c	;volatile
 20876                           
 20877                           ;SPI.c: 80: SSPBUF = 0x00;
 20878  005BC4  0E00               	movlw	0
 20879  005BC6  6EC9               	movwf	201,c	;volatile
 20880  005BC8  0012               	return		;funcret
 20881  005BCA                     __end_of_desliga_SPI:
 20882                           	callstack 0
 20883                           
 20884 ;; *************** function _dados_gps_to_sd *****************
 20885 ;; Defined at:
 20886 ;;		line 702 in file "bibliotecas/GPS.c"
 20887 ;; Parameters:    Size  Location     Type
 20888 ;;		None
 20889 ;; Auto vars:     Size  Location     Type
 20890 ;;		None
 20891 ;; Return value:  Size  Location     Type
 20892 ;;                  1    wreg      void 
 20893 ;; Registers used:
 20894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20895 ;; Tracked objects:
 20896 ;;		On entry : 0/1
 20897 ;;		On exit  : 0/0
 20898 ;;		Unchanged: 0/0
 20899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20900 ;;      Params:         0       0       0       0       0       0       0       0       0
 20901 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20902 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20903 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20904 ;;Total ram usage:        0 bytes
 20905 ;; Hardware stack levels used:    1
 20906 ;; Hardware stack levels required when called:    4
 20907 ;; This function calls:
 20908 ;;		_monta_sd
 20909 ;; This function is called by:
 20910 ;;		_disparo_gravacao
 20911 ;; This function uses a non-reentrant model
 20912 ;;
 20913                           
 20914                           	psect	text126
 20915  004DEC                     __ptext126:
 20916                           	callstack 0
 20917  004DEC                     _dados_gps_to_sd:
 20918                           	callstack 24
 20919                           
 20920                           ;GPS.c: 705: monta_sd(0, rawTime);
 20921                           
 20922                           ;incstack = 0
 20923  004DEC  0ED1               	movlw	low _rawTime
 20924  004DEE  6E10               	movwf	monta_sd@dado^0,c
 20925  004DF0  0E01               	movlw	high _rawTime
 20926  004DF2  6E11               	movwf	(monta_sd@dado+1)^0,c
 20927  004DF4  0E00               	movlw	0
 20928  004DF6  EC03  F00B         	call	_monta_sd
 20929                           
 20930                           ;GPS.c: 706: monta_sd(1, rawDate);
 20931  004DFA  0EE4               	movlw	low _rawDate
 20932  004DFC  6E10               	movwf	monta_sd@dado^0,c
 20933  004DFE  0E01               	movlw	high _rawDate
 20934  004E00  6E11               	movwf	(monta_sd@dado+1)^0,c
 20935  004E02  0E01               	movlw	1
 20936  004E04  EC03  F00B         	call	_monta_sd
 20937                           
 20938                           ;GPS.c: 707: monta_sd(2, rawLatitude);
 20939  004E08  0EBE               	movlw	low _rawLatitude
 20940  004E0A  6E10               	movwf	monta_sd@dado^0,c
 20941  004E0C  0E01               	movlw	high _rawLatitude
 20942  004E0E  6E11               	movwf	(monta_sd@dado+1)^0,c
 20943  004E10  0E02               	movlw	2
 20944  004E12  EC03  F00B         	call	_monta_sd
 20945                           
 20946                           ;GPS.c: 708: monta_sd(3, rawLongitude);
 20947  004E16  0EA5               	movlw	low _rawLongitude
 20948  004E18  6E10               	movwf	monta_sd@dado^0,c
 20949  004E1A  0E01               	movlw	high _rawLongitude
 20950  004E1C  6E11               	movwf	(monta_sd@dado+1)^0,c
 20951  004E1E  0E03               	movlw	3
 20952  004E20  EC03  F00B         	call	_monta_sd
 20953                           
 20954                           ;GPS.c: 709: monta_sd(5, rawTime);
 20955  004E24  0ED1               	movlw	low _rawTime
 20956  004E26  6E10               	movwf	monta_sd@dado^0,c
 20957  004E28  0E01               	movlw	high _rawTime
 20958  004E2A  6E11               	movwf	(monta_sd@dado+1)^0,c
 20959  004E2C  0E05               	movlw	5
 20960  004E2E  EC03  F00B         	call	_monta_sd
 20961                           
 20962                           ;GPS.c: 710: monta_sd(6, rawDate);
 20963  004E32  0EE4               	movlw	low _rawDate
 20964  004E34  6E10               	movwf	monta_sd@dado^0,c
 20965  004E36  0E01               	movlw	high _rawDate
 20966  004E38  6E11               	movwf	(monta_sd@dado+1)^0,c
 20967  004E3A  0E06               	movlw	6
 20968  004E3C  EC03  F00B         	call	_monta_sd
 20969                           
 20970                           ;GPS.c: 711: monta_sd(7, rawSpeed);
 20971  004E40  0E6A               	movlw	low _rawSpeed
 20972  004E42  6E10               	movwf	monta_sd@dado^0,c
 20973  004E44  0E02               	movlw	high _rawSpeed
 20974  004E46  6E11               	movwf	(monta_sd@dado+1)^0,c
 20975  004E48  0E07               	movlw	7
 20976  004E4A  EC03  F00B         	call	_monta_sd
 20977  004E4E  0012               	return		;funcret
 20978  004E50                     __end_of_dados_gps_to_sd:
 20979                           	callstack 0
 20980                           
 20981 ;; *************** function _monta_sd *****************
 20982 ;; Defined at:
 20983 ;;		line 305 in file "bibliotecas/SDCard.c"
 20984 ;; Parameters:    Size  Location     Type
 20985 ;;  index           1    wreg     unsigned char 
 20986 ;;  dado            2   15[COMRAM] PTR unsigned char 
 20987 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 20988 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 20989 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 20990 ;; Auto vars:     Size  Location     Type
 20991 ;;  index           1   18[COMRAM] unsigned char 
 20992 ;;  i               1   19[COMRAM] unsigned char 
 20993 ;;  size            1    0        unsigned char 
 20994 ;; Return value:  Size  Location     Type
 20995 ;;                  1    wreg      void 
 20996 ;; Registers used:
 20997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20998 ;; Tracked objects:
 20999 ;;		On entry : 0/2
 21000 ;;		On exit  : 0/0
 21001 ;;		Unchanged: 0/0
 21002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21003 ;;      Params:         2       0       0       0       0       0       0       0       0
 21004 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21005 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21006 ;;      Totals:         5       0       0       0       0       0       0       0       0
 21007 ;;Total ram usage:        5 bytes
 21008 ;; Hardware stack levels used:    1
 21009 ;; Hardware stack levels required when called:    3
 21010 ;; This function calls:
 21011 ;;		_strlen
 21012 ;; This function is called by:
 21013 ;;		_dados_gps_to_sd
 21014 ;;		_verifica_fence
 21015 ;;		_disparo_gravacao
 21016 ;; This function uses a non-reentrant model
 21017 ;;
 21018                           
 21019                           	psect	text127
 21020  001606                     __ptext127:
 21021                           	callstack 0
 21022  001606                     _monta_sd:
 21023                           	callstack 24
 21024                           
 21025                           ;incstack = 0
 21026                           ;monta_sd@index stored from wreg
 21027  001606  6E13               	movwf	monta_sd@index^0,c
 21028  001608  C010  F00A         	movff	monta_sd@dado,strlen@s
 21029  00160C  C011  F00B         	movff	monta_sd@dado+1,strlen@s+1
 21030  001610  EC71  F02A         	call	_strlen	;wreg free
 21031                           
 21032                           ;SDCard.c: 309: switch(index)
 21033  001614  D165               	goto	l12896
 21034  001616                     l12782:
 21035                           
 21036                           ;SDCard.c: 312: for(i=0; i<7;i++)
 21037  001616  0E00               	movlw	0
 21038  001618  6E14               	movwf	monta_sd@i^0,c
 21039  00161A                     l12788:
 21040                           
 21041                           ;SDCard.c: 313: {;SDCard.c: 314: if(*dado != '\0')
 21042  00161A  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21043  00161E  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21044  001622  6AF8               	clrf	tblptru,c
 21045  001624  0E07               	movlw	(high __ramtop+-1)
 21046  001626  64F7               	cpfsgt	tblptrh,c
 21047  001628  D003               	bra	u15217
 21048  00162A  0008               	tblrd		*
 21049  00162C  50F5               	movf	tablat,w,c
 21050  00162E  D005               	bra	u15210
 21051  001630                     u15217:
 21052  001630  CFF6 FFE1          	movff	tblptrl,fsr1l
 21053  001634  CFF7 FFE2          	movff	tblptrh,fsr1h
 21054  001638  50E7               	movf	indf1,w,c
 21055  00163A                     u15210:
 21056  00163A  0900               	iorlw	0
 21057  00163C  B4D8               	btfsc	status,2,c
 21058  00163E  D017               	goto	l12792
 21059                           
 21060                           ;SDCard.c: 315: {;SDCard.c: 316: hora[i] = *dado;
 21061  001640  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21062  001644  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21063  001648  6AF8               	clrf	tblptru,c
 21064  00164A  0ECA               	movlw	low _hora
 21065  00164C  2414               	addwf	monta_sd@i^0,w,c
 21066  00164E  6ED9               	movwf	fsr2l,c
 21067  001650  6ADA               	clrf	fsr2h,c
 21068  001652  0E01               	movlw	high _hora
 21069  001654  22DA               	addwfc	fsr2h,f,c
 21070  001656  0E07               	movlw	(high __ramtop+-1)
 21071  001658  64F7               	cpfsgt	tblptrh,c
 21072  00165A  D003               	bra	u15237
 21073  00165C  0008               	tblrd		*
 21074  00165E  50F5               	movf	tablat,w,c
 21075  001660  D005               	bra	u15230
 21076  001662                     u15237:
 21077  001662  CFF6 FFE1          	movff	tblptrl,fsr1l
 21078  001666  CFF7 FFE2          	movff	tblptrh,fsr1h
 21079  00166A  50E7               	movf	indf1,w,c
 21080  00166C                     u15230:
 21081  00166C  6EDF               	movwf	indf2,c
 21082  00166E                     l12792:
 21083                           
 21084                           ;SDCard.c: 317: };SDCard.c: 318: dado++;
 21085  00166E  4A10               	infsnz	monta_sd@dado^0,f,c
 21086  001670  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21087  001672  2A14               	incf	monta_sd@i^0,f,c
 21088  001674  0E06               	movlw	6
 21089  001676  6414               	cpfsgt	monta_sd@i^0,c
 21090  001678  D7D0               	goto	l12788
 21091  00167A  0012               	return	
 21092  00167C                     l12798:
 21093                           
 21094                           ;SDCard.c: 323: for(i=0; i<6;i++)
 21095  00167C  0E00               	movlw	0
 21096  00167E  6E14               	movwf	monta_sd@i^0,c
 21097  001680                     l12804:
 21098                           
 21099                           ;SDCard.c: 324: {;SDCard.c: 325: if(*dado != '\0')
 21100  001680  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21101  001684  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21102  001688  6AF8               	clrf	tblptru,c
 21103  00168A  0E07               	movlw	(high __ramtop+-1)
 21104  00168C  64F7               	cpfsgt	tblptrh,c
 21105  00168E  D003               	bra	u15257
 21106  001690  0008               	tblrd		*
 21107  001692  50F5               	movf	tablat,w,c
 21108  001694  D005               	bra	u15250
 21109  001696                     u15257:
 21110  001696  CFF6 FFE1          	movff	tblptrl,fsr1l
 21111  00169A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21112  00169E  50E7               	movf	indf1,w,c
 21113  0016A0                     u15250:
 21114  0016A0  0900               	iorlw	0
 21115  0016A2  B4D8               	btfsc	status,2,c
 21116  0016A4  D017               	goto	l12808
 21117                           
 21118                           ;SDCard.c: 326: {;SDCard.c: 327: data[i] = *dado;
 21119  0016A6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21120  0016AA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21121  0016AE  6AF8               	clrf	tblptru,c
 21122  0016B0  0ED8               	movlw	low _data
 21123  0016B2  2414               	addwf	monta_sd@i^0,w,c
 21124  0016B4  6ED9               	movwf	fsr2l,c
 21125  0016B6  6ADA               	clrf	fsr2h,c
 21126  0016B8  0E01               	movlw	high _data
 21127  0016BA  22DA               	addwfc	fsr2h,f,c
 21128  0016BC  0E07               	movlw	(high __ramtop+-1)
 21129  0016BE  64F7               	cpfsgt	tblptrh,c
 21130  0016C0  D003               	bra	u15277
 21131  0016C2  0008               	tblrd		*
 21132  0016C4  50F5               	movf	tablat,w,c
 21133  0016C6  D005               	bra	u15270
 21134  0016C8                     u15277:
 21135  0016C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 21136  0016CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 21137  0016D0  50E7               	movf	indf1,w,c
 21138  0016D2                     u15270:
 21139  0016D2  6EDF               	movwf	indf2,c
 21140  0016D4                     l12808:
 21141                           
 21142                           ;SDCard.c: 328: };SDCard.c: 329: dado++;
 21143  0016D4  4A10               	infsnz	monta_sd@dado^0,f,c
 21144  0016D6  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21145  0016D8  2A14               	incf	monta_sd@i^0,f,c
 21146  0016DA  0E05               	movlw	5
 21147  0016DC  6414               	cpfsgt	monta_sd@i^0,c
 21148  0016DE  D7D0               	goto	l12804
 21149  0016E0  0012               	return	
 21150  0016E2                     l12814:
 21151                           
 21152                           ;SDCard.c: 334: for(i=0; i<11;i++)
 21153  0016E2  0E00               	movlw	0
 21154  0016E4  6E14               	movwf	monta_sd@i^0,c
 21155  0016E6                     l12820:
 21156                           
 21157                           ;SDCard.c: 335: {;SDCard.c: 336: if(*dado != '\0')
 21158  0016E6  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21159  0016EA  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21160  0016EE  6AF8               	clrf	tblptru,c
 21161  0016F0  0E07               	movlw	(high __ramtop+-1)
 21162  0016F2  64F7               	cpfsgt	tblptrh,c
 21163  0016F4  D003               	bra	u15297
 21164  0016F6  0008               	tblrd		*
 21165  0016F8  50F5               	movf	tablat,w,c
 21166  0016FA  D005               	bra	u15290
 21167  0016FC                     u15297:
 21168  0016FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 21169  001700  CFF7 FFE2          	movff	tblptrh,fsr1h
 21170  001704  50E7               	movf	indf1,w,c
 21171  001706                     u15290:
 21172  001706  0900               	iorlw	0
 21173  001708  B4D8               	btfsc	status,2,c
 21174  00170A  D017               	goto	l12824
 21175                           
 21176                           ;SDCard.c: 337: {;SDCard.c: 338: lt[i] = *dado;
 21177  00170C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21178  001710  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21179  001714  6AF8               	clrf	tblptru,c
 21180  001716  0EB2               	movlw	low _lt
 21181  001718  2414               	addwf	monta_sd@i^0,w,c
 21182  00171A  6ED9               	movwf	fsr2l,c
 21183  00171C  6ADA               	clrf	fsr2h,c
 21184  00171E  0E01               	movlw	high _lt
 21185  001720  22DA               	addwfc	fsr2h,f,c
 21186  001722  0E07               	movlw	(high __ramtop+-1)
 21187  001724  64F7               	cpfsgt	tblptrh,c
 21188  001726  D003               	bra	u15317
 21189  001728  0008               	tblrd		*
 21190  00172A  50F5               	movf	tablat,w,c
 21191  00172C  D005               	bra	u15310
 21192  00172E                     u15317:
 21193  00172E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21194  001732  CFF7 FFE2          	movff	tblptrh,fsr1h
 21195  001736  50E7               	movf	indf1,w,c
 21196  001738                     u15310:
 21197  001738  6EDF               	movwf	indf2,c
 21198  00173A                     l12824:
 21199                           
 21200                           ;SDCard.c: 339: };SDCard.c: 340: dado++;
 21201  00173A  4A10               	infsnz	monta_sd@dado^0,f,c
 21202  00173C  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21203  00173E  2A14               	incf	monta_sd@i^0,f,c
 21204  001740  0E0A               	movlw	10
 21205  001742  6414               	cpfsgt	monta_sd@i^0,c
 21206  001744  D7D0               	goto	l12820
 21207  001746  0012               	return	
 21208  001748                     l12830:
 21209                           
 21210                           ;SDCard.c: 345: for(i=0; i<12;i++)
 21211  001748  0E00               	movlw	0
 21212  00174A  6E14               	movwf	monta_sd@i^0,c
 21213  00174C                     l12836:
 21214                           
 21215                           ;SDCard.c: 346: {;SDCard.c: 347: if(*dado != '\0')
 21216  00174C  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21217  001750  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21218  001754  6AF8               	clrf	tblptru,c
 21219  001756  0E07               	movlw	(high __ramtop+-1)
 21220  001758  64F7               	cpfsgt	tblptrh,c
 21221  00175A  D003               	bra	u15337
 21222  00175C  0008               	tblrd		*
 21223  00175E  50F5               	movf	tablat,w,c
 21224  001760  D005               	bra	u15330
 21225  001762                     u15337:
 21226  001762  CFF6 FFE1          	movff	tblptrl,fsr1l
 21227  001766  CFF7 FFE2          	movff	tblptrh,fsr1h
 21228  00176A  50E7               	movf	indf1,w,c
 21229  00176C                     u15330:
 21230  00176C  0900               	iorlw	0
 21231  00176E  B4D8               	btfsc	status,2,c
 21232  001770  D017               	goto	l12840
 21233                           
 21234                           ;SDCard.c: 348: {;SDCard.c: 349: lo[i] = *dado;
 21235  001772  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21236  001776  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21237  00177A  6AF8               	clrf	tblptru,c
 21238  00177C  0E98               	movlw	low _lo
 21239  00177E  2414               	addwf	monta_sd@i^0,w,c
 21240  001780  6ED9               	movwf	fsr2l,c
 21241  001782  6ADA               	clrf	fsr2h,c
 21242  001784  0E01               	movlw	high _lo
 21243  001786  22DA               	addwfc	fsr2h,f,c
 21244  001788  0E07               	movlw	(high __ramtop+-1)
 21245  00178A  64F7               	cpfsgt	tblptrh,c
 21246  00178C  D003               	bra	u15357
 21247  00178E  0008               	tblrd		*
 21248  001790  50F5               	movf	tablat,w,c
 21249  001792  D005               	bra	u15350
 21250  001794                     u15357:
 21251  001794  CFF6 FFE1          	movff	tblptrl,fsr1l
 21252  001798  CFF7 FFE2          	movff	tblptrh,fsr1h
 21253  00179C  50E7               	movf	indf1,w,c
 21254  00179E                     u15350:
 21255  00179E  6EDF               	movwf	indf2,c
 21256  0017A0                     l12840:
 21257                           
 21258                           ;SDCard.c: 350: };SDCard.c: 351: dado++;
 21259  0017A0  4A10               	infsnz	monta_sd@dado^0,f,c
 21260  0017A2  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21261  0017A4  2A14               	incf	monta_sd@i^0,f,c
 21262  0017A6  0E0B               	movlw	11
 21263  0017A8  6414               	cpfsgt	monta_sd@i^0,c
 21264  0017AA  D7D0               	goto	l12836
 21265  0017AC  0012               	return	
 21266  0017AE                     l12846:
 21267                           
 21268                           ;SDCard.c: 357: fence = *dado;
 21269  0017AE  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21270  0017B2  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21271  0017B6  6AF8               	clrf	tblptru,c
 21272  0017B8  0E07               	movlw	(high __ramtop+-1)
 21273  0017BA  64F7               	cpfsgt	tblptrh,c
 21274  0017BC  D003               	bra	u15377
 21275  0017BE  0008               	tblrd		*
 21276  0017C0  50F5               	movf	tablat,w,c
 21277  0017C2  D005               	bra	u15370
 21278  0017C4                     u15377:
 21279  0017C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 21280  0017C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 21281  0017CC  50E7               	movf	indf1,w,c
 21282  0017CE                     u15370:
 21283  0017CE  0100               	movlb	0	; () banked
 21284  0017D0  6FF5               	movwf	_fence& (0+255),b
 21285                           
 21286                           ;SDCard.c: 358: break;
 21287  0017D2  0012               	return	
 21288  0017D4                     l12848:
 21289                           
 21290                           ;SDCard.c: 361: for(i=0; i<4;i++)
 21291  0017D4  0E00               	movlw	0
 21292  0017D6  6E14               	movwf	monta_sd@i^0,c
 21293  0017D8                     l12854:
 21294                           
 21295                           ;SDCard.c: 362: {;SDCard.c: 363: string_dado.hora_name[i] = *dado;
 21296  0017D8  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21297  0017DC  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21298  0017E0  6AF8               	clrf	tblptru,c
 21299  0017E2  0E14               	movlw	low (_string_dado+20)
 21300  0017E4  2414               	addwf	monta_sd@i^0,w,c
 21301  0017E6  6ED9               	movwf	fsr2l,c
 21302  0017E8  6ADA               	clrf	fsr2h,c
 21303  0017EA  0E02               	movlw	high (_string_dado+20)
 21304  0017EC  22DA               	addwfc	fsr2h,f,c
 21305  0017EE  0E07               	movlw	(high __ramtop+-1)
 21306  0017F0  64F7               	cpfsgt	tblptrh,c
 21307  0017F2  D003               	bra	u15387
 21308  0017F4  0008               	tblrd		*
 21309  0017F6  50F5               	movf	tablat,w,c
 21310  0017F8  D005               	bra	u15380
 21311  0017FA                     u15387:
 21312  0017FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 21313  0017FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 21314  001802  50E7               	movf	indf1,w,c
 21315  001804                     u15380:
 21316  001804  6EDF               	movwf	indf2,c
 21317                           
 21318                           ;SDCard.c: 364: dado++;
 21319  001806  4A10               	infsnz	monta_sd@dado^0,f,c
 21320  001808  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21321  00180A  2A14               	incf	monta_sd@i^0,f,c
 21322  00180C  0E03               	movlw	3
 21323  00180E  6414               	cpfsgt	monta_sd@i^0,c
 21324  001810  D7E3               	goto	l12854
 21325  001812  0012               	return	
 21326  001814                     l12862:
 21327                           
 21328                           ;SDCard.c: 370: for(i=0; i<4;i++)
 21329  001814  0E00               	movlw	0
 21330  001816  6E14               	movwf	monta_sd@i^0,c
 21331  001818                     l12868:
 21332                           
 21333                           ;SDCard.c: 371: {;SDCard.c: 372: string_dado.data_name[i] = *dado;
 21334  001818  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21335  00181C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21336  001820  6AF8               	clrf	tblptru,c
 21337  001822  0E12               	movlw	low (_string_dado+18)
 21338  001824  2414               	addwf	monta_sd@i^0,w,c
 21339  001826  6ED9               	movwf	fsr2l,c
 21340  001828  6ADA               	clrf	fsr2h,c
 21341  00182A  0E02               	movlw	high (_string_dado+18)
 21342  00182C  22DA               	addwfc	fsr2h,f,c
 21343  00182E  0E07               	movlw	(high __ramtop+-1)
 21344  001830  64F7               	cpfsgt	tblptrh,c
 21345  001832  D003               	bra	u15407
 21346  001834  0008               	tblrd		*
 21347  001836  50F5               	movf	tablat,w,c
 21348  001838  D005               	bra	u15400
 21349  00183A                     u15407:
 21350  00183A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21351  00183E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21352  001842  50E7               	movf	indf1,w,c
 21353  001844                     u15400:
 21354  001844  6EDF               	movwf	indf2,c
 21355                           
 21356                           ;SDCard.c: 373: dado++;
 21357  001846  4A10               	infsnz	monta_sd@dado^0,f,c
 21358  001848  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21359  00184A  2A14               	incf	monta_sd@i^0,f,c
 21360  00184C  0E03               	movlw	3
 21361  00184E  6414               	cpfsgt	monta_sd@i^0,c
 21362  001850  D7E3               	goto	l12868
 21363  001852  0012               	return	
 21364  001854                     l12876:
 21365                           
 21366                           ;SDCard.c: 378: for(i=0; i<6;i++)
 21367  001854  0E00               	movlw	0
 21368  001856  6E14               	movwf	monta_sd@i^0,c
 21369  001858                     l12882:
 21370                           
 21371                           ;SDCard.c: 379: {;SDCard.c: 380: if(*dado != ' ' && *dado != '\0')
 21372  001858  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21373  00185C  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21374  001860  6AF8               	clrf	tblptru,c
 21375  001862  0E07               	movlw	(high __ramtop+-1)
 21376  001864  64F7               	cpfsgt	tblptrh,c
 21377  001866  D003               	bra	u15427
 21378  001868  0008               	tblrd		*
 21379  00186A  50F5               	movf	tablat,w,c
 21380  00186C  D005               	bra	u15420
 21381  00186E                     u15427:
 21382  00186E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21383  001872  CFF7 FFE2          	movff	tblptrh,fsr1h
 21384  001876  50E7               	movf	indf1,w,c
 21385  001878                     u15420:
 21386  001878  0A20               	xorlw	32
 21387  00187A  B4D8               	btfsc	status,2,c
 21388  00187C  D02A               	goto	l12888
 21389  00187E  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21390  001882  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21391  001886  6AF8               	clrf	tblptru,c
 21392  001888  0E07               	movlw	(high __ramtop+-1)
 21393  00188A  64F7               	cpfsgt	tblptrh,c
 21394  00188C  D003               	bra	u15447
 21395  00188E  0008               	tblrd		*
 21396  001890  50F5               	movf	tablat,w,c
 21397  001892  D005               	bra	u15440
 21398  001894                     u15447:
 21399  001894  CFF6 FFE1          	movff	tblptrl,fsr1l
 21400  001898  CFF7 FFE2          	movff	tblptrh,fsr1h
 21401  00189C  50E7               	movf	indf1,w,c
 21402  00189E                     u15440:
 21403  00189E  0900               	iorlw	0
 21404  0018A0  B4D8               	btfsc	status,2,c
 21405  0018A2  D017               	goto	l12888
 21406                           
 21407                           ;SDCard.c: 381: {;SDCard.c: 382: vel[i] = *dado;
 21408  0018A4  C010  FFF6         	movff	monta_sd@dado,tblptrl
 21409  0018A8  C011  FFF7         	movff	monta_sd@dado+1,tblptrh
 21410  0018AC  6AF8               	clrf	tblptru,c
 21411  0018AE  0EDE               	movlw	low _vel
 21412  0018B0  2414               	addwf	monta_sd@i^0,w,c
 21413  0018B2  6ED9               	movwf	fsr2l,c
 21414  0018B4  6ADA               	clrf	fsr2h,c
 21415  0018B6  0E01               	movlw	high _vel
 21416  0018B8  22DA               	addwfc	fsr2h,f,c
 21417  0018BA  0E07               	movlw	(high __ramtop+-1)
 21418  0018BC  64F7               	cpfsgt	tblptrh,c
 21419  0018BE  D003               	bra	u15467
 21420  0018C0  0008               	tblrd		*
 21421  0018C2  50F5               	movf	tablat,w,c
 21422  0018C4  D005               	bra	u15460
 21423  0018C6                     u15467:
 21424  0018C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21425  0018CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21426  0018CE  50E7               	movf	indf1,w,c
 21427  0018D0                     u15460:
 21428  0018D0  6EDF               	movwf	indf2,c
 21429  0018D2                     l12888:
 21430                           
 21431                           ;SDCard.c: 383: };SDCard.c: 385: dado++;
 21432  0018D2  4A10               	infsnz	monta_sd@dado^0,f,c
 21433  0018D4  2A11               	incf	(monta_sd@dado+1)^0,f,c
 21434  0018D6  2A14               	incf	monta_sd@i^0,f,c
 21435  0018D8  0E05               	movlw	5
 21436  0018DA  6414               	cpfsgt	monta_sd@i^0,c
 21437  0018DC  D7BD               	goto	l12882
 21438  0018DE  0012               	return	
 21439  0018E0                     l12896:
 21440  0018E0  5013               	movf	monta_sd@index^0,w,c
 21441                           
 21442                           ; Switch size 1, requested type "simple"
 21443                           ; Number of cases is 8, Range of values is 0 to 7
 21444                           ; switch strategies available:
 21445                           ; Name         Instructions Cycles
 21446                           ; simple_byte           25    13 (average)
 21447                           ;	Chosen strategy is simple_byte
 21448  0018E2  0A00               	xorlw	0	; case 0
 21449  0018E4  B4D8               	btfsc	status,2,c
 21450  0018E6  D697               	goto	l12782
 21451  0018E8  0A01               	xorlw	1	; case 1
 21452  0018EA  B4D8               	btfsc	status,2,c
 21453  0018EC  D6C7               	goto	l12798
 21454  0018EE  0A03               	xorlw	3	; case 2
 21455  0018F0  B4D8               	btfsc	status,2,c
 21456  0018F2  D6F7               	goto	l12814
 21457  0018F4  0A01               	xorlw	1	; case 3
 21458  0018F6  B4D8               	btfsc	status,2,c
 21459  0018F8  D727               	goto	l12830
 21460  0018FA  0A07               	xorlw	7	; case 4
 21461  0018FC  B4D8               	btfsc	status,2,c
 21462  0018FE  D757               	goto	l12846
 21463  001900  0A01               	xorlw	1	; case 5
 21464  001902  B4D8               	btfsc	status,2,c
 21465  001904  D767               	goto	l12848
 21466  001906  0A03               	xorlw	3	; case 6
 21467  001908  B4D8               	btfsc	status,2,c
 21468  00190A  D784               	goto	l12862
 21469  00190C  0A01               	xorlw	1	; case 7
 21470  00190E  A4D8               	btfss	status,2,c
 21471  001910  0012               	return	
 21472  001912  D7A0               	goto	l12876
 21473  001914                     __end_of_monta_sd:
 21474                           	callstack 0
 21475                           
 21476 ;; *************** function _strlen *****************
 21477 ;; Defined at:
 21478 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\strlen.c"
 21479 ;; Parameters:    Size  Location     Type
 21480 ;;  s               2    9[COMRAM] PTR const unsigned char 
 21481 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21482 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21483 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21484 ;; Auto vars:     Size  Location     Type
 21485 ;;  cp              2   11[COMRAM] PTR const unsigned char 
 21486 ;;		 -> disparo_gravacao@velocidade(12), dados_data(18), dados_hora(18), dados_long(36), 
 21487 ;;		 -> dados_lat(33), STR_21(2), STR_20(2), rawSpeed(20), 
 21488 ;;		 -> rawDate(6), rawLongitude(13), rawLatitude(12), rawTime(7), 
 21489 ;; Return value:  Size  Location     Type
 21490 ;;                  2    9[COMRAM] unsigned int 
 21491 ;; Registers used:
 21492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 21493 ;; Tracked objects:
 21494 ;;		On entry : 0/2
 21495 ;;		On exit  : 0/0
 21496 ;;		Unchanged: 0/0
 21497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21498 ;;      Params:         2       0       0       0       0       0       0       0       0
 21499 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21500 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21501 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21502 ;;Total ram usage:        4 bytes
 21503 ;; Hardware stack levels used:    1
 21504 ;; Hardware stack levels required when called:    2
 21505 ;; This function calls:
 21506 ;;		Nothing
 21507 ;; This function is called by:
 21508 ;;		_monta_sd
 21509 ;; This function uses a non-reentrant model
 21510 ;;
 21511                           
 21512                           	psect	text128
 21513  0054E2                     __ptext128:
 21514                           	callstack 0
 21515  0054E2                     _strlen:
 21516                           	callstack 24
 21517                           
 21518                           ;incstack = 0
 21519  0054E2  C00A  F00C         	movff	strlen@s,strlen@cp
 21520  0054E6  C00B  F00D         	movff	strlen@s+1,strlen@cp+1
 21521  0054EA  D002               	goto	l12638
 21522  0054EC                     l12636:
 21523  0054EC  4A0C               	infsnz	strlen@cp^0,f,c
 21524  0054EE  2A0D               	incf	(strlen@cp+1)^0,f,c
 21525  0054F0                     l12638:
 21526  0054F0  C00C  FFF6         	movff	strlen@cp,tblptrl
 21527  0054F4  C00D  FFF7         	movff	strlen@cp+1,tblptrh
 21528  0054F8  6AF8               	clrf	tblptru,c
 21529  0054FA  0E07               	movlw	(high __ramtop+-1)
 21530  0054FC  64F7               	cpfsgt	tblptrh,c
 21531  0054FE  D003               	bra	u14937
 21532  005500  0008               	tblrd		*
 21533  005502  50F5               	movf	tablat,w,c
 21534  005504  D005               	bra	u14930
 21535  005506                     u14937:
 21536  005506  CFF6 FFE1          	movff	tblptrl,fsr1l
 21537  00550A  CFF7 FFE2          	movff	tblptrh,fsr1h
 21538  00550E  50E7               	movf	indf1,w,c
 21539  005510                     u14930:
 21540  005510  0900               	iorlw	0
 21541  005512  A4D8               	btfss	status,2,c
 21542  005514  D7EB               	goto	l12636
 21543  005516  500A               	movf	strlen@s^0,w,c
 21544  005518  5C0C               	subwf	strlen@cp^0,w,c
 21545  00551A  6E0A               	movwf	?_strlen^0,c
 21546  00551C  500B               	movf	(strlen@s+1)^0,w,c
 21547  00551E  580D               	subwfb	(strlen@cp+1)^0,w,c
 21548  005520  6E0B               	movwf	(?_strlen+1)^0,c
 21549  005522  0012               	return		;funcret
 21550  005524                     __end_of_strlen:
 21551                           	callstack 0
 21552                           
 21553 ;; *************** function _atoi *****************
 21554 ;; Defined at:
 21555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\atoi.c"
 21556 ;; Parameters:    Size  Location     Type
 21557 ;;  s               3   15[COMRAM] PTR const unsigned char 
 21558 ;;		 -> ROM(32767), NULL(0), rawSpeed(20), 
 21559 ;; Auto vars:     Size  Location     Type
 21560 ;;  a               2   21[COMRAM] int 
 21561 ;;  sign            1   20[COMRAM] unsigned char 
 21562 ;; Return value:  Size  Location     Type
 21563 ;;                  2   15[COMRAM] int 
 21564 ;; Registers used:
 21565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21566 ;; Tracked objects:
 21567 ;;		On entry : 0/0
 21568 ;;		On exit  : 0/0
 21569 ;;		Unchanged: 0/0
 21570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21571 ;;      Params:         3       0       0       0       0       0       0       0       0
 21572 ;;      Locals:         3       0       0       0       0       0       0       0       0
 21573 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21574 ;;      Totals:         8       0       0       0       0       0       0       0       0
 21575 ;;Total ram usage:        8 bytes
 21576 ;; Hardware stack levels used:    1
 21577 ;; Hardware stack levels required when called:    3
 21578 ;; This function calls:
 21579 ;;		___wmul
 21580 ;;		_isdigit
 21581 ;; This function is called by:
 21582 ;;		_verifica_dados_operacionais
 21583 ;;		_disparo_gravacao
 21584 ;; This function uses a non-reentrant model
 21585 ;;
 21586                           
 21587                           	psect	text129
 21588  0031F4                     __ptext129:
 21589                           	callstack 0
 21590  0031F4                     _atoi:
 21591                           	callstack 25
 21592                           
 21593                           ;incstack = 0
 21594  0031F4  D006               	goto	l13214
 21595  0031F6                     l13212:
 21596  0031F6  0E01               	movlw	1
 21597  0031F8  2610               	addwf	atoi@s^0,f,c
 21598  0031FA  0E00               	movlw	0
 21599  0031FC  2211               	addwfc	(atoi@s+1)^0,f,c
 21600  0031FE  0E00               	movlw	0
 21601  003200  2212               	addwfc	(atoi@s+2)^0,f,c
 21602  003202                     l13214:
 21603  003202  C010  FFF6         	movff	atoi@s,tblptrl
 21604  003206  C011  FFF7         	movff	atoi@s+1,tblptrh
 21605  00320A  C012  FFF8         	movff	atoi@s+2,tblptru
 21606  00320E  BAF8               	btfsc	tblptru,5,c
 21607  003210  D003               	bra	u15917
 21608  003212  0008               	tblrd		*
 21609  003214  50F5               	movf	tablat,w,c
 21610  003216  D005               	bra	u15910
 21611  003218                     u15917:
 21612  003218  CFF6 FFE1          	movff	tblptrl,fsr1l
 21613  00321C  CFF7 FFE2          	movff	tblptrh,fsr1h
 21614  003220  50E7               	movf	indf1,w,c
 21615  003222                     u15910:
 21616  003222  0A20               	xorlw	32
 21617  003224  B4D8               	btfsc	status,2,c
 21618  003226  D7E7               	goto	l13212
 21619  003228  C010  FFF6         	movff	atoi@s,tblptrl
 21620  00322C  C011  FFF7         	movff	atoi@s+1,tblptrh
 21621  003230  C012  FFF8         	movff	atoi@s+2,tblptru
 21622  003234  BAF8               	btfsc	tblptru,5,c
 21623  003236  D003               	bra	u15937
 21624  003238  0008               	tblrd		*
 21625  00323A  50F5               	movf	tablat,w,c
 21626  00323C  D005               	bra	u15930
 21627  00323E                     u15937:
 21628  00323E  CFF6 FFE1          	movff	tblptrl,fsr1l
 21629  003242  CFF7 FFE2          	movff	tblptrh,fsr1h
 21630  003246  50E7               	movf	indf1,w,c
 21631  003248                     u15930:
 21632  003248  0A09               	xorlw	9
 21633  00324A  B4D8               	btfsc	status,2,c
 21634  00324C  D7D4               	goto	l13212
 21635  00324E  0E00               	movlw	0
 21636  003250  6E17               	movwf	(atoi@a+1)^0,c
 21637  003252  0E00               	movlw	0
 21638  003254  6E16               	movwf	atoi@a^0,c
 21639  003256  0E00               	movlw	0
 21640  003258  6E15               	movwf	atoi@sign^0,c
 21641  00325A  C010  FFF6         	movff	atoi@s,tblptrl
 21642  00325E  C011  FFF7         	movff	atoi@s+1,tblptrh
 21643  003262  C012  FFF8         	movff	atoi@s+2,tblptru
 21644  003266  BAF8               	btfsc	tblptru,5,c
 21645  003268  D003               	bra	u15957
 21646  00326A  0008               	tblrd		*
 21647  00326C  50F5               	movf	tablat,w,c
 21648  00326E  D005               	bra	u15950
 21649  003270                     u15957:
 21650  003270  CFF6 FFE1          	movff	tblptrl,fsr1l
 21651  003274  CFF7 FFE2          	movff	tblptrh,fsr1h
 21652  003278  50E7               	movf	indf1,w,c
 21653  00327A                     u15950:
 21654  00327A  0A2D               	xorlw	45
 21655  00327C  A4D8               	btfss	status,2,c
 21656  00327E  D008               	goto	l13226
 21657  003280  2A15               	incf	atoi@sign^0,f,c
 21658  003282                     l13224:
 21659  003282  0E01               	movlw	1
 21660  003284  2610               	addwf	atoi@s^0,f,c
 21661  003286  0E00               	movlw	0
 21662  003288  2211               	addwfc	(atoi@s+1)^0,f,c
 21663  00328A  0E00               	movlw	0
 21664  00328C  2212               	addwfc	(atoi@s+2)^0,f,c
 21665  00328E  D03A               	goto	l13234
 21666  003290                     l13226:
 21667  003290  C010  FFF6         	movff	atoi@s,tblptrl
 21668  003294  C011  FFF7         	movff	atoi@s+1,tblptrh
 21669  003298  C012  FFF8         	movff	atoi@s+2,tblptru
 21670  00329C  BAF8               	btfsc	tblptru,5,c
 21671  00329E  D003               	bra	u15977
 21672  0032A0  0008               	tblrd		*
 21673  0032A2  50F5               	movf	tablat,w,c
 21674  0032A4  D005               	bra	u15970
 21675  0032A6                     u15977:
 21676  0032A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 21677  0032AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 21678  0032AE  50E7               	movf	indf1,w,c
 21679  0032B0                     u15970:
 21680  0032B0  0A2B               	xorlw	43
 21681  0032B2  B4D8               	btfsc	status,2,c
 21682  0032B4  D7E6               	goto	l13224
 21683  0032B6  D026               	goto	l13234
 21684  0032B8                     l13230:
 21685  0032B8  C016  F00A         	movff	atoi@a,___wmul@multiplier
 21686  0032BC  C017  F00B         	movff	atoi@a+1,___wmul@multiplier+1
 21687  0032C0  0E00               	movlw	0
 21688  0032C2  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
 21689  0032C4  0E0A               	movlw	10
 21690  0032C6  6E0C               	movwf	___wmul@multiplicand^0,c
 21691  0032C8  EC95  F02C         	call	___wmul	;wreg free
 21692  0032CC  C010  FFF6         	movff	atoi@s,tblptrl
 21693  0032D0  C011  FFF7         	movff	atoi@s+1,tblptrh
 21694  0032D4  C012  FFF8         	movff	atoi@s+2,tblptru
 21695  0032D8  BAF8               	btfsc	tblptru,5,c
 21696  0032DA  D003               	bra	u15997
 21697  0032DC  0008               	tblrd		*
 21698  0032DE  50F5               	movf	tablat,w,c
 21699  0032E0  D005               	bra	u15990
 21700  0032E2                     u15997:
 21701  0032E2  CFF6 FFE1          	movff	tblptrl,fsr1l
 21702  0032E6  CFF7 FFE2          	movff	tblptrh,fsr1h
 21703  0032EA  50E7               	movf	indf1,w,c
 21704  0032EC                     u15990:
 21705  0032EC  6E13               	movwf	??_atoi^0,c
 21706  0032EE  5013               	movf	??_atoi^0,w,c
 21707  0032F0  260A               	addwf	?___wmul^0,f,c
 21708  0032F2  0E00               	movlw	0
 21709  0032F4  220B               	addwfc	(?___wmul+1)^0,f,c
 21710  0032F6  0ED0               	movlw	208
 21711  0032F8  240A               	addwf	?___wmul^0,w,c
 21712  0032FA  6E16               	movwf	atoi@a^0,c
 21713  0032FC  0EFF               	movlw	255
 21714  0032FE  200B               	addwfc	(?___wmul+1)^0,w,c
 21715  003300  6E17               	movwf	(atoi@a+1)^0,c
 21716  003302  D7BF               	goto	l13224
 21717  003304                     l13234:
 21718  003304  C010  FFF6         	movff	atoi@s,tblptrl
 21719  003308  C011  FFF7         	movff	atoi@s+1,tblptrh
 21720  00330C  C012  FFF8         	movff	atoi@s+2,tblptru
 21721  003310  BAF8               	btfsc	tblptru,5,c
 21722  003312  D003               	bra	u16007
 21723  003314  0008               	tblrd		*
 21724  003316  50F5               	movf	tablat,w,c
 21725  003318  D005               	bra	u16000
 21726  00331A                     u16007:
 21727  00331A  CFF6 FFE1          	movff	tblptrl,fsr1l
 21728  00331E  CFF7 FFE2          	movff	tblptrh,fsr1h
 21729  003322  50E7               	movf	indf1,w,c
 21730  003324                     u16000:
 21731  003324  EC70  F02D         	call	_isdigit
 21732  003328  B0D8               	btfsc	status,0,c
 21733  00332A  D7C6               	goto	l13230
 21734  00332C  5015               	movf	atoi@sign^0,w,c
 21735  00332E  B4D8               	btfsc	status,2,c
 21736  003330  D00D               	goto	l2422
 21737  003332  C016  F013         	movff	atoi@a,??_atoi
 21738  003336  C017  F014         	movff	atoi@a+1,??_atoi+1
 21739  00333A  1E13               	comf	??_atoi^0,f,c
 21740  00333C  1E14               	comf	(??_atoi+1)^0,f,c
 21741  00333E  4A13               	infsnz	??_atoi^0,f,c
 21742  003340  2A14               	incf	(??_atoi+1)^0,f,c
 21743  003342  C013  F010         	movff	??_atoi,?_atoi
 21744  003346  C014  F011         	movff	??_atoi+1,?_atoi+1
 21745  00334A  0012               	return	
 21746  00334C                     l2422:
 21747  00334C  C016  F010         	movff	atoi@a,?_atoi
 21748  003350  C017  F011         	movff	atoi@a+1,?_atoi+1
 21749  003354  0012               	return		;funcret
 21750  003356                     __end_of_atoi:
 21751                           	callstack 0
 21752                           
 21753 ;; *************** function _isdigit *****************
 21754 ;; Defined at:
 21755 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 21756 ;; Parameters:    Size  Location     Type
 21757 ;;  c               1    wreg     unsigned char 
 21758 ;; Auto vars:     Size  Location     Type
 21759 ;;  c               1   11[COMRAM] unsigned char 
 21760 ;; Return value:  Size  Location     Type
 21761 ;;		None               void
 21762 ;; Registers used:
 21763 ;;		wreg, status,2, status,0
 21764 ;; Tracked objects:
 21765 ;;		On entry : 0/0
 21766 ;;		On exit  : 0/0
 21767 ;;		Unchanged: 0/0
 21768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21769 ;;      Params:         0       0       0       0       0       0       0       0       0
 21770 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21771 ;;      Temps:          1       0       0       0       0       0       0       0       0
 21772 ;;      Totals:         3       0       0       0       0       0       0       0       0
 21773 ;;Total ram usage:        3 bytes
 21774 ;; Hardware stack levels used:    1
 21775 ;; Hardware stack levels required when called:    2
 21776 ;; This function calls:
 21777 ;;		Nothing
 21778 ;; This function is called by:
 21779 ;;		_atoi
 21780 ;;		_atol
 21781 ;; This function uses a non-reentrant model
 21782 ;;
 21783                           
 21784                           	psect	text130
 21785  005AE0                     __ptext130:
 21786                           	callstack 0
 21787  005AE0                     _isdigit:
 21788                           	callstack 20
 21789                           
 21790                           ;incstack = 0
 21791                           ;isdigit@c stored from wreg
 21792  005AE0  6E0C               	movwf	isdigit@c^0,c
 21793  005AE2  0E00               	movlw	0
 21794  005AE4  6E0B               	movwf	_isdigit$3275^0,c
 21795  005AE6  0E3A               	movlw	58
 21796  005AE8  600C               	cpfslt	isdigit@c^0,c
 21797  005AEA  D005               	goto	l10928
 21798  005AEC  0E2F               	movlw	47
 21799  005AEE  640C               	cpfsgt	isdigit@c^0,c
 21800  005AF0  D002               	goto	l10928
 21801  005AF2  0E01               	movlw	1
 21802  005AF4  6E0B               	movwf	_isdigit$3275^0,c
 21803  005AF6                     l10928:
 21804  005AF6  C00B  F00A         	movff	_isdigit$3275,??_isdigit
 21805  005AFA  300A               	rrcf	??_isdigit^0,w,c
 21806  005AFC  0012               	return		;funcret
 21807  005AFE                     __end_of_isdigit:
 21808                           	callstack 0
 21809                           
 21810 ;; *************** function ___wmul *****************
 21811 ;; Defined at:
 21812 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 21813 ;; Parameters:    Size  Location     Type
 21814 ;;  multiplier      2    9[COMRAM] unsigned int 
 21815 ;;  multiplicand    2   11[COMRAM] unsigned int 
 21816 ;; Auto vars:     Size  Location     Type
 21817 ;;  product         2   13[COMRAM] unsigned int 
 21818 ;; Return value:  Size  Location     Type
 21819 ;;                  2    9[COMRAM] unsigned int 
 21820 ;; Registers used:
 21821 ;;		wreg, status,2, status,0, prodl, prodh
 21822 ;; Tracked objects:
 21823 ;;		On entry : 0/2
 21824 ;;		On exit  : 0/0
 21825 ;;		Unchanged: 0/0
 21826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21827 ;;      Params:         4       0       0       0       0       0       0       0       0
 21828 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21829 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21830 ;;      Totals:         6       0       0       0       0       0       0       0       0
 21831 ;;Total ram usage:        6 bytes
 21832 ;; Hardware stack levels used:    1
 21833 ;; Hardware stack levels required when called:    2
 21834 ;; This function calls:
 21835 ;;		Nothing
 21836 ;; This function is called by:
 21837 ;;		_get_cluster
 21838 ;;		_put_cluster
 21839 ;;		_fprintf
 21840 ;;		_atoi
 21841 ;;		_disparo_gravacao
 21842 ;; This function uses a non-reentrant model
 21843 ;;
 21844                           
 21845                           	psect	text131
 21846  00592A                     __ptext131:
 21847                           	callstack 0
 21848  00592A                     ___wmul:
 21849                           	callstack 25
 21850                           
 21851                           ;incstack = 0
 21852  00592A  500A               	movf	___wmul@multiplier^0,w,c
 21853  00592C  020C               	mulwf	___wmul@multiplicand^0,c
 21854  00592E  CFF3 F00E          	movff	prodl,___wmul@product
 21855  005932  CFF4 F00F          	movff	prodh,___wmul@product+1
 21856  005936  500A               	movf	___wmul@multiplier^0,w,c
 21857  005938  020D               	mulwf	(___wmul@multiplicand+1)^0,c
 21858  00593A  50F3               	movf	243,w,c
 21859  00593C  260F               	addwf	(___wmul@product+1)^0,f,c
 21860  00593E  500B               	movf	(___wmul@multiplier+1)^0,w,c
 21861  005940  020C               	mulwf	___wmul@multiplicand^0,c
 21862  005942  50F3               	movf	243,w,c
 21863  005944  260F               	addwf	(___wmul@product+1)^0,f,c
 21864  005946  C00E  F00A         	movff	___wmul@product,?___wmul
 21865  00594A  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
 21866  00594E  0012               	return		;funcret
 21867  005950                     __end_of___wmul:
 21868                           	callstack 0
 21869                           
 21870 ;; *************** function _isr *****************
 21871 ;; Defined at:
 21872 ;;		line 111 in file "main.c"
 21873 ;; Parameters:    Size  Location     Type
 21874 ;;		None
 21875 ;; Auto vars:     Size  Location     Type
 21876 ;;  cont            1    8[COMRAM] unsigned char 
 21877 ;; Return value:  Size  Location     Type
 21878 ;;                  1    wreg      void 
 21879 ;; Registers used:
 21880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21881 ;; Tracked objects:
 21882 ;;		On entry : 0/0
 21883 ;;		On exit  : 0/0
 21884 ;;		Unchanged: 0/0
 21885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21886 ;;      Params:         0       0       0       0       0       0       0       0       0
 21887 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21888 ;;      Temps:          6       0       0       0       0       0       0       0       0
 21889 ;;      Totals:         7       0       0       0       0       0       0       0       0
 21890 ;;Total ram usage:        7 bytes
 21891 ;; Hardware stack levels used:    1
 21892 ;; Hardware stack levels required when called:    1
 21893 ;; This function calls:
 21894 ;;		_recebe_dado_uart
 21895 ;;		_tratamento_uart
 21896 ;;		i2_write_timer_zero
 21897 ;; This function is called by:
 21898 ;;		Interrupt level 2
 21899 ;; This function uses a non-reentrant model
 21900 ;;
 21901                           
 21902                           	psect	intcode
 21903  000008                     __pintcode:
 21904                           	callstack 0
 21905  000008                     _isr:
 21906                           	callstack 13
 21907                           
 21908                           ;incstack = 0
 21909  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21910  00000A  EDE0  F01E         	call	int_func,f	;refresh shadow registers
 21911                           
 21912                           	psect	intcode_body
 21913  003DC0                     __pintcode_body:
 21914                           	callstack 13
 21915  003DC0                     int_func:
 21916                           	callstack 13
 21917  003DC0  0006               	pop		; remove dummy address from shadow register refresh
 21918  003DC2  CFD9 F005          	movff	fsr2l,??_isr+2
 21919  003DC6  CFDA F006          	movff	fsr2h,??_isr+3
 21920  003DCA  CFF3 F007          	movff	prodl,??_isr+4
 21921  003DCE  CFF4 F008          	movff	prodh,??_isr+5
 21922                           
 21923                           ;main.c: 113: unsigned char cont;;main.c: 116: if (PIE1bits.RCIE && PIR1bits.RCIF)
 21924  003DD2  BA9D               	btfsc	157,5,c	;volatile
 21925  003DD4  AA9E               	btfss	158,5,c	;volatile
 21926  003DD6  D015               	goto	i2l10088
 21927                           
 21928                           ;main.c: 117: {;main.c: 118: PIR1bits.RCIF = 0;
 21929  003DD8  9A9E               	bcf	158,5,c	;volatile
 21930                           
 21931                           ;main.c: 119: data_uart_recebe = recebe_dado_uart();
 21932  003DDA  ECC4  F02D         	call	_recebe_dado_uart	;wreg free
 21933  003DDE  0100               	movlb	0	; () banked
 21934  003DE0  6FF3               	movwf	_data_uart_recebe& (0+255),b
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;main.c: 120: tratamento_uart(data_uart_recebe);
 21938  003DE2  51F3               	movf	_data_uart_recebe& (0+255),w,b
 21939  003DE4  EC59  F01D         	call	_tratamento_uart
 21940                           
 21941                           ;main.c: 121: PORTBbits.RB2 = !PORTBbits.RB2;
 21942  003DE8  B481               	btfsc	129,2,c	;volatile
 21943  003DEA  D003               	goto	i2u1117_40
 21944  003DEC  6A03               	clrf	??_isr^0,c
 21945  003DEE  2A03               	incf	??_isr^0,f,c
 21946  003DF0  D001               	goto	i2u1118_48
 21947  003DF2                     i2u1117_40:
 21948  003DF2  6A03               	clrf	??_isr^0,c
 21949  003DF4                     i2u1118_48:
 21950  003DF4  4603               	rlncf	??_isr^0,f,c
 21951  003DF6  4603               	rlncf	??_isr^0,f,c
 21952  003DF8  5081               	movf	129,w,c	;volatile
 21953  003DFA  1803               	xorwf	??_isr^0,w,c
 21954  003DFC  0BFB               	andlw	-5
 21955  003DFE  1803               	xorwf	??_isr^0,w,c
 21956  003E00  6E81               	movwf	129,c	;volatile
 21957  003E02                     i2l10088:
 21958                           
 21959                           ;main.c: 122: };main.c: 125: unsigned char cont;;main.c: 127: if (TMR0IF && T0IF)
 21960  003E02  B4F2               	btfsc	4082,2,c	;volatile
 21961  003E04  A4F2               	btfss	4082,2,c	;volatile
 21962  003E06  D046               	goto	i2l10126
 21963                           
 21964                           ;main.c: 128: {;main.c: 129: INTCONbits.TMR0IF = 0;
 21965  003E08  94F2               	bcf	242,2,c	;volatile
 21966                           
 21967                           ;main.c: 130: sinaliza_int_timer = 1;
 21968  003E0A  0E01               	movlw	1
 21969  003E0C  0100               	movlb	0	; () banked
 21970  003E0E  6FF2               	movwf	_sinaliza_int_timer& (0+255),b
 21971                           
 21972                           ;main.c: 132: for(cont= 0; cont<3;cont++)
 21973  003E10  0E00               	movlw	0
 21974  003E12  6E09               	movwf	isr@cont^0,c
 21975  003E14                     i2l10100:
 21976                           
 21977                           ;main.c: 133: {;main.c: 134: if(tempo_tarefa[cont]>0) tempo_tarefa[cont]--;
 21978  003E14  5009               	movf	isr@cont^0,w,c
 21979  003E16  0D02               	mullw	2
 21980  003E18  0E2D               	movlw	low _tempo_tarefa
 21981  003E1A  24F3               	addwf	243,w,c
 21982  003E1C  6ED9               	movwf	fsr2l,c
 21983  003E1E  0E01               	movlw	high _tempo_tarefa
 21984  003E20  20F4               	addwfc	prodh,w,c
 21985  003E22  6EDA               	movwf	fsr2h,c
 21986  003E24  50DE               	movf	postinc2,w,c
 21987  003E26  10DE               	iorwf	postinc2,w,c
 21988  003E28  B4D8               	btfsc	status,2,c
 21989  003E2A  D00B               	goto	i2l10104
 21990  003E2C  5009               	movf	isr@cont^0,w,c
 21991  003E2E  0D02               	mullw	2
 21992  003E30  0E2D               	movlw	low _tempo_tarefa
 21993  003E32  24F3               	addwf	243,w,c
 21994  003E34  6ED9               	movwf	fsr2l,c
 21995  003E36  0E01               	movlw	high _tempo_tarefa
 21996  003E38  20F4               	addwfc	prodh,w,c
 21997  003E3A  6EDA               	movwf	fsr2h,c
 21998  003E3C  06DE               	decf	postinc2,f,c
 21999  003E3E  0E00               	movlw	0
 22000  003E40  5ADD               	subwfb	postdec2,f,c
 22001  003E42                     i2l10104:
 22002  003E42  2A09               	incf	isr@cont^0,f,c
 22003  003E44  0E02               	movlw	2
 22004  003E46  6409               	cpfsgt	isr@cont^0,c
 22005  003E48  D7E5               	goto	i2l10100
 22006                           
 22007                           ;main.c: 136: };main.c: 137: if(time_sd > 0) time_sd--;
 22008  003E4A  0101               	movlb	1	; () banked
 22009  003E4C  516E               	movf	_time_sd& (0+255),w,b
 22010  003E4E  116F               	iorwf	(_time_sd+1)& (0+255),w,b
 22011  003E50  B4D8               	btfsc	status,2,c
 22012  003E52  D003               	goto	i2l10112
 22013                           
 22014                           ; BSR set to: 1
 22015  003E54  076E               	decf	_time_sd& (0+255),f,b
 22016  003E56  A0D8               	btfss	status,0,c
 22017  003E58  076F               	decf	(_time_sd+1)& (0+255),f,b
 22018  003E5A                     i2l10112:
 22019                           
 22020                           ; BSR set to: 1
 22021                           ;main.c: 138: if(time_atualizacao > 0) time_atualizacao--;
 22022  003E5A  0100               	movlb	0	; () banked
 22023  003E5C  51EA               	movf	_time_atualizacao& (0+255),w,b
 22024  003E5E  11EB               	iorwf	(_time_atualizacao+1)& (0+255),w,b
 22025  003E60  B4D8               	btfsc	status,2,c
 22026  003E62  D003               	goto	i2l10116
 22027                           
 22028                           ; BSR set to: 0
 22029  003E64  07EA               	decf	_time_atualizacao& (0+255),f,b
 22030  003E66  A0D8               	btfss	status,0,c
 22031  003E68  07EB               	decf	(_time_atualizacao+1)& (0+255),f,b
 22032  003E6A                     i2l10116:
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;main.c: 140: if(tarefa_em_execucao == 1)
 22036  003E6A  0452               	decf	_tarefa_em_execucao^0,w,c	;volatile
 22037  003E6C  A4D8               	btfss	status,2,c
 22038  003E6E  D00C               	goto	i2l10124
 22039                           
 22040                           ; BSR set to: 0
 22041                           ;main.c: 141: {;main.c: 142: timeout_tarefa--;
 22042  003E70  0101               	movlb	1	; () banked
 22043  003E72  0770               	decf	_timeout_tarefa& (0+255),f,b
 22044  003E74  A0D8               	btfss	status,0,c
 22045  003E76  0771               	decf	(_timeout_tarefa+1)& (0+255),f,b
 22046                           
 22047                           ; BSR set to: 1
 22048                           ;main.c: 143: if(!timeout_tarefa)
 22049  003E78  5170               	movf	_timeout_tarefa& (0+255),w,b
 22050  003E7A  1171               	iorwf	(_timeout_tarefa+1)& (0+255),w,b
 22051  003E7C  A4D8               	btfss	status,2,c
 22052  003E7E  D004               	goto	i2l10124
 22053                           
 22054                           ; BSR set to: 1
 22055                           ;main.c: 144: {;main.c: 146: PCLATH = 0;
 22056  003E80  0E00               	movlw	0
 22057  003E82  6EFA               	movwf	250,c	;volatile
 22058                           
 22059                           ;main.c: 147: PCL = 0;
 22060  003E84  0E00               	movlw	0
 22061  003E86  6EF9               	movwf	249,c	;volatile
 22062  003E88                     i2l10124:
 22063                           
 22064                           ;main.c: 148: };main.c: 149: };main.c: 152: write_timer_zero(0x45);
 22065  003E88  0E00               	movlw	0
 22066  003E8A  6E02               	movwf	(i2write_timer_zero@timer0+1)^0,c
 22067  003E8C  0E45               	movlw	69
 22068  003E8E  6E01               	movwf	i2write_timer_zero@timer0^0,c
 22069  003E90  EC28  F02E         	call	i2_write_timer_zero	;wreg free
 22070  003E94                     i2l10126:
 22071                           
 22072                           ;main.c: 153: };main.c: 155: if (INT0IF && INT0IE)
 22073  003E94  B2F2               	btfsc	4082,1,c	;volatile
 22074  003E96  A8F2               	btfss	4082,4,c	;volatile
 22075  003E98  D001               	goto	i2l1545
 22076                           
 22077                           ;main.c: 156: {;main.c: 157: INT0IF = 0;
 22078  003E9A  92F2               	bcf	4082,1,c	;volatile
 22079  003E9C                     i2l1545:
 22080  003E9C  C008  FFF4         	movff	??_isr+5,prodh
 22081  003EA0  C007  FFF3         	movff	??_isr+4,prodl
 22082  003EA4  C006  FFDA         	movff	??_isr+3,fsr2h
 22083  003EA8  C005  FFD9         	movff	??_isr+2,fsr2l
 22084  003EAC  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22085  003EAE  0011               	retfie		f
 22086  003EB0                     __end_of_isr:
 22087                           	callstack 0
 22088                           
 22089 ;; *************** function i2_write_timer_zero *****************
 22090 ;; Defined at:
 22091 ;;		line 134 in file "bibliotecas/hardware.c"
 22092 ;; Parameters:    Size  Location     Type
 22093 ;;  timer0          2    0[COMRAM] unsigned int 
 22094 ;; Auto vars:     Size  Location     Type
 22095 ;;		None
 22096 ;; Return value:  Size  Location     Type
 22097 ;;                  1    wreg      void 
 22098 ;; Registers used:
 22099 ;;		None
 22100 ;; Tracked objects:
 22101 ;;		On entry : 3E/0
 22102 ;;		On exit  : 3E/0
 22103 ;;		Unchanged: 3E/0
 22104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22105 ;;      Params:         2       0       0       0       0       0       0       0       0
 22106 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22107 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22108 ;;      Totals:         2       0       0       0       0       0       0       0       0
 22109 ;;Total ram usage:        2 bytes
 22110 ;; Hardware stack levels used:    1
 22111 ;; This function calls:
 22112 ;;		Nothing
 22113 ;; This function is called by:
 22114 ;;		_isr
 22115 ;; This function uses a non-reentrant model
 22116 ;;
 22117                           
 22118                           	psect	text133
 22119  005C50                     __ptext133:
 22120                           	callstack 0
 22121  005C50                     i2_write_timer_zero:
 22122                           	callstack 13
 22123                           
 22124                           ;hardware.c: 142: TMR0 = timer0;
 22125                           
 22126                           ;incstack = 0
 22127  005C50  C001  FFD6         	movff	i2write_timer_zero@timer0,4054	;volatile
 22128  005C54  C002  FFD7         	movff	i2write_timer_zero@timer0+1,4055	;volatile
 22129  005C58  0012               	return		;funcret
 22130  005C5A                     __end_ofi2_write_timer_zero:
 22131                           	callstack 0
 22132                           
 22133 ;; *************** function _tratamento_uart *****************
 22134 ;; Defined at:
 22135 ;;		line 347 in file "bibliotecas/GPS.c"
 22136 ;; Parameters:    Size  Location     Type
 22137 ;;  received_cha    1    wreg     unsigned char 
 22138 ;; Auto vars:     Size  Location     Type
 22139 ;;  received_cha    1    0[COMRAM] unsigned char 
 22140 ;; Return value:  Size  Location     Type
 22141 ;;                  1    wreg      void 
 22142 ;; Registers used:
 22143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22144 ;; Tracked objects:
 22145 ;;		On entry : 3F/0
 22146 ;;		On exit  : 3E/0
 22147 ;;		Unchanged: 0/0
 22148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22149 ;;      Params:         0       0       0       0       0       0       0       0       0
 22150 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22151 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22152 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22153 ;;Total ram usage:        1 bytes
 22154 ;; Hardware stack levels used:    1
 22155 ;; This function calls:
 22156 ;;		Nothing
 22157 ;; This function is called by:
 22158 ;;		_isr
 22159 ;; This function uses a non-reentrant model
 22160 ;;
 22161                           
 22162                           	psect	text134
 22163  003AB2                     __ptext134:
 22164                           	callstack 0
 22165  003AB2                     _tratamento_uart:
 22166                           	callstack 13
 22167                           
 22168                           ;incstack = 0
 22169                           ;tratamento_uart@received_char stored from wreg
 22170  003AB2  6E01               	movwf	tratamento_uart@received_char^0,c
 22171                           
 22172                           ;GPS.c: 349: if(received_char =='$'){
 22173  003AB4  0E24               	movlw	36
 22174  003AB6  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22175  003AB8  A4D8               	btfss	status,2,c
 22176  003ABA  D011               	goto	i2l9876
 22177                           
 22178                           ;GPS.c: 350: gga_index = 0;
 22179  003ABC  0E00               	movlw	0
 22180  003ABE  0100               	movlb	0	; () banked
 22181  003AC0  6FEF               	movwf	(_gga_index+1)& (0+255),b	;volatile
 22182  003AC2  0E00               	movlw	0
 22183  003AC4  6FEE               	movwf	_gga_index& (0+255),b	;volatile
 22184                           
 22185                           ;GPS.c: 351: rmc_index = 0;
 22186  003AC6  0E00               	movlw	0
 22187  003AC8  6FED               	movwf	(_rmc_index+1)& (0+255),b	;volatile
 22188  003ACA  0E00               	movlw	0
 22189  003ACC  6FEC               	movwf	_rmc_index& (0+255),b	;volatile
 22190                           
 22191                           ;GPS.c: 352: is_it_gga_string = 0;
 22192  003ACE  0E00               	movlw	0
 22193  003AD0  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22194                           
 22195                           ;GPS.c: 353: is_it_rmc_string = 0;
 22196  003AD2  0E00               	movlw	0
 22197  003AD4  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22198                           
 22199                           ;GPS.c: 354: comma_counter_gga = 0;
 22200  003AD6  0E00               	movlw	0
 22201  003AD8  6FF9               	movwf	_comma_counter_gga& (0+255),b
 22202                           
 22203                           ;GPS.c: 355: comma_counter_rmc = 0;
 22204  003ADA  0E00               	movlw	0
 22205  003ADC  6FF8               	movwf	_comma_counter_rmc& (0+255),b
 22206  003ADE                     i2l9876:
 22207                           
 22208                           ;GPS.c: 356: };GPS.c: 358: if(is_it_gga_string == 1)
 22209  003ADE  0455               	decf	_is_it_gga_string^0,w,c	;volatile
 22210  003AE0  A4D8               	btfss	status,2,c
 22211  003AE2  D01A               	goto	i2l9886
 22212                           
 22213                           ;GPS.c: 359: {;GPS.c: 360: if(received_char == ',' )
 22214  003AE4  0E2C               	movlw	44
 22215  003AE6  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22216  003AE8  A4D8               	btfss	status,2,c
 22217  003AEA  D00A               	goto	i2l9884
 22218                           
 22219                           ;GPS.c: 361: {;GPS.c: 362: gga_pointers[comma_counter_gga++] = gga_index;
 22220  003AEC  0E16               	movlw	low _gga_pointers
 22221  003AEE  0100               	movlb	0	; () banked
 22222  003AF0  25F9               	addwf	_comma_counter_gga& (0+255),w,b
 22223  003AF2  6ED9               	movwf	fsr2l,c
 22224  003AF4  6ADA               	clrf	fsr2h,c
 22225  003AF6  0E02               	movlw	high _gga_pointers
 22226  003AF8  22DA               	addwfc	fsr2h,f,c
 22227  003AFA  C0EE  FFDF         	movff	_gga_index,indf2	;volatile
 22228                           
 22229                           ; BSR set to: 0
 22230  003AFE  2BF9               	incf	_comma_counter_gga& (0+255),f,b
 22231  003B00                     i2l9884:
 22232                           
 22233                           ;GPS.c: 363: };GPS.c: 364: gga_buffer[gga_index++] = received_char;
 22234  003B00  0E00               	movlw	low _gga_buffer
 22235  003B02  0100               	movlb	0	; () banked
 22236  003B04  25EE               	addwf	_gga_index& (0+255),w,b	;volatile
 22237  003B06  6ED9               	movwf	fsr2l,c
 22238  003B08  0E03               	movlw	high _gga_buffer
 22239  003B0A  21EF               	addwfc	(_gga_index+1)& (0+255),w,b	;volatile
 22240  003B0C  6EDA               	movwf	fsr2h,c
 22241  003B0E  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22242  003B12  4BEE               	infsnz	_gga_index& (0+255),f,b	;volatile
 22243  003B14  2BEF               	incf	(_gga_index+1)& (0+255),f,b	;volatile
 22244                           
 22245                           ;GPS.c: 365: }
 22246  003B16  D01C               	goto	i2l9894
 22247  003B18                     i2l9886:
 22248                           
 22249                           ;GPS.c: 366: else if(gga_code[0] == 'G' && gga_code[1] == 'G' && gga_code[2] == 'A'){
 22250  003B18  0E47               	movlw	71
 22251  003B1A  0101               	movlb	1	; () banked
 22252  003B1C  195C               	xorwf	_gga_code& (0+255),w,b
 22253  003B1E  A4D8               	btfss	status,2,c
 22254  003B20  D011               	goto	i2l439
 22255                           
 22256                           ; BSR set to: 1
 22257  003B22  0E47               	movlw	71
 22258  003B24  195D               	xorwf	(_gga_code+1)& (0+255),w,b
 22259  003B26  A4D8               	btfss	status,2,c
 22260  003B28  D00D               	goto	i2l439
 22261                           
 22262                           ; BSR set to: 1
 22263  003B2A  0E41               	movlw	65
 22264  003B2C  195E               	xorwf	(_gga_code+2)& (0+255),w,b
 22265  003B2E  A4D8               	btfss	status,2,c
 22266  003B30  D009               	goto	i2l439
 22267                           
 22268                           ; BSR set to: 1
 22269                           ;GPS.c: 367: is_it_gga_string = 1;
 22270  003B32  0E01               	movlw	1
 22271  003B34  6E55               	movwf	_is_it_gga_string^0,c	;volatile
 22272                           
 22273                           ;GPS.c: 368: gga_code[0] = 0;
 22274  003B36  0E00               	movlw	0
 22275  003B38  6F5C               	movwf	_gga_code& (0+255),b
 22276                           
 22277                           ;GPS.c: 369: gga_code[1] = 0;
 22278  003B3A  0E00               	movlw	0
 22279  003B3C  6F5D               	movwf	(_gga_code+1)& (0+255),b
 22280                           
 22281                           ;GPS.c: 370: gga_code[2] = 0;
 22282  003B3E  0E00               	movlw	0
 22283  003B40  6F5E               	movwf	(_gga_code+2)& (0+255),b
 22284                           
 22285                           ;GPS.c: 371: }
 22286  003B42  D006               	goto	i2l9894
 22287  003B44                     i2l439:
 22288                           
 22289                           ; BSR set to: 1
 22290                           ;GPS.c: 372: else{;GPS.c: 373: gga_code[0] = gga_code[1];
 22291  003B44  C15D  F15C         	movff	_gga_code+1,_gga_code
 22292                           
 22293                           ;GPS.c: 374: gga_code[1] = gga_code[2];
 22294  003B48  C15E  F15D         	movff	_gga_code+2,_gga_code+1
 22295                           
 22296                           ;GPS.c: 375: gga_code[2] = received_char;
 22297  003B4C  C001  F15E         	movff	tratamento_uart@received_char,_gga_code+2
 22298  003B50                     i2l9894:
 22299                           
 22300                           ;GPS.c: 376: };GPS.c: 378: if(is_it_rmc_string == 1)
 22301  003B50  0454               	decf	_is_it_rmc_string^0,w,c	;volatile
 22302  003B52  A4D8               	btfss	status,2,c
 22303  003B54  D01A               	goto	i2l9904
 22304                           
 22305                           ;GPS.c: 379: {;GPS.c: 380: if(received_char == ',' )
 22306  003B56  0E2C               	movlw	44
 22307  003B58  1801               	xorwf	tratamento_uart@received_char^0,w,c
 22308  003B5A  A4D8               	btfss	status,2,c
 22309  003B5C  D00A               	goto	i2l9902
 22310                           
 22311                           ;GPS.c: 381: {;GPS.c: 382: rmc_pointers[comma_counter_rmc++] = rmc_index;
 22312  003B5E  0E2A               	movlw	low _rmc_pointers
 22313  003B60  0100               	movlb	0	; () banked
 22314  003B62  25F8               	addwf	_comma_counter_rmc& (0+255),w,b
 22315  003B64  6ED9               	movwf	fsr2l,c
 22316  003B66  6ADA               	clrf	fsr2h,c
 22317  003B68  0E02               	movlw	high _rmc_pointers
 22318  003B6A  22DA               	addwfc	fsr2h,f,c
 22319  003B6C  C0EC  FFDF         	movff	_rmc_index,indf2	;volatile
 22320                           
 22321                           ; BSR set to: 0
 22322  003B70  2BF8               	incf	_comma_counter_rmc& (0+255),f,b
 22323  003B72                     i2l9902:
 22324                           
 22325                           ;GPS.c: 383: };GPS.c: 384: rmc_buffer[rmc_index++] = received_char;
 22326  003B72  0E50               	movlw	low _rmc_buffer
 22327  003B74  0100               	movlb	0	; () banked
 22328  003B76  25EC               	addwf	_rmc_index& (0+255),w,b	;volatile
 22329  003B78  6ED9               	movwf	fsr2l,c
 22330  003B7A  0E03               	movlw	high _rmc_buffer
 22331  003B7C  21ED               	addwfc	(_rmc_index+1)& (0+255),w,b	;volatile
 22332  003B7E  6EDA               	movwf	fsr2h,c
 22333  003B80  C001  FFDF         	movff	tratamento_uart@received_char,indf2
 22334  003B84  4BEC               	infsnz	_rmc_index& (0+255),f,b	;volatile
 22335  003B86  2BED               	incf	(_rmc_index+1)& (0+255),f,b	;volatile
 22336                           
 22337                           ;GPS.c: 385: }
 22338  003B88  0012               	return	
 22339  003B8A                     i2l9904:
 22340                           
 22341                           ;GPS.c: 386: else if(rmc_code[0] == 'R' && rmc_code[1] == 'M' && rmc_code[2] == 'C'){
 22342  003B8A  0E52               	movlw	82
 22343  003B8C  0101               	movlb	1	; () banked
 22344  003B8E  1959               	xorwf	_rmc_code& (0+255),w,b
 22345  003B90  A4D8               	btfss	status,2,c
 22346  003B92  D011               	goto	i2l444
 22347                           
 22348                           ; BSR set to: 1
 22349  003B94  0E4D               	movlw	77
 22350  003B96  195A               	xorwf	(_rmc_code+1)& (0+255),w,b
 22351  003B98  A4D8               	btfss	status,2,c
 22352  003B9A  D00D               	goto	i2l444
 22353                           
 22354                           ; BSR set to: 1
 22355  003B9C  0E43               	movlw	67
 22356  003B9E  195B               	xorwf	(_rmc_code+2)& (0+255),w,b
 22357  003BA0  A4D8               	btfss	status,2,c
 22358  003BA2  D009               	goto	i2l444
 22359                           
 22360                           ; BSR set to: 1
 22361                           ;GPS.c: 387: is_it_rmc_string = 1;
 22362  003BA4  0E01               	movlw	1
 22363  003BA6  6E54               	movwf	_is_it_rmc_string^0,c	;volatile
 22364                           
 22365                           ;GPS.c: 388: rmc_code[0] = 0;
 22366  003BA8  0E00               	movlw	0
 22367  003BAA  6F59               	movwf	_rmc_code& (0+255),b
 22368                           
 22369                           ;GPS.c: 389: rmc_code[1] = 0;
 22370  003BAC  0E00               	movlw	0
 22371  003BAE  6F5A               	movwf	(_rmc_code+1)& (0+255),b
 22372                           
 22373                           ;GPS.c: 390: rmc_code[2] = 0;
 22374  003BB0  0E00               	movlw	0
 22375  003BB2  6F5B               	movwf	(_rmc_code+2)& (0+255),b
 22376                           
 22377                           ;GPS.c: 391: }
 22378  003BB4  0012               	return	
 22379  003BB6                     i2l444:
 22380                           
 22381                           ; BSR set to: 1
 22382                           ;GPS.c: 392: else{;GPS.c: 393: rmc_code[0] = rmc_code[1];
 22383  003BB6  C15A  F159         	movff	_rmc_code+1,_rmc_code
 22384                           
 22385                           ;GPS.c: 394: rmc_code[1] = rmc_code[2];
 22386  003BBA  C15B  F15A         	movff	_rmc_code+2,_rmc_code+1
 22387                           
 22388                           ;GPS.c: 395: rmc_code[2] = received_char;
 22389  003BBE  C001  F15B         	movff	tratamento_uart@received_char,_rmc_code+2
 22390  003BC2  0012               	return		;funcret
 22391  003BC4                     __end_of_tratamento_uart:
 22392                           	callstack 0
 22393                           
 22394 ;; *************** function _recebe_dado_uart *****************
 22395 ;; Defined at:
 22396 ;;		line 138 in file "bibliotecas/uart.c"
 22397 ;; Parameters:    Size  Location     Type
 22398 ;;		None
 22399 ;; Auto vars:     Size  Location     Type
 22400 ;;		None
 22401 ;; Return value:  Size  Location     Type
 22402 ;;                  1    wreg      unsigned char 
 22403 ;; Registers used:
 22404 ;;		wreg, status,2
 22405 ;; Tracked objects:
 22406 ;;		On entry : 0/0
 22407 ;;		On exit  : 0/0
 22408 ;;		Unchanged: 0/0
 22409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22410 ;;      Params:         0       0       0       0       0       0       0       0       0
 22411 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22412 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22413 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22414 ;;Total ram usage:        0 bytes
 22415 ;; Hardware stack levels used:    1
 22416 ;; This function calls:
 22417 ;;		Nothing
 22418 ;; This function is called by:
 22419 ;;		_isr
 22420 ;; This function uses a non-reentrant model
 22421 ;;
 22422                           
 22423                           	psect	text135
 22424  005B88                     __ptext135:
 22425                           	callstack 0
 22426  005B88                     _recebe_dado_uart:
 22427                           	callstack 13
 22428                           
 22429                           ;uart.c: 140: while(RCIF==0);
 22430                           
 22431                           ;incstack = 0
 22432  005B88  AA9E               	btfss	3998,5,c	;volatile
 22433  005B8A  D7FE               	goto	_recebe_dado_uart
 22434                           
 22435                           ;uart.c: 141: if(RCSTAbits.OERR)
 22436  005B8C  A2AB               	btfss	171,1,c	;volatile
 22437  005B8E  D003               	goto	i2l10014
 22438                           
 22439                           ;uart.c: 142: {;uart.c: 143: CREN = 0;
 22440  005B90  98AB               	bcf	4011,4,c	;volatile
 22441                           
 22442                           ;uart.c: 144: __nop();
 22443  005B92  F000               	nop	
 22444                           
 22445                           ;uart.c: 145: CREN=1;
 22446  005B94  88AB               	bsf	4011,4,c	;volatile
 22447  005B96                     i2l10014:
 22448                           
 22449                           ;uart.c: 146: };uart.c: 147: return(RCREG);
 22450  005B96  50AE               	movf	174,w,c	;volatile
 22451  005B98  0012               	return		;funcret
 22452  005B9A                     __end_of_recebe_dado_uart:
 22453                           	callstack 0
 22454                           
 22455                           	psect	text136
 22456  000000                     __ptext136:
 22457                           	callstack 0
 22458                           
 22459                           	psect	rparam
 22460  0000                     
 22461                           	psect	temp
 22462  000056                     btemp:
 22463                           	callstack 0
 22464  000056                     	ds	1
 22465  0000                     int$flags	set	btemp
 22466  0000                     wtemp8	set	btemp+1
 22467  0000                     ttemp5	set	btemp+1
 22468  0000                     ttemp6	set	btemp+4
 22469  0000                     ttemp7	set	btemp+8
 22470                           
 22471                           	psect	idloc
 22472                           
 22473                           ;Config register IDLOC0 @ 0x200000
 22474                           ;	unspecified, using default values
 22475  200000                     	org	2097152
 22476  200000  FF                 	db	255
 22477                           
 22478                           ;Config register IDLOC1 @ 0x200001
 22479                           ;	unspecified, using default values
 22480  200001                     	org	2097153
 22481  200001  FF                 	db	255
 22482                           
 22483                           ;Config register IDLOC2 @ 0x200002
 22484                           ;	unspecified, using default values
 22485  200002                     	org	2097154
 22486  200002  FF                 	db	255
 22487                           
 22488                           ;Config register IDLOC3 @ 0x200003
 22489                           ;	unspecified, using default values
 22490  200003                     	org	2097155
 22491  200003  FF                 	db	255
 22492                           
 22493                           ;Config register IDLOC4 @ 0x200004
 22494                           ;	unspecified, using default values
 22495  200004                     	org	2097156
 22496  200004  FF                 	db	255
 22497                           
 22498                           ;Config register IDLOC5 @ 0x200005
 22499                           ;	unspecified, using default values
 22500  200005                     	org	2097157
 22501  200005  FF                 	db	255
 22502                           
 22503                           ;Config register IDLOC6 @ 0x200006
 22504                           ;	unspecified, using default values
 22505  200006                     	org	2097158
 22506  200006  FF                 	db	255
 22507                           
 22508                           ;Config register IDLOC7 @ 0x200007
 22509                           ;	unspecified, using default values
 22510  200007                     	org	2097159
 22511  200007  FF                 	db	255
 22512                           
 22513                           	psect	config
 22514                           
 22515                           ;Config register CONFIG1L @ 0x300000
 22516                           ;	unspecified, using default values
 22517                           ;	PLL Prescaler Selection bits
 22518                           ;	PLLDIV = 0x0, unprogrammed default
 22519                           ;	System Clock Postscaler Selection bits
 22520                           ;	CPUDIV = 0x0, unprogrammed default
 22521                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 22522                           ;	USBDIV = 0x0, unprogrammed default
 22523  300000                     	org	3145728
 22524  300000  00                 	db	0
 22525                           
 22526                           ;Config register CONFIG1H @ 0x300001
 22527                           ;	unspecified, using default values
 22528                           ;	Oscillator Selection bits
 22529                           ;	FOSC = 0x5, unprogrammed default
 22530                           ;	Fail-Safe Clock Monitor Enable bit
 22531                           ;	FCMEN = 0x0, unprogrammed default
 22532                           ;	Internal/External Oscillator Switchover bit
 22533                           ;	IESO = 0x0, unprogrammed default
 22534  300001                     	org	3145729
 22535  300001  05                 	db	5
 22536                           
 22537                           ;Config register CONFIG2L @ 0x300002
 22538                           ;	unspecified, using default values
 22539                           ;	Power-up Timer Enable bit
 22540                           ;	PWRT = 0x1, unprogrammed default
 22541                           ;	Brown-out Reset Enable bits
 22542                           ;	BOR = 0x3, unprogrammed default
 22543                           ;	Brown-out Reset Voltage bits
 22544                           ;	BORV = 0x3, unprogrammed default
 22545                           ;	USB Voltage Regulator Enable bit
 22546                           ;	VREGEN = 0x0, unprogrammed default
 22547  300002                     	org	3145730
 22548  300002  1F                 	db	31
 22549                           
 22550                           ;Config register CONFIG2H @ 0x300003
 22551                           ;	unspecified, using default values
 22552                           ;	Watchdog Timer Enable bit
 22553                           ;	WDT = 0x1, unprogrammed default
 22554                           ;	Watchdog Timer Postscale Select bits
 22555                           ;	WDTPS = 0xF, unprogrammed default
 22556  300003                     	org	3145731
 22557  300003  1F                 	db	31
 22558                           
 22559                           ; Padding undefined space
 22560  300004                     	org	3145732
 22561  300004  FF                 	db	255
 22562                           
 22563                           ;Config register CONFIG3H @ 0x300005
 22564                           ;	unspecified, using default values
 22565                           ;	CCP2 MUX bit
 22566                           ;	CCP2MX = 0x1, unprogrammed default
 22567                           ;	PORTB A/D Enable bit
 22568                           ;	PBADEN = 0x1, unprogrammed default
 22569                           ;	Low-Power Timer 1 Oscillator Enable bit
 22570                           ;	LPT1OSC = 0x0, unprogrammed default
 22571                           ;	MCLR Pin Enable bit
 22572                           ;	MCLRE = 0x1, unprogrammed default
 22573  300005                     	org	3145733
 22574  300005  83                 	db	131
 22575                           
 22576                           ;Config register CONFIG4L @ 0x300006
 22577                           ;	unspecified, using default values
 22578                           ;	Stack Full/Underflow Reset Enable bit
 22579                           ;	STVREN = 0x1, unprogrammed default
 22580                           ;	Single-Supply ICSP Enable bit
 22581                           ;	LVP = 0x1, unprogrammed default
 22582                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 22583                           ;	ICPRT = 0x0, unprogrammed default
 22584                           ;	Extended Instruction Set Enable bit
 22585                           ;	XINST = 0x0, unprogrammed default
 22586                           ;	Background Debugger Enable bit
 22587                           ;	DEBUG = 0x1, unprogrammed default
 22588  300006                     	org	3145734
 22589  300006  85                 	db	133
 22590                           
 22591                           ; Padding undefined space
 22592  300007                     	org	3145735
 22593  300007  FF                 	db	255
 22594                           
 22595                           ;Config register CONFIG5L @ 0x300008
 22596                           ;	unspecified, using default values
 22597                           ;	Code Protection bit
 22598                           ;	CP0 = 0x1, unprogrammed default
 22599                           ;	Code Protection bit
 22600                           ;	CP1 = 0x1, unprogrammed default
 22601                           ;	Code Protection bit
 22602                           ;	CP2 = 0x1, unprogrammed default
 22603                           ;	Code Protection bit
 22604                           ;	CP3 = 0x1, unprogrammed default
 22605  300008                     	org	3145736
 22606  300008  0F                 	db	15
 22607                           
 22608                           ;Config register CONFIG5H @ 0x300009
 22609                           ;	unspecified, using default values
 22610                           ;	Boot Block Code Protection bit
 22611                           ;	CPB = 0x1, unprogrammed default
 22612                           ;	Data EEPROM Code Protection bit
 22613                           ;	CPD = 0x1, unprogrammed default
 22614  300009                     	org	3145737
 22615  300009  C0                 	db	192
 22616                           
 22617                           ;Config register CONFIG6L @ 0x30000A
 22618                           ;	unspecified, using default values
 22619                           ;	Write Protection bit
 22620                           ;	WRT0 = 0x1, unprogrammed default
 22621                           ;	Write Protection bit
 22622                           ;	WRT1 = 0x1, unprogrammed default
 22623                           ;	Write Protection bit
 22624                           ;	WRT2 = 0x1, unprogrammed default
 22625                           ;	Write Protection bit
 22626                           ;	WRT3 = 0x1, unprogrammed default
 22627  30000A                     	org	3145738
 22628  30000A  0F                 	db	15
 22629                           
 22630                           ;Config register CONFIG6H @ 0x30000B
 22631                           ;	unspecified, using default values
 22632                           ;	Configuration Register Write Protection bit
 22633                           ;	WRTC = 0x1, unprogrammed default
 22634                           ;	Boot Block Write Protection bit
 22635                           ;	WRTB = 0x1, unprogrammed default
 22636                           ;	Data EEPROM Write Protection bit
 22637                           ;	WRTD = 0x1, unprogrammed default
 22638  30000B                     	org	3145739
 22639  30000B  E0                 	db	224
 22640                           
 22641                           ;Config register CONFIG7L @ 0x30000C
 22642                           ;	unspecified, using default values
 22643                           ;	Table Read Protection bit
 22644                           ;	EBTR0 = 0x1, unprogrammed default
 22645                           ;	Table Read Protection bit
 22646                           ;	EBTR1 = 0x1, unprogrammed default
 22647                           ;	Table Read Protection bit
 22648                           ;	EBTR2 = 0x1, unprogrammed default
 22649                           ;	Table Read Protection bit
 22650                           ;	EBTR3 = 0x1, unprogrammed default
 22651  30000C                     	org	3145740
 22652  30000C  0F                 	db	15
 22653                           
 22654                           ;Config register CONFIG7H @ 0x30000D
 22655                           ;	unspecified, using default values
 22656                           ;	Boot Block Table Read Protection bit
 22657                           ;	EBTRB = 0x1, unprogrammed default
 22658  30000D                     	org	3145741
 22659  30000D  40                 	db	64
 22660                           tosu	equ	0xFFF
 22661                           tosh	equ	0xFFE
 22662                           tosl	equ	0xFFD
 22663                           stkptr	equ	0xFFC
 22664                           pclatu	equ	0xFFB
 22665                           pclath	equ	0xFFA
 22666                           pcl	equ	0xFF9
 22667                           tblptru	equ	0xFF8
 22668                           tblptrh	equ	0xFF7
 22669                           tblptrl	equ	0xFF6
 22670                           tablat	equ	0xFF5
 22671                           prodh	equ	0xFF4
 22672                           prodl	equ	0xFF3
 22673                           indf0	equ	0xFEF
 22674                           postinc0	equ	0xFEE
 22675                           postdec0	equ	0xFED
 22676                           preinc0	equ	0xFEC
 22677                           plusw0	equ	0xFEB
 22678                           fsr0h	equ	0xFEA
 22679                           fsr0l	equ	0xFE9
 22680                           wreg	equ	0xFE8
 22681                           indf1	equ	0xFE7
 22682                           postinc1	equ	0xFE6
 22683                           postdec1	equ	0xFE5
 22684                           preinc1	equ	0xFE4
 22685                           plusw1	equ	0xFE3
 22686                           fsr1h	equ	0xFE2
 22687                           fsr1l	equ	0xFE1
 22688                           bsr	equ	0xFE0
 22689                           indf2	equ	0xFDF
 22690                           postinc2	equ	0xFDE
 22691                           postdec2	equ	0xFDD
 22692                           preinc2	equ	0xFDC
 22693                           plusw2	equ	0xFDB
 22694                           fsr2h	equ	0xFDA
 22695                           fsr2l	equ	0xFD9
 22696                           status	equ	0xFD8

Data Sizes:
    Strings     263
    Constant    118
    Data        120
    BSS         1089
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    135     160
    BANK1           256      0     250
    BANK2           256     19     250
    BANK3           256      0     150
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    escalonador$3668	PTR FTN()void  size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    temp_buff_long	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_long	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    point_buff_gps_lat	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    teste	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 13
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_11(CODE[5]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    memset@p1	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memset@p	PTR unsigned char  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    memcpy@d1	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    memcpy@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), f_open@fn(BANK0[12]), NULL(NULL[0]), 
		 -> fs(BIGRAM[544]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), STR_17(CODE[4]), 

    memcmp@s1	PTR const void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 44
		 -> convert_to_int_point_long@convert_str_long(COMRAM[10]), convert_to_int_point_lat@convert_str_lat(COMRAM[9]), fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), NULL(NULL[0]), rawSpeed(BANK2[20]), 

    temp_buff_lat	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int_point_lat@temp_str_lat	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    convert_to_int@p_buff	PTR const unsigned char  size(2) Largest target is 44
		 -> fence_diff_long(CODE[44]), fence_diff_lat(CODE[40]), 

    armazena_ltlo@buffer	PTR unsigned char  size(1) Largest target is 11
		 -> longitude_to_convert@longitude(BANK0[11]), latitude_to_convert@latitude(BANK0[9]), 

    troca_de_tela@fix_signal	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    disparo_gravacao@velocidade	PTR unsigned char [6] size(2) Largest target is 0

    disparo_gravacao@fix_gps	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 36
		 -> dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), dados_lat(BANK2[33]), 

    verifica_dados_operacionais@velocidade_atual	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), rawSpeed(BANK2[20]), 

    p_tarefas	PTR FTN()void [3] size(2) Largest target is 1
		 -> troca_de_tela(), disparo_gravacao(), verifica_dados_operacionais(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 18
		 -> disparo_gravacao@velocidade(BANK2[12]), escreve_inteiro_uart@valor_final(COMRAM[7]), 

    fprintf@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fprintf@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_15(CODE[6]), STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[15]), 

    fprintf@arp	PTR void [1] size(1) Largest target is 2
		 -> ?_fprintf(BANK0[2]), 

    fputs@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    fputs@str	PTR const unsigned char  size(2) Largest target is 16
		 -> fprintf@s(BANK0[16]), ?_fprintf(BANK0[2]), lo(BANK1[13]), lt(BANK1[12]), 
		 -> vel(BANK1[6]), hora(BANK1[7]), 

    fputc@fil	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    sp__fgets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_readdir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_opendir@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_lseek@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_close@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_sync@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_write@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    f_write@bw	PTR unsigned int  size(1) Largest target is 2
		 -> fputc@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_write@wbuff	PTR const unsigned char  size(1) Largest target is 1
		 -> fputc@c(BANK0[1]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_read@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__memcpy	PTR void  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_open@fp	PTR struct _FIL size(2) Largest target is 30
		 -> fil(BANK1[28]), 

    dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    f_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> fs(BIGRAM[544]), 

    validate@fs	PTR const struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    auto_mount@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> f_opendir@path(COMRAM[2]), f_open@path(BANK0[2]), 

    auto_mount@p	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    check_fs@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_open@dir(BANK0[2]), 

    reserve_direntry@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    reserve_direntry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    reserve_direntry@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@fn	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    trace_path@dir	PTR PTR unsigned char  size(1) Largest target is 2
		 -> f_opendir@dir(COMRAM[2]), f_open@dir(BANK0[2]), 

    trace_path@path	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[13]), filename(BANK2[20]), 

    trace_path@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    trace_path@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    trace_path@dptr	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@path	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> trace_path@path(BANK0[2]), 

    sp__memset	PTR void  size(2) Largest target is 544
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), NULL(NULL[0]), fs(BIGRAM[544]), 

    make_dirfile@dirname	PTR unsigned char  size(1) Largest target is 12
		 -> f_opendir@fn(COMRAM[12]), f_open@fn(BANK0[12]), 

    S1466_DIR_E$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    next_dir_entry@dj	PTR struct _DIR_E size(1) Largest target is 15
		 -> f_open@dj(BANK0[14]), 

    clust2sect@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    create_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    remove_chain@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@p	PTR unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), NULL(NULL[0]), fs(BIGRAM[544]), 

    put_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    get_cluster@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sync@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    FatFs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    move_window@fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    hora_nome@p_buff	PTR unsigned char  size(2) Largest target is 7
		 -> hora(BANK1[7]), 

    data_nome@p_buff	PTR unsigned char  size(2) Largest target is 6
		 -> data(BANK1[6]), 

    monta_sd@dado	PTR unsigned char  size(2) Largest target is 36
		 -> disparo_gravacao@velocidade(BANK2[12]), dados_data(BANK2[18]), dados_hora(BANK2[18]), dados_long(BANK2[36]), 
		 -> dados_lat(BANK2[33]), STR_21(CODE[2]), STR_20(CODE[2]), rawSpeed(BANK2[20]), 
		 -> rawDate(BANK1[6]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), rawTime(BANK1[7]), 

    sp__leitura_sdcard	PTR unsigned char  size(2) Largest target is 20
		 -> dado_arquivo(BANK2[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 20
		 -> filename(BANK2[20]), 

    S795_FIL$dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.dir_ptr	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    S795_FIL$fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    fil.fs	PTR struct _FATFS size(2) Largest target is 544
		 -> NULL(NULL[0]), fs(BIGRAM[544]), 

    sp__Speed	PTR unsigned char  size(2) Largest target is 20
		 -> rawSpeed(BANK2[20]), 

    sp__rawdata	PTR unsigned char  size(2) Largest target is 6
		 -> rawDate(BANK1[6]), 

    sp__rawhora	PTR unsigned char  size(2) Largest target is 7
		 -> rawTime(BANK1[7]), 

    sp__longitude	PTR unsigned char  size(2) Largest target is 13
		 -> rawLongitude(BANK1[13]), 

    sp__latitude	PTR unsigned char  size(2) Largest target is 12
		 -> rawLatitude(BANK1[12]), 

    sp__fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    gps@flag_fix	PTR unsigned char  size(2) Largest target is 2
		 -> rawFix(BANK1[2]), 

    escreve_frase_ram_lcd@buffer	PTR unsigned char  size(2) Largest target is 21
		 -> STR_33(CODE[8]), STR_32(CODE[9]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> STR_29(CODE[5]), STR_28(CODE[2]), STR_27(CODE[6]), STR_26(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[2]), STR_23(CODE[5]), STR_22(CODE[7]), 
		 -> STR_19(CODE[11]), mensagem_inicial@msg_dois(COMRAM[17]), mensagem_inicial@msg_linha_um(COMRAM[17]), STR_10(CODE[9]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[21]), 
		 -> STR_5(CODE[15]), rawLongitude(BANK1[13]), rawLatitude(BANK1[12]), escreve_inteiro_lcd@texto(COMRAM[7]), 
		 -> STR_4(CODE[11]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[11]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 7
		 -> escreve_inteiro_lcd@texto(COMRAM[7]), 

    sdc_disk_write@p_buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    sdc_disk_read@p_buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 544
		 -> fs.win(BIGRAM[512]), fputc@c(BANK0[1]), NULL(NULL[0]), fs(BIGRAM[544]), 

    data_buff	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 544
		 -> NULL(NULL[0]), dado_arquivo(BANK2[20]), fs(BIGRAM[544]), 


Critical Paths under _main in COMRAM

    _mensagem_inicial->_posicao_cursor_lcd
    _init_lcd->_escreve_cmd_lcd
    _config_timer_zero->_write_timer_zero
    _verifica_dados_operacionais->_verifica_fence
    _strcpy->_latitude
    _strcpy->_longitude
    _strcpy->_rawdata
    _strcpy->_rawhora
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->_atoi
    _troca_de_tela->_escreve_inteiro_lcd
    _mostra_dados_display->_posicao_cursor_lcd
    _escreve_inteiro_lcd->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _escreve_cmd_lcd->_delay
    _verifica_fence->_latitude_to_convert
    _verifica_fence->_longitude_to_convert
    _longitude_to_convert->_armazena_ltlo
    _latitude_to_convert->_armazena_ltlo
    _armazena_ltlo->_diferenca
    _diferenca->_convert_to_int_point_lat
    _convert_to_int_point_long->_atol
    _convert_to_int_point_lat->_atol
    _convert_to_int->_atol
    _atol->___lmul
    _itoa->_utoa
    _utoa->___lwdiv
    _inicializa_uart->_configura_baudrate_uart
    _configura_baudrate_uart->___aldiv
    _escrita_sdcard->_f_close
    _gps->_fix
    _gps->_get_fix
    _gps->_get_latitude
    _gps->_get_longitude
    _gps->_get_rawdate
    _gps->_get_rawspeed
    _fprintf->_fputs
    _trace_path->_next_dir_entry
    _make_dirfile->_memset
    _reserve_direntry->_next_dir_entry
    _next_dir_entry->_get_cluster
    _clust2sect->___lmul
    _remove_chain->_get_cluster
    _auto_mount->_check_fs
    _disk_initialize->_sdc_disk_initialize
    _sdc_disk_initialize->_sdc_reset
    _sdc_reset->_command
    _posicao_cursor_lcd->_endereco_cursor_lcd
    _endereco_cursor_lcd->_delay
    _escreve_frase_ram_lcd->_escreve_caractere_lcd
    _escreve_caractere_lcd->_delay
    _check_fs->_disk_read
    _f_lseek->_get_cluster
    _create_chain->_get_cluster
    _put_cluster->_move_window
    _get_cluster->_move_window
    _f_sync->_sync
    _validate->_disk_status
    _disk_status->_sdc_disk_status
    _sync->_move_window
    _move_window->_disk_read
    _move_window->_disk_write
    _disk_write->_sdc_disk_write
    _sdc_disk_write->_command
    _disk_read->_sdc_disk_read
    _sdc_disk_read->_command
    _proceed->_escreve_SPI
    _command->_dummy_clocks
    _command->_wait_ready
    _get_fattime->_gps_ano
    _get_fattime->_gps_dia
    _get_fattime->_gps_hora
    _get_fattime->_gps_mes
    _get_fattime->_gps_minutos
    _get_fattime->_gps_segundos
    _dados_gps_to_sd->_monta_sd
    _monta_sd->___wmul
    _atoi->___wmul

Critical Paths under _isr in COMRAM

    _isr->i2_write_timer_zero

Critical Paths under _main in BANK0

    _main->_escalonador
    _escalonador->_disparo_gravacao
    _verifica_fence->_longitude_to_convert
    _escrita_sdcard->_fprintf
    _fprintf->_fputs
    _fputs->_fputc
    _fputc->_f_write
    _f_write->_create_chain
    _f_open->_reserve_direntry
    _trace_path->_next_dir_entry
    _reserve_direntry->_create_chain
    _next_dir_entry->_get_cluster
    _remove_chain->_put_cluster
    _f_lseek->_create_chain
    _create_chain->_put_cluster
    _f_close->_f_sync

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _escalonador->_disparo_gravacao

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  514250
                        _escalonador
                                _gps
                 _inicializa_tarefas
                    _inicializa_uart
                      _init_hardware
                           _init_lcd
                   _mensagem_inicial
 ---------------------------------------------------------------------------------
 (1) _mensagem_inicial                                    36    36      0    6943
                                             15 COMRAM    36    36      0
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0     613
                                             12 COMRAM     1     1      0
                              _delay
                    _escreve_cmd_lcd
 ---------------------------------------------------------------------------------
 (1) _init_hardware                                        0     0      0     148
                  _config_timer_dois
                  _config_timer_zero
                     _init_interrupt
                     _init_oscilador
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscilador                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_timer_zero                                    0     0      0     148
                   _write_timer_zero
 ---------------------------------------------------------------------------------
 (3) _write_timer_zero                                     2     0      2     148
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _config_timer_dois                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializa_tarefas                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escalonador                                          3     3      0  504584
                                            132 BANK0      3     3      0
                   _disparo_gravacao *
                      _troca_de_tela *
        _verifica_dados_operacionais *
 ---------------------------------------------------------------------------------
 (2) _verifica_dados_operacionais                          6     6      0   26803
                                             67 COMRAM     6     6      0
                              _Speed
                           ___awtoft
                            ___ftmul
                            ___fttol
                               _atoi
                           _latitude
                          _longitude
                            _rawdata
                            _rawhora
                             _strcpy
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     829
                                             11 COMRAM     6     2      4
                           _latitude (ARG)
                          _longitude (ARG)
                            _rawdata (ARG)
                            _rawhora (ARG)
 ---------------------------------------------------------------------------------
 (3) _rawhora                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _rawdata                                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _longitude                                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _latitude                                             2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     517
                                             42 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3498
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3059
                                             23 COMRAM     4     1      3
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2766
                                              9 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Speed                                                2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _troca_de_tela                                        3     3      0   20307
                                             53 COMRAM     3     3      0
              _escreve_caractere_lcd
                    _escreve_cmd_lcd
              _escreve_frase_ram_lcd
                _escreve_inteiro_lcd
                                _fix
               _mostra_dados_display
                 _posicao_cursor_lcd
                    _recebe_dado_gps
 ---------------------------------------------------------------------------------
 (3) _mostra_dados_display                                 0     0      0    6386
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_inteiro_lcd                                 11     7      4    6532
                                             42 COMRAM    11     7      4
              _escreve_frase_ram_lcd
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                 8     1      7    3063
                                             34 COMRAM     8     1      7
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               12     5      7    2560
                                             22 COMRAM    12     5      7
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) _escreve_cmd_lcd                                      1     1      0     477
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _disparo_gravacao                                    24    24      0  457168
                                            127 BANK0      5     5      0
                                              0 BANK2     19    19      0
                             ___wmul
                               _atoi
                    _dados_gps_to_sd
                                _fix
                           _grava_sd
                               _itoa
                           _monta_sd
                    _recebe_dado_gps
                     _verifica_fence
 ---------------------------------------------------------------------------------
 (3) _verifica_fence                                       1     1      0   16353
                                             66 COMRAM     1     1      0
                _latitude_to_convert
               _longitude_to_convert
                           _monta_sd
                    _recebe_dado_gps
        _verifica_plausibilidade_lat
       _verifica_plausibilidade_long
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_long                         1     1      0      34
                                              9 COMRAM     1     1      0
                       _posicao_long
 ---------------------------------------------------------------------------------
 (5) _posicao_long                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _verifica_plausibilidade_lat                          1     1      0      34
                                              9 COMRAM     1     1      0
                        _posicao_lat
 ---------------------------------------------------------------------------------
 (5) _posicao_lat                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _recebe_dado_gps                                      2     2      0      74
                                              9 COMRAM     2     2      0
                 _verifica_recep_gps
 ---------------------------------------------------------------------------------
 (5) _verifica_recep_gps                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _longitude_to_convert                                14    14      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     13    13      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (4) _latitude_to_convert                                 12    12      0    6759
                                             65 COMRAM     1     1      0
                                              0 BANK0     11    11      0
                      _armazena_ltlo
 ---------------------------------------------------------------------------------
 (5) _armazena_ltlo                                        4     2      2    6419
                                             61 COMRAM     4     2      2
                          _diferenca
 ---------------------------------------------------------------------------------
 (6) _diferenca                                            9     9      0    5657
                                             52 COMRAM     9     9      0
                     _convert_to_int
           _convert_to_int_point_lat
          _convert_to_int_point_long
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_long                           19    15      4    1782
                                             35 COMRAM    16    12      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int_point_lat                            17    13      4    1785
                                             35 COMRAM    17    13      4
                               _atol
 ---------------------------------------------------------------------------------
 (7) _convert_to_int                                       4     0      4    1929
                                             35 COMRAM     4     0      4
                               _atol
 ---------------------------------------------------------------------------------
 (8) _atol                                                14    10      4    1535
                                             21 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    3934
                                             25 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    3065
                                             16 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     972
                                              9 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4    1161
                                              9 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _grava_sd                                             0     0      0  426316
                        _desliga_SPI
                       _desliga_uart
                     _escrita_sdcard
                     _inicializa_SPI
                    _inicializa_uart
 ---------------------------------------------------------------------------------
 (1) _inicializa_uart                                      0     0      0    1118
            _configura_baudrate_uart
 ---------------------------------------------------------------------------------
 (2) _configura_baudrate_uart                             14    10      4    1118
                                             23 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     805
                                              9 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _inicializa_SPI                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _escrita_sdcard                                       7     7      0  425198
                          _data_nome
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _fprintf
                                _gps
                          _hora_nome
                             _strcat
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4     323
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _hora_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _gps                                                  3     3      0     844
                                             11 COMRAM     3     3      0
                                _fix
                            _get_fix
                        _get_gpstime
                       _get_latitude
                      _get_longitude
                        _get_rawdate
                       _get_rawspeed
 ---------------------------------------------------------------------------------
 (2) _get_rawspeed                                         2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_rawdate                                          2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_longitude                                        2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_latitude                                        17    17      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_gpstime                                         16    16      0     130
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_fix                                              2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fix                                                  2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _fprintf                                             46    36     10  131436
                                             81 BANK0     46    36     10
                            ___lldiv
                            ___llmod
                             ___wmul
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4   62687
                                             75 COMRAM     1     1      0
                                             75 BANK0      6     2      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                7     3      4   62194
                                             68 BANK0      7     3      4
                            _f_write
 ---------------------------------------------------------------------------------
 (8) _f_write                                             30    24      6   61382
                                             38 BANK0     30    24      6
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memcpy
                        _move_window
                           _validate
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                              9 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _f_open                                              44    39      5  205014
                                             56 BANK0     44    39      5
                         _auto_mount
                        _get_fattime
                             _memcpy
                             _memset
                        _move_window
                       _remove_chain
                   _reserve_direntry
                         _trace_path
 ---------------------------------------------------------------------------------
 (6) _trace_path                                          20    15      5   39801
                                             30 BANK0     20    15      5
                         _clust2sect
                       _make_dirfile
                             _memcmp
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _make_dirfile                                        11     9      2    2753
                                             17 COMRAM    11     9      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _reserve_direntry                                    18    16      2   78208
                                             38 BANK0     18    16      2
                         _clust2sect
                       _create_chain
                         _disk_write
                             _memset
                        _move_window
                     _next_dir_entry
 ---------------------------------------------------------------------------------
 (7) _next_dir_entry                                      12    11      1   19144
                                             75 COMRAM     1     0      1
                                             19 BANK0     11    11      0
                         _clust2sect
                        _get_cluster
 ---------------------------------------------------------------------------------
 (9) _clust2sect                                          11     7      4    1615
                                             21 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _remove_chain                                         8     6      2   34118
                                             24 BANK0      8     6      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (9) _memcpy                                              11     5      6     970
                                              9 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _auto_mount                                          46    44      2   33202
                                             60 COMRAM     2     0      2
                                              0 BANK0     44    44      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                             _memset
 ---------------------------------------------------------------------------------
 (8) _memset                                               8     2      6    1217
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _disk_initialize                                      4     4      0   21014
                                             41 COMRAM     2     2      0
                _sdc_disk_initialize
 ---------------------------------------------------------------------------------
 (8) _sdc_disk_initialize                                 13    13      0   20884
                                             28 COMRAM    13    13      0
                            _command
                       _dummy_clocks
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
                          _sdc_reset
 ---------------------------------------------------------------------------------
 (9) _sdc_reset                                           20    20      0   10008
                                             21 COMRAM     7     7      0
                            _command
              _escreve_frase_ram_lcd
                 _posicao_cursor_lcd
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (2) _posicao_cursor_lcd                                   3     2      1    3537
                                             12 COMRAM     3     2      1
                _endereco_cursor_lcd
 ---------------------------------------------------------------------------------
 (3) _endereco_cursor_lcd                                  1     1      0     353
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _escreve_frase_ram_lcd                                2     0      2    2849
                                             12 COMRAM     2     0      2
              _escreve_caractere_lcd
 ---------------------------------------------------------------------------------
 (3) _escreve_caractere_lcd                                1     1      0     384
                                             11 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                2     2      0     136
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _check_fs                                             8     4      4    6616
                                             52 COMRAM     8     4      4
                          _disk_read
                             _memcmp
 ---------------------------------------------------------------------------------
 (7) _memcmp                                               8     2      6     701
                                              9 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (9) ___lmul                                              12     4      8     696
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _f_mount                                              3     1      2     354
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _f_lseek                                             33    27      6   56356
                                             38 BANK0     33    27      6
                            ___lldiv
                       _create_chain
                        _get_cluster
                           _validate
 ---------------------------------------------------------------------------------
 (9) _create_chain                                        14    12      2   35181
                                             24 BANK0     14    12      2
                        _get_cluster
                        _put_cluster
 ---------------------------------------------------------------------------------
 (10) _put_cluster                                        24    20      4   17025
                                              0 BANK0     24    20      4
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (10) _get_cluster                                        21    19      2   16715
                                             73 COMRAM     2     0      2
                                              0 BANK0     19    19      0
                             ___wmul
                        _move_window
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1261
                                              9 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _f_close                                              3     1      2   30425
                                             75 COMRAM     1     1      0
                                              9 BANK0      2     0      2
                             _f_sync
 ---------------------------------------------------------------------------------
 (6) _f_sync                                               9     7      2   30002
                                              0 BANK0      9     7      2
                        _get_fattime
                        _move_window
                               _sync
                           _validate
 ---------------------------------------------------------------------------------
 (9) _validate                                             6     2      4    1178
                                             15 COMRAM     6     2      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (10) _disk_status                                         4     4      0     226
                                             11 COMRAM     4     4      0
                    _sdc_disk_status
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_status                                     4     4      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _sync                                                 2     2      0   14103
                                             73 COMRAM     2     2      0
                         _disk_ioctl
                        _move_window
 ---------------------------------------------------------------------------------
 (9) _move_window                                         21    17      4   13765
                                             52 COMRAM    21    17      4
                          _disk_read
                         _disk_write
 ---------------------------------------------------------------------------------
 (10) _disk_write                                         12     5      7    6087
                                             40 COMRAM    12     5      7
                     _sdc_disk_write
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_write                                     19    12      7    4623
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                        _escreve_SPI
                        _leitura_SPI
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (10) _disk_read                                          12     5      7    5608
                                             40 COMRAM    12     5      7
                      _sdc_disk_read
 ---------------------------------------------------------------------------------
 (11) _sdc_disk_read                                      24    17      7    4459
                                             21 COMRAM    19    12      7
                            _command
                       _dummy_clocks
                            _proceed
                           _response
 ---------------------------------------------------------------------------------
 (12) _response                                            1     1      0      34
                                              9 COMRAM     1     1      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (12) _proceed                                             0     0      0      34
                        _escreve_SPI
 ---------------------------------------------------------------------------------
 (12) _command                                             7     2      5    3412
                                             14 COMRAM     7     2      5
                       _dummy_clocks
                        _escreve_SPI
                         _wait_ready
 ---------------------------------------------------------------------------------
 (13) _wait_ready                                         15    15      0      99
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _escreve_SPI                                         2     2      0      34
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _dummy_clocks                                        5     5      0      68
                                              9 COMRAM     5     5      0
                        _leitura_SPI
 ---------------------------------------------------------------------------------
 (13) _leitura_SPI                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _disk_ioctl                                           7     4      3     304
                                              9 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (6) _get_fattime                                         52    48      4     389
                                             13 COMRAM    52    48      4
                            _gps_ano
                            _gps_dia
                           _gps_hora
                            _gps_mes
                        _gps_minutos
                       _gps_segundos
 ---------------------------------------------------------------------------------
 (7) _gps_segundos                                         4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_minutos                                          4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_mes                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_hora                                             4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_dia                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _gps_ano                                              4     2      2       0
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _data_nome                                            3     1      2     223
                                              9 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _desliga_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_SPI                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dados_gps_to_sd                                      0     0      0    2693
                           _monta_sd
 ---------------------------------------------------------------------------------
 (4) _monta_sd                                             5     3      2    2693
                                             15 COMRAM     5     3      2
                             ___wmul (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     5      3    2547
                                             15 COMRAM     8     5      3
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      99
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1754
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _isr                                                 7     7      0     292
                                              2 COMRAM     7     7      0
                   _recebe_dado_uart
                    _tratamento_uart
                 i2_write_timer_zero
 ---------------------------------------------------------------------------------
 (18) i2_write_timer_zero                                  2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _tratamento_uart                                     1     1      0     154
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) _recebe_dado_uart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escalonador
     _disparo_gravacao *
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _dados_gps_to_sd
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
       _fix
       _grava_sd
         _desliga_SPI
         _desliga_uart
         _escrita_sdcard
           _data_nome
           _f_close
             _f_sync
               _get_fattime
                 _gps_ano
                 _gps_dia
                 _gps_hora
                 _gps_mes
                 _gps_minutos
                 _gps_segundos
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _sync
                 _disk_ioctl
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _validate
                 _disk_status
                   _sdc_disk_status
           _f_lseek
             ___lldiv
             _create_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _get_cluster
               ___wmul
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
             _validate
               _disk_status
                 _sdc_disk_status
           _f_mount
           _f_open
             _auto_mount
               ___lldiv
               ___lmul
               _check_fs
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcmp
               _disk_initialize
                 _sdc_disk_initialize
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_frase_ram_lcd
                     _escreve_caractere_lcd
                       _delay
                   _posicao_cursor_lcd
                     _endereco_cursor_lcd
                       _delay
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
                   _sdc_reset
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _escreve_frase_ram_lcd
                       _escreve_caractere_lcd
                         _delay
                     _posicao_cursor_lcd
                       _endereco_cursor_lcd
                         _delay
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _disk_status
                 _sdc_disk_status
               _memset
             _get_fattime
               _gps_ano
               _gps_dia
               _gps_hora
               _gps_mes
               _gps_minutos
               _gps_segundos
             _memcpy
             _memset
             _move_window
               _disk_read
                 _sdc_disk_read
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
             _remove_chain
               _get_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
               _put_cluster
                 ___wmul
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
             _reserve_direntry
               _clust2sect
                 ___lmul
               _create_chain
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                 _put_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
               _disk_write
                 _sdc_disk_write
                   _command
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _wait_ready
                       _leitura_SPI
                   _dummy_clocks
                     _leitura_SPI
                   _escreve_SPI
                   _leitura_SPI
                   _proceed
                     _escreve_SPI
                   _response
                     _leitura_SPI
               _memset
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
             _trace_path
               _clust2sect
                 ___lmul
               _make_dirfile
                 _memset
               _memcmp
               _move_window
                 _disk_read
                   _sdc_disk_read
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
               _next_dir_entry
                 _clust2sect
                   ___lmul
                 _get_cluster
                   ___wmul
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
           _fprintf
             ___lldiv
             ___llmod
             ___wmul
             _fputc
               _f_write
                 _clust2sect
                   ___lmul
                 _create_chain
                   _get_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                   _put_cluster
                     ___wmul
                     _move_window
                       _disk_read
                         _sdc_disk_read
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                       _disk_write
                         _sdc_disk_write
                           _command
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _wait_ready
                               _leitura_SPI
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _leitura_SPI
                           _proceed
                             _escreve_SPI
                           _response
                             _leitura_SPI
                 _disk_write
                   _sdc_disk_write
                     _command
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _wait_ready
                         _leitura_SPI
                     _dummy_clocks
                       _leitura_SPI
                     _escreve_SPI
                     _leitura_SPI
                     _proceed
                       _escreve_SPI
                     _response
                       _leitura_SPI
                 _memcpy
                 _move_window
                   _disk_read
                     _sdc_disk_read
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                 _validate
                   _disk_status
                     _sdc_disk_status
             _fputs
               _fputc
                 _f_write
                   _clust2sect
                     ___lmul
                   _create_chain
                     _get_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                     _put_cluster
                       ___wmul
                       _move_window
                         _disk_read
                           _sdc_disk_read
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                         _disk_write
                           _sdc_disk_write
                             _command
                               _dummy_clocks
                                 _leitura_SPI
                               _escreve_SPI
                               _wait_ready
                                 _leitura_SPI
                             _dummy_clocks
                               _leitura_SPI
                             _escreve_SPI
                             _leitura_SPI
                             _proceed
                               _escreve_SPI
                             _response
                               _leitura_SPI
                   _disk_write
                     _sdc_disk_write
                       _command
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _wait_ready
                           _leitura_SPI
                       _dummy_clocks
                         _leitura_SPI
                       _escreve_SPI
                       _leitura_SPI
                       _proceed
                         _escreve_SPI
                       _response
                         _leitura_SPI
                   _memcpy
                   _move_window
                     _disk_read
                       _sdc_disk_read
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                     _disk_write
                       _sdc_disk_write
                         _command
                           _dummy_clocks
                             _leitura_SPI
                           _escreve_SPI
                           _wait_ready
                             _leitura_SPI
                         _dummy_clocks
                           _leitura_SPI
                         _escreve_SPI
                         _leitura_SPI
                         _proceed
                           _escreve_SPI
                         _response
                           _leitura_SPI
                   _validate
                     _disk_status
                       _sdc_disk_status
           _gps
             _fix
             _get_fix
             _get_gpstime
             _get_latitude
             _get_longitude
             _get_rawdate
             _get_rawspeed
           _hora_nome
           _strcat
         _inicializa_SPI
         _inicializa_uart
           _configura_baudrate_uart
             ___aldiv
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _monta_sd
         ___wmul (ARG)
         _strlen (ARG)
       _recebe_dado_gps
         _verifica_recep_gps
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
     _troca_de_tela *
       _escreve_caractere_lcd
         _delay
       _escreve_cmd_lcd
         _delay
       _escreve_frase_ram_lcd
         _escreve_caractere_lcd
           _delay
       _escreve_inteiro_lcd
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fix
       _mostra_dados_display
         _escreve_frase_ram_lcd
           _escreve_caractere_lcd
             _delay
         _posicao_cursor_lcd
           _endereco_cursor_lcd
             _delay
       _posicao_cursor_lcd
         _endereco_cursor_lcd
           _delay
       _recebe_dado_gps
         _verifica_recep_gps
     _verifica_dados_operacionais *
       _Speed
       ___awtoft
         ___ftpack
         _atoi (ARG)
           ___wmul
           _isdigit
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftpack (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           _atoi (ARG)
             ___wmul
             _isdigit
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _atoi (ARG)
               ___wmul
               _isdigit
           ___ftpack (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         _atoi (ARG)
           ___wmul
           _isdigit
       _atoi
         ___wmul
         _isdigit
       _latitude
       _longitude
       _rawdata
       _rawhora
       _strcpy
         _latitude (ARG)
         _longitude (ARG)
         _rawdata (ARG)
         _rawhora (ARG)
       _verifica_fence
         _latitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _longitude_to_convert
           _armazena_ltlo
             _diferenca
               _convert_to_int
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_lat
                 _atol
                   ___lmul
                   _isdigit
               _convert_to_int_point_long
                 _atol
                   ___lmul
                   _isdigit
         _monta_sd
           ___wmul (ARG)
           _strlen (ARG)
         _recebe_dado_gps
           _verifica_recep_gps
         _verifica_plausibilidade_lat
           _posicao_lat
         _verifica_plausibilidade_long
           _posicao_long
   _gps
     _fix
     _get_fix
     _get_gpstime
     _get_latitude
     _get_longitude
     _get_rawdate
     _get_rawspeed
   _inicializa_tarefas
   _inicializa_uart
     _configura_baudrate_uart
       ___aldiv
   _init_hardware
     _config_timer_dois
     _config_timer_zero
       _write_timer_zero
     _init_interrupt
     _init_oscilador
     _init_ports
   _init_lcd
     _delay
     _escreve_cmd_lcd
       _delay
   _mensagem_inicial
     _escreve_cmd_lcd
       _delay
     _escreve_frase_ram_lcd
       _escreve_caractere_lcd
         _delay
     _posicao_cursor_lcd
       _endereco_cursor_lcd
         _delay

 _isr (ROOT)
   _recebe_dado_uart
   _tratamento_uart
   i2_write_timer_zero

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     220      21       26.6%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      96      11       58.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     13      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37F      20        0.0%
DATA                 0      0     59F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Jun 19 14:20:30 2022

                              next_dir_entry@idx 007C                                     ?_get_rawdate 0001  
                       __end_of_mensagem_inicial 4734                              next_dir_entry@clust 007A  
                                 ?_get_longitude 0001                                    ?_get_rawspeed 0001  
                                    _SSPSTATbits 000FC7                                 ??_init_interrupt 000A  
                                             l68 5AA6                     __size_of_escreve_inteiro_lcd 003E  
                                             _fs 0396                                               _lo 0198  
                                             _lt 01B2                              ___wmul@multiplicand 000C  
                                    _put_cluster 237C                                 disk_write@sector 002B  
                                   ?_escalonador 0001                                   create_chain@fs 007E  
                               disk_write@result 0032                                 ?_inicializa_uart 0001  
                                            l200 489C                                              l201 48A4  
                                            l202 48A6                                              l203 48AE  
                                            l220 4CF0                                              l204 48B0  
                                            l221 4CF8                                              l213 4CC4  
                                            l205 48B8                                              l222 4CFA  
                                            l206 48BA                                              l223 4D02  
                                            l215 4CCE                           __size_of_troca_de_tela 0286  
                                            l144 2CAC                                              l224 4D04  
                                            l232 4EBA                                              l225 4D0C  
                                            l217 4CD8                                              l250 4C16  
                                            l242 4BE2                                              l226 4D0E  
                                            l218 4CDA                                              l251 4C18  
                                            l219 4CEE                                              l252 4C20  
                                            l244 4BEC                                              l181 5AC6  
                                            l253 4C22                                              l254 4C2A  
                                            l246 4BF6                                              l183 5ACC  
                                            l255 4C2C                                              l191 4866  
                                            l256 4C34                                              l248 4C00  
                                            l257 4C36                                              l249 4C02  
                                            l193 4870                                              l195 487A  
                                            l197 4884                                              l702 4F7E  
                                            l198 4886                                              l199 489A  
                                            l800 5C02                                              l806 5BB4  
                                            l913 2E1C                                              l916 2E14  
                                            l686 55BE                                              l990 3440  
                                            l987 3492                                              _PCL 000FF9  
                                            _PR2 000FCB                                              _E_W 00FA  
                            _latitude_to_convert 4AE4                                              _fil 017C  
                               ??_init_oscilador 000A                                              _fix 5C46  
                                            _n_s 00FB                                              _gps 5650  
                                            _isr 0008                                ??_tratamento_uart 0001  
                                            _vel 01DE                    __size_of_longitude_to_convert 007A  
                                   disk_read@res 0034                                              prod 000FF3  
                                 ??_create_chain 007A                                              tosl 000FFD  
                                            wreg 000FE8                                     get_fix@index 000B  
                                ?_verifica_fence 0001                        __size_of_write_timer_zero 000A  
                                create_chain@mcl 007C                                  create_chain@ncl 0084  
                                create_chain@scl 0082                          ??_escreve_frase_ram_lcd 000F  
                                           l1104 13C4                                             l1114 150A  
                                           l1241 5536                                             l1074 077A  
                                           l1192 0D90                                             l2224 516A  
                                           l2153 4DDA                                             l1274 1118  
                                           l2234 54D8                                             l1099 1398  
                                           l1291 1260                                             l1188 0B80  
                                           l2422 334C                                             l2436 3988  
                                           l1573 4F58                                             l2454 453E  
                                           l1772 4A58                                             l2468 3F7A  
                                           ?_fix 000A                                             ?_gps 0001  
                                           ?_isr 0001                                             l9502 3CF4  
                                           l9280 42D8                                             l9290 4334  
                                           l9282 42E2                                             l9522 3D4E  
                                           l9292 433E                                             l9284 4300  
                                           l9532 3D76                                             l9508 3D1C  
                                           l9526 3D5E                                             l9288 4316  
                                           l9552 562C                                             l9536 3D86  
                                           l9562 3FC4                                             l9580 4018  
                                           l9590 4030                                             l9592 403C  
                                           l9584 4028                            _escreve_caractere_lcd 4BD2  
                                           l9598 4058                                             STR_1 61EB  
                                           STR_2 618C                                             STR_3 621E  
                                           STR_4 61E0                                             STR_5 61AB  
                                           STR_6 6177                                             STR_7 61BA  
                                           STR_8 6214                                             STR_9 620A  
                                 timer_dois@flag 00F7                                             _BRGH 007D62  
                                           _CREN 007D5C                                             _T0IF 007F92  
                                   ?_escreve_SPI 0001                                             _LATB 000F8A  
                                           _PIE1 000F9D                                             _RCIF 007CF5  
                                           _TMR0 000FD6                                             _TMR2 000FCC  
                                           _SPEN 007D5F                                             _TXEN 007D65  
                                           _SYNC 007D64                                     trace_path@dj 007E  
                                   trace_path@fn 007F                                     trace_path@ds 008F  
                                   trace_path@fs 008B                                    ?_make_dirfile 0012  
                                           _Term 00FC                                             _dado 0110  
                                           _data 01D8                                             _atoi 31F4  
                                           _atol 3878                                             _main 577C  
                                           _fsid 0172                                             _hora 01CA  
                                   ___ftpack@arg 000A                                             _itoa 55DE  
                                   ___ftpack@exp 000D                                             _ltoa 545E  
                        __end_of_fence_diff_long 614F                                             fsr1h 000FE2  
                                           fsr2h 000FDA                                             indf1 000FE7  
                                           indf2 000FDF                                             fsr1l 000FE1  
                                           fsr2l 000FD9                                             btemp 0056  
                                           _utoa 44BE                                             _sync 51C6  
                                  disk_ioctl@cmd 000A                                    disk_read@buff 0029  
                                  disk_ioctl@res 000E                                   ??_get_latitude 000A  
                                  disk_read@pdrv 0031                             ?_latitude_to_convert 0001  
                                           prodh 000FF4                                             prodl 000FF3  
                   tratamento_uart@received_char 0001                            get_latitude@index_lat 000A  
                                           start 000E                                      gps@flag_fix 000D  
                              disparo_gravacao@i 02F9                                     ___ftmul@cntr 0029  
                      sdc_disk_initialize@buff_i 0025                                     ___param_bank 000000  
                                   ___ftmul@sign 002A                        sdc_disk_initialize@count1 0021  
                      sdc_disk_initialize@count2 0027                                      _string_dado 0200  
                                 ??_get_rawspeed 000A                              diferenca@valor_long 003A  
                                   ___fttol@exp1 0039                                            ??_fix 000C  
                                          ??_gps 000C                                     ___fttol@lval 0035  
                                          ??_isr 0003                          __size_of_escrita_sdcard 014C  
               __size_of_configura_baudrate_uart 0108                         __size_of_recebe_dado_gps 0020  
                     ??_convert_to_int_point_lat 0028                                            l11100 5AAA  
                                          l10320 2C74                                            l11032 1ADE  
                                          l11200 01FE                                            l10170 55CA  
                                          l10242 3A00                                            l10402 4C9A  
                                          l10306 2C54                                            l10410 526C  
                                          l11042 1B0A                                            l11026 1AD0  
                                          l11210 02E4                                            l10252 3A36  
                                          l10260 3A4A                                            l11140 4736  
                                          l11052 1B30                                            l11132 5810  
                                          l12012 09DA                                            l10414 5298  
                                          l12030 37BC                                            l12006 09C4  
                                          l10192 4F78                                            l10264 3A5C  
                                          l10248 3A12                                            l10352 2D18  
                                          l10432 529C                                            l10512 4BEE  
                                          l11136 5820                                            l11240 0476  
                                          l12112 41E0                                            l10178 5696  
                                          l10258 3A44                                            l10338 2CF4  
                                          l11146 47A4                                            l11306 5908  
                                          l11226 03AA                                            l11218 033A  
                                          l12050 507E                                            l13002 4E8E  
                                          l10268 3A72                                            l11340 51FC  
                                          l12044 3874                                            l11148 47AC  
                                          l10516 4BF8                                            l10508 4BE4  
                                          l11068 1B8C                                            l11308 590E  
                                          l11324 5912                                            l12300 1460  
                                          l12132 4DCC                                            l12124 4D98  
                                          l11244 04F2                                            l11228 03B8  
                                          l11252 0526                                            l12116 41F6  
                                          l12108 41D2                                            l12060 406E  
                                          l10278 3AA2                                            l10382 4C74  
                                          l10710 2402                                            l10702 23A2  
                                          l12230 5368                                            l11510 499A  
                                          l10630 4EE2                                            l10622 4EC6  
                                          l11086 1BEC                                            l11078 1BB2  
                                          l11502 34AC                                            l11414 33EA  
                                          l12302 148E                                            l12126 4DA4  
                                          l11262 0594                                            l11190 01A6  
                                          l12054 50AC                                            l10368 2D66  
                                          l10560 2B2E                                            l10552 2AAA  
                                          l10608 5764                                            l11600 4A0A  
                                          l10480 4CD0                                            l10640 4F0A  
                                          l11176 00CC                                            l12056 50B4  
                                          l11280 38CC                                            l12152 48EC  
                                          l12216 5900                                            l13032 4B66  
                                          l10386 4C78                                            l10378 4C48  
                                          l10298 2C04                                            l10466 5BA6  
                                          l11602 4A16                                            l12226 5350  
                                          l11514 499E                                            l10650 519E  
                                          l10626 4ED4                                            l11362 3106  
                                          l12314 14E8                                            l11258 0582  
                                          l12090 4170                                            l11290 38FE  
                                          l12066 40D0                                            l12074 4132  
                                          l12170 4924                                            l12146 48E4  
                                          l13042 4B80                                            l13130 4868  
                                          l13212 31F6                                            l10556 2B26  
                                          l11612 4A4A                                            l10740 2550  
                                          l10716 2444                                            l10820 2DFE  
                                          l10812 2DD0                                            l12236 5388  
                                          l10476 4CC6                                            l11460 3438  
                                          l11452 3428                                            l11444 3418  
                                          l12252 1300                                            l11188 0186  
                                          l12084 4158                                            l11284 38F4  
                                          l12164 491C                                            l13028 4EA6  
                                          l13230 32B8                                            l13214 3202  
                                          l10590 5750                                            l10718 2478  
                                          l11526 49E4                                            l10646 5176  
                                          l10638 4EF0                                            l10910 542C  
                                          l12334 151E                                            l12502 0FEC  
                                          l11622 5724                                            l12158 4910  
                                          l13134 4872                                            l13224 3282  
                                          l10568 2B7C                                            l10592 5758  
                                          l10904 53D0                                            l10736 2526  
                                          l10824 2E24                                            l12440 0DAE  
                                          l12424 0D44                                            l11456 3430  
                                          l12512 1016                                            l11640 588C  
                                          l12096 4192                                            l11296 3944  
                                          l11560 5050                                            l12176 4948  
                                          l12184 4954                                            l13056 4B9C  
                                          l13234 3304                                            l13226 3290  
                                          l10578 2BD0                                            l10682 2784  
                                          l10658 2632                                            l10754 25B8  
                                          l12450 0E00                                            l11378 31DE  
                                          l11482 3472                                            l11474 345A  
                                          l11394 3380                                            l12282 13A0  
                                          l12522 1058                                            l11706 56C4  
                                          l12098 419E                                            l11554 5024  
                                          l12186 495E                                            l13066 4BB2  
                                          l13138 487C                                            l13242 57B4  
                                          l13410 1D8C                                            l10596 575C  
                                          l10692 27EC                                            l10756 25D4  
                                          l10836 2E52                                            l12436 0DA4  
                                          l10764 50DC                                            l11724 458E  
                                          l11716 456C                                            l11492 3490  
                                          l11484 3474                                            l11804 2056  
                                          l12620 1286                                            l12612 124E  
                                          l12540 10B2                                            l12516 102C  
                                          l11652 5304                                            l12380 5862  
                                          l11580 4FCC                                            l13092 4BC8  
                                          l13244 57BC                                            l13420 1DCA  
                                          l12366 58B6                                            l10678 2764  
                                          l10694 2806                                            l10854 2E88  
                                          l10774 47D6                                            l10950 1974  
                                          l10918 544C                                            l11734 45D2  
                                          l11822 208E                                            l12550 10F0  
                                          l12534 1082                                            l12390 53DE  
                                          l10928 5AF6                                            l10872 2F02  
                                          l12448 0DEC                                            l10768 50F0  
                                          l10944 1960                                            l11912 0610  
                                          l11904 05B8                                            l11736 45DA  
                                          l11840 2190                                            l11816 207A  
                                          l11808 2062                                            l11760 1F42  
                                          l12616 126C                                            l12560 110C  
                                          l11664 533C                                            l11672 52BC  
                                          l12392 53E2                                            l13432 1DF2  
                                          l12458 0E72                                            l12474 0F6C  
                                          l12466 0F06                                            l10778 47F4  
                                          l10954 1980                                            l11922 0634  
                                          l11906 05BE                                            l11842 21A2  
                                          l12570 113C                                            l12626 12C2  
                                          l12482 0F92                                            l12394 53F2  
                                          l11586 4FF8                                            l12706 3F10  
                                          l13450 1E38                                            l13418 1DC6  
                                          l12636 54EC                                            l12820 16E6  
                                          l12804 1680                                            l10868 2EC4  
                                          l10796 484E                                            l10964 19B4  
                                          l11940 0664                                            l10884 425A  
                                          l11772 1F60                                            l11764 1F46  
                                          l12556 1100                                            l11684 52F4  
                                          l11692 56F4                                            l12396 53FA  
                                          l12652 3CB4                                            l13268 2F20  
                                          l13452 1E3C                                            l13372 1CA2  
                                          l13380 1CD0                                            l12638 54F0  
                                          l12830 1748                                            l12814 16E2  
                                          l10974 19D8                                            l11950 0692  
                                          l11862 223C                                            l11838 216A  
                                          l11790 1FF6                                            l12486 0F9C  
                                          l12662 5138                                            l12750 4B48  
                                          l13462 1E7C                                            l13358 1C2A  
                                          l12840 17A0                                            l12824 173A  
                                          l12808 16D4                                            l11936 0660  
                                          l11872 227E                                            l11848 21CC  
                                          l12592 11AC                                            l12576 1160  
                                          l12664 5140                                            l13720 55FA  
                                          l12728 547E                                            l13288 3086  
                                          l13800 4418                                            l10898 53C0  
                                          l11858 2238                                            l11786 1FEA  
                                          l11778 1F8A                                            l12578 1178  
                                          l12674 5160                                            l12690 54CE  
                                          l12682 54AE                                            l12738 4AEE  
                                          l12762 4A74                                            l12836 174C  
                                          l11884 230E                                            l12588 11A0  
                                          l12684 54B6                                            l13396 1D14  
                                          l13812 44B4                                            l12862 1814  
                                          l12854 17D8                                            l12846 17AE  
                                          l12782 1616                                            l10998 1A58  
                                          l11958 069C                                            l11894 234A  
                                          l11798 2038                                            l12598 11DC  
                                          l12934 365E                                            l12774 4ACE  
                                          l13830 5794                                            l12848 17D4  
                                          l12792 166E                                            l11976 0732  
                                          l11968 0710                                            l12696 3EC0  
                                          l13752 28FE                                            l12882 1858  
                                          l13746 2878                                            l12876 1854  
                                          l12868 1818                                            l12788 161A  
                                          l12948 3726                                            l13684 44C6  
                                          l12972 5A74                                            l13836 57A4  
                                          l12798 167C                                            l11998 08B6  
                                          l13694 4500                                            l13774 2A1A  
                                          l12888 18D2                                            l12896 18E0  
                                          l12968 5A6C                                            l13768 29F8  
                                          l13776 2A1E                                            l12978 4E58  
                                          l12988 4E72                                  __end_of___aldiv 4208  
                                          ?_atoi 0010                                            ?_atol 0016  
                                          ?_main 0001                                            ?_itoa 001A  
                                          STR_10 6231                                            ?_ltoa 0023  
                                          STR_11 6266                                            STR_20 627A  
                                          STR_12 619C                                            STR_21 6226  
                                          STR_13 61F6                                            STR_30 626F  
                                          STR_22 6249                                            STR_14 6200  
                                          STR_31 626B                                            STR_23 6261  
                                          STR_15 6256                                            STR_24 627C  
                                          STR_32 6228                                            STR_16 61C8  
                                          STR_17 6273                                            STR_25 6242  
                                          STR_33 623A                                            STR_26 6249  
                                          STR_18 6277                                            STR_27 6250  
                                          STR_19 61D5                                            STR_28 627C  
                                          STR_29 625C                                     ?_leitura_SPI 0001  
                                          u10010 42CA                                  __end_of___lldiv 4A6A  
                                          ?_utoa 0011                                            u10050 4348  
                                          ?_sync 0001                                            u10411 3D04  
                                          u12020 4814                                  __end_of___ftmul 3DC0  
                                          u12110 2E48                                            u10520 4042  
                                          _T0CON 000FD5                                            u11340 56B8  
                                          u12220 53BC                                            u12060 2DBA  
                                          u12300 19A0                                            u10461 3FA8  
                                          u12070 2DC6                                            u12310 19AC  
                                          u10470 3FB2                                            u12311 19AA  
                                          u10391 3CDC                                            u11360 4F88  
                                          u11520 2D72                                            u12080 2DF2  
                                          u13200 499A                                            u10480 3FE2  
                                __end_of___llmod 4DEC                                            u12330 19F8  
                                          u12180 2EF0                                            u10485 3FDA  
                                __end_of___fttol 406A                                            u11390 3A0C  
                                          u11710 2A68                                            u12510 4762  
                                          u11375 39B2                                            u11800 51BE  
                                          u12440 1B56                                            _T2CON 000FCA  
                                          u11465 2C28                                            u11730 2AA6  
                                          u12530 4794                                            u12370 1A86  
                                          u12290 1990                                            u14050 41A2  
                                          u13235 3510                                            u13340 4A1A  
                                          u11820 25FC                                            u15020 5144  
                                          u13245 352C                                            u12517 4758  
                                          u12390 1A92                                            u13270 552C  
                                          u13255 355C                                            u11495 2CC8  
                                          u11807 51B4                                            u16000 3324  
                                          u11920 23FE                                            u12480 1BC8  
                                          u13440 458A                                            u14320 13C0  
                                          u13265 357C                                            u12537 478A  
                                          u12705 0326                                            u15210 163A  
                                          u12490 1BF8                                            u14250 12FC  
                                          u14090 4DA8                                            u15050 54BA  
                                          u12810 38EC                                            u11915 23D2  
                                          u13460 45C0                                            u13700 227A  
                                          u11845 2662                                            u15310 1738  
                                          u15230 166C                                            u11790 5196  
                                          u13470 45E6                                            u14350 145C  
                                          u12750 052E                                            u16007 331A  
                                          u13535 1FA8                                            u15400 1844  
                                          u14600 0E0E                                            u13480 45FE  
                                          u12920 3184                                            u13640 21C8  
                                          u15217 1630                                            u11865 26DE  
                                          u11945 24A4                                            u12905 3112  
                                          u12665 024C                                            u12817 38E2  
                                          u15330 176C                                            u15250 16A0  
                                          u12850 51F8                                            u13490 1F2C  
                                          u12770 3898                                            u16210 1D40  
                                          u15420 1878                                            u14620 0E86  
                                          u13900 072E                                            u12940 33B6  
                                          u16220 1D7C                                            u16140 1C06  
                                          u15317 172E                                            u15237 1662  
                                          u14525 0BF4                                            u11797 518C  
                                          u15350 179E                                            u15270 16D2  
                                          u14630 0ECC                                            u13830 065C  
                                          u13750 05DE                                            u13670 222A  
                                          u14390 1506                                            u15407 183A  
                                          u11895 2770                                            u11975 2532  
                                          u13655 21EA                                            u15440 189E  
                                          u12960 33C6                                            u14720 1064  
                                          u16240 1DD6                                            u15337 1762  
                                          u15257 1696                                            u13497 1F22  
                                          u12777 388E                                            u15370 17CE  
                                          u15290 1706                                            u13770 0604  
                                          u12890 3102                                            u16218 1D42  
                                          u16170 1C56                                            u15427 186E  
                                          u14635 0EC2                                            u12947 33AC  
                                          u15460 18D0                                            u15380 1804  
                                          u13940 09C0                                            u16228 1D7E  
                                          u16180 1C92                                            u16500 46B2  
                                          u15357 1794                                            u15277 16C8  
                                          u13757 05D4                                            u13950 09D8  
                                          u15630 4B78                                            u16510 46CE  
                                          u15447 1894                                            u13935 08CE  
                                          u14920 12A2                                            u14760 10EE  
                                          u15640 4B7C                                            u15560 4E6E  
                                          u15377 17C4                                            u15297 16FC  
                                          u13777 05FA                                            u14930 5510  
                                          u14690 0FE2                                            u16178 1C58  
                                          u15467 18C6                                            u15387 17FA  
                                          u15900 4F46                                            u16188 1C94  
                                          u13965 0A5E                                            u15910 3222  
                                          u14870 1232                                            u15590 4EA0  
                                          u14937 5506                                            u15930 3248  
                                          u14955 3BD6                                            u16707 465C  
                                          u15860 48DC                                            u15917 3218  
                                          u16717 192E                                            u14965 3C0E  
                                          u15950 327A                                            u16590 2874  
                                          u16727 1A98                                            u15871 556E  
                                          u16648 4474                                            u15937 323E  
                                          u16737 1B36                                            u14985 3C50  
                                          u16649 4486                                            u15970 32B0  
                                          u16747 55AA                                            u14995 3C88  
                                __end_of___lwdiv 5174                                            u15957 3270  
                                          u16677 470A                                            u15990 32EC  
                                          u16687 4624                                            u15977 32A6  
                                          u16697 4640                                            u15997 32E2  
                                __end_of___lwmod 54E2                                            i2l444 3BB6  
                                          i2l439 3B44                                            _RCREG 000FAE  
                                   ?_gps_minutos 000A                                            _RCSTA 000FAB  
                                          _SPBRG 000FAF                                            _TRISA 000F92  
                                          _TRISB 000F93                                            _TRISC 000F94  
                                          _TRISD 000F95                                            _TRISE 000F96  
                                __end_of_f_close 585E                                    trace_path@dir 0082  
                                          _TXSTA 000FAC                                            _FatFs 004D  
                                __end_of_f_lseek 0F7E                              ___lmul@multiplicand 000E  
                     __size_of_config_timer_dois 000E                                  __end_of_f_mount 538C  
                                ??_armazena_ltlo 0040                                  __end_of_f_write 05A8  
                     __size_of_config_timer_zero 001A                                            _Speed 5C3C  
                                  get_cluster@bc 006F                                  __end_of_get_fix 574C  
                                  get_cluster@fs 0071                                    get_cluster@wc 0069  
                                __end_of_command 4FC4                                    ___awtoft@sign 001B  
                                          _delay 5AC2                                  clust2sect@clust 0016  
                                          _fence 00F5                                  __end_of_gps_dia 5A40  
                                __end_of_gps_ano 5A62                                  __end_of_gps_mes 5A1E  
                                __end_of_fprintf 12CC                                            _fputc 5524  
                                          _fputs 5074                                  __end_of_isdigit 5AFE  
                       __size_of_escreve_cmd_lcd 008C                                    ___ftpack@sign 000E  
                                          atoi@a 0016                                            _teste 0174  
                                          atol@a 001F                                            atol@c 0023  
                                          atoi@s 0010                                            atol@s 0016  
                                          _ultoa 3EB0                                  __end_of_rawdata 5C28  
                                 ??_make_dirfile 0014                                  __end_of_rawhora 5C1E  
                                 disk_ioctl@buff 000B                                            pclath 000FFA  
                                 disk_read@count 002F                                            tablat 000FF5  
                                 disk_ioctl@pdrv 000D                                 ?_dados_gps_to_sd 0001  
                                __end_of_proceed 5BFE                                            plusw1 000FE3  
                                          plusw2 000FDB                                            ttemp5 0057  
                                          ttemp6 005A                                            ttemp7 005E  
                                          utoa@c 0019                            longitude_to_convert@i 006C  
                          longitude_to_convert@j 006B                                            utoa@v 0017  
                                          status 000FD8                                    _troca_de_tela 1BFC  
                                          wtemp8 0057                            ??_latitude_to_convert 0042  
                                  disk_write@res 0034                                  __initialization 4368  
                                ??_get_longitude 000A                              disk_initialize@pdrv 002A  
                            disk_initialize@stat 002B                                     __end_of_atoi 3356  
                                   __end_of_atol 399A                                     __end_of_main 57AA  
                                   clust2sect@fs 001F                                     __end_of_itoa 5618  
                                   __end_of_ltoa 54A0     verifica_dados_operacionais@contador_anterior 00F0  
                                   __end_of_utoa 4562                                     __end_of_sync 5218  
                             _inicializa_tarefas 5218                                  escalonador@cont 00E6  
                        get_rawspeed@index_speed 000A                                 get_gpstime@index 000A  
        convert_to_int_point_lat@convert_str_lat 0028                              reserve_direntry@dir 0087  
                              create_chain@clust 0078                                      auto_mount@p 0082  
                              create_chain@cstat 0080                                    sdc_reset@buff 001C  
                                         ??_atoi 0013                                           ??_atol 001A  
                                         ??_main 004D                                    ___fttol@sign1 0034  
                                         ??_itoa 0020                                           ??_ltoa 002A  
                                         ??_utoa 0017                                           ??_sync 004A  
                                  __activetblptr 000003                              ?_inicializa_tarefas 0001  
                           __end_of_desliga_uart 5B88                      ??_convert_to_int_point_long 0028  
                                         ?_Speed 000A                                   _next_dir_entry 308E  
                           __size_of_desliga_SPI 0010                                get_fattime@f_time 0038  
                               ??_sdc_disk_write 001D                                           ?_delay 0001  
                         ?_escreve_caractere_lcd 0001                                           _ADCON1 000FC1  
                                         ?_fputc 00A4                                 ___llmod@dividend 000A  
                                         ?_fputs 00AB                                   _convert_to_int 5974  
                             auto_mount@bootsect 007A                                 __end_of___awtoft 5650  
                               __end_of___ftpack 4368                                           ?_ultoa 0017  
                                         _INT0IE 007F94                                           _INT0IF 007F91  
                                  ?_dummy_clocks 0001                                   armazena_ltlo@i 0041  
                                 armazena_ltlo@j 0040                                           i2l1545 3E9C  
                                         _PCLATH 000FFA                                           _INTCON 000FF2  
                                         i2l9902 3B72                                           i2l9904 3B8A  
                                         i2l9884 3B00                                           i2l9876 3ADE  
                                         i2l9894 3B50                                           i2l9886 3B18  
                      convert_to_int_point_lat@i 0034                        convert_to_int_point_lat@j 0033  
                        __size_of_inicializa_SPI 0020                                   ?_troca_de_tela 0001  
                                         _TMR0IF 007F92                               auto_mount@maxclust 0076  
                       __end_of_recebe_dado_uart 5B9A                                           _SPPCFG 000F63  
                                         _SPPCON 000F65                                    ?_gps_segundos 000A  
                               _is_it_gga_string 0055                                           _SSPBUF 000FC9  
                       __size_of_sdc_disk_status 0010                                 __end_of_check_fs 49E8  
                           ??_inicializa_tarefas 000A                                ?_disparo_gravacao 0001  
                                 trace_path@dptr 0090                                   trace_path@path 0080  
                         reserve_direntry@sector 008C                         __size_of_disk_initialize 0026  
                             get_longitude@index 000B                       __end_of_posicao_cursor_lcd 4F0E  
                             ??_disparo_gravacao 00DF                                   auto_mount@path 003D  
                                   ?_move_window 0035                             __end_of_create_chain 2F0C  
                                   _dado_arquivo 0242                           __size_of_init_hardware 0016  
                                 auto_mount@stat 0085                             __size_of_get_fattime 0154  
                                   put_cluster@p 0074                     ?_verifica_dados_operacionais 0001  
                           __size_of_get_cluster 0228                                           ___lmul 50CC  
                                      ??___aldiv 0012                             __size_of_disk_status 0030  
                                         ___wmul 592A                                        ??___lldiv 0012  
                                      ??___ftmul 0022                                           _f_open 12CC  
                                      ??___llmod 0012                                        ??___fttol 002F  
                                      ??___lwdiv 000E                                 __end_of_grava_sd 5B4E  
                           __size_of_get_gpstime 002A                                           _f_sync 3750  
                                      ??___lwmod 000E                                           _buffer 0236  
                           __size_of_get_rawdate 0030                                 __end_of_latitude 5C3C  
                               __end_of_gps_hora 5974                                           _estado 00F4  
                                         _memcmp 4734                                           _memcpy 541A  
                               __end_of_init_lcd 46A0                                           _memset 5806  
                                      ??_f_close 004C                                           _rawFix 01EA  
                                         clear_0 43C2                                           clear_1 43D4  
                                         clear_2 43E0                                           clear_3 43EC  
                                         clear_4 43F8                                           clear_5 4404  
                                      ??_f_lseek 008C                                        ??_f_mount 000C  
                       configura_baudrate_uart@x 0024                                        ??_f_write 008C  
                                      ??_get_fix 000A                                           _strcat 53D4  
                            _sdc_disk_initialize 1914                                        ??_command 0014  
                                         _strcpy 57AA                                           _strlen 54E2  
                          ___ftmul@f3_as_product 0026                                 put_cluster@clust 0060  
                                      ??_gps_dia 000C                                           fputc@c 00A8  
                             get_cluster@fatsect 006B                                 __end_of_monta_sd 1914  
                                      ??_gps_ano 000C                         __end_of_reserve_direntry 237C  
                                      ??_gps_mes 000C                                 __end_of_validate 53D4  
                         __end_of_next_dir_entry 31F4                                        ??_fprintf 00BB  
                                         fputs@n 00AF                                        ??_isdigit 000A  
                           __size_of_escalonador 00AA                             __end_of_get_latitude 5344  
                               __end_of_response 5BF2                                ??_recebe_dado_gps 000A  
                                      ??_rawdata 000C                                     __mediumconst 6100  
                                disk_read@sector 002B                                        ??_rawhora 000C  
                                disk_read@result 0032                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                         __end_of_convert_to_int 5996                                        ??_proceed 000C  
                               _write_timer_zero 5C0A                                           ultoa@c 0022  
                                   ?_posicao_lat 0001                                           ultoa@v 001E  
                                         sync@fs 004A                        escreve_caractere_lcd@data 000C  
                                 ??_dummy_clocks 000A                             __end_of_get_rawspeed 56EC  
                            _escreve_inteiro_lcd 5564                                  sdc_disk_write@j 0026  
                                 ??_gps_segundos 000C                                       __accesstop 0060  
                        __end_of__initialization 440A                             ?_sdc_disk_initialize 0001  
                                 disk_write@buff 0029                                   disk_write@pdrv 0031  
                           __size_of_escreve_SPI 0010                                    ___rparam_used 000001  
                              ??_escreve_cmd_lcd 000C                     ?_verifica_plausibilidade_lat 0001  
                      _convert_to_int_point_long 4FC4                                       ___awtoft@c 0018  
                                     ___ftmul@f1 001C                                       ___ftmul@f2 001F  
                                     ___fttol@f1 002B                                   __pcstackCOMRAM 0001  
                                  __end_of_Speed 5C46                                  _tratamento_uart 3AB2  
                    __end_of_endereco_cursor_lcd 4D1C                                     __pidataBANK0 5C6C  
                                   __pidataBANK1 5BCA                                     __pidataBANK2 4D1C  
                              ?_mensagem_inicial 0001                          _configura_baudrate_uart 3BC4  
                                  __end_of_delay 5AE0                                   _escrita_sdcard 3604  
                                hora_nome@p_buff 000A                                    __end_of_fputc 5564  
                                  __end_of_fputs 50CC                             ?_escreve_inteiro_lcd 002B  
                  ??_verifica_dados_operacionais 0044                 __end_of_convert_to_int_point_lat 5074  
                             __size_of_data_nome 002A                                    __end_of_ultoa 3F98  
                                 diferenca@index 0035                               ??_mensagem_inicial 0010  
                           __end_of_make_dirfile 34B0                                     ?_put_cluster 0060  
                  __size_of_mostra_dados_display 002E                               __size_of_diferenca 00D2  
                              reserve_direntry@c 0093                                reserve_direntry@n 0090  
                               ??_verifica_fence 0043                          get_longitude@index_long 000A  
                             _tarefa_em_execucao 0052                       __end_ofi2_write_timer_zero 5C5A  
                                ?_next_dir_entry 004C                                 get_rawdate@index 000B  
                         __size_of_sdc_disk_read 0118                  configura_baudrate_uart@baudrate 0018  
                           reserve_direntry@dptr 0091                             __size_of_leitura_SPI 000C  
                                  _init_hardware 5B4E                                     auto_mount@fs 008A  
                             __size_of_disk_read 006E                                          ??_Speed 000C  
                                ?_convert_to_int 0024                       __end_of_verifica_recep_gps 5904  
                           __size_of_gps_minutos 0022                                          ??_delay 000A  
                                 sdc_reset@count 001A                                       _dados_data 02C3  
                                        ??_fputc 004C                                          ??_fputs 004C  
                                     _dados_hora 02D5                                       _dados_long 027E  
                                ??_troca_de_tela 0036                                 _is_it_rmc_string 0054  
                                        ??_ultoa 001E                     mensagem_inicial@msg_linha_um 0012  
                                     __pbssBANK0 00E7                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                                       __pbssBANK3 0300  
                 __size_of_escreve_frase_ram_lcd 0052                    __end_of_escreve_frase_ram_lcd 51C6  
                          ??_sdc_disk_initialize 001D              verifica_plausibilidade_long@posicao 000A  
                             __size_of_hora_nome 002A                     __end_of_longitude_to_convert 4AE4  
                      escreve_inteiro_uart@F3215 01EC                                       _gga_buffer 0300  
                  ??_verifica_plausibilidade_lat 000A                           __end_of_escrita_sdcard 3750  
                             __size_of_sdc_reset 0090                               troca_de_tela@state 0050  
                                        ?___lmul 000A                                ??_sdc_disk_status 000A  
                                  make_dirfile@a 001A                                    make_dirfile@b 0018  
                                  make_dirfile@c 001C                                    make_dirfile@n 001B  
                                  make_dirfile@t 0019                                          ?___wmul 000A  
                          mensagem_inicial@F3677 6112                            mensagem_inicial@F3679 6101  
                          ??_escreve_inteiro_lcd 002F                                          ?_f_open 0098  
                                     _fence_flag 00E7                                          ?_f_sync 0060  
                             __size_of_longitude 000A                                ??_disk_initialize 002A  
                          __size_of_desliga_uart 0012                                          ?_memcmp 000A  
                                        ?_memcpy 000A                                          ?_memset 000A  
                                 ___lmul@product 0012                                        ?___awtoft 0018  
                                      ?___ftpack 000A                                          ?_strcat 000A  
                                        ?_strcpy 000C                                          ?_strlen 000A  
                                   _gga_pointers 0216                                          i2l10100 3E14  
                                        i2l10014 5B96                                          i2l10112 3E5A  
                                        i2l10104 3E42                                          i2l10124 3E88  
                                        i2l10116 3E6A                                          i2l10126 3E94  
                                        i2l10088 3E02                                          _INTCON2 000FF1  
                                        _INTCON3 000FF0                                   ?_init_hardware 0001  
                                      ?_check_fs 0035                                       _disk_ioctl 5AA2  
                                     _disk_write 5268                                   remove_chain@fs 007E  
           __size_of_verifica_dados_operacionais 0182                                          _SSPCON1 000FC6  
                       __size_of_inicializa_uart 0022                                          _SSPSTAT 000FC7  
                                     _clust2sect 4208                                   _inicializa_SPI 5A82  
                                trace_path@clust 008D                                __end_of_data_nome 58DC  
                                      ?_grava_sd 0001                                        ?_latitude 000A  
                                  ?_remove_chain 0078                            __size_of_create_chain 0196  
                                      ?_gps_hora 000A                                        ?_init_lcd 0001  
                        __end_of_tratamento_uart 3BC4                                __end_of_diferenca 413C  
                                  _sdc_disk_read 399A                                     _desliga_uart 5B76  
                                     _auto_mount 05A8                                          __Hparam 0000  
                      ??_configura_baudrate_uart 001C                                          __Lparam 0000  
                                      ?_monta_sd 0010                                        ?_validate 0010  
                                ?_escrita_sdcard 0001                                __end_of_disk_read 4CB2  
                                  put_cluster@bc 0072                                        ?_response 0001  
                                  put_cluster@fs 0076                                          ___aldiv 413C  
                                     f_close@res 004C                                  __size_of___lmul 0056  
                                        ___lldiv 49E8                                  __size_of___wmul 0026  
                                        ___ftmul 3CCC                                          ___llmod 4D86  
                                        ___fttol 3F98                             __size_of_move_window 01AA  
                                     check_fs@fs 003B                                          ___lwdiv 5122  
                                        ___lwmod 54A0                                  __size_of_f_open 033A  
                                __size_of_f_sync 0128                             __end_of_dummy_clocks 55DE  
                          __size_of_get_latitude 0048                                          _f_close 5832  
                                        __pcinit 4368                                  __size_of_memcmp 0092  
                                __size_of_memcpy 0044                                       ??___awtoft 001B  
                                     ??___ftpack 000F                                  __size_of_memset 002C  
                                        _f_lseek 0AF2                                       _init_ports 5AFE  
                                        __ramtop 0800                                          _f_mount 5344  
                                        __ptext0 577C                                          __ptext1 46A0  
                                        __ptext2 4602                                          __ptext3 5B4E  
                                        __ptext4 5AFE                                          __ptext5 5C5A  
                                        __ptext6 5B64                                          __ptext7 5B1A  
                                        __ptext8 5C0A                                          __ptext9 5BD8  
                           __end_of_gps_segundos 59DA                                          _f_write 0012  
                                        _get_fix 571C                                          _command 4F6A  
                                      _T0CONbits 000FD5                              auto_mount@totalsect 007E  
                                __size_of_strcat 0046                                  __size_of_strcpy 002E  
                                __size_of_strlen 0042                                       data_nome@i 000C  
                    endereco_cursor_lcd@endereco 000C                                __end_of_hora_nome 5888  
                                        _gps_dia 5A1E                                          _gps_ano 5A40  
                                        _gps_mes 59FC                                          _fprintf 0F7E  
                                   __size_of_fix 000A                                     __size_of_gps 0036  
                                        _rawDate 01E4                                          _isdigit 5AE0  
                                   __size_of_isr 3EA8             __size_of_verifica_plausibilidade_lat 0074  
                        ??_escreve_caractere_lcd 000C                                       ??_check_fs 0039  
                          __size_of_get_rawspeed 0030                                          _rawTime 01D1  
                               ___aldiv@dividend 000A                                          _rawdata 5C1E  
                                        _rawhora 5C14                                          _time_sd 016E  
                                   _create_chain 2D76                                          _proceed 5BF2  
                        __size_of_init_interrupt 0012                               _point_buff_gps_lat 016A  
                              __end_of_sdc_reset 4856                           __end_of_inicializa_SPI 5AA2  
                          __end_of_armazena_ltlo 4966                      __end_of_latitude_to_convert 4B5E  
                                     f_lseek@ofs 0088                                   __pintcode_body 3DC0  
                                     f_lseek@res 009C                             end_of_initialization 440A  
                              __end_of_longitude 5C32             __end_of_verifica_plausibilidade_long 4EB0  
          __size_of_verifica_plausibilidade_long 0060                     _verifica_plausibilidade_long 4E50  
              __size_of_convert_to_int_point_lat 0058                             __size_of_posicao_lat 0006  
                                     f_open@mode 009C                                       f_open@path 009A  
                      ?_convert_to_int_point_lat 0024                                   ??_remove_chain 007A  
                                        isr@cont 0009                                          memcmp@n 000E  
                                     ??_grava_sd 004D                            get_rawdate@index_date 000A  
                                        memcpy@d 0011                                          memcpy@n 000E  
                                        memcpy@s 0013                          __size_of_init_oscilador 0008  
                                        fputc@bw 00A9                                          itoa@buf 001A  
                                     ??_latitude 000C                                          memset@c 000C  
                                        itoa@val 001C                                          memset@n 000E  
                                     ??_gps_hora 000C                                          memset@p 0010  
                                     ??_init_lcd 000D                                          int_func 3DC0  
                                     _rmc_buffer 0350                                ?_recebe_dado_uart 0001  
                                disk_status@pdrv 000E                                        i2u1117_40 3DF2  
                                      i2u1118_48 3DF4                                  disk_status@stat 000F  
                                 ?_sdc_disk_read 0016                                          ltoa@buf 0023  
                                        ltoa@val 0024                           write_timer_zero@timer0 000A  
                                ___lldiv@divisor 000E                                    _rawSatellites 015F  
                                     f_mount@drv 000C                               ??_recebe_dado_uart 0001  
                                   _get_latitude 52FC                                  ___lldiv@counter 0016  
                                     ??_monta_sd 0012                                       ??_validate 0014  
                          __size_of_make_dirfile 015A                         __size_of_dados_gps_to_sd 0064  
                                 _fence_diff_lat 614F                                       ??_response 000A  
                                      _RCSTAbits 000FAB                         __end_of_write_timer_zero 5C14  
                               ___aldiv@quotient 0014                                          postdec1 000FE5  
                                        postdec2 000FDD                                          postinc0 000FEE  
                                        postinc1 000FE6                                          postinc2 000FDE  
                                _recebe_dado_gps 5A62                            __end_of_get_longitude 52FC  
                                        utoa@buf 0011                                    ?_posicao_long 0001  
                                        utoa@val 0013                                       _wait_ready 5686  
                                   _get_rawspeed 56BC                                          strlen@s 000A  
                  longitude_to_convert@longitude 0060               __size_of_convert_to_int_point_long 0058  
                                      _PORTBbits 000F81                        __size_of_disparo_gravacao 021A  
                                      _PORTDbits 000F83                                        _PORTEbits 000F84  
                                ??_init_hardware 000C                                       _trace_path 1E82  
                             _posicao_cursor_lcd 4EB0                                    ??_desliga_SPI 000A  
                           __size_of_put_cluster 026C                  __end_of_configura_baudrate_uart 3CCC  
                                    ?_disk_ioctl 000A                             _longitude_to_convert 4A6A  
                              ?_reserve_direntry 0086                                       f_write@btw 0089  
                                     f_write@res 0098                                        _TRISBbits 000F93  
                                    ?_disk_write 0029                                        _TRISCbits 000F94  
                                      _TRISDbits 000F95                                 next_dir_entry@dj 004C  
      verifica_dados_operacionais@contador_atual 0051                                  _escreve_cmd_lcd 4856  
                             ??_reserve_direntry 0088                              ?_posicao_cursor_lcd 000D  
                                ?_inicializa_SPI 0001                                  disk_write@count 002F  
                               get_fix@index_fix 000A                                      ?_clust2sect 0016  
                               _put_cluster$1623 006A                                 _put_cluster$1624 006C  
                                     command@CMD 0014                                       command@CRC 0013  
                                     command@arg 000F                                     _make_dirfile 3356  
                  ?_verifica_plausibilidade_long 0001                                    ??_get_fattime 0012  
                               ?_tratamento_uart 0001                                ??_inicializa_uart 0026  
                    __size_of_inicializa_tarefas 0050                                    ??_get_cluster 0060  
                         __end_of_fence_diff_lat 6177                                    ??_disk_status 000C  
                                    ?_auto_mount 003D                                    ??_get_gpstime 000A  
                              _make_dirfile$1733 0016                                      ___ftmul@exp 0025  
                                  ??_get_rawdate 000A                                  command@argument 0015  
                             diferenca@valor_lat 0036                             ??_posicao_cursor_lcd 000E  
                                 ??_posicao_long 000A                                   __end_of___lmul 5122  
                                 _temp_buff_long 0164                                 ??_next_dir_entry 0073  
                                 __end_of___wmul 5950                                   __end_of_f_open 1606  
                                  ??_escalonador 00E4                                      ?_init_ports 0001  
                                 __end_of_f_sync 3878                                 ??_convert_to_int 0028  
                                 __end_of_memcmp 47C6                                   __end_of_memcpy 545E  
                                 __end_of_memset 5832                __end_of_convert_to_int_point_long 501C  
                          ?_longitude_to_convert 0001                                   __end_of_strcat 541A  
                                 __end_of_strcpy 57D8                                   __end_of_strlen 5524  
                               _time_atualizacao 00EA                              start_initialization 4368  
                                    __end_of_fix 5C50                                      __end_of_gps 5686  
                                    __end_of_isr 3EB0                        __size_of_mensagem_inicial 0094  
                      disparo_gravacao@index_max 02F7                               reserve_direntry@dj 0086  
                             reserve_direntry@fs 0096                              __end_of_desliga_SPI 5BCA  
                                  ??_escreve_SPI 000A                     __end_of_mostra_dados_display 5806  
                                _sdc_disk_status 5B9A                                  ??_sdc_disk_read 001D  
                              auto_mount@fatsize 0086                               i2_write_timer_zero 5C50  
                                ___llmod@divisor 000E                                  data_nome@p_buff 000A  
                                _disk_initialize 5904                                  ___llmod@counter 0012  
                        __end_of_recebe_dado_gps 5A82                               _verifica_recep_gps 58DC  
                          reserve_direntry@clust 0094                          __size_of_sdc_disk_write 01A2  
                               _data_uart_recebe 00F3                                wait_ready@timeout 000A  
                          __size_of_dummy_clocks 003C                                    auto_mount@fmt 0084  
                            __size_of_disk_ioctl 0020                              ?i2_write_timer_zero 0001  
                                     hora_nome@i 000C                              __size_of_disk_write 004C  
                                       ??___lmul 0012                            __size_of_gps_segundos 0022  
                                     fprintf@fil 00B1                                       fprintf@arp 00D9  
                                       ??___wmul 000E                                       fprintf@res 00CD  
                                     fprintf@val 00D5                                       fprintf@str 00B3  
                            __end_of_get_fattime 3604                                         ??_f_open 009D  
                            ?_verifica_recep_gps 0001                                         ??_f_sync 004C  
                                    ?_wait_ready 0001                                      __pdataBANK0 00FF  
                                    __pdataBANK1 01EC                                      __pdataBANK2 027E  
                            __end_of_get_cluster 2810                  verifica_dados_operacionais@dado 0121  
                                       ??_memcmp 0010                              __end_of_disk_status 577C  
                                       ??_memcpy 0010                              __size_of_clust2sect 00B2  
                                       ??_memset 0010                              __end_of_get_gpstime 58B2  
                         sdc_disk_read@start_add 0022                             __end_of_remove_chain 4602  
                              ??_dados_gps_to_sd 0015                              __end_of_get_rawdate 571C  
                        sdc_disk_initialize@buff 0029                                    ??_leitura_SPI 000A  
                        __end_of_escreve_cmd_lcd 48E2                                         ??_strcat 000E  
                                       ??_strcpy 0010                                         ??_strlen 000C  
                        sdc_disk_initialize@stat 0020                                      ?_trace_path 007E  
                                  ??_gps_minutos 000C                                     _fprintf$2226 00CF  
                   __size_of_endereco_cursor_lcd 006A                                __size_of___awtoft 0038  
                              __size_of___ftpack 00AE                                      __pbssBIGRAM 0396  
                                  monta_sd@index 0013                                      __pbssCOMRAM 004D  
                                _trace_path$1780 0087                                  _trace_path$1782 0089  
                                  __pcstackBANK0 0060                                    __pcstackBANK2 02E7  
                                 _init_interrupt 5B64                              __size_of_auto_mount 054A  
                           ??i2_write_timer_zero 0003                              __end_of_escalonador 44BE  
                    __end_of_sdc_disk_initialize 1BFC                                __size_of_check_fs 0082  
                                   _isdigit$3275 000B                                     check_fs@sect 0035  
                                    _char_number 00FE                             ??_verifica_recep_gps 000A  
                                   _dummy_clocks 55A2                                   _init_oscilador 5C5A  
                          __end_of_troca_de_tela 1E82                                 ??_escrita_sdcard 004D  
                                      _dados_lat 02A2                              __size_of_init_ports 001C  
                                      _dados_vel 0127                                     _gps_segundos 59B8  
                          _escreve_frase_ram_lcd 5174                                __size_of_grava_sd 001A  
                                      _data_buff 017A                                        _data_hoje 00F6  
                    __end_of_escreve_inteiro_lcd 55A2                                        _data_nome 58B2  
                            __end_of_escreve_SPI 5BBA                                __size_of_latitude 000A  
                              __size_of_gps_hora 0024                                __size_of_init_lcd 009E  
                               ___lwdiv@dividend 000A                                delay@contador_int 000B  
                              delay@contador_ext 000A                                        _gga_index 00EE  
                 ??_verifica_plausibilidade_long 000A              __end_of_verifica_dados_operacionais 308E  
                    _verifica_dados_operacionais 2F0C                                        _diferenca 406A  
                                      __pintcode 0008                                    __pmediumconst 6100  
                                       ?___aldiv 000A                             latitude_to_convert@i 006A  
                           latitude_to_convert@j 0069                                        __ptext100 574C  
                                      __ptext101 5B9A                                        __ptext110 4F6A  
                                      __ptext102 51C6                                        __ptext111 5686  
                                      __ptext103 2A2A                                        __ptext120 5950  
                                      __ptext112 5BAA                                        __ptext104 5268  
                                      __ptext121 5A1E                                        __ptext113 55A2  
                                      __ptext105 2BD4                          troca_de_tela@fix_signal 0037  
                                      __ptext130 5AE0                                        __ptext122 5A40  
                                      __ptext114 5BFE                                        __ptext106 4C44  
                                      __ptext131 592A                                        __ptext123 58B2  
                                      __ptext115 5AA2                                        __ptext107 399A  
                                      __ptext124 5B76                                        __ptext116 34B0  
                                      __ptext108 5BE6                                        __ptext133 5C50  
                                      __ptext125 5BBA                                        __ptext117 59B8  
                                      __ptext109 5BF2                                        __ptext134 3AB2  
                                      __ptext126 4DEC                                        __ptext118 59DA  
                                      __ptext135 5B88                                        __ptext127 1606  
                                      __ptext119 59FC                                        __ptext136 0000  
                                      __ptext128 54E2                                        __ptext129 31F4  
                              __size_of_monta_sd 030E                                         ?___lldiv 000A  
                                       ?___ftmul 001C                                         ?___llmod 000A  
                              __size_of_validate 0048                                         ?___fttol 002B  
                                       ?___lwdiv 000A                                         ?___lwmod 000A  
                              __size_of_response 000C                                         ?_f_close 0069  
                                      _disk_read 4C44                               _sinaliza_int_timer 00F2  
                                       ?_f_lseek 0086                                         ?_f_mount 000A  
                               _disparo_gravacao 2810                                         ?_f_write 0086  
                         ??_longitude_to_convert 0042                                         ?_get_fix 0001  
                                       ?_command 000F                           __end_of_init_interrupt 5B76  
                                       ?_gps_dia 000A                                         ?_gps_ano 000A  
                                       ?_gps_mes 000A                                         ?_fprintf 00B1  
                                       ?_isdigit 0001                                      _desliga_SPI 5BBA  
                            sdc_disk_read@p_buff 0016                          troca_de_tela@last_state 004F  
                            sdc_disk_read@length 0026                                         ?_rawdata 000A  
                            sdc_disk_read@sector 0018                                         ?_rawhora 000A  
                        __end_of_sdc_disk_status 5BAA                   __size_of_escreve_caractere_lcd 0072  
                                 __size_of_Speed 000A                    __end_of_escreve_caractere_lcd 4C44  
                                       ?_proceed 0001                                        f_close@fp 0069  
                            __end_of_leitura_SPI 5C0A                                        _hora_nome 585E  
                               ___lwdiv@quotient 000F                                   __size_of_delay 001E  
                        __end_of_disk_initialize 592A                           __end_of_init_oscilador 5C62  
                            __end_of_gps_minutos 59FC                                   __size_of_fputc 0040  
                                 __size_of_fputs 0058                              make_dirfile@dirname 0013  
                                     validate@id 0012                                       validate@fs 0010  
                           __end_of_posicao_long 5C6C                                        _p_tarefas 0139  
                                 __size_of_ultoa 00E8                          __size_of_verifica_fence 005C  
                                      _rawCourse 013F                                 make_dirfile@path 0012  
                                       _GPGGA_ok 0176                                        _sdc_reset 47C6  
                            __size_of_wait_ready 0036                                  ___aldiv@divisor 000E  
                    latitude_to_convert@latitude 0060                                  ___aldiv@counter 0012  
                                 ___wmul@product 000E                                         _LATBbits 000F8A  
                                      f_lseek@fp 0086                                         _LATCbits 000F8B  
            __end_of_verifica_plausibilidade_lat 4BD2                      _verifica_plausibilidade_lat 4B5E  
                                       _GPRMC_ok 0178                                        f_open@dir 00B4  
                                      f_open@res 00B3                                        _longitude 5C28  
                                       _PIE1bits 000F9D                                      _get_fattime 34B0  
                                   _rawLongitude 01A5                                 ?_recebe_dado_gps 0001  
                                     ?_data_nome 000A                              __size_of_trace_path 0280  
                                      _rmc_index 00EC                                      _get_cluster 25E8  
                                    _disk_status 574C                                    ??_move_window 0039  
                                      f_mount@fs 000A                                         _PIR1bits 000F9E  
                                    _get_gpstime 5888                                       ?_diferenca 0001  
                                  move_window@fs 0048                                      _get_rawdate 56EC  
             verifica_plausibilidade_lat@posicao 000A      verifica_dados_operacionais@velocidade_atual 0166  
    verifica_dados_operacionais@velocidade_media 0155                                ?_write_timer_zero 000A  
                                remove_chain@nxt 007C                                        f_sync@dir 0067  
                                      f_sync@res 0066                                        f_sync@tim 0062  
                       posicao_cursor_lcd@coluna 000D                                       ?_disk_read 0029  
                             ??_write_timer_zero 000C                                        f_write@cc 009E  
                     posicao_cursor_lcd@endereco 000F                                        f_write@bw 008B  
                                      f_write@fp 0086                             _mostra_dados_display 57D8  
                      __size_of_recebe_dado_uart 0012                                      _escalonador 4414  
                              ___wmul@multiplier 000A                                 ?_escreve_cmd_lcd 0001  
                    escreve_frase_ram_lcd@buffer 000D                                 ??_inicializa_SPI 000A  
                                ?_init_interrupt 0001                                     ??_disk_ioctl 000D  
                                   ??_disk_write 0030                              armazena_ltlo@buffer 003E  
                                   f_lseek@clust 00A5                                  _inicializa_uart 5996  
                                   f_lseek@csize 00A1                                     f_lseek@ifptr 009D  
                               _mensagem_inicial 46A0                                    ??_posicao_lat 000A  
                                     ?_hora_nome 000A                                    _temp_buff_lat 0162  
                                ?_init_oscilador 0001                                     ??_clust2sect 001A  
                              ___lmul@multiplier 000A                                        copy_data0 437C  
                                      copy_data1 439C                           recebe_dado_gps@timeout 000B  
                                    _escreve_SPI 5BAA                                    _flag_anomalia 00F1  
                                     ?_sdc_reset 0001                              sdc_reset@count_nosd 0018  
                       ?_configura_baudrate_uart 0018                           ?_escreve_frase_ram_lcd 000D  
                                     ?_longitude 000A                                 auto_mount@chk_wp 003E  
                              move_window@sector 0035                                   _sdc_disk_write 2BD4  
                      __size_of_reserve_direntry 027A                     __size_of_latitude_to_convert 007A  
                       escreve_inteiro_lcd@F3223 01F3                                     ??_auto_mount 0060  
                                       __Hrparam 0000                                        memcpy@tmp 0010  
                                       __Lrparam 0000                                        fprintf@cc 00DA  
                             __end_of_disk_ioctl 5AC2                            __size_of_remove_chain 00A0  
                                 put_cluster@val 0062                                 get_cluster@clust 004A  
                             __end_of_disk_write 52B4                                     _SentenceType 00FD  
                               __size_of___aldiv 00CC                           sdc_disk_initialize@ocr 0026  
                         __size_of_armazena_ltlo 0084                                     monta_sd@dado 0010  
                               __size_of___lldiv 0082                                 __size_of___ftmul 00F4  
                               __size_of___llmod 0066                                 __size_of___fttol 00D2  
                                  ??_put_cluster 0064                                 __size_of___lwdiv 0052  
                               __size_of___lwmod 0042                            ?_mostra_dados_display 0001  
                                   ??_init_ports 000A                              __end_of_move_window 2BD4  
                                       ___awtoft 5618                                         ___ftpack 42BA  
                             __end_of_clust2sect 42BA                         escreve_inteiro_lcd@valor 002B  
                               __size_of_f_close 002C                         escreve_inteiro_lcd@texto 002F  
                               __size_of_f_lseek 048C                                 __size_of_f_mount 0048  
                                    _leitura_SPI 5BFE                       disparo_gravacao@velocidade 02E7  
                               __size_of_f_write 0596                                 __size_of_get_fix 0030  
                                    _gps_minutos 59DA                                 __size_of_command 005A  
                          __end_of_init_hardware 5B64                                         _check_fs 4966  
                                     strcat@from 000C                                 __size_of_gps_dia 0022  
                               __size_of_gps_ano 0022                                 __size_of_gps_mes 0022  
                               __size_of_fprintf 034E                                 __size_of_isdigit 001E  
                                       _gga_code 015C                                  ___lwdiv@divisor 000C  
                               ?_sdc_disk_status 0001                                    _time_recovery 016C  
                       _convert_to_int_point_lat 501C                                 __size_of_rawdata 000A  
                                ___lwdiv@counter 000E                               __end_of_auto_mount 0AF2  
                                       __ptext10 5218                                 __size_of_rawhora 000A  
                                       __ptext11 4414                                         __ptext20 3F98  
                                       __ptext12 1BFC                                         __ptext21 3CCC  
                                       __ptext13 2810                                         __ptext30 4F0E  
                                       __ptext22 5618                                         __ptext14 2F0C  
                                       __ptext31 4E50                                         __ptext23 42BA  
                                       __ptext15 57AA                                         __ptext40 406A  
                                       __ptext32 5C68                                         __ptext24 5C3C  
                                       __ptext16 5C14                                         __ptext41 4FC4  
                                       __ptext33 4B5E                                         __ptext25 57D8  
                                       __ptext17 5C1E                                         __ptext50 5996  
                                       __ptext42 501C                                         __ptext34 5C62  
                                       __ptext26 5564                                         __ptext18 5C28  
                                       __ptext51 3BC4                                         __ptext43 5974  
                                       __ptext35 5A62                                         __ptext27 545E  
                                       __ptext19 5C32                                         __ptext60 52B4  
                                       __ptext52 413C                                         __ptext44 3878  
                                       __ptext36 58DC                                         __ptext28 3EB0  
                                       __ptext61 52FC                                         __ptext53 5A82  
                                       __ptext45 55DE                                         __ptext37 4A6A  
                                       __ptext29 4856                                         __ptext70 12CC  
                                       __ptext62 5888                                         __ptext54 3604  
                                       __ptext46 44BE                                         __ptext38 4AE4  
                                       __ptext71 1E82                                         __ptext63 571C  
                                       __ptext55 53D4                                         __ptext47 54A0  
                                       __ptext39 48E2                                         __ptext80 5904  
                                       __ptext72 3356                                         __ptext64 5C46  
                                       __ptext56 585E                                         __ptext48 5122  
                                       __ptext81 1914                                         __ptext73 2102  
                                       __ptext65 0F7E                                         __ptext57 5650  
                                       __ptext49 5B34                                         __ptext90 50CC  
                                       __ptext82 47C6                                         __ptext74 308E  
                                       __ptext66 5074                                         __ptext58 56BC  
                                       __ptext91 5344                                         __ptext83 4EB0  
                                       __ptext75 4208                                         __ptext67 5524  
                                       __ptext59 56EC                                         __ptext92 0AF2  
                                       __ptext84 4CB2                                         __ptext76 4562  
                                       __ptext68 0012                                         __ptext93 2D76  
                                       __ptext85 5174                                         __ptext77 541A  
                                       __ptext69 4D86                                         __ptext94 237C  
                                       __ptext86 4BD2                                         __ptext78 05A8  
                                       __ptext95 25E8                                         __ptext87 5AC2  
                                       __ptext79 5806                                         __ptext96 49E8  
                                       __ptext88 4966                                         __ptext97 5832  
                                       __ptext89 4734                                         __ptext98 3750  
                                       __ptext99 538C                                 __size_of_proceed 000C  
                                       _filename 0256                                      _rawAltitude 011A  
                               ?_disk_initialize 0001                                   _timeout_tarefa 0170  
                                   _rmc_pointers 022A                               sdc_disk_read@count 001C  
                         __size_of_get_longitude 0048                                       strcpy@from 000E  
                            escrita_sdcard@f_fix 0053                       __end_of_inicializa_tarefas 5268  
                       i2write_timer_zero@timer0 0001                                         _grava_sd 5B34  
                         __end_of_sdc_disk_write 2D76                                        monta_sd@i 0014  
                                       _gps_flag 014B                                         _latitude 5C32  
                                       _gps_hora 5950                                      _rawLatitude 01BE  
                                       _init_lcd 4602                                    __size_of_atoi 0162  
                                  __size_of_atol 0122                                    __size_of_main 002E  
                                   _remove_chain 4562                                    __size_of_itoa 003A  
                                  __size_of_ltoa 0042                              __end_of_posicao_lat 5C68  
                                  __size_of_utoa 00A4                                    __size_of_sync 0052  
                            _endereco_cursor_lcd 4CB2                               __end_of_init_ports 5B1A  
                                       _rawSpeed 026A                                      ??_data_nome 000C  
                              _comma_counter_gga 00F9                                    dummy_clocks@i 000D  
                                       f_open@dj 00B6                                    dummy_clocks@n 000C  
                                       f_open@fn 00A1                                         f_open@fp 0098  
                                       f_open@dw 00AF                                         f_open@rs 00AD  
                              _comma_counter_rmc 00F8                                  _dados_gps_to_sd 4DEC  
                                       _rmc_code 0159                                         _monta_sd 1606  
                                       _validate 538C                                      ??_diferenca 0035  
                                       _sentence 0145                                     move_window@n 0043  
                                       _response 5BE6                                         f_sync@fp 0060  
                            _point_buff_gps_long 0168                      __size_of_posicao_cursor_lcd 005E  
                                       int$flags 0056                          posicao_cursor_lcd@linha 000E  
                                       atoi@sign 0015                         __size_of_tratamento_uart 0112  
                                       atol@sign 001E                                     ??_wait_ready 000A  
                                    ??_disk_read 0030                               armazena_ltlo@index 003F  
                        __end_of_inicializa_uart 59B8                             convert_to_int@p_buff 0024  
                                   ??_trace_path 0083                             ?_endereco_cursor_lcd 0001  
                             put_cluster@fatsect 006E                                       _INTCONbits 000FF2  
                          __size_of_posicao_long 0004                       ?_convert_to_int_point_long 0024  
                                       memcmp@s1 000A                                         memcmp@s2 000C  
                               move_window@wsect 0044                                         memcpy@d1 000A  
                                       memcpy@s1 000C                              __end_of_put_cluster 25E8  
                                       fprintf@c 00DE                                         fprintf@f 00D3  
                                       fprintf@i 00DC                                         fprintf@r 00D4  
                                       fprintf@s 00BD                                         fprintf@w 00D1  
                                       fputc@chr 00A4                                         itoa@base 001E  
                                       fputc@fil 00A6                                         isdigit@c 000C  
                                       memset@p1 000A                                      ??_hora_nome 000C  
                                      ultoa@base 001C                                _config_timer_dois 5BD8  
                                   _tempo_backup 0133                                         fputs@fil 00AD  
                                       fputs@str 00AB                                _config_timer_zero 5B1A  
                                 _verifica_fence 4F0E                                    _armazena_ltlo 48E2  
                                   _poligono_ext 0100                                    wait_ready@res 000E  
                                       intlevel2 0000                               ?_config_timer_dois 0001  
                       mensagem_inicial@msg_dois 0023                                      ??_sdc_reset 0016  
                                       ltoa@base 0028                               ?_config_timer_zero 0001  
                                   _tempo_tarefa 012D                                  ?_sdc_disk_write 0016  
verifica_dados_operacionais@velocidade_atual_int 0151                                 ___lwmod@dividend 000A  
                             __end_of_wait_ready 56BC                         __end_of_disparo_gravacao 2A2A  
                               ___lldiv@dividend 000A                                sdc_disk_read@buff 0028  
                          __end_of_sdc_disk_read 3AB2                                      ??_longitude 000C  
                            sdc_disk_status@pdrv 000B                                get_rawspeed@index 000B  
                                  ?_desliga_uart 0001                       recebe_dado_gps@flag_recebe 000A  
                            ??_config_timer_dois 000A                                       _OSCCONbits 000FD3  
                             __end_of_trace_path 2102                              ??_config_timer_zero 000C  
                                    _move_window 2A2A                                  _fence_diff_long 6123  
                              get_latitude@index 000B                           ??_mostra_dados_display 0010  
                                   _posicao_long 5C68                                    _get_longitude 52B4  
                           sdc_disk_write@count1 0023                             sdc_disk_write@p_buff 0016  
                               _recebe_dado_uart 5B88                                         utoa@base 0015  
                                       ultoa@buf 0017                             sdc_disk_write@sector 0018  
                          ??_endereco_cursor_lcd 000C                                         ultoa@val 0018  
                                   response@buff 000A                                         strcat@cp 000E  
                                       strcat@to 000A                                     ?_desliga_SPI 0001  
                               ___lldiv@quotient 0012                       convert_to_int_point_long@i 0033  
                     convert_to_int_point_long@j 0032                                  ___lwmod@divisor 000C  
                                       strcpy@cp 0010                                         strlen@cp 000C  
                                       strcpy@to 000C                                  ___lwmod@counter 000E  
                              remove_chain@clust 0078                        __end_of_config_timer_dois 5BE6  
                                   ___aldiv@sign 0013                                    ?_create_chain 0078  
                      __end_of_config_timer_zero 5B34                           __end_of_verifica_fence 4F6A  
                    __size_ofi2_write_timer_zero 000A                                      _SSPCON1bits 000FC6  
                        __size_of_next_dir_entry 0166                                      _posicao_lat 5C62  
                         escreve_cmd_lcd@comando 000C                                   ?_armazena_ltlo 003E  
                            sdc_disk_write@count 001C                      __size_of_verifica_recep_gps 0028  
                        __size_of_convert_to_int 0022                    sdc_disk_initialize@crc_number 0023  
      convert_to_int_point_long@convert_str_long 0028                          __end_of_dados_gps_to_sd 4E50  
                             sdc_disk_write@buff 0028                     __size_of_sdc_disk_initialize 02E8  
                                   f_write@clust 00A0                                   ??_desliga_uart 000A  
                             leitura_sdcard@size 00FF                                     f_write@wbuff 0099  
                                   ?_get_fattime 000E                                 _reserve_direntry 2102  
                        disparo_gravacao@fix_gps 02F3                                      f_write@buff 0088  
                              sdc_disk_write@res 0025                                    ?_get_latitude 0001  
                                   ?_get_cluster 004A                                      f_write@sect 009A  
                                    f_write@wcnt 00A2                                     ?_disk_status 0001  
                  __end_ofmensagem_inicial@F3677 6123                    __end_ofmensagem_inicial@F3679 6112  
                                escreve_SPI@dado 000B                                     ?_get_gpstime 0001  
                          disparo_gravacao@v_max 02F5  
